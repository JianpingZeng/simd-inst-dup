; ModuleID = 'ComputeNonbondedUtil_opt.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.LJTable = type { i8*, %"struct.LJTable::TableEntry"*, i32 }
%"struct.LJTable::TableEntry" = type { double, double }
%class.Molecule = type { %class.ObjectArena*, %class.ExclusionCheck*, i32, i32, i32* }
%class.ObjectArena = type opaque
%class.ExclusionCheck = type { i32, i32, i8* }
%struct.nonbonded = type { [2 x %struct.CompAtom*], [2 x %class.Vector*], [2 x %class.Vector*], [2 x i32], double*, double*, %class.Vector, i32, i32, i32, i32 }
%struct.CompAtom = type { %class.Vector, float, [4 x i8] }
%class.Vector = type { double, double, double }
%class.SimParameters = type { %class.Vector, %class.Vector, %class.Vector, %class.Vector, i32, i32, double, i32, double, double, double, i32, double, double, i32, double, double, i32, i32, i32, i32, i32, i32, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, i32, double, i32, i32, %class.Lattice }
%class.Lattice = type { %class.Vector, %class.Vector, %class.Vector, %class.Vector, %class.Vector, %class.Vector, %class.Vector, i32, i32, i32 }

@_ZN20ComputeNonbondedUtil8commOnlyE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil12fixedAtomsOnE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil6cutoffE = global float 0.000000e+00, align 4
@_ZN20ComputeNonbondedUtil7cutoff2E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil12groupcutoff2E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil12dielectric_1E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil7ljTableE = global %class.LJTable* null, align 8
@_ZN20ComputeNonbondedUtil3molE = global %class.Molecule* null, align 8
@_ZN20ComputeNonbondedUtil8r2_deltaE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil10r2_delta_1E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil12r2_delta_expE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil11table_allocE = global double* null, align 8
@_ZN20ComputeNonbondedUtil11table_shortE = global double* null, align 8
@_ZN20ComputeNonbondedUtil13table_noshortE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10fast_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10scor_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10slow_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10corr_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10full_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10vdwa_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil10vdwb_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil7scalingE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil7scale14E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil8switchOnE = global float 0.000000e+00, align 4
@_ZN20ComputeNonbondedUtil10switchOn_1E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil9switchOn2E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c0E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c1E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c3E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c5E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c6E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c7E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil2c8E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil5fepOnE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil6lambdaE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil7lambda2E = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil5lesOnE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil9lesFactorE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil10lesScalingE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil12lambda_tableE = global double* null, align 8
@_ZN20ComputeNonbondedUtil17pairInteractionOnE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil19pairInteractionSelfE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil24pressureProfileNonbondedE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil20pressureProfileSlabsE = global i32 0, align 4
@_ZN20ComputeNonbondedUtil24pressureProfileThicknessE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil18pressureProfileMinE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil8ewaldcofE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil11pi_ewaldcofE = global double 0.000000e+00, align 8
@_ZN20ComputeNonbondedUtil8calcPairE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil14calcPairEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil8calcSelfE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil14calcSelfEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil12calcFullPairE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil18calcFullPairEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil12calcFullSelfE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil18calcFullSelfEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil13calcMergePairE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil19calcMergePairEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil13calcMergeSelfE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil19calcMergeSelfEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil12calcSlowPairE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil18calcSlowPairEnergyE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil12calcSlowSelfE = global void (%struct.nonbonded*)* null, align 8
@_ZN20ComputeNonbondedUtil18calcSlowSelfEnergyE = global void (%struct.nonbonded*)* null, align 8
@.str = private unnamed_addr constant [38 x i8] c"Sorry, XPLOR splitting not supported.\00", align 1
@.str1 = private unnamed_addr constant [38 x i8] c"Sorry, SHARP splitting not supported.\00", align 1
@.str2 = private unnamed_addr constant [30 x i8] c"Unknown splitting type found!\00", align 1

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil6selectEP13SimParametersP8MoleculeP7LJTable(%class.SimParameters* %simParams, %class.Molecule* %molecule, %class.LJTable* %ljTable_in) #0 align 2 {
entry:
  store %class.LJTable* %ljTable_in, %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %commOnly = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 41
  %0 = load i32* %commOnly, align 4, !tbaa !5
  store i32 %0, i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %fixedAtomsOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 31
  %1 = load i32* %fixedAtomsOn, align 4, !tbaa !12
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %fixedAtomsForces = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 32
  %2 = load i32* %fixedAtomsForces, align 4, !tbaa !13
  %lnot = icmp eq i32 %2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %conv = zext i1 %3 to i32
  store i32 %conv, i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %cutoff = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 10
  %4 = load double* %cutoff, align 8, !tbaa !14
  %conv2 = fptrunc double %4 to float
  store float %conv2, float* @_ZN20ComputeNonbondedUtil6cutoffE, align 4, !tbaa !15
  %mul = fmul float %conv2, %conv2
  %conv3 = fpext float %mul to double
  store double %conv3, double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %fepOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 14
  %5 = load i32* %fepOn, align 4, !tbaa !18
  store i32 %5, i32* @_ZN20ComputeNonbondedUtil5fepOnE, align 4, !tbaa !11
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil7lambda2E, align 8, !tbaa !17
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil6lambdaE, align 8, !tbaa !17
  %lesOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 25
  %6 = load i32* %lesOn, align 4, !tbaa !19
  store i32 %6, i32* @_ZN20ComputeNonbondedUtil5lesOnE, align 4, !tbaa !11
  store i32 0, i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil10lesScalingE, align 8, !tbaa !17
  %7 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %isnull = icmp eq double* %7, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %land.end
  %8 = bitcast double* %7 to i8*
  tail call void @_ZdaPv(i8* %8) #7
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %land.end
  store double* null, double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %pairInteractionOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 27
  %9 = load i32* %pairInteractionOn, align 4, !tbaa !20
  store i32 %9, i32* @_ZN20ComputeNonbondedUtil17pairInteractionOnE, align 4, !tbaa !11
  %pairInteractionSelf = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 30
  %10 = load i32* %pairInteractionSelf, align 4, !tbaa !21
  store i32 %10, i32* @_ZN20ComputeNonbondedUtil19pairInteractionSelfE, align 4, !tbaa !11
  %pressureProfileNonbonded = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 20
  %11 = load i32* %pressureProfileNonbonded, align 4, !tbaa !22
  store i32 %11, i32* @_ZN20ComputeNonbondedUtil24pressureProfileNonbondedE, align 4, !tbaa !11
  %tobool4 = icmp eq i32 %11, 0
  br i1 %tobool4, label %if.end, label %if.then

if.then:                                          ; preds = %delete.end
  %pressureProfileSlabs = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 21
  %12 = load i32* %pressureProfileSlabs, align 4, !tbaa !23
  store i32 %12, i32* @_ZN20ComputeNonbondedUtil20pressureProfileSlabsE, align 4, !tbaa !11
  %pressureProfileThickness = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 24
  %13 = load double* %pressureProfileThickness, align 8, !tbaa !24
  store double %13, double* @_ZN20ComputeNonbondedUtil24pressureProfileThicknessE, align 8, !tbaa !17
  %pressureProfileMin = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 23
  %14 = load double* %pressureProfileMin, align 8, !tbaa !25
  store double %14, double* @_ZN20ComputeNonbondedUtil18pressureProfileMinE, align 8, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %delete.end
  %15 = load i32* @_ZN20ComputeNonbondedUtil5fepOnE, align 4, !tbaa !11
  %tobool5 = icmp eq i32 %15, 0
  br i1 %tobool5, label %if.else43, label %if.then6

if.then6:                                         ; preds = %if.end
  %lambda = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 15
  %16 = load double* %lambda, align 8, !tbaa !26
  store double %16, double* @_ZN20ComputeNonbondedUtil6lambdaE, align 8, !tbaa !17
  %lambda2 = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 16
  %17 = load double* %lambda2, align 8, !tbaa !27
  store double %17, double* @_ZN20ComputeNonbondedUtil7lambda2E, align 8, !tbaa !17
  %call = tail call noalias i8* @_Znam(i64 144) #8
  %18 = bitcast i8* %call to double*
  store double* %18, double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %19 = insertelement <2 x double> undef, double %16, i32 0
  %20 = insertelement <2 x double> %19, double %17, i32 1
  %21 = insertelement <2 x double> undef, double %16, i32 0
  %22 = insertelement <2 x double> %21, double %17, i32 1
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %if.end31.2, %if.then6
  %23 = phi double [ %17, %if.then6 ], [ %.375, %if.end31.2 ]
  %24 = phi double [ %16, %if.then6 ], [ %.376, %if.end31.2 ]
  %25 = phi double [ %17, %if.then6 ], [ %251, %if.end31.2 ]
  %26 = phi double [ %16, %if.then6 ], [ %252, %if.end31.2 ]
  %indvars.iv359 = phi i64 [ 0, %if.then6 ], [ %indvars.iv.next360, %if.end31.2 ]
  %27 = trunc i64 %indvars.iv359 to i32
  %notlhs = icmp eq i32 %27, 0
  %cmp18 = icmp eq i32 %27, 1
  %cmp23 = icmp eq i32 %27, 2
  br i1 %notlhs, label %if.then12.1, label %if.else

if.else:                                          ; preds = %for.cond7.preheader
  br i1 %cmp18, label %if.then12.1, label %if.else22

if.else22:                                        ; preds = %if.else
  br i1 %cmp23, label %if.then26, label %if.then12.1

if.then26:                                        ; preds = %if.else22
  %28 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %20
  br label %if.then12.1

for.end42:                                        ; preds = %if.end31.2
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil20calc_pair_energy_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil20calc_self_energy_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil30calc_pair_energy_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil30calc_self_energy_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil36calc_pair_energy_merge_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergePairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil36calc_self_energy_merge_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergeSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil35calc_pair_energy_slow_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil35calc_self_energy_slow_fullelect_fepEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowSelfEnergyE, align 8, !tbaa !1
  br label %if.end92

if.else43:                                        ; preds = %if.end
  %29 = load i32* @_ZN20ComputeNonbondedUtil5lesOnE, align 4, !tbaa !11
  %tobool44 = icmp eq i32 %29, 0
  br i1 %tobool44, label %if.else84, label %if.then45

if.then45:                                        ; preds = %if.else43
  %lesFactor = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 26
  %30 = load i32* %lesFactor, align 4, !tbaa !28
  store i32 %30, i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %conv46 = sitofp i32 %30 to double
  %div = fdiv double 1.000000e+00, %conv46
  store double %div, double* @_ZN20ComputeNonbondedUtil10lesScalingE, align 8, !tbaa !17
  %add47 = add nsw i32 %30, 1
  %mul49 = mul nsw i32 %add47, %add47
  %31 = zext i32 %mul49 to i64
  %umul_with_overflow = shl nuw nsw i64 %31, 3
  %call50 = tail call noalias i8* @_Znam(i64 %umul_with_overflow) #8
  %32 = bitcast i8* %call50 to double*
  store double* %32, double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %cmp53317 = icmp slt i32 %30, 0
  br i1 %cmp53317, label %for.end83, label %for.body58.lr.ph.preheader

for.body58.lr.ph.preheader:                       ; preds = %if.then45
  %33 = zext i32 %30 to i64
  %34 = add i64 %33, 1
  %35 = zext i32 %30 to i64
  %36 = add i64 %35, 1
  br label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.inc81, %for.body58.lr.ph.preheader
  %indvars.iv351 = phi i64 [ %indvars.iv.next352, %for.inc81 ], [ 0, %for.body58.lr.ph.preheader ]
  %37 = trunc i64 %indvars.iv351 to i32
  %mul74 = mul nsw i32 %add47, %37
  %notlhs279 = icmp eq i32 %37, 0
  %38 = sext i32 %mul74 to i64
  br i1 %notlhs279, label %for.body58.us.preheader, label %for.body58.preheader

for.body58.us.preheader:                          ; preds = %for.body58.lr.ph
  %end.idx455 = add i64 %35, 1
  %n.vec457 = and i64 %36, 8589934588
  %cmp.zero459 = icmp eq i64 %n.vec457, 0
  br i1 %cmp.zero459, label %middle.block452, label %vector.ph450

vector.ph450:                                     ; preds = %for.body58.us.preheader
  %broadcast.splatinsert472 = insertelement <2 x double> undef, double %div, i32 0
  %broadcast.splat473 = shufflevector <2 x double> %broadcast.splatinsert472, <2 x double> undef, <2 x i32> zeroinitializer
  br label %vector.body451

vector.body451:                                   ; preds = %vector.body451, %vector.ph450
  %index454 = phi i64 [ 0, %vector.ph450 ], [ %index.next463, %vector.body451 ]
  %39 = trunc i64 %index454 to i32
  %broadcast.splatinsert468 = insertelement <2 x i32> undef, i32 %39, i32 0
  %broadcast.splat469 = shufflevector <2 x i32> %broadcast.splatinsert468, <2 x i32> undef, <2 x i32> zeroinitializer
  %induction470 = add <2 x i32> %broadcast.splat469, <i32 0, i32 1>
  %induction471 = add <2 x i32> %broadcast.splat469, <i32 2, i32 3>
  %40 = icmp eq <2 x i32> %induction470, zeroinitializer
  %41 = icmp eq <2 x i32> %induction471, zeroinitializer
  %42 = select <2 x i1> %40, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> %broadcast.splat473
  %43 = select <2 x i1> %41, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> %broadcast.splat473
  %44 = add i64 %38, %index454
  %45 = getelementptr inbounds double* %32, i64 %44
  %46 = bitcast double* %45 to <2 x double>*
  store <2 x double> %42, <2 x double>* %46, align 8
  %.sum = add i64 %44, 2
  %47 = getelementptr double* %32, i64 %.sum
  %48 = bitcast double* %47 to <2 x double>*
  store <2 x double> %43, <2 x double>* %48, align 8
  %index.next463 = add i64 %index454, 4
  %49 = icmp eq i64 %index.next463, %n.vec457
  br i1 %49, label %middle.block452, label %vector.body451, !llvm.loop !29

middle.block452:                                  ; preds = %vector.body451, %for.body58.us.preheader
  %resume.val460 = phi i64 [ 0, %for.body58.us.preheader ], [ %n.vec457, %vector.body451 ]
  %cmp.n462 = icmp eq i64 %end.idx455, %resume.val460
  br i1 %cmp.n462, label %for.inc81, label %for.body58.us

for.body58.preheader:                             ; preds = %for.body58.lr.ph
  %end.idx425 = add i64 %33, 1
  %n.vec427 = and i64 %34, 8589934590
  %cmp.zero429 = icmp eq i64 %n.vec427, 0
  br i1 %cmp.zero429, label %middle.block422, label %vector.ph420

vector.ph420:                                     ; preds = %for.body58.preheader
  %broadcast.splatinsert440 = insertelement <2 x i64> undef, i64 %indvars.iv351, i32 0
  %broadcast.splat441 = shufflevector <2 x i64> %broadcast.splatinsert440, <2 x i64> undef, <2 x i32> zeroinitializer
  %broadcast.splatinsert442 = insertelement <2 x i32> undef, i32 %37, i32 0
  %broadcast.splat443 = shufflevector <2 x i32> %broadcast.splatinsert442, <2 x i32> undef, <2 x i32> zeroinitializer
  %broadcast.splatinsert444 = insertelement <2 x double> undef, double %div, i32 0
  %broadcast.splat445 = shufflevector <2 x double> %broadcast.splatinsert444, <2 x double> undef, <2 x i32> zeroinitializer
  br label %vector.body421

vector.body421:                                   ; preds = %vector.body421, %vector.ph420
  %index424 = phi i64 [ 0, %vector.ph420 ], [ %index.next433, %vector.body421 ]
  %broadcast.splatinsert434 = insertelement <2 x i64> undef, i64 %index424, i32 0
  %broadcast.splat435 = shufflevector <2 x i64> %broadcast.splatinsert434, <2 x i64> undef, <2 x i32> zeroinitializer
  %induction436 = add <2 x i64> %broadcast.splat435, <i64 0, i64 1>
  %50 = trunc i64 %index424 to i32
  %broadcast.splatinsert437 = insertelement <2 x i32> undef, i32 %50, i32 0
  %broadcast.splat438 = shufflevector <2 x i32> %broadcast.splatinsert437, <2 x i32> undef, <2 x i32> zeroinitializer
  %induction439 = add <2 x i32> %broadcast.splat438, <i32 0, i32 1>
  %51 = or <2 x i64> %induction436, %broadcast.splat441
  %52 = trunc <2 x i64> %51 to <2 x i32>
  %53 = icmp eq <2 x i32> %52, zeroinitializer
  %54 = icmp eq <2 x i32> %induction439, zeroinitializer
  %55 = icmp eq <2 x i32> %broadcast.splat443, %induction439
  %56 = or <2 x i1> %54, %55
  %57 = select <2 x i1> %56, <2 x double> %broadcast.splat445, <2 x double> zeroinitializer
  %predphi = select <2 x i1> %53, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> %57
  %58 = add i64 %38, %index424
  %59 = getelementptr inbounds double* %32, i64 %58
  %60 = bitcast double* %59 to <2 x double>*
  store <2 x double> %predphi, <2 x double>* %60, align 8
  %index.next433 = add i64 %index424, 2
  %61 = icmp eq i64 %index.next433, %n.vec427
  br i1 %61, label %middle.block422, label %vector.body421, !llvm.loop !32

middle.block422:                                  ; preds = %vector.body421, %for.body58.preheader
  %resume.val430 = phi i64 [ 0, %for.body58.preheader ], [ %n.vec427, %vector.body421 ]
  %cmp.n432 = icmp eq i64 %end.idx425, %resume.val430
  br i1 %cmp.n432, label %for.inc81, label %for.body58

for.body58.us:                                    ; preds = %for.body58.us, %middle.block452
  %indvars.iv346 = phi i64 [ %indvars.iv.next347, %for.body58.us ], [ %resume.val460, %middle.block452 ]
  %62 = trunc i64 %indvars.iv346 to i32
  %63 = icmp eq i32 %62, 0
  %.div = select i1 %63, double 1.000000e+00, double %div
  %64 = add nsw i64 %38, %indvars.iv346
  %arrayidx77.us = getelementptr inbounds double* %32, i64 %64
  store double %.div, double* %arrayidx77.us, align 8, !tbaa !17
  %indvars.iv.next347 = add nuw nsw i64 %indvars.iv346, 1
  %lftr.wideiv349 = trunc i64 %indvars.iv.next347 to i32
  %exitcond350 = icmp eq i32 %lftr.wideiv349, %add47
  br i1 %exitcond350, label %for.inc81, label %for.body58.us, !llvm.loop !33

for.body58:                                       ; preds = %if.end72, %middle.block422
  %indvars.iv341 = phi i64 [ %indvars.iv.next342, %if.end72 ], [ %resume.val430, %middle.block422 ]
  %65 = trunc i64 %indvars.iv341 to i32
  %66 = or i64 %indvars.iv341, %indvars.iv351
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %if.end72, label %if.then63

if.then63:                                        ; preds = %for.body58
  %notrhs280 = icmp eq i32 %65, 0
  %cmp68 = icmp eq i32 %37, %65
  %or.cond277 = or i1 %notrhs280, %cmp68
  %.278 = select i1 %or.cond277, double %div, double 0.000000e+00
  br label %if.end72

if.end72:                                         ; preds = %if.then63, %for.body58
  %lambda_pair59.0 = phi double [ 1.000000e+00, %for.body58 ], [ %.278, %if.then63 ]
  %69 = add nsw i64 %38, %indvars.iv341
  %arrayidx77 = getelementptr inbounds double* %32, i64 %69
  store double %lambda_pair59.0, double* %arrayidx77, align 8, !tbaa !17
  %indvars.iv.next342 = add nuw nsw i64 %indvars.iv341, 1
  %lftr.wideiv344 = trunc i64 %indvars.iv.next342 to i32
  %exitcond345 = icmp eq i32 %lftr.wideiv344, %add47
  br i1 %exitcond345, label %for.inc81, label %for.body58, !llvm.loop !34

for.inc81:                                        ; preds = %if.end72, %for.body58.us, %middle.block422, %middle.block452
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %cmp53 = icmp slt i32 %37, %30
  br i1 %cmp53, label %for.body58.lr.ph, label %for.end83

for.end83:                                        ; preds = %for.inc81, %if.then45
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil13calc_pair_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil8calcPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil20calc_pair_energy_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil13calc_self_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil8calcSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil20calc_self_energy_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil23calc_pair_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcFullPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil30calc_pair_energy_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil23calc_self_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcFullSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil30calc_self_energy_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil29calc_pair_merge_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil13calcMergePairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil36calc_pair_energy_merge_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergePairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil29calc_self_merge_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil13calcMergeSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil36calc_self_energy_merge_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergeSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil28calc_pair_slow_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcSlowPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil35calc_pair_energy_slow_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil28calc_self_slow_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcSlowSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil35calc_self_energy_slow_fullelect_lesEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowSelfEnergyE, align 8, !tbaa !1
  br label %if.end92

if.else84:                                        ; preds = %if.else43
  %70 = or i32 %11, %9
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else89, label %if.then88

if.then88:                                        ; preds = %if.else84
  store void (%struct.nonbonded*)* null, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* null, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcSelfEnergyE, align 8, !tbaa !1
  br label %if.end92

if.else89:                                        ; preds = %if.else84
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil9calc_pairEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil8calcPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil16calc_pair_energyEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil9calc_selfEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil8calcSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil16calc_self_energyEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil14calcSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil19calc_pair_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcFullPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil26calc_pair_energy_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil19calc_self_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcFullSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil26calc_self_energy_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcFullSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil25calc_pair_merge_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil13calcMergePairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil32calc_pair_energy_merge_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergePairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil25calc_self_merge_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil13calcMergeSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil32calc_self_energy_merge_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil19calcMergeSelfEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil24calc_pair_slow_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcSlowPairE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil31calc_pair_energy_slow_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowPairEnergyE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil24calc_self_slow_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil12calcSlowSelfE, align 8, !tbaa !1
  store void (%struct.nonbonded*)* @_ZN20ComputeNonbondedUtil31calc_self_energy_slow_fullelectEP9nonbonded, void (%struct.nonbonded*)** @_ZN20ComputeNonbondedUtil18calcSlowSelfEnergyE, align 8, !tbaa !1
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.then88, %for.end83, %for.end42
  %hgroupCutoff = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 39
  %72 = load float* @_ZN20ComputeNonbondedUtil6cutoffE, align 4, !tbaa !15
  %conv93 = fpext float %72 to double
  %73 = load double* %hgroupCutoff, align 8, !tbaa !17
  %add94 = fadd double %conv93, %73
  %mul97 = fmul double %add94, %add94
  store double %mul97, double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %dielectric = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 6
  %74 = load double* %dielectric, align 8, !tbaa !35
  %div98 = fdiv double 1.000000e+00, %74
  store double %div98, double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  store %class.Molecule* %molecule, %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %nonbondedScaling = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 9
  %75 = load double* %nonbondedScaling, align 8, !tbaa !36
  store double %75, double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %exclude = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 7
  %76 = load i32* %exclude, align 4, !tbaa !37
  %cmp99 = icmp eq i32 %76, 4
  br i1 %cmp99, label %if.then100, label %if.end102

if.then100:                                       ; preds = %if.end92
  %scale14 = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 8
  %77 = load double* %scale14, align 8, !tbaa !38
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %if.end92
  %storemerge = phi double [ %77, %if.then100 ], [ 1.000000e+00, %if.end92 ]
  store double %storemerge, double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %switchingActive = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 11
  %78 = load i32* %switchingActive, align 4, !tbaa !39
  %tobool103 = icmp eq i32 %78, 0
  br i1 %tobool103, label %if.else112, label %if.then104

if.then104:                                       ; preds = %if.end102
  %switchingDist = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 12
  %79 = load double* %switchingDist, align 8, !tbaa !40
  %conv105 = fptrunc double %79 to float
  store float %conv105, float* @_ZN20ComputeNonbondedUtil8switchOnE, align 4, !tbaa !15
  %conv106 = fpext float %conv105 to double
  %div107 = fdiv double 1.000000e+00, %conv106
  store double %div107, double* @_ZN20ComputeNonbondedUtil10switchOn_1E, align 8, !tbaa !17
  %mul108 = fmul float %conv105, %conv105
  %conv109 = fpext float %mul108 to double
  store double %conv109, double* @_ZN20ComputeNonbondedUtil9switchOn2E, align 8, !tbaa !17
  %80 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %sub110 = fsub double %80, %conv109
  %div111 = fdiv double 1.000000e+00, %sub110
  br label %if.end117

if.else112:                                       ; preds = %if.end102
  store float %72, float* @_ZN20ComputeNonbondedUtil8switchOnE, align 4, !tbaa !15
  %div114 = fdiv double 1.000000e+00, %conv93
  store double %div114, double* @_ZN20ComputeNonbondedUtil10switchOn_1E, align 8, !tbaa !17
  %mul115 = fmul float %72, %72
  %conv116 = fpext float %mul115 to double
  store double %conv116, double* @_ZN20ComputeNonbondedUtil9switchOn2E, align 8, !tbaa !17
  br label %if.end117

if.end117:                                        ; preds = %if.else112, %if.then104
  %81 = phi double [ %conv116, %if.else112 ], [ %conv109, %if.then104 ]
  %storemerge268 = phi double [ 0.000000e+00, %if.else112 ], [ %div111, %if.then104 ]
  store double %storemerge268, double* @_ZN20ComputeNonbondedUtil2c0E, align 8, !tbaa !17
  %mul118 = fmul double %storemerge268, %storemerge268
  %mul119 = fmul double %storemerge268, %mul118
  store double %mul119, double* @_ZN20ComputeNonbondedUtil2c1E, align 8, !tbaa !17
  %82 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %sub120 = fsub double %82, %81
  %mul121 = fmul double %sub120, 3.000000e+00
  store double %mul121, double* @_ZN20ComputeNonbondedUtil2c3E, align 8, !tbaa !17
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil2c5E, align 8, !tbaa !17
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil2c6E, align 8, !tbaa !17
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil2c7E, align 8, !tbaa !17
  store double 0.000000e+00, double* @_ZN20ComputeNonbondedUtil2c8E, align 8, !tbaa !17
  %PMEOn122 = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 35
  %83 = load i32* %PMEOn122, align 4, !tbaa !41
  %tobool123 = icmp ne i32 %83, 0
  br i1 %tobool123, label %if.then124, label %if.end126

if.then124:                                       ; preds = %if.end117
  %PMEEwaldCoefficient = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 37
  %84 = load double* %PMEEwaldCoefficient, align 8, !tbaa !42
  store double %84, double* @_ZN20ComputeNonbondedUtil8ewaldcofE, align 8, !tbaa !17
  %mul125 = fmul double %84, 0x3FF20DD750429B61
  store double %mul125, double* @_ZN20ComputeNonbondedUtil11pi_ewaldcofE, align 8, !tbaa !17
  br label %if.end126

if.end126:                                        ; preds = %if.then124, %if.end117
  %tobool128 = icmp ne i32 %78, 0
  %. = select i1 %tobool128, i32 2, i32 1
  %fullDirectOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 34
  %85 = load i32* %fullDirectOn, align 4, !tbaa !43
  %tobool131 = icmp eq i32 %85, 0
  br i1 %tobool131, label %lor.lhs.false132, label %if.then136

lor.lhs.false132:                                 ; preds = %if.end126
  %FMAOn = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 33
  %86 = load i32* %FMAOn, align 4, !tbaa !44
  %87 = or i32 %86, %83
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %if.end139, label %if.then136

if.then136:                                       ; preds = %lor.lhs.false132, %if.end126
  %longSplitting = getelementptr inbounds %class.SimParameters* %simParams, i64 0, i32 38
  %89 = load i32* %longSplitting, align 4, !tbaa !45
  switch i32 %89, label %sw.default [
    i32 2, label %if.end139
    i32 1, label %sw.bb137
    i32 0, label %sw.bb138
  ]

sw.bb137:                                         ; preds = %if.then136
  tail call void @_Z8NAMD_diePKc(i8* getelementptr inbounds ([38 x i8]* @.str, i64 0, i64 0))
  br label %if.end139

sw.bb138:                                         ; preds = %if.then136
  tail call void @_Z8NAMD_diePKc(i8* getelementptr inbounds ([38 x i8]* @.str1, i64 0, i64 0))
  br label %if.end139

sw.default:                                       ; preds = %if.then136
  tail call void @_Z8NAMD_diePKc(i8* getelementptr inbounds ([30 x i8]* @.str2, i64 0, i64 0))
  br label %if.end139

if.end139:                                        ; preds = %sw.default, %sw.bb138, %sw.bb137, %if.then136, %lor.lhs.false132
  %splitType.0 = phi i32 [ %., %sw.default ], [ %., %sw.bb138 ], [ %., %sw.bb137 ], [ %., %lor.lhs.false132 ], [ 3, %if.then136 ]
  store double 6.250000e-02, double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  store i32 4, i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  store double 1.600000e+01, double* @_ZN20ComputeNonbondedUtil10r2_delta_1E, align 8, !tbaa !17
  %90 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %cmp145311 = fcmp ogt double %90, 1.000000e+00
  br i1 %cmp145311, label %while.body146, label %while.end149

while.body146:                                    ; preds = %while.body146, %if.end139
  %r2_tmp.0313 = phi double [ %mul147, %while.body146 ], [ 1.000000e+00, %if.end139 ]
  %cutoff2_exp.0312 = phi i32 [ %add148, %while.body146 ], [ 0, %if.end139 ]
  %mul147 = fmul double %r2_tmp.0313, 2.000000e+00
  %add148 = add nsw i32 %cutoff2_exp.0312, 1
  %cmp145 = fcmp ogt double %90, %mul147
  br i1 %cmp145, label %while.body146, label %while.cond144.while.end149_crit_edge

while.cond144.while.end149_crit_edge:             ; preds = %while.body146
  %phitmp371 = add i32 %cutoff2_exp.0312, 5
  br label %while.end149

while.end149:                                     ; preds = %while.cond144.while.end149_crit_edge, %if.end139
  %cutoff2_exp.0.lcssa = phi i32 [ %phitmp371, %while.cond144.while.end149_crit_edge ], [ 4, %if.end139 ]
  %mul151 = shl nsw i32 %cutoff2_exp.0.lcssa, 6
  %add152270 = or i32 %mul151, 1
  %91 = load double** @_ZN20ComputeNonbondedUtil11table_allocE, align 8, !tbaa !1
  %tobool153 = icmp eq double* %91, null
  br i1 %tobool153, label %if.end158, label %delete.notnull156

delete.notnull156:                                ; preds = %while.end149
  %92 = bitcast double* %91 to i8*
  tail call void @_ZdaPv(i8* %92) #7
  br label %if.end158

if.end158:                                        ; preds = %delete.notnull156, %while.end149
  %mul159 = mul nsw i32 %add152270, 60
  %add160 = add nsw i32 %mul159, 16
  %93 = sext i32 %add160 to i64
  %94 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %93, i64 8)
  %95 = extractvalue { i64, i1 } %94, 1
  %96 = extractvalue { i64, i1 } %94, 0
  %97 = select i1 %95, i64 -1, i64 %96
  %call161 = tail call noalias i8* @_Znam(i64 %97) #8
  %98 = bitcast i8* %call161 to double*
  store double* %98, double** @_ZN20ComputeNonbondedUtil11table_allocE, align 8, !tbaa !1
  br label %while.cond162

while.cond162:                                    ; preds = %while.cond162, %if.end158
  %table_align.0 = phi double* [ %98, %if.end158 ], [ %incdec.ptr, %while.cond162 ]
  %99 = ptrtoint double* %table_align.0 to i64
  %rem271 = and i64 %99, 127
  %tobool163 = icmp eq i64 %rem271, 0
  %incdec.ptr = getelementptr inbounds double* %table_align.0, i64 1
  br i1 %tobool163, label %while.end165, label %while.cond162

while.end165:                                     ; preds = %while.cond162
  store double* %table_align.0, double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %mul166 = shl nsw i32 %add152270, 4
  %idx.ext = sext i32 %mul166 to i64
  %add.ptr = getelementptr inbounds double* %table_align.0, i64 %idx.ext
  store double* %add.ptr, double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %mul167 = shl nsw i32 %add152270, 5
  %idx.ext168 = sext i32 %mul167 to i64
  %add.ptr169 = getelementptr inbounds double* %table_align.0, i64 %idx.ext168
  store double* %add.ptr169, double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %mul170 = mul nsw i32 %add152270, 36
  %idx.ext171 = sext i32 %mul170 to i64
  %add.ptr172 = getelementptr inbounds double* %table_align.0, i64 %idx.ext171
  store double* %add.ptr172, double** @_ZN20ComputeNonbondedUtil10fast_tableE, align 8, !tbaa !1
  %mul173 = mul nsw i32 %add152270, 40
  %idx.ext174 = sext i32 %mul173 to i64
  %add.ptr175 = getelementptr inbounds double* %table_align.0, i64 %idx.ext174
  store double* %add.ptr175, double** @_ZN20ComputeNonbondedUtil10scor_tableE, align 8, !tbaa !1
  %mul176 = mul nsw i32 %add152270, 44
  %idx.ext177 = sext i32 %mul176 to i64
  %add.ptr178 = getelementptr inbounds double* %table_align.0, i64 %idx.ext177
  store double* %add.ptr178, double** @_ZN20ComputeNonbondedUtil10corr_tableE, align 8, !tbaa !1
  %mul179 = mul nsw i32 %add152270, 48
  %idx.ext180 = sext i32 %mul179 to i64
  %add.ptr181 = getelementptr inbounds double* %table_align.0, i64 %idx.ext180
  store double* %add.ptr181, double** @_ZN20ComputeNonbondedUtil10full_tableE, align 8, !tbaa !1
  %mul182 = mul nsw i32 %add152270, 52
  %idx.ext183 = sext i32 %mul182 to i64
  %add.ptr184 = getelementptr inbounds double* %table_align.0, i64 %idx.ext183
  store double* %add.ptr184, double** @_ZN20ComputeNonbondedUtil10vdwa_tableE, align 8, !tbaa !1
  %mul185 = mul nsw i32 %add152270, 56
  %idx.ext186 = sext i32 %mul185 to i64
  %add.ptr187 = getelementptr inbounds double* %table_align.0, i64 %idx.ext186
  store double* %add.ptr187, double** @_ZN20ComputeNonbondedUtil10vdwb_tableE, align 8, !tbaa !1
  %cmp189298 = icmp sgt i32 %add152270, 0
  br i1 %cmp189298, label %for.body190.lr.ph, label %for.cond312.preheader

for.body190.lr.ph:                                ; preds = %while.end165
  %100 = shl i32 %cutoff2_exp.0.lcssa, 6
  %101 = or i32 %100, 1
  br label %for.body190

for.cond188.for.cond312.preheader_crit_edge:      ; preds = %cond.end275
  %.pre = load double** @_ZN20ComputeNonbondedUtil10fast_tableE, align 8, !tbaa !1
  %.pre365 = load double** @_ZN20ComputeNonbondedUtil10scor_tableE, align 8, !tbaa !1
  %.pre366 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %.pre367 = load double** @_ZN20ComputeNonbondedUtil10vdwa_tableE, align 8, !tbaa !1
  %.pre368 = load double** @_ZN20ComputeNonbondedUtil10vdwb_tableE, align 8, !tbaa !1
  br label %for.cond312.preheader

for.cond312.preheader:                            ; preds = %for.cond188.for.cond312.preheader_crit_edge, %while.end165
  %102 = phi double* [ %.pre368, %for.cond188.for.cond312.preheader_crit_edge ], [ %add.ptr187, %while.end165 ]
  %103 = phi double* [ %.pre367, %for.cond188.for.cond312.preheader_crit_edge ], [ %add.ptr184, %while.end165 ]
  %104 = phi double* [ %.pre366, %for.cond188.for.cond312.preheader_crit_edge ], [ %add.ptr169, %while.end165 ]
  %105 = phi double* [ %.pre365, %for.cond188.for.cond312.preheader_crit_edge ], [ %add.ptr175, %while.end165 ]
  %106 = phi double* [ %.pre, %for.cond188.for.cond312.preheader_crit_edge ], [ %add.ptr172, %while.end165 ]
  %cmp323289 = icmp sgt i32 %cutoff2_exp.0.lcssa, 0
  br i1 %cmp323289, label %for.body314.us, label %for.cond443.preheader

for.body314.us:                                   ; preds = %for.inc440.us, %for.cond312.preheader
  %j.0297.us = phi i32 [ %inc441.us, %for.inc440.us ], [ 0, %for.cond312.preheader ]
  switch i32 %j.0297.us, label %for.body324.lr.ph.us [
    i32 0, label %sw.bb315.us
    i32 1, label %sw.bb316.us
    i32 2, label %sw.bb317.us
    i32 3, label %sw.bb318.us
    i32 4, label %sw.bb319.us
  ]

sw.bb319.us:                                      ; preds = %for.body314.us
  br label %for.body324.lr.ph.us

sw.bb318.us:                                      ; preds = %for.body314.us
  br label %for.body324.lr.ph.us

sw.bb317.us:                                      ; preds = %for.body314.us
  br label %for.body324.lr.ph.us

sw.bb316.us:                                      ; preds = %for.body314.us
  br label %for.body324.lr.ph.us

sw.bb315.us:                                      ; preds = %for.body314.us
  br label %for.body324.lr.ph.us

for.inc440.us:                                    ; preds = %for.body324.us
  %inc441.us = add nsw i32 %j.0297.us, 1
  %exitcond364 = icmp eq i32 %inc441.us, 5
  br i1 %exitcond364, label %for.cond443.preheader, label %for.body314.us

for.body324.us:                                   ; preds = %for.body324.lr.ph.us, %for.body324.us
  %107 = phi double [ %.pre369, %for.body324.lr.ph.us ], [ %110, %for.body324.us ]
  %t.0291.us = phi double* [ %t0.0.us, %for.body324.lr.ph.us ], [ %arrayidx332.us, %for.body324.us ]
  %i.1290.us = phi i32 [ 0, %for.body324.lr.ph.us ], [ %inc386.us, %for.body324.us ]
  %108 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %div325.us = sdiv i32 %i.1290.us, 64
  %shl326.us = shl i32 1, %div325.us
  %conv327.us = sitofp i32 %shl326.us to double
  %mul328.us = fmul double %108, %conv327.us
  %div329.us = fmul double %mul328.us, 1.562500e-02
  %arrayidx331.us = getelementptr inbounds double* %t.0291.us, i64 1
  %109 = load double* %arrayidx331.us, align 8, !tbaa !17
  %arrayidx332.us = getelementptr inbounds double* %t.0291.us, i64 4
  %110 = load double* %arrayidx332.us, align 8, !tbaa !17
  %arrayidx333.us = getelementptr inbounds double* %t.0291.us, i64 5
  %111 = load double* %arrayidx333.us, align 8, !tbaa !17
  %sub334.us = fsub double %110, %107
  %mul335.us = fmul double %sub334.us, 3.000000e+00
  %mul336.us = fmul double %109, 2.000000e+00
  %add337.us = fadd double %mul336.us, %111
  %mul338.us = fmul double %div329.us, %add337.us
  %sub339.us = fsub double %mul335.us, %mul338.us
  %mul340.us = fmul double %div329.us, %div329.us
  %mul343.us = fmul double %sub334.us, -2.000000e+00
  %add344.us = fadd double %109, %111
  %mul345.us = fmul double %div329.us, %add344.us
  %add346.us = fadd double %mul343.us, %mul345.us
  %mul348.us = fmul double %div329.us, %mul340.us
  %112 = insertelement <2 x double> undef, double %sub339.us, i32 0
  %113 = insertelement <2 x double> %112, double %add346.us, i32 1
  %114 = insertelement <2 x double> undef, double %mul340.us, i32 0
  %115 = insertelement <2 x double> %114, double %mul348.us, i32 1
  %116 = fdiv <2 x double> %113, %115
  %sub353.us = fsub double %107, %110
  %sub360.us = fsub double %109, %111
  %117 = extractelement <2 x double> %116, i32 1
  %mul354.us = fmul double %div329.us, %117
  %118 = extractelement <2 x double> %116, i32 0
  %add355.us = fadd double %118, %mul354.us
  %mul356.us = fmul double %div329.us, %add355.us
  %add357.us = fadd double %109, %mul356.us
  %mul358.us = fmul double %div329.us, %add357.us
  %add359.us = fadd double %sub353.us, %mul358.us
  %mul361.us = fmul double %117, 3.000000e+00
  %mul362.us = fmul double %div329.us, %mul361.us
  %mul363.us = fmul double %118, 2.000000e+00
  %add364.us = fadd double %mul363.us, %mul362.us
  %mul365.us = fmul double %div329.us, %add364.us
  %add366.us = fadd double %sub360.us, %mul365.us
  %mul367.us = fmul double %add359.us, 3.000000e+00
  %mul368.us = fmul double %div329.us, %add366.us
  %sub369.us = fsub double %mul367.us, %mul368.us
  %mul373.us = fmul double %add359.us, -2.000000e+00
  %add375.us = fadd double %mul368.us, %mul373.us
  %119 = insertelement <2 x double> undef, double %sub369.us, i32 0
  %120 = insertelement <2 x double> %119, double %add375.us, i32 1
  %121 = fdiv <2 x double> %120, %115
  %122 = fsub <2 x double> %116, %121
  %123 = extractelement <2 x double> %122, i32 1
  %mul354.us.1 = fmul double %div329.us, %123
  %124 = extractelement <2 x double> %122, i32 0
  %add355.us.1 = fadd double %124, %mul354.us.1
  %mul356.us.1 = fmul double %div329.us, %add355.us.1
  %add357.us.1 = fadd double %109, %mul356.us.1
  %mul358.us.1 = fmul double %div329.us, %add357.us.1
  %add359.us.1 = fadd double %sub353.us, %mul358.us.1
  %mul361.us.1 = fmul double %123, 3.000000e+00
  %mul362.us.1 = fmul double %div329.us, %mul361.us.1
  %mul363.us.1 = fmul double %124, 2.000000e+00
  %add364.us.1 = fadd double %mul363.us.1, %mul362.us.1
  %mul365.us.1 = fmul double %div329.us, %add364.us.1
  %add366.us.1 = fadd double %sub360.us, %mul365.us.1
  %mul367.us.1 = fmul double %add359.us.1, 3.000000e+00
  %mul368.us.1 = fmul double %div329.us, %add366.us.1
  %sub369.us.1 = fsub double %mul367.us.1, %mul368.us.1
  %mul373.us.1 = fmul double %add359.us.1, -2.000000e+00
  %add375.us.1 = fadd double %mul368.us.1, %mul373.us.1
  %125 = insertelement <2 x double> undef, double %sub369.us.1, i32 0
  %126 = insertelement <2 x double> %125, double %add375.us.1, i32 1
  %127 = fdiv <2 x double> %126, %115
  %128 = fsub <2 x double> %122, %127
  %arrayidx383.us = getelementptr inbounds double* %t.0291.us, i64 2
  %129 = bitcast double* %arrayidx383.us to <2 x double>*
  store <2 x double> %128, <2 x double>* %129, align 8, !tbaa !17
  %inc386.us = add nsw i32 %i.1290.us, 1
  %cmp323.us = icmp slt i32 %inc386.us, %mul151
  br i1 %cmp323.us, label %for.body324.us, label %for.inc440.us

for.body324.lr.ph.us:                             ; preds = %sw.bb315.us, %sw.bb316.us, %sw.bb317.us, %sw.bb318.us, %sw.bb319.us, %for.body314.us
  %t0.0.us = phi double* [ null, %for.body314.us ], [ %102, %sw.bb319.us ], [ %103, %sw.bb318.us ], [ %104, %sw.bb317.us ], [ %105, %sw.bb316.us ], [ %106, %sw.bb315.us ]
  %.pre369 = load double* %t0.0.us, align 8, !tbaa !17
  br label %for.body324.us

for.body190:                                      ; preds = %cond.end275, %for.body190.lr.ph
  %i.0310 = phi i32 [ 0, %for.body190.lr.ph ], [ %inc310, %cond.end275 ]
  %fast_i.0309 = phi double* [ %add.ptr172, %for.body190.lr.ph ], [ %incdec.ptr292, %cond.end275 ]
  %scor_i.0308 = phi double* [ %add.ptr175, %for.body190.lr.ph ], [ %incdec.ptr296, %cond.end275 ]
  %slow_i.0307 = phi double* [ %add.ptr169, %for.body190.lr.ph ], [ %incdec.ptr300, %cond.end275 ]
  %vdwa_i.0306 = phi double* [ %add.ptr184, %for.body190.lr.ph ], [ %incdec.ptr304, %cond.end275 ]
  %vdwb_i.0305 = phi double* [ %add.ptr187, %for.body190.lr.ph ], [ %incdec.ptr308, %cond.end275 ]
  %fast_energy.0304 = phi double [ undef, %for.body190.lr.ph ], [ %fast_energy.1, %cond.end275 ]
  %fast_gradient.0303 = phi double [ undef, %for.body190.lr.ph ], [ %mul253, %cond.end275 ]
  %scor_energy.0302 = phi double [ undef, %for.body190.lr.ph ], [ %scor_energy.1, %cond.end275 ]
  %scor_gradient.0301 = phi double [ undef, %for.body190.lr.ph ], [ %mul255, %cond.end275 ]
  %slow_energy.0300 = phi double [ undef, %for.body190.lr.ph ], [ %slow_energy.1, %cond.end275 ]
  %slow_gradient.0299 = phi double [ undef, %for.body190.lr.ph ], [ %mul257, %cond.end275 ]
  %130 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %div191 = sdiv i32 %i.0310, 64
  %shl = shl i32 1, %div191
  %conv192 = sitofp i32 %shl to double
  %mul193 = fmul double %130, %conv192
  %div194 = fmul double %mul193, 1.562500e-02
  %rem195 = srem i32 %i.0310, 64
  %conv196 = sitofp i32 %rem195 to double
  %mul197 = fmul double %conv196, %div194
  %add198 = fadd double %mul193, %mul197
  %call199 = tail call double @sqrt(double %add198) #6
  %div200 = fdiv double 1.000000e+00, %call199
  %div201 = fdiv double 1.000000e+00, %add198
  br i1 %tobool123, label %if.then203, label %if.end213

if.then203:                                       ; preds = %for.body190
  %131 = load double* @_ZN20ComputeNonbondedUtil8ewaldcofE, align 8, !tbaa !17
  %mul204 = fmul double %call199, %131
  %call205 = tail call double @erfc(double %mul204) #6
  %132 = load double* @_ZN20ComputeNonbondedUtil11pi_ewaldcofE, align 8, !tbaa !17
  %mul206 = fmul double %mul204, %mul204
  %sub207 = fsub double -0.000000e+00, %mul206
  %call208 = tail call double @exp(double %sub207) #6
  %mul209 = fmul double %132, %call208
  %mul210 = fmul double %call199, %mul209
  %add211 = fadd double %call205, %mul210
  %phitmp = fadd double %call205, -1.000000e+00
  %phitmp275 = fadd double %add211, -1.000000e+00
  br label %if.end213

if.end213:                                        ; preds = %if.then203, %for.body190
  %corr_gradient.0 = phi double [ %phitmp275, %if.then203 ], [ -1.000000e+00, %for.body190 ]
  %corr_energy.0 = phi double [ %phitmp, %if.then203 ], [ -1.000000e+00, %for.body190 ]
  switch i32 %splitType.0, label %sw.epilog251 [
    i32 1, label %sw.bb214
    i32 2, label %sw.bb217
    i32 3, label %sw.bb231
  ]

sw.bb214:                                         ; preds = %if.end213
  %div216 = fdiv double -1.000000e+00, %add198
  br label %sw.epilog251

sw.bb217:                                         ; preds = %if.end213
  %133 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %div218 = fdiv double %add198, %133
  %sub219 = fadd double %div218, -1.000000e+00
  %mul220 = fmul double %sub219, %sub219
  %mul223 = fmul double %sub219, 2.000000e+00
  %mul224 = fmul double %mul223, 2.000000e+00
  %mul225 = fmul double %call199, %mul224
  %div226 = fdiv double %mul225, %133
  %div227 = fdiv double %mul220, %call199
  %div228 = fdiv double %div226, %call199
  %div229 = fdiv double %mul220, %add198
  %sub230 = fsub double %div228, %div229
  br label %sw.epilog251

sw.bb231:                                         ; preds = %if.end213
  %134 = load float* @_ZN20ComputeNonbondedUtil6cutoffE, align 4, !tbaa !15
  %conv232 = fpext float %134 to double
  %div233 = fdiv double 5.000000e-01, %conv232
  %135 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %div234 = fdiv double %add198, %135
  %sub235 = fsub double 3.000000e+00, %div234
  %mul236 = fmul double %div233, %sub235
  %div237 = fdiv double -1.000000e+00, %135
  %div239 = fdiv double %call199, %conv232
  %mul240 = fmul double %div237, %div239
  %div242 = fdiv double %corr_energy.0, %call199
  %add243 = fadd double %mul236, %div242
  %div245 = fdiv double %corr_gradient.0, %add198
  %sub246 = fsub double %mul240, %div245
  %sub248 = fsub double %div200, %mul236
  %div249 = fdiv double -1.000000e+00, %add198
  %sub250 = fsub double %div249, %mul240
  br label %sw.epilog251

sw.epilog251:                                     ; preds = %sw.bb231, %sw.bb217, %sw.bb214, %if.end213
  %slow_gradient.1 = phi double [ %slow_gradient.0299, %if.end213 ], [ %mul240, %sw.bb231 ], [ 0.000000e+00, %sw.bb217 ], [ 0.000000e+00, %sw.bb214 ]
  %slow_energy.1 = phi double [ %slow_energy.0300, %if.end213 ], [ %mul236, %sw.bb231 ], [ 0.000000e+00, %sw.bb217 ], [ 0.000000e+00, %sw.bb214 ]
  %scor_gradient.1 = phi double [ %scor_gradient.0301, %if.end213 ], [ %sub246, %sw.bb231 ], [ 0.000000e+00, %sw.bb217 ], [ 0.000000e+00, %sw.bb214 ]
  %scor_energy.1 = phi double [ %scor_energy.0302, %if.end213 ], [ %add243, %sw.bb231 ], [ 0.000000e+00, %sw.bb217 ], [ 0.000000e+00, %sw.bb214 ]
  %fast_gradient.1 = phi double [ %fast_gradient.0303, %if.end213 ], [ %sub250, %sw.bb231 ], [ %sub230, %sw.bb217 ], [ %div216, %sw.bb214 ]
  %fast_energy.1 = phi double [ %fast_energy.0304, %if.end213 ], [ %sub248, %sw.bb231 ], [ %div227, %sw.bb217 ], [ %div200, %sw.bb214 ]
  %mul252 = fmul double %div200, 5.000000e-01
  %mul253 = fmul double %mul252, %fast_gradient.1
  %mul255 = fmul double %mul252, %scor_gradient.1
  %mul257 = fmul double %mul252, %slow_gradient.1
  %mul258 = fmul double %div201, %div201
  %mul259 = fmul double %div201, %mul258
  %mul260 = fmul double %mul259, %mul259
  %136 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %sub261 = fsub double %136, %add198
  %137 = load double* @_ZN20ComputeNonbondedUtil2c3E, align 8, !tbaa !17
  %mul262 = fmul double %sub261, 2.000000e+00
  %sub263 = fsub double %137, %mul262
  %mul264 = fmul double %sub261, %sub263
  %138 = load double* @_ZN20ComputeNonbondedUtil9switchOn2E, align 8, !tbaa !17
  %cmp265 = fcmp ogt double %add198, %138
  br i1 %cmp265, label %cond.true269, label %cond.end275

cond.true269:                                     ; preds = %sw.epilog251
  %mul266 = fmul double %sub261, %mul264
  %139 = load double* @_ZN20ComputeNonbondedUtil2c1E, align 8, !tbaa !17
  %mul267 = fmul double %mul266, %139
  %mul270 = fmul double %139, 2.000000e+00
  %mul271 = fmul double %sub261, %sub261
  %sub272 = fsub double %mul271, %mul264
  %mul273 = fmul double %sub272, %mul270
  br label %cond.end275

cond.end275:                                      ; preds = %cond.true269, %sw.epilog251
  %cond372 = phi double [ %mul267, %cond.true269 ], [ 1.000000e+00, %sw.epilog251 ]
  %cond276 = phi double [ %mul273, %cond.true269 ], [ 0.000000e+00, %sw.epilog251 ]
  %mul279 = fmul double %cond372, 6.000000e+00
  %mul280 = fmul double %div201, %mul279
  %sub281 = fsub double %cond276, %mul280
  %mul282 = fmul double %cond372, %sub281
  %140 = insertelement <2 x double> undef, double %mul260, i32 0
  %141 = insertelement <2 x double> %140, double %mul260, i32 1
  %142 = insertelement <2 x double> undef, double %cond372, i32 0
  %143 = insertelement <2 x double> %142, double %mul282, i32 1
  %144 = fmul <2 x double> %141, %143
  %mul284 = fmul double %cond372, 3.000000e+00
  %mul285 = fmul double %div201, %mul284
  %sub286 = fsub double %cond276, %mul285
  %mul287 = fmul double %cond372, %sub286
  %145 = insertelement <2 x double> undef, double %mul259, i32 0
  %146 = insertelement <2 x double> %145, double %mul259, i32 1
  %147 = insertelement <2 x double> %142, double %mul287, i32 1
  %148 = fmul <2 x double> %146, %147
  %incdec.ptr289 = getelementptr inbounds double* %fast_i.0309, i64 1
  store double %fast_energy.1, double* %fast_i.0309, align 8, !tbaa !17
  %incdec.ptr290 = getelementptr inbounds double* %fast_i.0309, i64 2
  store double %mul253, double* %incdec.ptr289, align 8, !tbaa !17
  %incdec.ptr292 = getelementptr inbounds double* %fast_i.0309, i64 4
  %incdec.ptr293 = getelementptr inbounds double* %scor_i.0308, i64 1
  %149 = bitcast double* %incdec.ptr290 to i8*
  call void @llvm.memset.p0i8.i64(i8* %149, i8 0, i64 16, i32 8, i1 false)
  store double %scor_energy.1, double* %scor_i.0308, align 8, !tbaa !17
  %incdec.ptr294 = getelementptr inbounds double* %scor_i.0308, i64 2
  store double %mul255, double* %incdec.ptr293, align 8, !tbaa !17
  %incdec.ptr296 = getelementptr inbounds double* %scor_i.0308, i64 4
  %incdec.ptr297 = getelementptr inbounds double* %slow_i.0307, i64 1
  %150 = bitcast double* %incdec.ptr294 to i8*
  call void @llvm.memset.p0i8.i64(i8* %150, i8 0, i64 16, i32 8, i1 false)
  store double %slow_energy.1, double* %slow_i.0307, align 8, !tbaa !17
  %incdec.ptr298 = getelementptr inbounds double* %slow_i.0307, i64 2
  store double %mul257, double* %incdec.ptr297, align 8, !tbaa !17
  %incdec.ptr300 = getelementptr inbounds double* %slow_i.0307, i64 4
  %151 = bitcast double* %incdec.ptr298 to i8*
  call void @llvm.memset.p0i8.i64(i8* %151, i8 0, i64 16, i32 8, i1 false)
  %incdec.ptr302 = getelementptr inbounds double* %vdwa_i.0306, i64 2
  %152 = bitcast double* %vdwa_i.0306 to <2 x double>*
  store <2 x double> %144, <2 x double>* %152, align 8, !tbaa !17
  %incdec.ptr304 = getelementptr inbounds double* %vdwa_i.0306, i64 4
  %153 = bitcast double* %incdec.ptr302 to i8*
  call void @llvm.memset.p0i8.i64(i8* %153, i8 0, i64 16, i32 8, i1 false)
  %incdec.ptr306 = getelementptr inbounds double* %vdwb_i.0305, i64 2
  %154 = bitcast double* %vdwb_i.0305 to <2 x double>*
  store <2 x double> %148, <2 x double>* %154, align 8, !tbaa !17
  %incdec.ptr308 = getelementptr inbounds double* %vdwb_i.0305, i64 4
  %inc310 = add nsw i32 %i.0310, 1
  %exitcond339 = icmp eq i32 %inc310, %101
  %155 = bitcast double* %incdec.ptr306 to i8*
  call void @llvm.memset.p0i8.i64(i8* %155, i8 0, i64 16, i32 8, i1 false)
  br i1 %exitcond339, label %for.cond188.for.cond312.preheader_crit_edge, label %for.body190

for.cond443.preheader:                            ; preds = %for.inc440.us, %for.cond312.preheader
  %mul444 = shl nsw i32 %add152270, 2
  br i1 %cmp189298, label %for.body446.lr.ph, label %for.end538

for.body446.lr.ph:                                ; preds = %for.cond443.preheader
  %156 = load double** @_ZN20ComputeNonbondedUtil10corr_tableE, align 8, !tbaa !1
  %157 = load double** @_ZN20ComputeNonbondedUtil10full_tableE, align 8, !tbaa !1
  %158 = shl i32 %cutoff2_exp.0.lcssa, 8
  %159 = or i32 %158, 4
  %160 = icmp sgt i32 %159, 1
  %.op = add i32 %159, -1
  %161 = zext i32 %.op to i64
  %.op478 = add i64 %161, 1
  %162 = select i1 %160, i64 %.op478, i64 1
  %n.vec = and i64 %162, -2
  %cmp.zero = icmp eq i64 %n.vec, 0
  %163 = shl i32 %cutoff2_exp.0.lcssa, 8
  %164 = or i32 %163, 4
  %165 = icmp sgt i32 %164, 1
  %.op479 = add i32 %164, -1
  %166 = zext i32 %.op479 to i64
  %167 = select i1 %165, i64 %166, i64 0
  %scevgep = getelementptr double* %156, i64 %167
  %scevgep384 = getelementptr double* %157, i64 %167
  %scevgep386 = getelementptr double* %106, i64 %167
  %scevgep388 = getelementptr double* %105, i64 %167
  %scevgep390 = getelementptr double* %104, i64 %167
  br i1 %cmp.zero, label %middle.block, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body446.lr.ph
  %bound1393 = icmp ule double* %106, %scevgep
  %bound0392 = icmp ule double* %156, %scevgep386
  %bound1 = icmp ule double* %157, %scevgep
  %bound0 = icmp ule double* %156, %scevgep384
  %bound1396 = icmp ule double* %105, %scevgep
  %bound0395 = icmp ule double* %156, %scevgep388
  %found.conflict394 = and i1 %bound0392, %bound1393
  %found.conflict = and i1 %bound0, %bound1
  %bound1400 = icmp ule double* %104, %scevgep
  %bound0399 = icmp ule double* %156, %scevgep390
  %found.conflict397 = and i1 %bound0395, %bound1396
  %conflict.rdx = or i1 %found.conflict, %found.conflict394
  %bound1404 = icmp ule double* %106, %scevgep384
  %bound0403 = icmp ule double* %157, %scevgep386
  %found.conflict401 = and i1 %bound0399, %bound1400
  %conflict.rdx398 = or i1 %conflict.rdx, %found.conflict397
  %bound1408 = icmp ule double* %105, %scevgep384
  %bound0407 = icmp ule double* %157, %scevgep388
  %found.conflict405 = and i1 %bound0403, %bound1404
  %conflict.rdx402 = or i1 %conflict.rdx398, %found.conflict401
  %bound1412 = icmp ule double* %104, %scevgep384
  %bound0411 = icmp ule double* %157, %scevgep390
  %found.conflict409 = and i1 %bound0407, %bound1408
  %conflict.rdx406 = or i1 %conflict.rdx402, %found.conflict405
  %found.conflict413 = and i1 %bound0411, %bound1412
  %conflict.rdx410 = or i1 %conflict.rdx406, %found.conflict409
  %conflict.rdx414 = or i1 %conflict.rdx410, %found.conflict413
  br i1 %conflict.rdx414, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.memcheck
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %168 = getelementptr inbounds double* %106, i64 %index
  %169 = bitcast double* %168 to <2 x double>*
  %wide.load = load <2 x double>* %169, align 8
  %170 = getelementptr inbounds double* %105, i64 %index
  %171 = bitcast double* %170 to <2 x double>*
  %wide.load415 = load <2 x double>* %171, align 8
  %172 = fadd <2 x double> %wide.load, %wide.load415
  %173 = getelementptr inbounds double* %156, i64 %index
  %174 = bitcast double* %173 to <2 x double>*
  store <2 x double> %172, <2 x double>* %174, align 8
  %175 = bitcast double* %168 to <2 x double>*
  %wide.load416 = load <2 x double>* %175, align 8
  %176 = getelementptr inbounds double* %104, i64 %index
  %177 = bitcast double* %176 to <2 x double>*
  %wide.load417 = load <2 x double>* %177, align 8
  %178 = fadd <2 x double> %wide.load416, %wide.load417
  %179 = getelementptr inbounds double* %157, i64 %index
  %180 = bitcast double* %179 to <2 x double>*
  store <2 x double> %178, <2 x double>* %180, align 8
  %index.next = add i64 %index, 2
  %181 = icmp eq i64 %index.next, %n.vec
  br i1 %181, label %middle.block, label %vector.body, !llvm.loop !46

middle.block:                                     ; preds = %vector.body, %vector.memcheck, %for.body446.lr.ph
  %resume.val = phi i64 [ 0, %for.body446.lr.ph ], [ 0, %vector.memcheck ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %162, %resume.val
  br i1 %cmp.n, label %for.cond464.preheader, label %for.body446

for.cond464.preheader:                            ; preds = %for.body446, %middle.block
  br i1 %cmp189298, label %for.cond468.preheader.lr.ph, label %for.end538

for.cond468.preheader.lr.ph:                      ; preds = %for.cond464.preheader
  %182 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %183 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %184 = load double** @_ZN20ComputeNonbondedUtil10corr_tableE, align 8, !tbaa !1
  %185 = load double** @_ZN20ComputeNonbondedUtil10full_tableE, align 8, !tbaa !1
  %186 = shl i32 %cutoff2_exp.0.lcssa, 6
  %187 = or i32 %186, 1
  br label %for.cond468.preheader

for.body446:                                      ; preds = %for.body446, %middle.block
  %indvars.iv336 = phi i64 [ %indvars.iv.next337, %for.body446 ], [ %resume.val, %middle.block ]
  %arrayidx448 = getelementptr inbounds double* %106, i64 %indvars.iv336
  %188 = load double* %arrayidx448, align 8, !tbaa !17
  %arrayidx450 = getelementptr inbounds double* %105, i64 %indvars.iv336
  %189 = load double* %arrayidx450, align 8, !tbaa !17
  %add451 = fadd double %188, %189
  %arrayidx453 = getelementptr inbounds double* %156, i64 %indvars.iv336
  store double %add451, double* %arrayidx453, align 8, !tbaa !17
  %190 = load double* %arrayidx448, align 8, !tbaa !17
  %arrayidx457 = getelementptr inbounds double* %104, i64 %indvars.iv336
  %191 = load double* %arrayidx457, align 8, !tbaa !17
  %add458 = fadd double %190, %191
  %arrayidx460 = getelementptr inbounds double* %157, i64 %indvars.iv336
  store double %add458, double* %arrayidx460, align 8, !tbaa !17
  %indvars.iv.next337 = add nuw nsw i64 %indvars.iv336, 1
  %192 = trunc i64 %indvars.iv.next337 to i32
  %cmp445 = icmp slt i32 %192, %mul444
  br i1 %cmp445, label %for.body446, label %for.cond464.preheader, !llvm.loop !47

for.cond468.preheader:                            ; preds = %for.cond468.preheader, %for.cond468.preheader.lr.ph
  %indvars.iv = phi i64 [ 0, %for.cond468.preheader.lr.ph ], [ %indvars.iv.next, %for.cond468.preheader ]
  %193 = trunc i64 %indvars.iv to i32
  %mul471 = shl i32 %193, 2
  %mul475 = shl nsw i32 %193, 4
  %add488272 = or i32 %mul475, 4
  %add502273 = or i32 %mul475, 8
  %add511274 = or i32 %mul475, 12
  %194 = sext i32 %add511274 to i64
  %195 = sext i32 %add502273 to i64
  %196 = sext i32 %add488272 to i64
  %197 = sext i32 %mul475 to i64
  %198 = sext i32 %mul471 to i64
  %arrayidx474 = getelementptr inbounds double* %103, i64 %198
  %199 = load double* %arrayidx474, align 8, !tbaa !17
  %arrayidx478 = getelementptr inbounds double* %182, i64 %197
  store double %199, double* %arrayidx478, align 8, !tbaa !17
  %arrayidx482 = getelementptr inbounds double* %183, i64 %197
  store double %199, double* %arrayidx482, align 8, !tbaa !17
  %arrayidx486 = getelementptr inbounds double* %102, i64 %198
  %200 = load double* %arrayidx486, align 8, !tbaa !17
  %arrayidx491 = getelementptr inbounds double* %182, i64 %196
  store double %200, double* %arrayidx491, align 8, !tbaa !17
  %arrayidx496 = getelementptr inbounds double* %183, i64 %196
  store double %200, double* %arrayidx496, align 8, !tbaa !17
  %arrayidx500 = getelementptr inbounds double* %106, i64 %198
  %201 = load double* %arrayidx500, align 8, !tbaa !17
  %arrayidx505 = getelementptr inbounds double* %183, i64 %195
  store double %201, double* %arrayidx505, align 8, !tbaa !17
  %arrayidx509 = getelementptr inbounds double* %105, i64 %198
  %202 = load double* %arrayidx509, align 8, !tbaa !17
  %arrayidx514 = getelementptr inbounds double* %183, i64 %194
  store double %202, double* %arrayidx514, align 8, !tbaa !17
  %arrayidx518 = getelementptr inbounds double* %184, i64 %198
  %203 = load double* %arrayidx518, align 8, !tbaa !17
  %arrayidx523 = getelementptr inbounds double* %182, i64 %195
  store double %203, double* %arrayidx523, align 8, !tbaa !17
  %arrayidx527 = getelementptr inbounds double* %185, i64 %198
  %204 = load double* %arrayidx527, align 8, !tbaa !17
  %arrayidx532 = getelementptr inbounds double* %182, i64 %194
  store double %204, double* %arrayidx532, align 8, !tbaa !17
  %205 = or i64 %198, 1
  %arrayidx474.1 = getelementptr inbounds double* %103, i64 %205
  %206 = load double* %arrayidx474.1, align 8, !tbaa !17
  %207 = or i64 %197, 1
  %arrayidx478.1 = getelementptr inbounds double* %182, i64 %207
  store double %206, double* %arrayidx478.1, align 8, !tbaa !17
  %arrayidx482.1 = getelementptr inbounds double* %183, i64 %207
  store double %206, double* %arrayidx482.1, align 8, !tbaa !17
  %arrayidx486.1 = getelementptr inbounds double* %102, i64 %205
  %208 = load double* %arrayidx486.1, align 8, !tbaa !17
  %209 = or i64 %196, 1
  %arrayidx491.1 = getelementptr inbounds double* %182, i64 %209
  store double %208, double* %arrayidx491.1, align 8, !tbaa !17
  %arrayidx496.1 = getelementptr inbounds double* %183, i64 %209
  store double %208, double* %arrayidx496.1, align 8, !tbaa !17
  %arrayidx500.1 = getelementptr inbounds double* %106, i64 %205
  %210 = load double* %arrayidx500.1, align 8, !tbaa !17
  %211 = or i64 %195, 1
  %arrayidx505.1 = getelementptr inbounds double* %183, i64 %211
  store double %210, double* %arrayidx505.1, align 8, !tbaa !17
  %arrayidx509.1 = getelementptr inbounds double* %105, i64 %205
  %212 = load double* %arrayidx509.1, align 8, !tbaa !17
  %213 = or i64 %194, 1
  %arrayidx514.1 = getelementptr inbounds double* %183, i64 %213
  store double %212, double* %arrayidx514.1, align 8, !tbaa !17
  %arrayidx518.1 = getelementptr inbounds double* %184, i64 %205
  %214 = load double* %arrayidx518.1, align 8, !tbaa !17
  %arrayidx523.1 = getelementptr inbounds double* %182, i64 %211
  store double %214, double* %arrayidx523.1, align 8, !tbaa !17
  %arrayidx527.1 = getelementptr inbounds double* %185, i64 %205
  %215 = load double* %arrayidx527.1, align 8, !tbaa !17
  %arrayidx532.1 = getelementptr inbounds double* %182, i64 %213
  store double %215, double* %arrayidx532.1, align 8, !tbaa !17
  %216 = or i64 %198, 2
  %arrayidx474.2 = getelementptr inbounds double* %103, i64 %216
  %217 = load double* %arrayidx474.2, align 8, !tbaa !17
  %218 = or i64 %197, 2
  %arrayidx478.2 = getelementptr inbounds double* %182, i64 %218
  store double %217, double* %arrayidx478.2, align 8, !tbaa !17
  %arrayidx482.2 = getelementptr inbounds double* %183, i64 %218
  store double %217, double* %arrayidx482.2, align 8, !tbaa !17
  %arrayidx486.2 = getelementptr inbounds double* %102, i64 %216
  %219 = load double* %arrayidx486.2, align 8, !tbaa !17
  %220 = or i64 %196, 2
  %arrayidx491.2 = getelementptr inbounds double* %182, i64 %220
  store double %219, double* %arrayidx491.2, align 8, !tbaa !17
  %arrayidx496.2 = getelementptr inbounds double* %183, i64 %220
  store double %219, double* %arrayidx496.2, align 8, !tbaa !17
  %arrayidx500.2 = getelementptr inbounds double* %106, i64 %216
  %221 = load double* %arrayidx500.2, align 8, !tbaa !17
  %222 = or i64 %195, 2
  %arrayidx505.2 = getelementptr inbounds double* %183, i64 %222
  store double %221, double* %arrayidx505.2, align 8, !tbaa !17
  %arrayidx509.2 = getelementptr inbounds double* %105, i64 %216
  %223 = load double* %arrayidx509.2, align 8, !tbaa !17
  %224 = or i64 %194, 2
  %arrayidx514.2 = getelementptr inbounds double* %183, i64 %224
  store double %223, double* %arrayidx514.2, align 8, !tbaa !17
  %arrayidx518.2 = getelementptr inbounds double* %184, i64 %216
  %225 = load double* %arrayidx518.2, align 8, !tbaa !17
  %arrayidx523.2 = getelementptr inbounds double* %182, i64 %222
  store double %225, double* %arrayidx523.2, align 8, !tbaa !17
  %arrayidx527.2 = getelementptr inbounds double* %185, i64 %216
  %226 = load double* %arrayidx527.2, align 8, !tbaa !17
  %arrayidx532.2 = getelementptr inbounds double* %182, i64 %224
  store double %226, double* %arrayidx532.2, align 8, !tbaa !17
  %227 = or i64 %198, 3
  %arrayidx474.3 = getelementptr inbounds double* %103, i64 %227
  %228 = load double* %arrayidx474.3, align 8, !tbaa !17
  %229 = or i64 %197, 3
  %arrayidx478.3 = getelementptr inbounds double* %182, i64 %229
  store double %228, double* %arrayidx478.3, align 8, !tbaa !17
  %arrayidx482.3 = getelementptr inbounds double* %183, i64 %229
  store double %228, double* %arrayidx482.3, align 8, !tbaa !17
  %arrayidx486.3 = getelementptr inbounds double* %102, i64 %227
  %230 = load double* %arrayidx486.3, align 8, !tbaa !17
  %231 = or i64 %196, 3
  %arrayidx491.3 = getelementptr inbounds double* %182, i64 %231
  store double %230, double* %arrayidx491.3, align 8, !tbaa !17
  %arrayidx496.3 = getelementptr inbounds double* %183, i64 %231
  store double %230, double* %arrayidx496.3, align 8, !tbaa !17
  %arrayidx500.3 = getelementptr inbounds double* %106, i64 %227
  %232 = load double* %arrayidx500.3, align 8, !tbaa !17
  %233 = or i64 %195, 3
  %arrayidx505.3 = getelementptr inbounds double* %183, i64 %233
  store double %232, double* %arrayidx505.3, align 8, !tbaa !17
  %arrayidx509.3 = getelementptr inbounds double* %105, i64 %227
  %234 = load double* %arrayidx509.3, align 8, !tbaa !17
  %235 = or i64 %194, 3
  %arrayidx514.3 = getelementptr inbounds double* %183, i64 %235
  store double %234, double* %arrayidx514.3, align 8, !tbaa !17
  %arrayidx518.3 = getelementptr inbounds double* %184, i64 %227
  %236 = load double* %arrayidx518.3, align 8, !tbaa !17
  %arrayidx523.3 = getelementptr inbounds double* %182, i64 %233
  store double %236, double* %arrayidx523.3, align 8, !tbaa !17
  %arrayidx527.3 = getelementptr inbounds double* %185, i64 %227
  %237 = load double* %arrayidx527.3, align 8, !tbaa !17
  %arrayidx532.3 = getelementptr inbounds double* %182, i64 %235
  store double %237, double* %arrayidx532.3, align 8, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %187
  br i1 %exitcond, label %for.end538, label %for.cond468.preheader

for.end538:                                       ; preds = %for.cond468.preheader, %for.cond464.preheader, %for.cond443.preheader
  ret void

if.then12.1:                                      ; preds = %if.then26, %if.else22, %if.else, %for.cond7.preheader
  %238 = phi double [ %17, %if.then26 ], [ %23, %if.else22 ], [ %23, %for.cond7.preheader ], [ %17, %if.else ]
  %239 = phi double [ %16, %if.then26 ], [ %24, %if.else22 ], [ %24, %for.cond7.preheader ], [ %16, %if.else ]
  %240 = phi double [ %17, %if.then26 ], [ %25, %if.else22 ], [ %25, %for.cond7.preheader ], [ %17, %if.else ]
  %241 = phi double [ %16, %if.then26 ], [ %26, %if.else22 ], [ %26, %for.cond7.preheader ], [ %16, %if.else ]
  %242 = phi <2 x double> [ %28, %if.then26 ], [ <double 1.000000e+00, double 1.000000e+00>, %if.else22 ], [ <double 1.000000e+00, double 1.000000e+00>, %for.cond7.preheader ], [ %22, %if.else ]
  %243 = mul i64 %indvars.iv359, 6
  %arrayidx = getelementptr inbounds double* %18, i64 %243
  %244 = bitcast double* %arrayidx to <2 x double>*
  store <2 x double> %242, <2 x double>* %244, align 8, !tbaa !17
  %245 = icmp ult i32 %27, 2
  %.375 = select i1 %245, double %17, double %238
  %.376 = select i1 %245, double %16, double %239
  %.377 = select i1 %245, double %17, double %240
  %.378 = select i1 %245, double %16, double %241
  %.379 = select i1 %245, double %17, double 0.000000e+00
  %.380 = select i1 %245, double %16, double 0.000000e+00
  %246 = mul i64 %indvars.iv359, 6
  %247 = add i64 %246, 2
  %arrayidx.1 = getelementptr inbounds double* %18, i64 %247
  store double %.380, double* %arrayidx.1, align 8, !tbaa !17
  %248 = or i64 %247, 1
  %arrayidx39.1 = getelementptr inbounds double* %18, i64 %248
  store double %.379, double* %arrayidx39.1, align 8, !tbaa !17
  %249 = and i32 %27, -3
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %if.else.2, label %if.end31.2

if.else.2:                                        ; preds = %if.then12.1
  br i1 %cmp18, label %if.end31.2, label %if.then26.2

if.then26.2:                                      ; preds = %if.else.2
  %sub.2 = fsub double 1.000000e+00, %.376
  %sub27.2 = fsub double 1.000000e+00, %.375
  br label %if.end31.2

if.end31.2:                                       ; preds = %if.then26.2, %if.else.2, %if.then12.1
  %251 = phi double [ %.375, %if.then26.2 ], [ %.377, %if.then12.1 ], [ %.377, %if.else.2 ]
  %252 = phi double [ %.376, %if.then26.2 ], [ %.378, %if.then12.1 ], [ %.378, %if.else.2 ]
  %d_lambda_pair.0.2 = phi double [ %sub27.2, %if.then26.2 ], [ 0.000000e+00, %if.then12.1 ], [ %.377, %if.else.2 ]
  %lambda_pair.0.2 = phi double [ %sub.2, %if.then26.2 ], [ 0.000000e+00, %if.then12.1 ], [ %.378, %if.else.2 ]
  %253 = mul i64 %indvars.iv359, 6
  %254 = add i64 %253, 4
  %arrayidx.2 = getelementptr inbounds double* %18, i64 %254
  store double %lambda_pair.0.2, double* %arrayidx.2, align 8, !tbaa !17
  %255 = or i64 %254, 1
  %arrayidx39.2 = getelementptr inbounds double* %18, i64 %255
  store double %d_lambda_pair.0.2, double* %arrayidx39.2, align 8, !tbaa !17
  %indvars.iv.next360 = add nuw nsw i64 %indvars.iv359, 1
  %exitcond362 = icmp eq i64 %indvars.iv.next360, 3
  br i1 %exitcond362, label %for.end42, label %for.cond7.preheader
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #1

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #2

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil20calc_pair_energy_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31745 = icmp sgt i32 %13, 0
  br i1 %cmp31745, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30798 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond568570796 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19572794 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv787 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next788, %for.inc ]
  %g.0746 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv787, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0746, 1
  %idxprom41 = sext i32 %g.0746 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond568570796, i64 %idxprom41
  %30 = trunc i64 %indvars.iv787 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0746, %for.body ]
  %indvars.iv.next788 = add nuw nsw i64 %indvars.iv787, 1
  %lftr.wideiv789 = trunc i64 %indvars.iv.next788 to i32
  %exitcond790 = icmp eq i32 %lftr.wideiv789, %13
  br i1 %exitcond790, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond568570796, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond568570796, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa803 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19572793802 = phi i32* [ %cond19572794, %for.end ], [ %cond19572794, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond568570795801 = phi i32* [ %cond568570796, %for.end ], [ %cond568570796, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30797800 = phi i32* [ %cond30798, %for.end ], [ %cond30798, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56739 = icmp sgt i32 %g.0.lcssa803, 0
  br i1 %cmp56739, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75733 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76734 = icmp sgt i32 %12, 0
  %or.cond552735 = and i1 %tobool75733, %cmp76734
  br i1 %or.cond552735, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv783 = phi i64 [ %indvars.iv.next784, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0741 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0740 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond568570795801, i64 %indvars.iv783
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0741, 1
  %idxprom68 = sext i32 %fixg.0741 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19572793802, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0740, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0741, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next784 = add nuw nsw i64 %indvars.iv783, 1
  %lftr.wideiv785 = trunc i64 %indvars.iv.next784 to i32
  %exitcond786 = icmp eq i32 %lftr.wideiv785, %g.0.lcssa803
  br i1 %exitcond786, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv781 = phi i64 [ %indvars.iv.next782, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2736 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv781, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2736
  %indvars.iv.next782 = add nuw nsw i64 %indvars.iv781, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next782 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond552 = and i1 %tobool75, %cmp76
  br i1 %or.cond552, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75733, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond568570795801, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond568570795801 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19572793802, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19572793802 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30797800, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30797800 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19572793802, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19572793802, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2575 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162594 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140580582592 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129576578584590 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151586588 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183696 = icmp sgt i32 %12, 0
  br i1 %cmp183696, label %for.body184.lr.ph, label %for.end946

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i565 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast525 = ptrtoint i32* %cond140580582592 to i64
  %sub.ptr.rhs.cast562 = ptrtoint i32* %cond162594 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast576 = ptrtoint i32* %cond151586588 to i64
  %sub871 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30797800 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129576578584590 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc944, %for.body184.lr.ph
  %exclChecksum.0720 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc944 ]
  %i.1699 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc945, %for.inc944 ]
  %pairlistindex.0698 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc944 ]
  %pairCount.0697 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc944 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %300, %for.inc944 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %301, %for.inc944 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %302, %for.inc944 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %303, %for.inc944 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %304, %for.inc944 ]
  %idxprom185 = sext i32 %i.1699 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %66 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %66, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i596 = zext i32 %bf.clear188 to i64
  %67 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i596, i32 0
  %68 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i596, i32 1
  %69 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i596, i32 2
  %70 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %68 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %71 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %72 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %73 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %74 = and i32 %bf.load187, 62914560
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0697
  %cmp218 = icmp sge i32 %pairCount.0697, %div
  %cmp220 = icmp slt i32 %pairCount.0697, %div181
  %or.cond554 = and i1 %cmp218, %cmp220
  br i1 %or.cond554, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1699, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc944

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0697, %if.then205 ], [ %add217, %if.then211 ]
  %76 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %76, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %77 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %77, i32* %cond19572793802, i32* %cond568570795801
  %cond243 = select i1 %77, i32 %fixg.2575, i32 %g.0.lcssa803
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %78 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %78 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %79 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %80 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %81 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %81, %if.then245 ], [ %87, %if.then285 ]
  %p_j_y.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_x.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %j2.0.ph = phi i32 [ %78, %if.then245 ], [ %84, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30797800, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %82 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %82, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %87, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %83 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %83, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %84 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %71, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %84 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %85 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %72, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %86 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %73, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %87 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div549 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div549 to i32
  %cmp289607 = icmp sgt i32 %conv287, 0
  br i1 %cmp289607, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %88 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %89 = lshr i64 %88, 2
  %90 = trunc i64 %89 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv753 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next754, %cond.end310 ]
  %pli.0609 = phi i32* [ %cond129576578584590, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30797800, i64 %indvars.iv753
  %91 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %91 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %92 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %92, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp550551 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp550551, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %91, i32* %pli.0609, align 4, !tbaa !11
  %add313 = add nsw i32 %91, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0609, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %91, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0609, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %91, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0609, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0609, i64 %cond311
  %indvars.iv.next754 = add nuw nsw i64 %indvars.iv753, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next754 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %90
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129576578584590, %land.end ], [ %cond129576578584590, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328546 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328546 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext547 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext547, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129576578584590, i64 %idxprom333
  %93 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129576578584590, i64 %idxprom335
  store i32 %93, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %66, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1699
  br label %for.inc944

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0697, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0698, %for.body184 ]
  %94 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %94, 0
  %bf.load364.pre = load i32* %66, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load364.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %95 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %96 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr365 = lshr i32 %bf.load364.pre, 28
  %mul366 = mul nsw i32 %bf.lshr365, 6
  %idx.ext367503 = zext i32 %mul366 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %97 = load float* %charge, align 4, !tbaa !63
  %conv369 = fpext float %97 to double
  %mul370 = fmul double %conv369, 3.320636e+02
  %mul371 = fmul double %8, %mul370
  %mul372 = fmul double %4, %mul371
  %bf.clear375 = and i32 %bf.load364.pre, 4194303
  %idxprom.i564597 = zext i32 %bf.clear375 to i64
  %98 = load i32** %atomVdwType.i565, align 8, !tbaa !64
  %arrayidx.i566 = getelementptr inbounds i32* %98, i64 %idxprom.i564597
  %99 = load i32* %arrayidx.i566, align 4, !tbaa !11
  %100 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %101 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv377 = shl i32 %99, 1
  %mul.i = and i32 %conv377, 131070
  %mul2.i = mul i32 %mul.i, %101
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp383634 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %95, label %for.cond382.preheader, label %if.else444

for.cond382.preheader:                            ; preds = %land.end362
  br i1 %cmp383634, label %for.body384, label %if.end523

for.body384:                                      ; preds = %for.inc441, %for.cond382.preheader
  %indvars.iv764 = phi i64 [ %indvars.iv.next765, %for.inc441 ], [ 0, %for.cond382.preheader ]
  %exclChecksum.1638 = phi i32 [ %exclChecksum.3, %for.inc441 ], [ %exclChecksum.0720, %for.cond382.preheader ]
  %pli379.0637 = phi i32* [ %pli379.1, %for.inc441 ], [ %cond140580582592, %for.cond382.preheader ]
  %plin.0636 = phi i32* [ %plin.1, %for.inc441 ], [ %cond151586588, %for.cond382.preheader ]
  %arrayidx386 = getelementptr inbounds i32* %cond129576578584590, i64 %indvars.iv764
  %102 = load i32* %arrayidx386, align 4, !tbaa !11
  %idxprom388 = sext i32 %102 to i64
  %x391 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 0
  %103 = load double* %x391, align 8, !tbaa !59
  %sub393 = fsub double %71, %103
  %mul394 = fmul double %sub393, %sub393
  %y399 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 1
  %104 = load double* %y399, align 8, !tbaa !61
  %sub401 = fsub double %72, %104
  %mul402 = fmul double %sub401, %sub401
  %add403 = fadd double %mul394, %mul402
  %z408 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 2
  %105 = load double* %z408, align 8, !tbaa !62
  %sub409 = fsub double %73, %105
  %mul410 = fmul double %sub409, %sub409
  %add411 = fadd double %add403, %mul410
  %atomFixed414 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 2
  %106 = bitcast [4 x i8]* %atomFixed414 to i32*
  %bf.load415 = load i32* %106, align 4
  %bf.clear417 = and i32 %bf.load415, 67108864
  %tobool418 = icmp ne i32 %bf.clear417, 0
  %cmp420 = fcmp ugt double %add411, %2
  %or.cond555 = or i1 %tobool418, %cmp420
  br i1 %or.cond555, label %for.inc441, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %for.body384
  %cmp422 = fcmp ugt double %add411, %10
  br i1 %cmp422, label %if.then426, label %land.lhs.true423

land.lhs.true423:                                 ; preds = %land.lhs.true421
  %inc424 = add nsw i32 %exclChecksum.1638, 1
  %tobool425 = icmp eq i32 %inc424, 0
  br i1 %tobool425, label %if.then426, label %for.inc441

if.then426:                                       ; preds = %land.lhs.true423, %land.lhs.true421
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true423 ], [ %exclChecksum.1638, %land.lhs.true421 ]
  %bf.clear431 = and i32 %bf.load415, 4194303
  %cmp432 = icmp slt i32 %bf.clear431, %68
  %cmp434 = icmp sgt i32 %bf.clear431, %69
  %or.cond556 = or i1 %cmp432, %cmp434
  br i1 %or.cond556, label %if.else437, label %if.then435

if.then435:                                       ; preds = %if.then426
  %incdec.ptr436 = getelementptr inbounds i32* %pli379.0637, i64 1
  store i32 %102, i32* %pli379.0637, align 4, !tbaa !11
  br label %for.inc441

if.else437:                                       ; preds = %if.then426
  %incdec.ptr438 = getelementptr inbounds i32* %plin.0636, i64 1
  store i32 %102, i32* %plin.0636, align 4, !tbaa !11
  br label %for.inc441

for.inc441:                                       ; preds = %if.else437, %if.then435, %land.lhs.true423, %for.body384
  %plin.1 = phi i32* [ %plin.0636, %for.body384 ], [ %plin.0636, %land.lhs.true423 ], [ %plin.0636, %if.then435 ], [ %incdec.ptr438, %if.else437 ]
  %pli379.1 = phi i32* [ %pli379.0637, %for.body384 ], [ %pli379.0637, %land.lhs.true423 ], [ %incdec.ptr436, %if.then435 ], [ %pli379.0637, %if.else437 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1638, %for.body384 ], [ %inc424, %land.lhs.true423 ], [ %exclChecksum.2, %if.then435 ], [ %exclChecksum.2, %if.else437 ]
  %indvars.iv.next765 = add nuw nsw i64 %indvars.iv764, 1
  %lftr.wideiv766 = trunc i64 %indvars.iv.next765 to i32
  %exitcond767 = icmp eq i32 %lftr.wideiv766, %pairlistindex.1
  br i1 %exitcond767, label %if.end523, label %for.body384

if.else444:                                       ; preds = %land.end362
  br i1 %cmp383634, label %if.then447, label %if.end523

if.then447:                                       ; preds = %if.else444
  %107 = load i32* %cond129576578584590, align 4, !tbaa !11
  %idxprom452 = sext i32 %107 to i64
  %x455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 0
  %108 = load double* %x455, align 8, !tbaa !59
  %y460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 1
  %109 = load double* %y460, align 8, !tbaa !61
  %z465 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 2
  %110 = load double* %z465, align 8, !tbaa !62
  br label %while.cond472.outer

while.cond472.outer:                              ; preds = %if.else512, %if.then447
  %idxprom452.pn.ph = phi i64 [ %idxprom452, %if.then447 ], [ %idxprom481, %if.else512 ]
  %p_j_z461.0.ph = phi double [ %110, %if.then447 ], [ %116, %if.else512 ]
  %p_j_y456.0.ph = phi double [ %109, %if.then447 ], [ %115, %if.else512 ]
  %p_j_x451.0.ph = phi double [ %108, %if.then447 ], [ %114, %if.else512 ]
  %j2448.0.ph = phi i32 [ %107, %if.then447 ], [ %113, %if.else512 ]
  %k445.0.ph = phi i32 [ 0, %if.then447 ], [ %inc475, %if.else512 ]
  %plin.2.ph = phi i32* [ %cond151586588, %if.then447 ], [ %incdec.ptr513, %if.else512 ]
  %pli379.2.ph = phi i32* [ %cond140580582592, %if.then447 ], [ %pli379.2.ph617, %if.else512 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0720, %if.then447 ], [ %exclChecksum.5, %if.else512 ]
  br label %while.cond472.outer610

while.cond472.outer610:                           ; preds = %if.then510, %while.cond472.outer
  %idxprom452.pn.ph611 = phi i64 [ %idxprom481, %if.then510 ], [ %idxprom452.pn.ph, %while.cond472.outer ]
  %p_j_z461.0.ph612 = phi double [ %116, %if.then510 ], [ %p_j_z461.0.ph, %while.cond472.outer ]
  %p_j_y456.0.ph613 = phi double [ %115, %if.then510 ], [ %p_j_y456.0.ph, %while.cond472.outer ]
  %p_j_x451.0.ph614 = phi double [ %114, %if.then510 ], [ %p_j_x451.0.ph, %while.cond472.outer ]
  %j2448.0.ph615 = phi i32 [ %113, %if.then510 ], [ %j2448.0.ph, %while.cond472.outer ]
  %k445.0.ph616 = phi i32 [ %inc475, %if.then510 ], [ %k445.0.ph, %while.cond472.outer ]
  %pli379.2.ph617 = phi i32* [ %incdec.ptr511, %if.then510 ], [ %pli379.2.ph, %while.cond472.outer ]
  %exclChecksum.4.ph618 = phi i32 [ %exclChecksum.5, %if.then510 ], [ %exclChecksum.4.ph, %while.cond472.outer ]
  br label %while.cond472.outer619

while.cond472.outer619:                           ; preds = %land.lhs.true503, %while.cond472.outer610
  %idxprom452.pn.ph620 = phi i64 [ %idxprom481, %land.lhs.true503 ], [ %idxprom452.pn.ph611, %while.cond472.outer610 ]
  %p_j_z461.0.ph621 = phi double [ %116, %land.lhs.true503 ], [ %p_j_z461.0.ph612, %while.cond472.outer610 ]
  %p_j_y456.0.ph622 = phi double [ %115, %land.lhs.true503 ], [ %p_j_y456.0.ph613, %while.cond472.outer610 ]
  %p_j_x451.0.ph623 = phi double [ %114, %land.lhs.true503 ], [ %p_j_x451.0.ph614, %while.cond472.outer610 ]
  %j2448.0.ph624 = phi i32 [ %113, %land.lhs.true503 ], [ %j2448.0.ph615, %while.cond472.outer610 ]
  %k445.0.ph625 = phi i32 [ %inc475, %land.lhs.true503 ], [ %k445.0.ph616, %while.cond472.outer610 ]
  %exclChecksum.4.ph626 = phi i32 [ %inc504, %land.lhs.true503 ], [ %exclChecksum.4.ph618, %while.cond472.outer610 ]
  %111 = sext i32 %k445.0.ph625 to i64
  br label %while.cond472

while.cond472:                                    ; preds = %while.body474, %while.cond472.outer619
  %indvars.iv760 = phi i64 [ %111, %while.cond472.outer619 ], [ %indvars.iv.next761, %while.body474 ]
  %idxprom452.pn = phi i64 [ %idxprom452.pn.ph620, %while.cond472.outer619 ], [ %idxprom481, %while.body474 ]
  %p_j_z461.0 = phi double [ %p_j_z461.0.ph621, %while.cond472.outer619 ], [ %116, %while.body474 ]
  %p_j_y456.0 = phi double [ %p_j_y456.0.ph622, %while.cond472.outer619 ], [ %115, %while.body474 ]
  %p_j_x451.0 = phi double [ %p_j_x451.0.ph623, %while.cond472.outer619 ], [ %114, %while.body474 ]
  %j2448.0 = phi i32 [ %j2448.0.ph624, %while.cond472.outer619 ], [ %113, %while.body474 ]
  %k445.0 = phi i32 [ %k445.0.ph625, %while.cond472.outer619 ], [ %inc475, %while.body474 ]
  %112 = trunc i64 %indvars.iv760 to i32
  %cmp473 = icmp slt i32 %112, %pairlistindex.1
  br i1 %cmp473, label %while.body474, label %if.end523

while.body474:                                    ; preds = %while.cond472
  %atom2466.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452.pn, i32 2
  %atom2466.0.in.in = bitcast [4 x i8]* %atom2466.0.in.in.in to i32*
  %atom2466.0.in = load i32* %atom2466.0.in.in, align 4
  %atom2466.0 = and i32 %atom2466.0.in, 4194303
  %indvars.iv.next761 = add nsw i64 %indvars.iv760, 1
  %inc475 = add nsw i32 %k445.0, 1
  %arrayidx477 = getelementptr inbounds i32* %cond129576578584590, i64 %indvars.iv.next761
  %113 = load i32* %arrayidx477, align 4, !tbaa !11
  %sub479 = fsub double %71, %p_j_x451.0
  %mul480 = fmul double %sub479, %sub479
  %idxprom481 = sext i32 %113 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 0
  %114 = load double* %x484, align 8, !tbaa !59
  %sub486 = fsub double %72, %p_j_y456.0
  %mul487 = fmul double %sub486, %sub486
  %add488 = fadd double %mul487, %mul480
  %y492 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 1
  %115 = load double* %y492, align 8, !tbaa !61
  %sub493 = fsub double %73, %p_j_z461.0
  %mul494 = fmul double %sub493, %sub493
  %add495 = fadd double %mul494, %add488
  %z499 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 2
  %116 = load double* %z499, align 8, !tbaa !62
  %cmp500 = fcmp ugt double %add495, %2
  br i1 %cmp500, label %while.cond472, label %land.lhs.true501

land.lhs.true501:                                 ; preds = %while.body474
  %cmp502 = fcmp ugt double %add495, %10
  br i1 %cmp502, label %if.then506, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true501
  %inc504 = add nsw i32 %exclChecksum.4.ph626, 1
  %tobool505 = icmp eq i32 %inc504, 0
  br i1 %tobool505, label %if.then506, label %while.cond472.outer619

if.then506:                                       ; preds = %land.lhs.true503, %land.lhs.true501
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true503 ], [ %exclChecksum.4.ph626, %land.lhs.true501 ]
  %cmp507 = icmp slt i32 %atom2466.0, %68
  %cmp509 = icmp sgt i32 %atom2466.0, %69
  %or.cond557 = or i1 %cmp507, %cmp509
  br i1 %or.cond557, label %if.else512, label %if.then510

if.then510:                                       ; preds = %if.then506
  %incdec.ptr511 = getelementptr inbounds i32* %pli379.2.ph617, i64 1
  store i32 %j2448.0, i32* %pli379.2.ph617, align 4, !tbaa !11
  br label %while.cond472.outer610

if.else512:                                       ; preds = %if.then506
  %incdec.ptr513 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2448.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond472.outer

if.end523:                                        ; preds = %while.cond472, %if.else444, %for.inc441, %for.cond382.preheader
  %plin.4 = phi i32* [ %cond151586588, %if.else444 ], [ %cond151586588, %for.cond382.preheader ], [ %plin.2.ph, %while.cond472 ], [ %plin.1, %for.inc441 ]
  %pli379.4 = phi i32* [ %cond140580582592, %if.else444 ], [ %cond140580582592, %for.cond382.preheader ], [ %pli379.2.ph617, %while.cond472 ], [ %pli379.1, %for.inc441 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0720, %if.else444 ], [ %exclChecksum.0720, %for.cond382.preheader ], [ %exclChecksum.4.ph626, %while.cond472 ], [ %exclChecksum.3, %for.inc441 ]
  %sub.ptr.lhs.cast524 = ptrtoint i32* %pli379.4 to i64
  %sub.ptr.sub526 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %sub.ptr.div527504 = lshr exact i64 %sub.ptr.sub526, 2
  %conv528 = trunc i64 %sub.ptr.div527504 to i32
  %tobool529 = icmp eq i32 %conv528, 0
  br i1 %tobool529, label %for.end560, label %for.cond538.preheader

for.cond538.preheader:                            ; preds = %if.end523
  %sub531 = shl i64 %sub.ptr.sub526, 30
  %sext544 = add i64 %sub531, -4294967296
  %idxprom532 = ashr exact i64 %sext544, 32
  %arrayidx533 = getelementptr inbounds i32* %cond140580582592, i64 %idxprom532
  %117 = load i32* %arrayidx533, align 4, !tbaa !11
  %idxprom534 = ashr exact i64 %sub531, 32
  %arrayidx535 = getelementptr inbounds i32* %cond140580582592, i64 %idxprom534
  store i32 %117, i32* %arrayidx535, align 4, !tbaa !11
  %cmp539642 = icmp sgt i32 %conv528, 0
  br i1 %cmp539642, label %for.body540.lr.ph, label %for.end560

for.body540.lr.ph:                                ; preds = %for.cond538.preheader
  %118 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %119 = lshr i64 %118, 2
  %120 = trunc i64 %119 to i32
  br label %for.body540

for.body540:                                      ; preds = %for.inc558, %for.body540.lr.ph
  %indvars.iv768 = phi i64 [ 0, %for.body540.lr.ph ], [ %indvars.iv.next769, %for.inc558 ]
  %plin.5646 = phi i32* [ %plin.4, %for.body540.lr.ph ], [ %plin.6, %for.inc558 ]
  %plix.0645 = phi i32* [ %cond162594, %for.body540.lr.ph ], [ %plix.1, %for.inc558 ]
  %plim.0644 = phi i32* [ %cond173, %for.body540.lr.ph ], [ %plim.1, %for.inc558 ]
  %arrayidx543 = getelementptr inbounds i32* %cond140580582592, i64 %indvars.iv768
  %121 = load i32* %arrayidx543, align 4, !tbaa !11
  %idxprom545 = sext i32 %121 to i64
  %id547 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom545, i32 2
  %122 = bitcast [4 x i8]* %id547 to i32*
  %bf.load548 = load i32* %122, align 4
  %bf.clear549 = and i32 %bf.load548, 4194303
  %idxprom550543 = zext i32 %bf.clear549 to i64
  %add.ptr.sum = sub i64 %idxprom550543, %idx.ext
  %arrayidx551 = getelementptr inbounds i8* %70, i64 %add.ptr.sum
  %123 = load i8* %arrayidx551, align 1, !tbaa !68
  %conv552 = sext i8 %123 to i32
  switch i32 %conv552, label %for.inc558 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb554
    i32 2, label %sw.bb556
  ]

sw.bb:                                            ; preds = %for.body540
  %incdec.ptr553 = getelementptr inbounds i32* %plin.5646, i64 1
  store i32 %121, i32* %plin.5646, align 4, !tbaa !11
  br label %for.inc558

sw.bb554:                                         ; preds = %for.body540
  %incdec.ptr555 = getelementptr inbounds i32* %plix.0645, i64 1
  store i32 %121, i32* %plix.0645, align 4, !tbaa !11
  br label %for.inc558

sw.bb556:                                         ; preds = %for.body540
  %incdec.ptr557 = getelementptr inbounds i32* %plim.0644, i64 1
  store i32 %121, i32* %plim.0644, align 4, !tbaa !11
  br label %for.inc558

for.inc558:                                       ; preds = %sw.bb556, %sw.bb554, %sw.bb, %for.body540
  %plim.1 = phi i32* [ %plim.0644, %for.body540 ], [ %incdec.ptr557, %sw.bb556 ], [ %plim.0644, %sw.bb554 ], [ %plim.0644, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0645, %for.body540 ], [ %plix.0645, %sw.bb556 ], [ %incdec.ptr555, %sw.bb554 ], [ %plix.0645, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5646, %for.body540 ], [ %plin.5646, %sw.bb556 ], [ %plin.5646, %sw.bb554 ], [ %incdec.ptr553, %sw.bb ]
  %indvars.iv.next769 = add nuw nsw i64 %indvars.iv768, 1
  %lftr.wideiv770 = trunc i64 %indvars.iv.next769 to i32
  %exitcond771 = icmp eq i32 %lftr.wideiv770, %120
  br i1 %exitcond771, label %for.end560, label %for.body540

for.end560:                                       ; preds = %for.inc558, %for.cond538.preheader, %if.end523
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond538.preheader ], [ %plin.4, %if.end523 ], [ %plin.6, %for.inc558 ]
  %plix.0.lcssa = phi i32* [ %cond162594, %for.cond538.preheader ], [ %cond162594, %if.end523 ], [ %plix.1, %for.inc558 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond538.preheader ], [ %cond173, %if.end523 ], [ %plim.1, %for.inc558 ]
  %sub.ptr.lhs.cast561 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub563 = sub i64 %sub.ptr.lhs.cast561, %sub.ptr.rhs.cast562
  %sub.ptr.div564506 = lshr exact i64 %sub.ptr.sub563, 2
  %conv565505 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast568 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %sub.ptr.div571 = ashr exact i64 %sub.ptr.sub570, 2
  %add566 = add i64 %sub.ptr.div571, %conv565505
  %add573 = add i64 %add566, %sub.ptr.div564506
  %conv574 = trunc i64 %add573 to i32
  %sub.ptr.lhs.cast575 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %sub.ptr.div578508 = lshr exact i64 %sub.ptr.sub577, 2
  %conv579 = trunc i64 %sub.ptr.div578508 to i32
  %cmp581650 = icmp sgt i32 %conv579, 0
  br i1 %cmp581650, label %for.body582.lr.ph, label %for.end739

for.body582.lr.ph:                                ; preds = %for.end560
  %x717 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y726 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z733 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %124 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %125 = lshr i64 %124, 2
  %126 = trunc i64 %125 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.body582.for.body582_crit_edge, %for.body582.lr.ph
  %127 = phi i32* [ %98, %for.body582.lr.ph ], [ %.pre, %for.body582.for.body582_crit_edge ]
  %indvars.iv772 = phi i64 [ 0, %for.body582.lr.ph ], [ %indvars.iv.next773, %for.body582.for.body582_crit_edge ]
  %128 = phi <2 x double> [ %61, %for.body582.lr.ph ], [ %183, %for.body582.for.body582_crit_edge ]
  %129 = phi <2 x double> [ %62, %for.body582.lr.ph ], [ %189, %for.body582.for.body582_crit_edge ]
  %130 = phi <2 x double> [ %63, %for.body582.lr.ph ], [ %208, %for.body582.for.body582_crit_edge ]
  %131 = phi <2 x double> [ %64, %for.body582.lr.ph ], [ %175, %for.body582.for.body582_crit_edge ]
  %132 = phi <2 x double> [ %65, %for.body582.lr.ph ], [ %196, %for.body582.for.body582_crit_edge ]
  %arrayidx585 = getelementptr inbounds i32* %cond151586588, i64 %indvars.iv772
  %133 = load i32* %arrayidx585, align 4, !tbaa !11
  %idx.ext586 = sext i32 %133 to i64
  %x589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 0
  %134 = load double* %x589, align 8, !tbaa !59
  %sub590 = fsub double %71, %134
  %mul592 = fmul double %sub590, %sub590
  %y594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 1
  %135 = load double* %y594, align 8, !tbaa !61
  %sub595 = fsub double %72, %135
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %mul592, %mul596
  %z599 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 2
  %136 = load double* %z599, align 8, !tbaa !62
  %sub600 = fsub double %73, %136
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %add597, %mul601
  %conv603 = fptrunc double %add602 to float
  %137 = bitcast float %conv603 to i32
  %shr = ashr i32 %137, 17
  %add605 = add nsw i32 %shr, %mul
  %id606 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 2
  %138 = bitcast [4 x i8]* %id606 to i32*
  %bf.load607 = load i32* %138, align 4
  %bf.clear608 = and i32 %bf.load607, 4194303
  %idxprom.i560600 = zext i32 %bf.clear608 to i64
  %arrayidx.i562 = getelementptr inbounds i32* %127, i64 %idxprom.i560600
  %139 = load i32* %arrayidx.i562, align 4, !tbaa !11
  %conv.i563 = zext i32 %139 to i64
  %conv610 = shl nuw nsw i64 %conv.i563, 1
  %mul611 = and i64 %conv610, 131070
  %mul614 = shl nsw i32 %add605, 4
  %idx.ext615 = sext i32 %mul614 to i64
  %add.ptr616 = getelementptr inbounds double* %7, i64 %idx.ext615
  %140 = load double* %add.ptr616, align 8, !tbaa !17
  %add.ptr616.sum527 = or i64 %idx.ext615, 4
  %add.ptr621 = getelementptr inbounds double* %7, i64 %add.ptr616.sum527
  %141 = load double* %add.ptr621, align 8, !tbaa !17
  %add.ptr616.sum528 = or i64 %idx.ext615, 8
  %add.ptr626 = getelementptr inbounds double* %7, i64 %add.ptr616.sum528
  %142 = load double* %add.ptr626, align 8, !tbaa !17
  %and = and i32 %137, -131072
  %charge629 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 1
  %143 = load float* %charge629, align 4, !tbaa !63
  %conv630 = fpext float %143 to double
  %mul631 = fmul double %mul372, %conv630
  %144 = bitcast i32 %and to float
  %conv633 = fpext float %144 to double
  %sub634 = fsub double %add602, %conv633
  %bf.lshr637 = lshr i32 %bf.load607, 28
  %mul638 = shl nuw nsw i32 %bf.lshr637, 1
  %idxprom639529 = zext i32 %mul638 to i64
  %add.ptr368.sum530 = add i64 %idxprom639529, %idx.ext367503
  %arrayidx640 = getelementptr inbounds double* %96, i64 %add.ptr368.sum530
  %145 = load double* %arrayidx640, align 8, !tbaa !17
  %add642531 = or i32 %mul638, 1
  %idxprom643532 = zext i32 %add642531 to i64
  %add.ptr368.sum533 = add i64 %idxprom643532, %idx.ext367503
  %arrayidx644 = getelementptr inbounds double* %96, i64 %add.ptr368.sum533
  %146 = load double* %arrayidx644, align 8, !tbaa !17
  %add.ptr.i.sum601 = add i64 %mul611, %idx.ext.i
  %A646 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum601, i32 0
  %147 = load double* %A646, align 8, !tbaa !69
  %mul647 = fmul double %8, %147
  %B649 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum601, i32 1
  %148 = load double* %B649, align 8, !tbaa !71
  %mul650 = fmul double %8, %148
  %mul651 = fmul double %140, %mul647
  %mul652 = fmul double %141, %mul650
  %sub653 = fsub double %mul651, %mul652
  %add.ptr616.sum534 = or i64 %idx.ext615, 3
  %arrayidx654 = getelementptr inbounds double* %7, i64 %add.ptr616.sum534
  %149 = load double* %arrayidx654, align 8, !tbaa !17
  %mul655 = fmul double %mul647, %149
  %add.ptr621.sum535 = or i64 %idx.ext615, 7
  %arrayidx656 = getelementptr inbounds double* %7, i64 %add.ptr621.sum535
  %150 = load double* %arrayidx656, align 8, !tbaa !17
  %mul657 = fmul double %mul650, %150
  %sub658 = fsub double %mul655, %mul657
  %add.ptr616.sum536 = or i64 %idx.ext615, 2
  %arrayidx659 = getelementptr inbounds double* %7, i64 %add.ptr616.sum536
  %151 = load double* %arrayidx659, align 8, !tbaa !17
  %mul660 = fmul double %mul647, %151
  %add.ptr621.sum537 = or i64 %idx.ext615, 6
  %arrayidx661 = getelementptr inbounds double* %7, i64 %add.ptr621.sum537
  %152 = load double* %arrayidx661, align 8, !tbaa !17
  %mul662 = fmul double %mul650, %152
  %sub663 = fsub double %mul660, %mul662
  %add.ptr616.sum538 = or i64 %idx.ext615, 1
  %arrayidx664 = getelementptr inbounds double* %7, i64 %add.ptr616.sum538
  %153 = load double* %arrayidx664, align 8, !tbaa !17
  %mul665 = fmul double %mul647, %153
  %add.ptr621.sum539 = or i64 %idx.ext615, 5
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr621.sum539
  %154 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul650, %154
  %sub668 = fsub double %mul665, %mul667
  %mul669 = fmul double %sub634, %sub658
  %add670 = fadd double %mul669, %sub663
  %mul679 = fmul double %142, %mul631
  %add.ptr626.sum540 = or i64 %idx.ext615, 11
  %arrayidx680 = getelementptr inbounds double* %7, i64 %add.ptr626.sum540
  %155 = load double* %arrayidx680, align 8, !tbaa !17
  %mul681 = fmul double %mul631, %155
  %add.ptr626.sum541 = or i64 %idx.ext615, 10
  %arrayidx682 = getelementptr inbounds double* %7, i64 %add.ptr626.sum541
  %156 = load double* %arrayidx682, align 8, !tbaa !17
  %mul683 = fmul double %mul631, %156
  %add.ptr626.sum542 = or i64 %idx.ext615, 9
  %arrayidx684 = getelementptr inbounds double* %7, i64 %add.ptr626.sum542
  %157 = load double* %arrayidx684, align 8, !tbaa !17
  %158 = insertelement <2 x double> undef, double %mul631, i32 0
  %159 = insertelement <2 x double> %158, double %add670, i32 1
  %160 = insertelement <2 x double> undef, double %157, i32 0
  %161 = insertelement <2 x double> %160, double %sub634, i32 1
  %162 = fmul <2 x double> %159, %161
  %mul686 = fmul double %sub634, %mul681
  %add687 = fadd double %mul686, %mul683
  %mul688 = fmul double %sub634, %add687
  %163 = insertelement <2 x double> undef, double %mul688, i32 0
  %164 = insertelement <2 x double> %163, double %sub668, i32 1
  %165 = fadd <2 x double> %162, %164
  %166 = insertelement <2 x double> undef, double %sub634, i32 0
  %167 = insertelement <2 x double> %166, double %sub634, i32 1
  %168 = fmul <2 x double> %165, %167
  %169 = insertelement <2 x double> undef, double %mul679, i32 0
  %170 = insertelement <2 x double> %169, double %sub653, i32 1
  %171 = fadd <2 x double> %170, %168
  %172 = insertelement <2 x double> undef, double %145, i32 0
  %173 = insertelement <2 x double> %172, double %146, i32 1
  %174 = fmul <2 x double> %173, %171
  %175 = fadd <2 x double> %131, %174
  %176 = extractelement <2 x double> %171, i32 0
  %add696 = fadd double %sub658, %mul681
  %add697 = fadd double %sub663, %mul683
  %177 = extractelement <2 x double> %162, i32 0
  %add698 = fadd double %sub668, %177
  %mul700 = fmul double %sub634, 3.000000e+00
  %mul701 = fmul double %mul700, %add696
  %mul702 = fmul double %add697, 2.000000e+00
  %add703 = fadd double %mul701, %mul702
  %mul704 = fmul double %sub634, %add703
  %add705 = fadd double %add698, %mul704
  %mul706 = fmul double %145, -2.000000e+00
  %mul707 = fmul double %mul706, %add705
  %mul710 = fmul double %sub590, %mul707
  %178 = extractelement <2 x double> %171, i32 1
  %179 = insertelement <2 x double> undef, double %178, i32 0
  %180 = insertelement <2 x double> %179, double %sub590, i32 1
  %181 = insertelement <2 x double> %172, double %mul710, i32 1
  %182 = fmul <2 x double> %180, %181
  %183 = fadd <2 x double> %128, %182
  %184 = insertelement <2 x double> undef, double %sub595, i32 0
  %185 = insertelement <2 x double> %184, double %sub600, i32 1
  %186 = insertelement <2 x double> undef, double %mul710, i32 0
  %187 = insertelement <2 x double> %186, double %mul710, i32 1
  %188 = fmul <2 x double> %185, %187
  %189 = fadd <2 x double> %129, %188
  %190 = load double* %x717, align 8, !tbaa !72
  %add718 = fadd double %190, %mul710
  store double %add718, double* %x717, align 8, !tbaa !72
  %x719 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 0
  %mul721 = fmul double %sub595, %mul707
  %191 = insertelement <2 x double> undef, double %146, i32 0
  %192 = insertelement <2 x double> %191, double %sub595, i32 1
  %193 = insertelement <2 x double> undef, double %176, i32 0
  %194 = insertelement <2 x double> %193, double %mul721, i32 1
  %195 = fmul <2 x double> %192, %194
  %196 = fadd <2 x double> %132, %195
  %197 = load double* %y726, align 8, !tbaa !73
  %add727 = fadd double %197, %mul721
  store double %add727, double* %y726, align 8, !tbaa !73
  %198 = bitcast double* %x719 to <2 x double>*
  %199 = load <2 x double>* %198, align 8, !tbaa !17
  %200 = insertelement <2 x double> %186, double %mul721, i32 1
  %201 = fsub <2 x double> %199, %200
  %202 = bitcast double* %x719 to <2 x double>*
  store <2 x double> %201, <2 x double>* %202, align 8, !tbaa !17
  %mul730 = fmul double %sub600, %mul707
  %203 = insertelement <2 x double> undef, double %sub600, i32 0
  %204 = insertelement <2 x double> %203, double %sub600, i32 1
  %205 = insertelement <2 x double> undef, double %mul721, i32 0
  %206 = insertelement <2 x double> %205, double %mul730, i32 1
  %207 = fmul <2 x double> %204, %206
  %208 = fadd <2 x double> %130, %207
  %209 = load double* %z733, align 8, !tbaa !74
  %add734 = fadd double %209, %mul730
  store double %add734, double* %z733, align 8, !tbaa !74
  %z735 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 2
  %210 = load double* %z735, align 8, !tbaa !74
  %sub736 = fsub double %210, %mul730
  store double %sub736, double* %z735, align 8, !tbaa !74
  %indvars.iv.next773 = add nuw nsw i64 %indvars.iv772, 1
  %lftr.wideiv774 = trunc i64 %indvars.iv.next773 to i32
  %exitcond775 = icmp eq i32 %lftr.wideiv774, %126
  br i1 %exitcond775, label %for.end739, label %for.body582.for.body582_crit_edge

for.body582.for.body582_crit_edge:                ; preds = %for.body582
  %.pre = load i32** %atomVdwType.i565, align 8, !tbaa !64
  br label %for.body582

for.end739:                                       ; preds = %for.body582, %for.end560
  %211 = phi <2 x double> [ %61, %for.end560 ], [ %183, %for.body582 ]
  %212 = phi <2 x double> [ %62, %for.end560 ], [ %189, %for.body582 ]
  %213 = phi <2 x double> [ %63, %for.end560 ], [ %208, %for.body582 ]
  %214 = phi <2 x double> [ %64, %for.end560 ], [ %175, %for.body582 ]
  %215 = phi <2 x double> [ %65, %for.end560 ], [ %196, %for.body582 ]
  %conv744 = trunc i64 %sub.ptr.div571 to i32
  %cmp746672 = icmp sgt i32 %conv744, 0
  br i1 %cmp746672, label %for.body747.lr.ph, label %for.inc944

for.body747.lr.ph:                                ; preds = %for.end739
  %x919 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y929 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z937 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body747

for.body747:                                      ; preds = %for.body747, %for.body747.lr.ph
  %indvars.iv776 = phi i64 [ 0, %for.body747.lr.ph ], [ %indvars.iv.next777, %for.body747 ]
  %216 = phi <2 x double> [ %211, %for.body747.lr.ph ], [ %272, %for.body747 ]
  %217 = phi <2 x double> [ %212, %for.body747.lr.ph ], [ %278, %for.body747 ]
  %218 = phi <2 x double> [ %213, %for.body747.lr.ph ], [ %297, %for.body747 ]
  %219 = phi <2 x double> [ %214, %for.body747.lr.ph ], [ %264, %for.body747 ]
  %220 = phi <2 x double> [ %215, %for.body747.lr.ph ], [ %285, %for.body747 ]
  %arrayidx750 = getelementptr inbounds i32* %cond173, i64 %indvars.iv776
  %221 = load i32* %arrayidx750, align 4, !tbaa !11
  %idx.ext752 = sext i32 %221 to i64
  %x756 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 0
  %222 = load double* %x756, align 8, !tbaa !59
  %sub757 = fsub double %71, %222
  %mul759 = fmul double %sub757, %sub757
  %y762 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 1
  %223 = load double* %y762, align 8, !tbaa !61
  %sub763 = fsub double %72, %223
  %mul764 = fmul double %sub763, %sub763
  %add765 = fadd double %mul759, %mul764
  %z768 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 2
  %224 = load double* %z768, align 8, !tbaa !62
  %sub769 = fsub double %73, %224
  %mul770 = fmul double %sub769, %sub769
  %add771 = fadd double %add765, %mul770
  %conv773 = fptrunc double %add771 to float
  %225 = bitcast float %conv773 to i32
  %shr777 = ashr i32 %225, 17
  %add778 = add nsw i32 %shr777, %mul
  %id780 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 2
  %226 = bitcast [4 x i8]* %id780 to i32*
  %bf.load781 = load i32* %226, align 4
  %bf.clear782 = and i32 %bf.load781, 4194303
  %idxprom.i558598 = zext i32 %bf.clear782 to i64
  %227 = load i32** %atomVdwType.i565, align 8, !tbaa !64
  %arrayidx.i559 = getelementptr inbounds i32* %227, i64 %idxprom.i558598
  %228 = load i32* %arrayidx.i559, align 4, !tbaa !11
  %conv.i = zext i32 %228 to i64
  %conv784 = shl nuw nsw i64 %conv.i, 1
  %mul785 = and i64 %conv784, 131070
  %add.ptr787.sum510 = or i64 %mul785, 1
  %mul790 = shl nsw i32 %add778, 4
  %idx.ext791 = sext i32 %mul790 to i64
  %add.ptr792 = getelementptr inbounds double* %7, i64 %idx.ext791
  %229 = load double* %add.ptr792, align 8, !tbaa !17
  %add.ptr792.sum511 = or i64 %idx.ext791, 4
  %add.ptr799 = getelementptr inbounds double* %7, i64 %add.ptr792.sum511
  %230 = load double* %add.ptr799, align 8, !tbaa !17
  %add.ptr792.sum512 = or i64 %idx.ext791, 8
  %add.ptr806 = getelementptr inbounds double* %7, i64 %add.ptr792.sum512
  %231 = load double* %add.ptr806, align 8, !tbaa !17
  %and810 = and i32 %225, -131072
  %charge812 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 1
  %232 = load float* %charge812, align 4, !tbaa !63
  %conv813 = fpext float %232 to double
  %mul814 = fmul double %mul372, %conv813
  %233 = bitcast i32 %and810 to float
  %conv817 = fpext float %233 to double
  %sub818 = fsub double %add771, %conv817
  %bf.lshr822 = lshr i32 %bf.load781, 28
  %mul824 = shl nuw nsw i32 %bf.lshr822, 1
  %idxprom825513 = zext i32 %mul824 to i64
  %add.ptr368.sum = add i64 %idxprom825513, %idx.ext367503
  %arrayidx826 = getelementptr inbounds double* %96, i64 %add.ptr368.sum
  %234 = load double* %arrayidx826, align 8, !tbaa !17
  %add829514 = or i32 %mul824, 1
  %idxprom830515 = zext i32 %add829514 to i64
  %add.ptr368.sum516 = add i64 %idxprom830515, %idx.ext367503
  %arrayidx831 = getelementptr inbounds double* %96, i64 %add.ptr368.sum516
  %235 = load double* %arrayidx831, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr787.sum510, %idx.ext.i
  %A833 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 0
  %236 = load double* %A833, align 8, !tbaa !69
  %mul834 = fmul double %8, %236
  %B836 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 1
  %237 = load double* %B836, align 8, !tbaa !71
  %mul837 = fmul double %8, %237
  %mul839 = fmul double %229, %mul834
  %mul840 = fmul double %230, %mul837
  %sub841 = fsub double %mul839, %mul840
  %add.ptr792.sum517 = or i64 %idx.ext791, 3
  %arrayidx843 = getelementptr inbounds double* %7, i64 %add.ptr792.sum517
  %238 = load double* %arrayidx843, align 8, !tbaa !17
  %mul844 = fmul double %mul834, %238
  %add.ptr799.sum518 = or i64 %idx.ext791, 7
  %arrayidx845 = getelementptr inbounds double* %7, i64 %add.ptr799.sum518
  %239 = load double* %arrayidx845, align 8, !tbaa !17
  %mul846 = fmul double %mul837, %239
  %sub847 = fsub double %mul844, %mul846
  %add.ptr792.sum519 = or i64 %idx.ext791, 2
  %arrayidx849 = getelementptr inbounds double* %7, i64 %add.ptr792.sum519
  %240 = load double* %arrayidx849, align 8, !tbaa !17
  %mul850 = fmul double %mul834, %240
  %add.ptr799.sum520 = or i64 %idx.ext791, 6
  %arrayidx851 = getelementptr inbounds double* %7, i64 %add.ptr799.sum520
  %241 = load double* %arrayidx851, align 8, !tbaa !17
  %mul852 = fmul double %mul837, %241
  %sub853 = fsub double %mul850, %mul852
  %add.ptr792.sum521 = or i64 %idx.ext791, 1
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr792.sum521
  %242 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul834, %242
  %add.ptr799.sum522 = or i64 %idx.ext791, 5
  %arrayidx857 = getelementptr inbounds double* %7, i64 %add.ptr799.sum522
  %243 = load double* %arrayidx857, align 8, !tbaa !17
  %mul858 = fmul double %mul837, %243
  %sub859 = fsub double %mul856, %mul858
  %mul861 = fmul double %sub818, %sub847
  %add862 = fadd double %mul861, %sub853
  %mul872 = fmul double %sub871, %mul814
  %mul873 = fmul double %231, %mul872
  %add.ptr806.sum523 = or i64 %idx.ext791, 11
  %arrayidx875 = getelementptr inbounds double* %7, i64 %add.ptr806.sum523
  %244 = load double* %arrayidx875, align 8, !tbaa !17
  %mul876 = fmul double %mul872, %244
  %add.ptr806.sum524 = or i64 %idx.ext791, 10
  %arrayidx878 = getelementptr inbounds double* %7, i64 %add.ptr806.sum524
  %245 = load double* %arrayidx878, align 8, !tbaa !17
  %mul879 = fmul double %mul872, %245
  %add.ptr806.sum525 = or i64 %idx.ext791, 9
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr806.sum525
  %246 = load double* %arrayidx881, align 8, !tbaa !17
  %247 = insertelement <2 x double> undef, double %mul872, i32 0
  %248 = insertelement <2 x double> %247, double %add862, i32 1
  %249 = insertelement <2 x double> undef, double %246, i32 0
  %250 = insertelement <2 x double> %249, double %sub818, i32 1
  %251 = fmul <2 x double> %248, %250
  %mul884 = fmul double %sub818, %mul876
  %add885 = fadd double %mul884, %mul879
  %mul886 = fmul double %sub818, %add885
  %252 = insertelement <2 x double> undef, double %mul886, i32 0
  %253 = insertelement <2 x double> %252, double %sub859, i32 1
  %254 = fadd <2 x double> %251, %253
  %255 = insertelement <2 x double> undef, double %sub818, i32 0
  %256 = insertelement <2 x double> %255, double %sub818, i32 1
  %257 = fmul <2 x double> %254, %256
  %258 = insertelement <2 x double> undef, double %mul873, i32 0
  %259 = insertelement <2 x double> %258, double %sub841, i32 1
  %260 = fadd <2 x double> %259, %257
  %261 = insertelement <2 x double> undef, double %234, i32 0
  %262 = insertelement <2 x double> %261, double %235, i32 1
  %263 = fmul <2 x double> %262, %260
  %264 = fadd <2 x double> %219, %263
  %265 = extractelement <2 x double> %260, i32 0
  %add894 = fadd double %sub847, %mul876
  %add895 = fadd double %sub853, %mul879
  %266 = extractelement <2 x double> %251, i32 0
  %add896 = fadd double %sub859, %266
  %mul899 = fmul double %sub818, 3.000000e+00
  %mul900 = fmul double %mul899, %add894
  %mul901 = fmul double %add895, 2.000000e+00
  %add902 = fadd double %mul900, %mul901
  %mul903 = fmul double %sub818, %add902
  %add904 = fadd double %add896, %mul903
  %mul906 = fmul double %234, -2.000000e+00
  %mul907 = fmul double %mul906, %add904
  %mul912 = fmul double %sub757, %mul907
  %267 = extractelement <2 x double> %260, i32 1
  %268 = insertelement <2 x double> undef, double %267, i32 0
  %269 = insertelement <2 x double> %268, double %sub757, i32 1
  %270 = insertelement <2 x double> %261, double %mul912, i32 1
  %271 = fmul <2 x double> %269, %270
  %272 = fadd <2 x double> %216, %271
  %273 = insertelement <2 x double> undef, double %sub763, i32 0
  %274 = insertelement <2 x double> %273, double %sub769, i32 1
  %275 = insertelement <2 x double> undef, double %mul912, i32 0
  %276 = insertelement <2 x double> %275, double %mul912, i32 1
  %277 = fmul <2 x double> %274, %276
  %278 = fadd <2 x double> %217, %277
  %279 = load double* %x919, align 8, !tbaa !72
  %add920 = fadd double %279, %mul912
  store double %add920, double* %x919, align 8, !tbaa !72
  %x921 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext752, i32 0
  %mul924 = fmul double %sub763, %mul907
  %280 = insertelement <2 x double> undef, double %235, i32 0
  %281 = insertelement <2 x double> %280, double %sub763, i32 1
  %282 = insertelement <2 x double> undef, double %265, i32 0
  %283 = insertelement <2 x double> %282, double %mul924, i32 1
  %284 = fmul <2 x double> %281, %283
  %285 = fadd <2 x double> %220, %284
  %286 = load double* %y929, align 8, !tbaa !73
  %add930 = fadd double %286, %mul924
  store double %add930, double* %y929, align 8, !tbaa !73
  %287 = bitcast double* %x921 to <2 x double>*
  %288 = load <2 x double>* %287, align 8, !tbaa !17
  %289 = insertelement <2 x double> %275, double %mul924, i32 1
  %290 = fsub <2 x double> %288, %289
  %291 = bitcast double* %x921 to <2 x double>*
  store <2 x double> %290, <2 x double>* %291, align 8, !tbaa !17
  %mul934 = fmul double %sub769, %mul907
  %292 = insertelement <2 x double> undef, double %sub769, i32 0
  %293 = insertelement <2 x double> %292, double %sub769, i32 1
  %294 = insertelement <2 x double> undef, double %mul924, i32 0
  %295 = insertelement <2 x double> %294, double %mul934, i32 1
  %296 = fmul <2 x double> %293, %295
  %297 = fadd <2 x double> %218, %296
  %298 = load double* %z937, align 8, !tbaa !74
  %add938 = fadd double %298, %mul934
  store double %add938, double* %z937, align 8, !tbaa !74
  %z939 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext752, i32 2
  %299 = load double* %z939, align 8, !tbaa !74
  %sub940 = fsub double %299, %mul934
  store double %sub940, double* %z939, align 8, !tbaa !74
  %indvars.iv.next777 = add nuw nsw i64 %indvars.iv776, 1
  %lftr.wideiv778 = trunc i64 %indvars.iv.next777 to i32
  %exitcond779 = icmp eq i32 %lftr.wideiv778, %conv744
  br i1 %exitcond779, label %for.inc944, label %for.body747

for.inc944:                                       ; preds = %for.body747, %for.end739, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end739 ], [ %pairCount.2, %for.body747 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0698, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end739 ], [ %pairlistindex.1, %for.body747 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1699, %for.end739 ], [ %i.1699, %for.body747 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0720, %if.then221 ], [ %exclChecksum.0720, %cond.end349 ], [ %conv574, %for.end739 ], [ %conv574, %for.body747 ]
  %300 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %211, %for.end739 ], [ %272, %for.body747 ]
  %301 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %212, %for.end739 ], [ %278, %for.body747 ]
  %302 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %213, %for.end739 ], [ %297, %for.body747 ]
  %303 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %214, %for.end739 ], [ %264, %for.body747 ]
  %304 = phi <2 x double> [ %65, %if.then221 ], [ %65, %cond.end349 ], [ %215, %for.end739 ], [ %285, %for.body747 ]
  %inc945 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc945, %12
  br i1 %cmp183, label %for.body184, label %for.end946

for.end946:                                       ; preds = %for.inc944, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc944 ]
  %305 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %300, %for.inc944 ]
  %306 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %301, %for.inc944 ]
  %307 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %302, %for.inc944 ]
  %308 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %303, %for.inc944 ]
  %309 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %304, %for.inc944 ]
  %310 = extractelement <2 x double> %308, i32 1
  %311 = extractelement <2 x double> %308, i32 0
  %arraydecay947 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp948 = icmp eq i32* %cond568570795801, %arraydecay947
  br i1 %cmp948, label %if.end953, label %delete.notnull951

delete.notnull951:                                ; preds = %for.end946
  %312 = bitcast i32* %cond568570795801 to i8*
  call void @_ZdaPv(i8* %312) #7
  br label %if.end953

if.end953:                                        ; preds = %delete.notnull951, %for.end946
  %arraydecay954 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp955 = icmp eq i32* %cond19572793802, %arraydecay954
  br i1 %cmp955, label %if.end960, label %delete.notnull958

delete.notnull958:                                ; preds = %if.end953
  %313 = bitcast i32* %cond19572793802 to i8*
  call void @_ZdaPv(i8* %313) #7
  br label %if.end960

if.end960:                                        ; preds = %delete.notnull958, %if.end953
  %arraydecay961 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp962 = icmp eq i32* %cond30797800, %arraydecay961
  br i1 %cmp962, label %if.end967, label %delete.notnull965

delete.notnull965:                                ; preds = %if.end960
  %314 = bitcast i32* %cond30797800 to i8*
  call void @_ZdaPv(i8* %314) #7
  br label %if.end967

if.end967:                                        ; preds = %delete.notnull965, %if.end960
  %arraydecay968 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp969 = icmp eq i32* %cond129576578584590, %arraydecay968
  br i1 %cmp969, label %if.end974, label %delete.notnull972

delete.notnull972:                                ; preds = %if.end967
  %315 = bitcast i32* %cond129576578584590 to i8*
  call void @_ZdaPv(i8* %315) #7
  br label %if.end974

if.end974:                                        ; preds = %delete.notnull972, %if.end967
  %arraydecay975 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp976 = icmp eq i32* %cond140580582592, %arraydecay975
  br i1 %cmp976, label %if.end981, label %delete.notnull979

delete.notnull979:                                ; preds = %if.end974
  %316 = bitcast i32* %cond140580582592 to i8*
  call void @_ZdaPv(i8* %316) #7
  br label %if.end981

if.end981:                                        ; preds = %delete.notnull979, %if.end974
  %arraydecay982 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp983 = icmp eq i32* %cond151586588, %arraydecay982
  br i1 %cmp983, label %if.end988, label %delete.notnull986

delete.notnull986:                                ; preds = %if.end981
  %317 = bitcast i32* %cond151586588 to i8*
  call void @_ZdaPv(i8* %317) #7
  br label %if.end988

if.end988:                                        ; preds = %delete.notnull986, %if.end981
  %arraydecay989 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp990 = icmp eq i32* %cond162594, %arraydecay989
  br i1 %cmp990, label %if.end995, label %delete.notnull993

delete.notnull993:                                ; preds = %if.end988
  %318 = bitcast i32* %cond162594 to i8*
  call void @_ZdaPv(i8* %318) #7
  br label %if.end995

if.end995:                                        ; preds = %delete.notnull993, %if.end988
  %arraydecay996 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp997 = icmp eq i32* %cond173, %arraydecay996
  br i1 %cmp997, label %if.end1002, label %delete.notnull1000

delete.notnull1000:                               ; preds = %if.end995
  %319 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %319) #7
  br label %if.end1002

if.end1002:                                       ; preds = %delete.notnull1000, %if.end995
  %conv1003 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1004 = getelementptr inbounds double* %1, i64 22
  %arrayidx1006 = getelementptr inbounds double* %1, i64 2
  %320 = load double* %1, align 8, !tbaa !17
  %add1009 = fadd double %311, %320
  store double %add1009, double* %1, align 8, !tbaa !17
  %arrayidx1010 = getelementptr inbounds double* %1, i64 25
  %321 = load double* %arrayidx1010, align 8, !tbaa !17
  %add1011 = fadd double %310, %321
  store double %add1011, double* %arrayidx1010, align 8, !tbaa !17
  %322 = bitcast double* %arrayidx1004 to <2 x double>*
  %323 = load <2 x double>* %322, align 8, !tbaa !17
  %324 = insertelement <2 x double> undef, double %conv1003, i32 0
  %325 = shufflevector <2 x double> %324, <2 x double> %309, <2 x i32> <i32 0, i32 2>
  %326 = fadd <2 x double> %325, %323
  %327 = bitcast double* %arrayidx1004 to <2 x double>*
  store <2 x double> %326, <2 x double>* %327, align 8, !tbaa !17
  %328 = bitcast double* %arrayidx1006 to <2 x double>*
  %329 = load <2 x double>* %328, align 8, !tbaa !17
  %330 = fadd <2 x double> %305, %329
  %331 = bitcast double* %arrayidx1006 to <2 x double>*
  store <2 x double> %330, <2 x double>* %331, align 8, !tbaa !17
  %arrayidx1016 = getelementptr inbounds double* %1, i64 4
  %332 = bitcast double* %arrayidx1016 to <2 x double>*
  %333 = load <2 x double>* %332, align 8, !tbaa !17
  %334 = fadd <2 x double> %306, %333
  %335 = bitcast double* %arrayidx1016 to <2 x double>*
  store <2 x double> %334, <2 x double>* %335, align 8, !tbaa !17
  %arrayidx1020 = getelementptr inbounds double* %1, i64 6
  %336 = bitcast double* %arrayidx1020 to <2 x double>*
  %337 = load <2 x double>* %336, align 8, !tbaa !17
  %338 = shufflevector <2 x double> %306, <2 x double> %309, <2 x i32> <i32 0, i32 3>
  %339 = fadd <2 x double> %338, %337
  %340 = bitcast double* %arrayidx1020 to <2 x double>*
  store <2 x double> %339, <2 x double>* %340, align 8, !tbaa !17
  %arrayidx1024 = getelementptr inbounds double* %1, i64 8
  %341 = bitcast double* %arrayidx1024 to <2 x double>*
  %342 = load <2 x double>* %341, align 8, !tbaa !17
  %343 = shufflevector <2 x double> %307, <2 x double> %306, <2 x i32> <i32 0, i32 3>
  %344 = fadd <2 x double> %343, %342
  %345 = bitcast double* %arrayidx1024 to <2 x double>*
  store <2 x double> %344, <2 x double>* %345, align 8, !tbaa !17
  %arrayidx1028 = getelementptr inbounds double* %1, i64 10
  %346 = bitcast double* %arrayidx1028 to <2 x double>*
  %347 = load <2 x double>* %346, align 8, !tbaa !17
  %348 = fadd <2 x double> %307, %347
  %349 = bitcast double* %arrayidx1028 to <2 x double>*
  store <2 x double> %348, <2 x double>* %349, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1002, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil20calc_self_energy_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31791 = icmp sgt i32 %13, 0
  br i1 %cmp31791, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30862 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond602604860 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19606858 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv850 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next851, %for.inc ]
  %g.0792 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv850, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0792, 1
  %idxprom41 = sext i32 %g.0792 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond602604860, i64 %idxprom41
  %30 = trunc i64 %indvars.iv850 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0792, %for.body ]
  %indvars.iv.next851 = add nuw nsw i64 %indvars.iv850, 1
  %lftr.wideiv852 = trunc i64 %indvars.iv.next851 to i32
  %exitcond853 = icmp eq i32 %lftr.wideiv852, %13
  br i1 %exitcond853, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond602604860, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond602604860, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa867 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19606857866 = phi i32* [ %cond19606858, %for.end ], [ %cond19606858, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond602604859865 = phi i32* [ %cond602604860, %for.end ], [ %cond602604860, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30861864 = phi i32* [ %cond30862, %for.end ], [ %cond30862, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56785 = icmp sgt i32 %g.0.lcssa867, 0
  br i1 %cmp56785, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv846 = phi i64 [ %indvars.iv.next847, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0787 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0786 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond602604859865, i64 %indvars.iv846
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0787, 1
  %idxprom68 = sext i32 %fixg.0787 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19606857866, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0786, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0787, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next847 = add nuw nsw i64 %indvars.iv846, 1
  %lftr.wideiv848 = trunc i64 %indvars.iv.next847 to i32
  %exitcond849 = icmp eq i32 %lftr.wideiv848, %g.0.lcssa867
  br i1 %exitcond849, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond602604859865, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond602604859865 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19606857866, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19606857866 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30861864, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30861864 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19606857866, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19606857866, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2609 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147628 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125614616626 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114610612618624 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136620622 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171755 = icmp sgt i32 %sub162, 0
  br i1 %cmp171755, label %for.body172.lr.ph, label %for.end993

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i599 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast549 = ptrtoint i32* %cond125614616626 to i64
  %sub.ptr.rhs.cast609 = ptrtoint i32* %cond147628 to i64
  %sub.ptr.rhs.cast616 = ptrtoint i32* %cond158 to i64
  %sub918 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30861864 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114610612618624 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc991, %for.body172.lr.ph
  %exclChecksum.0773 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc991 ]
  %i.0762 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc992, %for.inc991 ]
  %j_hgroup.0761 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc991 ]
  %g_lower.0760 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc991 ]
  %fixg_lower.0759 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc991 ]
  %pairlistindex.0758 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc991 ]
  %pairlistoffset.0757 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc991 ]
  %pairCount.0756 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc991 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %318, %for.inc991 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %319, %for.inc991 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %320, %for.inc991 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %321, %for.inc991 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %322, %for.inc991 ]
  %idxprom173 = sext i32 %i.0762 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %64, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i630 = zext i32 %bf.clear176 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i630, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i630, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i630, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %72 = and i32 %bf.load175, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0762
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0756
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0756, %div165
  %cmp214 = icmp slt i32 %pairCount.0756, %div168
  %or.cond588 = and i1 %cmp212, %cmp214
  br i1 %or.cond588, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0762
  br label %for.inc991

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0756, %if.then193 ], [ %sub211, %if.then199 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %74, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %75 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0762
  %cmp237637 = icmp slt i32 %g_lower.0760, %g.0.lcssa867
  br i1 %cmp237637, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %76 = sext i32 %g_lower.0760 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %77 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %77, %g.0.lcssa867
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %76, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1638 = phi i32 [ %g_lower.0760, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond602604859865, i64 %indvars.iv
  %78 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %78, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1638, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0760, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1638, %land.rhs238 ]
  %cmp245639 = icmp slt i32 %fixg_lower.0759, %fixg.2609
  br i1 %cmp245639, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %79 = sext i32 %fixg_lower.0759 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %80 = trunc i64 %indvars.iv.next800 to i32
  %cmp245 = icmp slt i32 %80, %fixg.2609
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv799 = phi i64 [ %79, %land.rhs246.lr.ph ], [ %indvars.iv.next800, %while.cond244 ]
  %fixg_lower.1640 = phi i32 [ %fixg_lower.0759, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19606857866, i64 %indvars.iv799
  %81 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %81, %add236
  %indvars.iv.next800 = add nsw i64 %indvars.iv799, 1
  %inc252 = add nsw i32 %fixg_lower.1640, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0759, %land.end ], [ %fixg_lower.0759, %while.cond244.loopexit ], [ %fixg_lower.1640, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0760, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0761, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1642 = add nsw i32 %i.0762, 1
  %cmp257643 = icmp slt i32 %j.1642, %j_hgroup.1
  br i1 %cmp257643, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %82 = add i32 %j_hgroup.1, -1
  %83 = sub i32 %82, %i.0762
  %84 = add i32 %j_hgroup.1, -2
  %85 = sub i32 %84, %i.0762
  %86 = zext i32 %85 to i64
  %87 = add i64 %86, 1
  %end.idx = add i64 %86, 1
  %n.vec = and i64 %87, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1642
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %88 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1642, %88
  %broadcast.splatinsert898 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat899 = shufflevector <4 x i32> %broadcast.splatinsert898, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction900 = add <4 x i32> %broadcast.splat899, <i32 0, i32 1, i32 2, i32 3>
  %induction901 = add <4 x i32> %broadcast.splat899, <i32 4, i32 5, i32 6, i32 7>
  %89 = getelementptr inbounds i32* %cond114610612618624, i64 %index
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction900, <4 x i32>* %90, align 4
  %.sum904 = or i64 %index, 4
  %91 = getelementptr i32* %cond114610612618624, i64 %.sum904
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %induction901, <4 x i32>* %92, align 4
  %index.next = add i64 %index, 8
  %93 = icmp eq i64 %index.next, %n.vec
  br i1 %93, label %middle.block, label %vector.body, !llvm.loop !75

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val896 = phi i32 [ %j.1642, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv801 = phi i64 [ %indvars.iv.next802, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1645 = phi i32 [ %j.1, %for.body258 ], [ %resume.val896, %middle.block ]
  %indvars.iv.next802 = add nuw nsw i64 %indvars.iv801, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114610612618624, i64 %indvars.iv801
  store i32 %j.1645, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1645, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next802 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %83
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !76

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %83 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114610612618624, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %75, i32* %cond19606857866, i32* %cond602604859865
  %cond276 = select i1 %75, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %75, i32 %fixg.2609, i32 %g.0.lcssa867
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %94 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %94 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %95 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %96 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %97 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %97, %if.then283 ], [ %103, %if.then325 ]
  %p_j_y.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_x.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %j2.0.ph = phi i32 [ %94, %if.then283 ], [ %100, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30861864, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %98 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv807 = phi i64 [ %98, %while.cond298.outer ], [ %indvars.iv.next808, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %103, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %99 = trunc i64 %indvars.iv807 to i32
  %cmp299 = icmp slt i32 %99, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next808 = add nsw i64 %indvars.iv807, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next808
  %100 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %69, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %100 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %101 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %70, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %102 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %71, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %103 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div585 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div585 to i32
  %cmp330651 = icmp sgt i32 %conv328, 0
  br i1 %cmp330651, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %104 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %105 = lshr i64 %104, 2
  %106 = trunc i64 %105 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv809 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next810, %cond.end351 ]
  %pli.0653 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30861864, i64 %indvars.iv809
  %107 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %107 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %108 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %108, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp586 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp586, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %107, i32* %pli.0653, align 4, !tbaa !11
  %add354 = add nsw i32 %107, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0653, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %107, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0653, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %107, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0653, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0653, i64 %cond352
  %indvars.iv.next810 = add nuw nsw i64 %indvars.iv809, 1
  %lftr.wideiv811 = trunc i64 %indvars.iv.next810 to i32
  %exitcond812 = icmp eq i32 %lftr.wideiv811, %106
  br i1 %exitcond812, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369582 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369582 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext583 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext583, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114610612618624, i64 %idxprom374
  %109 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114610612618624, i64 %idxprom376
  store i32 %109, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0757, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0756, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0758, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0759, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0760, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0761, %if.else ]
  %110 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %110, 0
  %bf.load389.pre = load i32* %64, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load389.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %111 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %112 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr390 = lshr i32 %bf.load389.pre, 28
  %mul391 = mul nsw i32 %bf.lshr390, 6
  %idx.ext392539 = zext i32 %mul391 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %113 = load float* %charge, align 4, !tbaa !63
  %conv394 = fpext float %113 to double
  %mul395 = fmul double %conv394, 3.320636e+02
  %mul396 = fmul double %8, %mul395
  %mul397 = fmul double %4, %mul396
  %bf.clear400 = and i32 %bf.load389.pre, 4194303
  %idxprom.i598631 = zext i32 %bf.clear400 to i64
  %114 = load i32** %atomVdwType.i599, align 8, !tbaa !64
  %arrayidx.i600 = getelementptr inbounds i32* %114, i64 %idxprom.i598631
  %115 = load i32* %arrayidx.i600, align 4, !tbaa !11
  %116 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %117 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv402 = shl i32 %115, 1
  %mul.i = and i32 %conv402, 131070
  %mul2.i = mul i32 %mul.i, %117
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp408679 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %111, label %for.cond407.preheader, label %if.else468

for.cond407.preheader:                            ; preds = %land.end387
  br i1 %cmp408679, label %for.body409.lr.ph, label %if.end547

for.body409.lr.ph:                                ; preds = %for.cond407.preheader
  %118 = sext i32 %pairlistoffset.1 to i64
  br label %for.body409

for.body409:                                      ; preds = %for.inc465, %for.body409.lr.ph
  %indvars.iv822 = phi i64 [ %118, %for.body409.lr.ph ], [ %indvars.iv.next823, %for.inc465 ]
  %exclChecksum.1683 = phi i32 [ %exclChecksum.0773, %for.body409.lr.ph ], [ %exclChecksum.3, %for.inc465 ]
  %pli404.0682 = phi i32* [ %cond125614616626, %for.body409.lr.ph ], [ %pli404.1, %for.inc465 ]
  %plin.0681 = phi i32* [ %cond136620622, %for.body409.lr.ph ], [ %plin.1, %for.inc465 ]
  %arrayidx411 = getelementptr inbounds i32* %cond114610612618624, i64 %indvars.iv822
  %119 = load i32* %arrayidx411, align 4, !tbaa !11
  %idxprom413 = sext i32 %119 to i64
  %x416 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 0
  %120 = load double* %x416, align 8, !tbaa !59
  %sub418 = fsub double %69, %120
  %mul419 = fmul double %sub418, %sub418
  %y424 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 1
  %121 = load double* %y424, align 8, !tbaa !61
  %sub426 = fsub double %70, %121
  %mul427 = fmul double %sub426, %sub426
  %add428 = fadd double %mul419, %mul427
  %z433 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 2
  %122 = load double* %z433, align 8, !tbaa !62
  %sub434 = fsub double %71, %122
  %mul435 = fmul double %sub434, %sub434
  %add436 = fadd double %add428, %mul435
  %atomFixed439 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 2
  %123 = bitcast [4 x i8]* %atomFixed439 to i32*
  %bf.load440 = load i32* %123, align 4
  %bf.clear442 = and i32 %bf.load440, 67108864
  %tobool443 = icmp ne i32 %bf.clear442, 0
  %cmp444 = fcmp ugt double %add436, %2
  %or.cond589 = or i1 %tobool443, %cmp444
  br i1 %or.cond589, label %for.inc465, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %for.body409
  %cmp446 = fcmp ugt double %add436, %10
  br i1 %cmp446, label %if.then450, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %land.lhs.true445
  %inc448 = add nsw i32 %exclChecksum.1683, 1
  %tobool449 = icmp eq i32 %inc448, 0
  br i1 %tobool449, label %if.then450, label %for.inc465

if.then450:                                       ; preds = %land.lhs.true447, %land.lhs.true445
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true447 ], [ %exclChecksum.1683, %land.lhs.true445 ]
  %bf.clear455 = and i32 %bf.load440, 4194303
  %cmp456 = icmp slt i32 %bf.clear455, %66
  %cmp458 = icmp sgt i32 %bf.clear455, %67
  %or.cond590 = or i1 %cmp456, %cmp458
  br i1 %or.cond590, label %if.else461, label %if.then459

if.then459:                                       ; preds = %if.then450
  %incdec.ptr460 = getelementptr inbounds i32* %pli404.0682, i64 1
  store i32 %119, i32* %pli404.0682, align 4, !tbaa !11
  br label %for.inc465

if.else461:                                       ; preds = %if.then450
  %incdec.ptr462 = getelementptr inbounds i32* %plin.0681, i64 1
  store i32 %119, i32* %plin.0681, align 4, !tbaa !11
  br label %for.inc465

for.inc465:                                       ; preds = %if.else461, %if.then459, %land.lhs.true447, %for.body409
  %plin.1 = phi i32* [ %plin.0681, %for.body409 ], [ %plin.0681, %land.lhs.true447 ], [ %plin.0681, %if.then459 ], [ %incdec.ptr462, %if.else461 ]
  %pli404.1 = phi i32* [ %pli404.0682, %for.body409 ], [ %pli404.0682, %land.lhs.true447 ], [ %incdec.ptr460, %if.then459 ], [ %pli404.0682, %if.else461 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1683, %for.body409 ], [ %inc448, %land.lhs.true447 ], [ %exclChecksum.2, %if.then459 ], [ %exclChecksum.2, %if.else461 ]
  %indvars.iv.next823 = add nsw i64 %indvars.iv822, 1
  %lftr.wideiv824 = trunc i64 %indvars.iv.next823 to i32
  %exitcond825 = icmp eq i32 %lftr.wideiv824, %pairlistindex.2
  br i1 %exitcond825, label %if.end547, label %for.body409

if.else468:                                       ; preds = %land.end387
  br i1 %cmp408679, label %if.then471, label %if.end547

if.then471:                                       ; preds = %if.else468
  %idxprom473 = sext i32 %pairlistoffset.1 to i64
  %arrayidx474 = getelementptr inbounds i32* %cond114610612618624, i64 %idxprom473
  %124 = load i32* %arrayidx474, align 4, !tbaa !11
  %idxprom476 = sext i32 %124 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %125 = load double* %x479, align 8, !tbaa !59
  %y484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %126 = load double* %y484, align 8, !tbaa !61
  %z489 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %127 = load double* %z489, align 8, !tbaa !62
  br label %while.cond496.outer

while.cond496.outer:                              ; preds = %if.else536, %if.then471
  %idxprom476.pn.ph = phi i64 [ %idxprom476, %if.then471 ], [ %idxprom505, %if.else536 ]
  %p_j_z485.0.ph = phi double [ %127, %if.then471 ], [ %133, %if.else536 ]
  %p_j_y480.0.ph = phi double [ %126, %if.then471 ], [ %132, %if.else536 ]
  %p_j_x475.0.ph = phi double [ %125, %if.then471 ], [ %131, %if.else536 ]
  %j2472.0.ph = phi i32 [ %124, %if.then471 ], [ %130, %if.else536 ]
  %k469.0.ph = phi i32 [ %pairlistoffset.1, %if.then471 ], [ %inc499, %if.else536 ]
  %plin.2.ph = phi i32* [ %cond136620622, %if.then471 ], [ %incdec.ptr537, %if.else536 ]
  %pli404.2.ph = phi i32* [ %cond125614616626, %if.then471 ], [ %pli404.2.ph662, %if.else536 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0773, %if.then471 ], [ %exclChecksum.5, %if.else536 ]
  br label %while.cond496.outer655

while.cond496.outer655:                           ; preds = %if.then534, %while.cond496.outer
  %idxprom476.pn.ph656 = phi i64 [ %idxprom505, %if.then534 ], [ %idxprom476.pn.ph, %while.cond496.outer ]
  %p_j_z485.0.ph657 = phi double [ %133, %if.then534 ], [ %p_j_z485.0.ph, %while.cond496.outer ]
  %p_j_y480.0.ph658 = phi double [ %132, %if.then534 ], [ %p_j_y480.0.ph, %while.cond496.outer ]
  %p_j_x475.0.ph659 = phi double [ %131, %if.then534 ], [ %p_j_x475.0.ph, %while.cond496.outer ]
  %j2472.0.ph660 = phi i32 [ %130, %if.then534 ], [ %j2472.0.ph, %while.cond496.outer ]
  %k469.0.ph661 = phi i32 [ %inc499, %if.then534 ], [ %k469.0.ph, %while.cond496.outer ]
  %pli404.2.ph662 = phi i32* [ %incdec.ptr535, %if.then534 ], [ %pli404.2.ph, %while.cond496.outer ]
  %exclChecksum.4.ph663 = phi i32 [ %exclChecksum.5, %if.then534 ], [ %exclChecksum.4.ph, %while.cond496.outer ]
  br label %while.cond496.outer664

while.cond496.outer664:                           ; preds = %land.lhs.true527, %while.cond496.outer655
  %idxprom476.pn.ph665 = phi i64 [ %idxprom505, %land.lhs.true527 ], [ %idxprom476.pn.ph656, %while.cond496.outer655 ]
  %p_j_z485.0.ph666 = phi double [ %133, %land.lhs.true527 ], [ %p_j_z485.0.ph657, %while.cond496.outer655 ]
  %p_j_y480.0.ph667 = phi double [ %132, %land.lhs.true527 ], [ %p_j_y480.0.ph658, %while.cond496.outer655 ]
  %p_j_x475.0.ph668 = phi double [ %131, %land.lhs.true527 ], [ %p_j_x475.0.ph659, %while.cond496.outer655 ]
  %j2472.0.ph669 = phi i32 [ %130, %land.lhs.true527 ], [ %j2472.0.ph660, %while.cond496.outer655 ]
  %k469.0.ph670 = phi i32 [ %inc499, %land.lhs.true527 ], [ %k469.0.ph661, %while.cond496.outer655 ]
  %exclChecksum.4.ph671 = phi i32 [ %inc528, %land.lhs.true527 ], [ %exclChecksum.4.ph663, %while.cond496.outer655 ]
  %128 = sext i32 %k469.0.ph670 to i64
  br label %while.cond496

while.cond496:                                    ; preds = %while.body498, %while.cond496.outer664
  %indvars.iv818 = phi i64 [ %128, %while.cond496.outer664 ], [ %indvars.iv.next819, %while.body498 ]
  %idxprom476.pn = phi i64 [ %idxprom476.pn.ph665, %while.cond496.outer664 ], [ %idxprom505, %while.body498 ]
  %p_j_z485.0 = phi double [ %p_j_z485.0.ph666, %while.cond496.outer664 ], [ %133, %while.body498 ]
  %p_j_y480.0 = phi double [ %p_j_y480.0.ph667, %while.cond496.outer664 ], [ %132, %while.body498 ]
  %p_j_x475.0 = phi double [ %p_j_x475.0.ph668, %while.cond496.outer664 ], [ %131, %while.body498 ]
  %j2472.0 = phi i32 [ %j2472.0.ph669, %while.cond496.outer664 ], [ %130, %while.body498 ]
  %k469.0 = phi i32 [ %k469.0.ph670, %while.cond496.outer664 ], [ %inc499, %while.body498 ]
  %129 = trunc i64 %indvars.iv818 to i32
  %cmp497 = icmp slt i32 %129, %pairlistindex.2
  br i1 %cmp497, label %while.body498, label %if.end547

while.body498:                                    ; preds = %while.cond496
  %atom2490.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476.pn, i32 2
  %atom2490.0.in.in = bitcast [4 x i8]* %atom2490.0.in.in.in to i32*
  %atom2490.0.in = load i32* %atom2490.0.in.in, align 4
  %atom2490.0 = and i32 %atom2490.0.in, 4194303
  %indvars.iv.next819 = add nsw i64 %indvars.iv818, 1
  %inc499 = add nsw i32 %k469.0, 1
  %arrayidx501 = getelementptr inbounds i32* %cond114610612618624, i64 %indvars.iv.next819
  %130 = load i32* %arrayidx501, align 4, !tbaa !11
  %sub503 = fsub double %69, %p_j_x475.0
  %mul504 = fmul double %sub503, %sub503
  %idxprom505 = sext i32 %130 to i64
  %x508 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 0
  %131 = load double* %x508, align 8, !tbaa !59
  %sub510 = fsub double %70, %p_j_y480.0
  %mul511 = fmul double %sub510, %sub510
  %add512 = fadd double %mul511, %mul504
  %y516 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 1
  %132 = load double* %y516, align 8, !tbaa !61
  %sub517 = fsub double %71, %p_j_z485.0
  %mul518 = fmul double %sub517, %sub517
  %add519 = fadd double %mul518, %add512
  %z523 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 2
  %133 = load double* %z523, align 8, !tbaa !62
  %cmp524 = fcmp ugt double %add519, %2
  br i1 %cmp524, label %while.cond496, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %while.body498
  %cmp526 = fcmp ugt double %add519, %10
  br i1 %cmp526, label %if.then530, label %land.lhs.true527

land.lhs.true527:                                 ; preds = %land.lhs.true525
  %inc528 = add nsw i32 %exclChecksum.4.ph671, 1
  %tobool529 = icmp eq i32 %inc528, 0
  br i1 %tobool529, label %if.then530, label %while.cond496.outer664

if.then530:                                       ; preds = %land.lhs.true527, %land.lhs.true525
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true527 ], [ %exclChecksum.4.ph671, %land.lhs.true525 ]
  %cmp531 = icmp slt i32 %atom2490.0, %66
  %cmp533 = icmp sgt i32 %atom2490.0, %67
  %or.cond591 = or i1 %cmp531, %cmp533
  br i1 %or.cond591, label %if.else536, label %if.then534

if.then534:                                       ; preds = %if.then530
  %incdec.ptr535 = getelementptr inbounds i32* %pli404.2.ph662, i64 1
  store i32 %j2472.0, i32* %pli404.2.ph662, align 4, !tbaa !11
  br label %while.cond496.outer655

if.else536:                                       ; preds = %if.then530
  %incdec.ptr537 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2472.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond496.outer

if.end547:                                        ; preds = %while.cond496, %if.else468, %for.inc465, %for.cond407.preheader
  %plin.4 = phi i32* [ %cond136620622, %if.else468 ], [ %cond136620622, %for.cond407.preheader ], [ %plin.2.ph, %while.cond496 ], [ %plin.1, %for.inc465 ]
  %pli404.4 = phi i32* [ %cond125614616626, %if.else468 ], [ %cond125614616626, %for.cond407.preheader ], [ %pli404.2.ph662, %while.cond496 ], [ %pli404.1, %for.inc465 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0773, %if.else468 ], [ %exclChecksum.0773, %for.cond407.preheader ], [ %exclChecksum.4.ph671, %while.cond496 ], [ %exclChecksum.3, %for.inc465 ]
  %sub.ptr.lhs.cast548 = ptrtoint i32* %pli404.4 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %sub.ptr.div551540 = lshr exact i64 %sub.ptr.sub550, 2
  %conv552 = trunc i64 %sub.ptr.div551540 to i32
  %tobool553 = icmp eq i32 %conv552, 0
  br i1 %tobool553, label %for.cond562.preheader, label %if.then554

if.then554:                                       ; preds = %if.end547
  %sub555 = shl i64 %sub.ptr.sub550, 30
  %sext580 = add i64 %sub555, -4294967296
  %idxprom556 = ashr exact i64 %sext580, 32
  %arrayidx557 = getelementptr inbounds i32* %cond125614616626, i64 %idxprom556
  %134 = load i32* %arrayidx557, align 4, !tbaa !11
  %idxprom558 = ashr exact i64 %sub555, 32
  %arrayidx559 = getelementptr inbounds i32* %cond125614616626, i64 %idxprom558
  store i32 %134, i32* %arrayidx559, align 4, !tbaa !11
  br label %for.cond562.preheader

for.cond562.preheader:                            ; preds = %if.then554, %if.end547
  %cmp563687 = icmp ult i32* %cond136620622, %plin.4
  br i1 %cmp563687, label %land.lhs.true564, label %for.cond571.loopexit

land.lhs.true564:                                 ; preds = %for.body566, %for.cond562.preheader
  %exclChecksum.8690 = phi i32 [ %dec, %for.body566 ], [ %exclChecksum.7, %for.cond562.preheader ]
  %plix.0689 = phi i32* [ %incdec.ptr567, %for.body566 ], [ %cond147628, %for.cond562.preheader ]
  %pln.0688 = phi i32* [ %incdec.ptr569, %for.body566 ], [ %cond136620622, %for.cond562.preheader ]
  %135 = load i32* %pln.0688, align 4, !tbaa !11
  %cmp565 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp565, label %for.body566, label %for.cond571.loopexit

for.body566:                                      ; preds = %land.lhs.true564
  %incdec.ptr567 = getelementptr inbounds i32* %plix.0689, i64 1
  store i32 %135, i32* %plix.0689, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8690, -1
  %incdec.ptr569 = getelementptr inbounds i32* %pln.0688, i64 1
  %cmp563 = icmp ult i32* %incdec.ptr569, %plin.4
  br i1 %cmp563, label %land.lhs.true564, label %for.cond571.loopexit

for.cond571.loopexit:                             ; preds = %for.body566, %land.lhs.true564, %for.cond562.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond562.preheader ], [ %dec, %for.body566 ], [ %exclChecksum.8690, %land.lhs.true564 ]
  %plix.0.lcssa = phi i32* [ %cond147628, %for.cond562.preheader ], [ %incdec.ptr567, %for.body566 ], [ %plix.0689, %land.lhs.true564 ]
  %pln.0.lcssa = phi i32* [ %cond136620622, %for.cond562.preheader ], [ %incdec.ptr569, %for.body566 ], [ %pln.0688, %land.lhs.true564 ]
  %cmp572694 = icmp sgt i32 %conv552, 0
  br i1 %cmp572694, label %land.lhs.true573, label %for.cond585.loopexit

land.lhs.true573:                                 ; preds = %for.body577, %for.cond571.loopexit
  %indvars.iv832 = phi i64 [ %indvars.iv.next833, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %exclChecksum.9697 = phi i32 [ %dec581, %for.body577 ], [ %exclChecksum.8.lcssa, %for.cond571.loopexit ]
  %plix.1696 = phi i32* [ %incdec.ptr580, %for.body577 ], [ %plix.0.lcssa, %for.cond571.loopexit ]
  %k561.0695 = phi i32 [ %inc583, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %arrayidx575 = getelementptr inbounds i32* %cond125614616626, i64 %indvars.iv832
  %136 = load i32* %arrayidx575, align 4, !tbaa !11
  %cmp576 = icmp slt i32 %136, %j_hgroup.2
  br i1 %cmp576, label %for.body577, label %for.cond585.loopexit

for.body577:                                      ; preds = %land.lhs.true573
  %incdec.ptr580 = getelementptr inbounds i32* %plix.1696, i64 1
  store i32 %136, i32* %plix.1696, align 4, !tbaa !11
  %dec581 = add nsw i32 %exclChecksum.9697, -1
  %indvars.iv.next833 = add nuw nsw i64 %indvars.iv832, 1
  %inc583 = add nsw i32 %k561.0695, 1
  %137 = trunc i64 %indvars.iv.next833 to i32
  %cmp572 = icmp slt i32 %137, %conv552
  br i1 %cmp572, label %land.lhs.true573, label %for.cond585.loopexit

for.cond585.loopexit:                             ; preds = %for.body577, %land.lhs.true573, %for.cond571.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond571.loopexit ], [ %dec581, %for.body577 ], [ %exclChecksum.9697, %land.lhs.true573 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond571.loopexit ], [ %incdec.ptr580, %for.body577 ], [ %plix.1696, %land.lhs.true573 ]
  %k561.0.lcssa = phi i32 [ 0, %for.cond571.loopexit ], [ %inc583, %for.body577 ], [ %k561.0695, %land.lhs.true573 ]
  %cmp586701 = icmp slt i32 %k561.0.lcssa, %conv552
  br i1 %cmp586701, label %for.body587.lr.ph, label %for.end607

for.body587.lr.ph:                                ; preds = %for.cond585.loopexit
  %138 = sext i32 %k561.0.lcssa to i64
  %139 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %140 = lshr i64 %139, 2
  %141 = trunc i64 %140 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.inc605, %for.body587.lr.ph
  %indvars.iv834 = phi i64 [ %138, %for.body587.lr.ph ], [ %indvars.iv.next835, %for.inc605 ]
  %plin.5705 = phi i32* [ %plin.4, %for.body587.lr.ph ], [ %plin.6, %for.inc605 ]
  %plix.2704 = phi i32* [ %plix.1.lcssa, %for.body587.lr.ph ], [ %plix.3, %for.inc605 ]
  %plim.0703 = phi i32* [ %cond158, %for.body587.lr.ph ], [ %plim.1, %for.inc605 ]
  %arrayidx590 = getelementptr inbounds i32* %cond125614616626, i64 %indvars.iv834
  %142 = load i32* %arrayidx590, align 4, !tbaa !11
  %idxprom592 = sext i32 %142 to i64
  %id594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom592, i32 2
  %143 = bitcast [4 x i8]* %id594 to i32*
  %bf.load595 = load i32* %143, align 4
  %bf.clear596 = and i32 %bf.load595, 4194303
  %idxprom597579 = zext i32 %bf.clear596 to i64
  %add.ptr.sum = sub i64 %idxprom597579, %idx.ext
  %arrayidx598 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %144 = load i8* %arrayidx598, align 1, !tbaa !68
  %conv599 = sext i8 %144 to i32
  switch i32 %conv599, label %for.inc605 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb601
    i32 2, label %sw.bb603
  ]

sw.bb:                                            ; preds = %for.body587
  %incdec.ptr600 = getelementptr inbounds i32* %plin.5705, i64 1
  store i32 %142, i32* %plin.5705, align 4, !tbaa !11
  br label %for.inc605

sw.bb601:                                         ; preds = %for.body587
  %incdec.ptr602 = getelementptr inbounds i32* %plix.2704, i64 1
  store i32 %142, i32* %plix.2704, align 4, !tbaa !11
  br label %for.inc605

sw.bb603:                                         ; preds = %for.body587
  %incdec.ptr604 = getelementptr inbounds i32* %plim.0703, i64 1
  store i32 %142, i32* %plim.0703, align 4, !tbaa !11
  br label %for.inc605

for.inc605:                                       ; preds = %sw.bb603, %sw.bb601, %sw.bb, %for.body587
  %plim.1 = phi i32* [ %plim.0703, %for.body587 ], [ %incdec.ptr604, %sw.bb603 ], [ %plim.0703, %sw.bb601 ], [ %plim.0703, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2704, %for.body587 ], [ %plix.2704, %sw.bb603 ], [ %incdec.ptr602, %sw.bb601 ], [ %plix.2704, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5705, %for.body587 ], [ %plin.5705, %sw.bb603 ], [ %plin.5705, %sw.bb601 ], [ %incdec.ptr600, %sw.bb ]
  %indvars.iv.next835 = add nsw i64 %indvars.iv834, 1
  %lftr.wideiv836 = trunc i64 %indvars.iv.next835 to i32
  %exitcond837 = icmp eq i32 %lftr.wideiv836, %141
  br i1 %exitcond837, label %for.end607, label %for.body587

for.end607:                                       ; preds = %for.inc605, %for.cond585.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond585.loopexit ], [ %plin.6, %for.inc605 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond585.loopexit ], [ %plix.3, %for.inc605 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond585.loopexit ], [ %plim.1, %for.inc605 ]
  %sub.ptr.lhs.cast608 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub610 = sub i64 %sub.ptr.lhs.cast608, %sub.ptr.rhs.cast609
  %sub.ptr.div611542 = lshr exact i64 %sub.ptr.sub610, 2
  %conv612541 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast615 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub617 = sub i64 %sub.ptr.lhs.cast615, %sub.ptr.rhs.cast616
  %sub.ptr.div618 = ashr exact i64 %sub.ptr.sub617, 2
  %add613 = add i64 %sub.ptr.div618, %conv612541
  %add620 = add i64 %add613, %sub.ptr.div611542
  %conv621 = trunc i64 %add620 to i32
  %sub.ptr.lhs.cast622 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast623 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub624 = sub i64 %sub.ptr.lhs.cast622, %sub.ptr.rhs.cast623
  %sub.ptr.div625544 = lshr exact i64 %sub.ptr.sub624, 2
  %conv626 = trunc i64 %sub.ptr.div625544 to i32
  %cmp628709 = icmp sgt i32 %conv626, 0
  br i1 %cmp628709, label %for.body629.lr.ph, label %for.end786

for.body629.lr.ph:                                ; preds = %for.end607
  %x764 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y773 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z780 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body629

for.body629:                                      ; preds = %for.body629.for.body629_crit_edge, %for.body629.lr.ph
  %145 = phi i32* [ %114, %for.body629.lr.ph ], [ %.pre, %for.body629.for.body629_crit_edge ]
  %indvars.iv838 = phi i64 [ 0, %for.body629.lr.ph ], [ %indvars.iv.next839, %for.body629.for.body629_crit_edge ]
  %146 = phi <2 x double> [ %59, %for.body629.lr.ph ], [ %201, %for.body629.for.body629_crit_edge ]
  %147 = phi <2 x double> [ %60, %for.body629.lr.ph ], [ %207, %for.body629.for.body629_crit_edge ]
  %148 = phi <2 x double> [ %61, %for.body629.lr.ph ], [ %226, %for.body629.for.body629_crit_edge ]
  %149 = phi <2 x double> [ %62, %for.body629.lr.ph ], [ %193, %for.body629.for.body629_crit_edge ]
  %150 = phi <2 x double> [ %63, %for.body629.lr.ph ], [ %214, %for.body629.for.body629_crit_edge ]
  %arrayidx632 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv838
  %151 = load i32* %arrayidx632, align 4, !tbaa !11
  %idx.ext633 = sext i32 %151 to i64
  %x636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 0
  %152 = load double* %x636, align 8, !tbaa !59
  %sub637 = fsub double %69, %152
  %mul639 = fmul double %sub637, %sub637
  %y641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 1
  %153 = load double* %y641, align 8, !tbaa !61
  %sub642 = fsub double %70, %153
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %mul639, %mul643
  %z646 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 2
  %154 = load double* %z646, align 8, !tbaa !62
  %sub647 = fsub double %71, %154
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %add644, %mul648
  %conv650 = fptrunc double %add649 to float
  %155 = bitcast float %conv650 to i32
  %shr = ashr i32 %155, 17
  %add652 = add nsw i32 %shr, %mul
  %id653 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 2
  %156 = bitcast [4 x i8]* %id653 to i32*
  %bf.load654 = load i32* %156, align 4
  %bf.clear655 = and i32 %bf.load654, 4194303
  %idxprom.i594634 = zext i32 %bf.clear655 to i64
  %arrayidx.i596 = getelementptr inbounds i32* %145, i64 %idxprom.i594634
  %157 = load i32* %arrayidx.i596, align 4, !tbaa !11
  %conv.i597 = zext i32 %157 to i64
  %conv657 = shl nuw nsw i64 %conv.i597, 1
  %mul658 = and i64 %conv657, 131070
  %mul661 = shl nsw i32 %add652, 4
  %idx.ext662 = sext i32 %mul661 to i64
  %add.ptr663 = getelementptr inbounds double* %7, i64 %idx.ext662
  %158 = load double* %add.ptr663, align 8, !tbaa !17
  %add.ptr663.sum563 = or i64 %idx.ext662, 4
  %add.ptr668 = getelementptr inbounds double* %7, i64 %add.ptr663.sum563
  %159 = load double* %add.ptr668, align 8, !tbaa !17
  %add.ptr663.sum564 = or i64 %idx.ext662, 8
  %add.ptr673 = getelementptr inbounds double* %7, i64 %add.ptr663.sum564
  %160 = load double* %add.ptr673, align 8, !tbaa !17
  %and = and i32 %155, -131072
  %charge676 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 1
  %161 = load float* %charge676, align 4, !tbaa !63
  %conv677 = fpext float %161 to double
  %mul678 = fmul double %mul397, %conv677
  %162 = bitcast i32 %and to float
  %conv680 = fpext float %162 to double
  %sub681 = fsub double %add649, %conv680
  %bf.lshr684 = lshr i32 %bf.load654, 28
  %mul685 = shl nuw nsw i32 %bf.lshr684, 1
  %idxprom686565 = zext i32 %mul685 to i64
  %add.ptr393.sum566 = add i64 %idxprom686565, %idx.ext392539
  %arrayidx687 = getelementptr inbounds double* %112, i64 %add.ptr393.sum566
  %163 = load double* %arrayidx687, align 8, !tbaa !17
  %add689567 = or i32 %mul685, 1
  %idxprom690568 = zext i32 %add689567 to i64
  %add.ptr393.sum569 = add i64 %idxprom690568, %idx.ext392539
  %arrayidx691 = getelementptr inbounds double* %112, i64 %add.ptr393.sum569
  %164 = load double* %arrayidx691, align 8, !tbaa !17
  %add.ptr.i.sum635 = add i64 %mul658, %idx.ext.i
  %A693 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum635, i32 0
  %165 = load double* %A693, align 8, !tbaa !69
  %mul694 = fmul double %8, %165
  %B696 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum635, i32 1
  %166 = load double* %B696, align 8, !tbaa !71
  %mul697 = fmul double %8, %166
  %mul698 = fmul double %158, %mul694
  %mul699 = fmul double %159, %mul697
  %sub700 = fsub double %mul698, %mul699
  %add.ptr663.sum570 = or i64 %idx.ext662, 3
  %arrayidx701 = getelementptr inbounds double* %7, i64 %add.ptr663.sum570
  %167 = load double* %arrayidx701, align 8, !tbaa !17
  %mul702 = fmul double %mul694, %167
  %add.ptr668.sum571 = or i64 %idx.ext662, 7
  %arrayidx703 = getelementptr inbounds double* %7, i64 %add.ptr668.sum571
  %168 = load double* %arrayidx703, align 8, !tbaa !17
  %mul704 = fmul double %mul697, %168
  %sub705 = fsub double %mul702, %mul704
  %add.ptr663.sum572 = or i64 %idx.ext662, 2
  %arrayidx706 = getelementptr inbounds double* %7, i64 %add.ptr663.sum572
  %169 = load double* %arrayidx706, align 8, !tbaa !17
  %mul707 = fmul double %mul694, %169
  %add.ptr668.sum573 = or i64 %idx.ext662, 6
  %arrayidx708 = getelementptr inbounds double* %7, i64 %add.ptr668.sum573
  %170 = load double* %arrayidx708, align 8, !tbaa !17
  %mul709 = fmul double %mul697, %170
  %sub710 = fsub double %mul707, %mul709
  %add.ptr663.sum574 = or i64 %idx.ext662, 1
  %arrayidx711 = getelementptr inbounds double* %7, i64 %add.ptr663.sum574
  %171 = load double* %arrayidx711, align 8, !tbaa !17
  %mul712 = fmul double %mul694, %171
  %add.ptr668.sum575 = or i64 %idx.ext662, 5
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr668.sum575
  %172 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul697, %172
  %sub715 = fsub double %mul712, %mul714
  %mul716 = fmul double %sub681, %sub705
  %add717 = fadd double %mul716, %sub710
  %mul726 = fmul double %160, %mul678
  %add.ptr673.sum576 = or i64 %idx.ext662, 11
  %arrayidx727 = getelementptr inbounds double* %7, i64 %add.ptr673.sum576
  %173 = load double* %arrayidx727, align 8, !tbaa !17
  %mul728 = fmul double %mul678, %173
  %add.ptr673.sum577 = or i64 %idx.ext662, 10
  %arrayidx729 = getelementptr inbounds double* %7, i64 %add.ptr673.sum577
  %174 = load double* %arrayidx729, align 8, !tbaa !17
  %mul730 = fmul double %mul678, %174
  %add.ptr673.sum578 = or i64 %idx.ext662, 9
  %arrayidx731 = getelementptr inbounds double* %7, i64 %add.ptr673.sum578
  %175 = load double* %arrayidx731, align 8, !tbaa !17
  %176 = insertelement <2 x double> undef, double %mul678, i32 0
  %177 = insertelement <2 x double> %176, double %add717, i32 1
  %178 = insertelement <2 x double> undef, double %175, i32 0
  %179 = insertelement <2 x double> %178, double %sub681, i32 1
  %180 = fmul <2 x double> %177, %179
  %mul733 = fmul double %sub681, %mul728
  %add734 = fadd double %mul733, %mul730
  %mul735 = fmul double %sub681, %add734
  %181 = insertelement <2 x double> undef, double %mul735, i32 0
  %182 = insertelement <2 x double> %181, double %sub715, i32 1
  %183 = fadd <2 x double> %180, %182
  %184 = insertelement <2 x double> undef, double %sub681, i32 0
  %185 = insertelement <2 x double> %184, double %sub681, i32 1
  %186 = fmul <2 x double> %183, %185
  %187 = insertelement <2 x double> undef, double %mul726, i32 0
  %188 = insertelement <2 x double> %187, double %sub700, i32 1
  %189 = fadd <2 x double> %188, %186
  %190 = insertelement <2 x double> undef, double %163, i32 0
  %191 = insertelement <2 x double> %190, double %164, i32 1
  %192 = fmul <2 x double> %191, %189
  %193 = fadd <2 x double> %149, %192
  %194 = extractelement <2 x double> %189, i32 0
  %add743 = fadd double %sub705, %mul728
  %add744 = fadd double %sub710, %mul730
  %195 = extractelement <2 x double> %180, i32 0
  %add745 = fadd double %sub715, %195
  %mul747 = fmul double %sub681, 3.000000e+00
  %mul748 = fmul double %mul747, %add743
  %mul749 = fmul double %add744, 2.000000e+00
  %add750 = fadd double %mul748, %mul749
  %mul751 = fmul double %sub681, %add750
  %add752 = fadd double %add745, %mul751
  %mul753 = fmul double %163, -2.000000e+00
  %mul754 = fmul double %mul753, %add752
  %mul757 = fmul double %sub637, %mul754
  %196 = extractelement <2 x double> %189, i32 1
  %197 = insertelement <2 x double> undef, double %196, i32 0
  %198 = insertelement <2 x double> %197, double %sub637, i32 1
  %199 = insertelement <2 x double> %190, double %mul757, i32 1
  %200 = fmul <2 x double> %198, %199
  %201 = fadd <2 x double> %146, %200
  %202 = insertelement <2 x double> undef, double %sub642, i32 0
  %203 = insertelement <2 x double> %202, double %sub647, i32 1
  %204 = insertelement <2 x double> undef, double %mul757, i32 0
  %205 = insertelement <2 x double> %204, double %mul757, i32 1
  %206 = fmul <2 x double> %203, %205
  %207 = fadd <2 x double> %147, %206
  %208 = load double* %x764, align 8, !tbaa !72
  %add765 = fadd double %208, %mul757
  store double %add765, double* %x764, align 8, !tbaa !72
  %x766 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 0
  %mul768 = fmul double %sub642, %mul754
  %209 = insertelement <2 x double> undef, double %164, i32 0
  %210 = insertelement <2 x double> %209, double %sub642, i32 1
  %211 = insertelement <2 x double> undef, double %194, i32 0
  %212 = insertelement <2 x double> %211, double %mul768, i32 1
  %213 = fmul <2 x double> %210, %212
  %214 = fadd <2 x double> %150, %213
  %215 = load double* %y773, align 8, !tbaa !73
  %add774 = fadd double %215, %mul768
  store double %add774, double* %y773, align 8, !tbaa !73
  %216 = bitcast double* %x766 to <2 x double>*
  %217 = load <2 x double>* %216, align 8, !tbaa !17
  %218 = insertelement <2 x double> %204, double %mul768, i32 1
  %219 = fsub <2 x double> %217, %218
  %220 = bitcast double* %x766 to <2 x double>*
  store <2 x double> %219, <2 x double>* %220, align 8, !tbaa !17
  %mul777 = fmul double %sub647, %mul754
  %221 = insertelement <2 x double> undef, double %sub647, i32 0
  %222 = insertelement <2 x double> %221, double %sub647, i32 1
  %223 = insertelement <2 x double> undef, double %mul768, i32 0
  %224 = insertelement <2 x double> %223, double %mul777, i32 1
  %225 = fmul <2 x double> %222, %224
  %226 = fadd <2 x double> %148, %225
  %227 = load double* %z780, align 8, !tbaa !74
  %add781 = fadd double %227, %mul777
  store double %add781, double* %z780, align 8, !tbaa !74
  %z782 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 2
  %228 = load double* %z782, align 8, !tbaa !74
  %sub783 = fsub double %228, %mul777
  store double %sub783, double* %z782, align 8, !tbaa !74
  %indvars.iv.next839 = add nuw nsw i64 %indvars.iv838, 1
  %lftr.wideiv840 = trunc i64 %indvars.iv.next839 to i32
  %exitcond841 = icmp eq i32 %lftr.wideiv840, %conv626
  br i1 %exitcond841, label %for.end786, label %for.body629.for.body629_crit_edge

for.body629.for.body629_crit_edge:                ; preds = %for.body629
  %.pre = load i32** %atomVdwType.i599, align 8, !tbaa !64
  br label %for.body629

for.end786:                                       ; preds = %for.body629, %for.end607
  %229 = phi <2 x double> [ %59, %for.end607 ], [ %201, %for.body629 ]
  %230 = phi <2 x double> [ %60, %for.end607 ], [ %207, %for.body629 ]
  %231 = phi <2 x double> [ %61, %for.end607 ], [ %226, %for.body629 ]
  %232 = phi <2 x double> [ %62, %for.end607 ], [ %193, %for.body629 ]
  %233 = phi <2 x double> [ %63, %for.end607 ], [ %214, %for.body629 ]
  %conv791 = trunc i64 %sub.ptr.div618 to i32
  %cmp793731 = icmp sgt i32 %conv791, 0
  br i1 %cmp793731, label %for.body794.lr.ph, label %for.inc991

for.body794.lr.ph:                                ; preds = %for.end786
  %x966 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y976 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z984 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body794

for.body794:                                      ; preds = %for.body794, %for.body794.lr.ph
  %indvars.iv842 = phi i64 [ 0, %for.body794.lr.ph ], [ %indvars.iv.next843, %for.body794 ]
  %234 = phi <2 x double> [ %229, %for.body794.lr.ph ], [ %290, %for.body794 ]
  %235 = phi <2 x double> [ %230, %for.body794.lr.ph ], [ %296, %for.body794 ]
  %236 = phi <2 x double> [ %231, %for.body794.lr.ph ], [ %315, %for.body794 ]
  %237 = phi <2 x double> [ %232, %for.body794.lr.ph ], [ %282, %for.body794 ]
  %238 = phi <2 x double> [ %233, %for.body794.lr.ph ], [ %303, %for.body794 ]
  %arrayidx797 = getelementptr inbounds i32* %cond158, i64 %indvars.iv842
  %239 = load i32* %arrayidx797, align 4, !tbaa !11
  %idx.ext799 = sext i32 %239 to i64
  %x803 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 0
  %240 = load double* %x803, align 8, !tbaa !59
  %sub804 = fsub double %69, %240
  %mul806 = fmul double %sub804, %sub804
  %y809 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 1
  %241 = load double* %y809, align 8, !tbaa !61
  %sub810 = fsub double %70, %241
  %mul811 = fmul double %sub810, %sub810
  %add812 = fadd double %mul806, %mul811
  %z815 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 2
  %242 = load double* %z815, align 8, !tbaa !62
  %sub816 = fsub double %71, %242
  %mul817 = fmul double %sub816, %sub816
  %add818 = fadd double %add812, %mul817
  %conv820 = fptrunc double %add818 to float
  %243 = bitcast float %conv820 to i32
  %shr824 = ashr i32 %243, 17
  %add825 = add nsw i32 %shr824, %mul
  %id827 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 2
  %244 = bitcast [4 x i8]* %id827 to i32*
  %bf.load828 = load i32* %244, align 4
  %bf.clear829 = and i32 %bf.load828, 4194303
  %idxprom.i592632 = zext i32 %bf.clear829 to i64
  %245 = load i32** %atomVdwType.i599, align 8, !tbaa !64
  %arrayidx.i593 = getelementptr inbounds i32* %245, i64 %idxprom.i592632
  %246 = load i32* %arrayidx.i593, align 4, !tbaa !11
  %conv.i = zext i32 %246 to i64
  %conv831 = shl nuw nsw i64 %conv.i, 1
  %mul832 = and i64 %conv831, 131070
  %add.ptr834.sum546 = or i64 %mul832, 1
  %mul837 = shl nsw i32 %add825, 4
  %idx.ext838 = sext i32 %mul837 to i64
  %add.ptr839 = getelementptr inbounds double* %7, i64 %idx.ext838
  %247 = load double* %add.ptr839, align 8, !tbaa !17
  %add.ptr839.sum547 = or i64 %idx.ext838, 4
  %add.ptr846 = getelementptr inbounds double* %7, i64 %add.ptr839.sum547
  %248 = load double* %add.ptr846, align 8, !tbaa !17
  %add.ptr839.sum548 = or i64 %idx.ext838, 8
  %add.ptr853 = getelementptr inbounds double* %7, i64 %add.ptr839.sum548
  %249 = load double* %add.ptr853, align 8, !tbaa !17
  %and857 = and i32 %243, -131072
  %charge859 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 1
  %250 = load float* %charge859, align 4, !tbaa !63
  %conv860 = fpext float %250 to double
  %mul861 = fmul double %mul397, %conv860
  %251 = bitcast i32 %and857 to float
  %conv864 = fpext float %251 to double
  %sub865 = fsub double %add818, %conv864
  %bf.lshr869 = lshr i32 %bf.load828, 28
  %mul871 = shl nuw nsw i32 %bf.lshr869, 1
  %idxprom872549 = zext i32 %mul871 to i64
  %add.ptr393.sum = add i64 %idxprom872549, %idx.ext392539
  %arrayidx873 = getelementptr inbounds double* %112, i64 %add.ptr393.sum
  %252 = load double* %arrayidx873, align 8, !tbaa !17
  %add876550 = or i32 %mul871, 1
  %idxprom877551 = zext i32 %add876550 to i64
  %add.ptr393.sum552 = add i64 %idxprom877551, %idx.ext392539
  %arrayidx878 = getelementptr inbounds double* %112, i64 %add.ptr393.sum552
  %253 = load double* %arrayidx878, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr834.sum546, %idx.ext.i
  %A880 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 0
  %254 = load double* %A880, align 8, !tbaa !69
  %mul881 = fmul double %8, %254
  %B883 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 1
  %255 = load double* %B883, align 8, !tbaa !71
  %mul884 = fmul double %8, %255
  %mul886 = fmul double %247, %mul881
  %mul887 = fmul double %248, %mul884
  %sub888 = fsub double %mul886, %mul887
  %add.ptr839.sum553 = or i64 %idx.ext838, 3
  %arrayidx890 = getelementptr inbounds double* %7, i64 %add.ptr839.sum553
  %256 = load double* %arrayidx890, align 8, !tbaa !17
  %mul891 = fmul double %mul881, %256
  %add.ptr846.sum554 = or i64 %idx.ext838, 7
  %arrayidx892 = getelementptr inbounds double* %7, i64 %add.ptr846.sum554
  %257 = load double* %arrayidx892, align 8, !tbaa !17
  %mul893 = fmul double %mul884, %257
  %sub894 = fsub double %mul891, %mul893
  %add.ptr839.sum555 = or i64 %idx.ext838, 2
  %arrayidx896 = getelementptr inbounds double* %7, i64 %add.ptr839.sum555
  %258 = load double* %arrayidx896, align 8, !tbaa !17
  %mul897 = fmul double %mul881, %258
  %add.ptr846.sum556 = or i64 %idx.ext838, 6
  %arrayidx898 = getelementptr inbounds double* %7, i64 %add.ptr846.sum556
  %259 = load double* %arrayidx898, align 8, !tbaa !17
  %mul899 = fmul double %mul884, %259
  %sub900 = fsub double %mul897, %mul899
  %add.ptr839.sum557 = or i64 %idx.ext838, 1
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr839.sum557
  %260 = load double* %arrayidx902, align 8, !tbaa !17
  %mul903 = fmul double %mul881, %260
  %add.ptr846.sum558 = or i64 %idx.ext838, 5
  %arrayidx904 = getelementptr inbounds double* %7, i64 %add.ptr846.sum558
  %261 = load double* %arrayidx904, align 8, !tbaa !17
  %mul905 = fmul double %mul884, %261
  %sub906 = fsub double %mul903, %mul905
  %mul908 = fmul double %sub865, %sub894
  %add909 = fadd double %mul908, %sub900
  %mul919 = fmul double %sub918, %mul861
  %mul920 = fmul double %249, %mul919
  %add.ptr853.sum559 = or i64 %idx.ext838, 11
  %arrayidx922 = getelementptr inbounds double* %7, i64 %add.ptr853.sum559
  %262 = load double* %arrayidx922, align 8, !tbaa !17
  %mul923 = fmul double %mul919, %262
  %add.ptr853.sum560 = or i64 %idx.ext838, 10
  %arrayidx925 = getelementptr inbounds double* %7, i64 %add.ptr853.sum560
  %263 = load double* %arrayidx925, align 8, !tbaa !17
  %mul926 = fmul double %mul919, %263
  %add.ptr853.sum561 = or i64 %idx.ext838, 9
  %arrayidx928 = getelementptr inbounds double* %7, i64 %add.ptr853.sum561
  %264 = load double* %arrayidx928, align 8, !tbaa !17
  %265 = insertelement <2 x double> undef, double %mul919, i32 0
  %266 = insertelement <2 x double> %265, double %add909, i32 1
  %267 = insertelement <2 x double> undef, double %264, i32 0
  %268 = insertelement <2 x double> %267, double %sub865, i32 1
  %269 = fmul <2 x double> %266, %268
  %mul931 = fmul double %sub865, %mul923
  %add932 = fadd double %mul931, %mul926
  %mul933 = fmul double %sub865, %add932
  %270 = insertelement <2 x double> undef, double %mul933, i32 0
  %271 = insertelement <2 x double> %270, double %sub906, i32 1
  %272 = fadd <2 x double> %269, %271
  %273 = insertelement <2 x double> undef, double %sub865, i32 0
  %274 = insertelement <2 x double> %273, double %sub865, i32 1
  %275 = fmul <2 x double> %272, %274
  %276 = insertelement <2 x double> undef, double %mul920, i32 0
  %277 = insertelement <2 x double> %276, double %sub888, i32 1
  %278 = fadd <2 x double> %277, %275
  %279 = insertelement <2 x double> undef, double %252, i32 0
  %280 = insertelement <2 x double> %279, double %253, i32 1
  %281 = fmul <2 x double> %280, %278
  %282 = fadd <2 x double> %237, %281
  %283 = extractelement <2 x double> %278, i32 0
  %add941 = fadd double %sub894, %mul923
  %add942 = fadd double %sub900, %mul926
  %284 = extractelement <2 x double> %269, i32 0
  %add943 = fadd double %sub906, %284
  %mul946 = fmul double %sub865, 3.000000e+00
  %mul947 = fmul double %mul946, %add941
  %mul948 = fmul double %add942, 2.000000e+00
  %add949 = fadd double %mul947, %mul948
  %mul950 = fmul double %sub865, %add949
  %add951 = fadd double %add943, %mul950
  %mul953 = fmul double %252, -2.000000e+00
  %mul954 = fmul double %mul953, %add951
  %mul959 = fmul double %sub804, %mul954
  %285 = extractelement <2 x double> %278, i32 1
  %286 = insertelement <2 x double> undef, double %285, i32 0
  %287 = insertelement <2 x double> %286, double %sub804, i32 1
  %288 = insertelement <2 x double> %279, double %mul959, i32 1
  %289 = fmul <2 x double> %287, %288
  %290 = fadd <2 x double> %234, %289
  %291 = insertelement <2 x double> undef, double %sub810, i32 0
  %292 = insertelement <2 x double> %291, double %sub816, i32 1
  %293 = insertelement <2 x double> undef, double %mul959, i32 0
  %294 = insertelement <2 x double> %293, double %mul959, i32 1
  %295 = fmul <2 x double> %292, %294
  %296 = fadd <2 x double> %235, %295
  %297 = load double* %x966, align 8, !tbaa !72
  %add967 = fadd double %297, %mul959
  store double %add967, double* %x966, align 8, !tbaa !72
  %x968 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext799, i32 0
  %mul971 = fmul double %sub810, %mul954
  %298 = insertelement <2 x double> undef, double %253, i32 0
  %299 = insertelement <2 x double> %298, double %sub810, i32 1
  %300 = insertelement <2 x double> undef, double %283, i32 0
  %301 = insertelement <2 x double> %300, double %mul971, i32 1
  %302 = fmul <2 x double> %299, %301
  %303 = fadd <2 x double> %238, %302
  %304 = load double* %y976, align 8, !tbaa !73
  %add977 = fadd double %304, %mul971
  store double %add977, double* %y976, align 8, !tbaa !73
  %305 = bitcast double* %x968 to <2 x double>*
  %306 = load <2 x double>* %305, align 8, !tbaa !17
  %307 = insertelement <2 x double> %293, double %mul971, i32 1
  %308 = fsub <2 x double> %306, %307
  %309 = bitcast double* %x968 to <2 x double>*
  store <2 x double> %308, <2 x double>* %309, align 8, !tbaa !17
  %mul981 = fmul double %sub816, %mul954
  %310 = insertelement <2 x double> undef, double %sub816, i32 0
  %311 = insertelement <2 x double> %310, double %sub816, i32 1
  %312 = insertelement <2 x double> undef, double %mul971, i32 0
  %313 = insertelement <2 x double> %312, double %mul981, i32 1
  %314 = fmul <2 x double> %311, %313
  %315 = fadd <2 x double> %236, %314
  %316 = load double* %z984, align 8, !tbaa !74
  %add985 = fadd double %316, %mul981
  store double %add985, double* %z984, align 8, !tbaa !74
  %z986 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext799, i32 2
  %317 = load double* %z986, align 8, !tbaa !74
  %sub987 = fsub double %317, %mul981
  store double %sub987, double* %z986, align 8, !tbaa !74
  %indvars.iv.next843 = add nuw nsw i64 %indvars.iv842, 1
  %lftr.wideiv844 = trunc i64 %indvars.iv.next843 to i32
  %exitcond845 = icmp eq i32 %lftr.wideiv844, %conv791
  br i1 %exitcond845, label %for.inc991, label %for.body794

for.inc991:                                       ; preds = %for.body794, %for.end786, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end786 ], [ %pairCount.2, %for.body794 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0757, %if.then215 ], [ %pairlistoffset.1, %for.end786 ], [ %pairlistoffset.1, %for.body794 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0758, %if.then215 ], [ %pairlistindex.2, %for.end786 ], [ %pairlistindex.2, %for.body794 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0759, %if.then215 ], [ %fixg_lower.3, %for.end786 ], [ %fixg_lower.3, %for.body794 ]
  %g_lower.4 = phi i32 [ %g_lower.0760, %if.then215 ], [ %g_lower.3, %for.end786 ], [ %g_lower.3, %for.body794 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0761, %if.then215 ], [ %j_hgroup.2, %for.end786 ], [ %j_hgroup.2, %for.body794 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0762, %for.end786 ], [ %i.0762, %for.body794 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0773, %if.then215 ], [ %conv621, %for.end786 ], [ %conv621, %for.body794 ]
  %318 = phi <2 x double> [ %59, %if.then215 ], [ %229, %for.end786 ], [ %290, %for.body794 ]
  %319 = phi <2 x double> [ %60, %if.then215 ], [ %230, %for.end786 ], [ %296, %for.body794 ]
  %320 = phi <2 x double> [ %61, %if.then215 ], [ %231, %for.end786 ], [ %315, %for.body794 ]
  %321 = phi <2 x double> [ %62, %if.then215 ], [ %232, %for.end786 ], [ %282, %for.body794 ]
  %322 = phi <2 x double> [ %63, %if.then215 ], [ %233, %for.end786 ], [ %303, %for.body794 ]
  %inc992 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc992
  br i1 %cmp171, label %for.body172, label %for.end993

for.end993:                                       ; preds = %for.inc991, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc991 ]
  %323 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %318, %for.inc991 ]
  %324 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %319, %for.inc991 ]
  %325 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %320, %for.inc991 ]
  %326 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %321, %for.inc991 ]
  %327 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %322, %for.inc991 ]
  %328 = extractelement <2 x double> %326, i32 1
  %329 = extractelement <2 x double> %326, i32 0
  %arraydecay994 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp995 = icmp eq i32* %cond602604859865, %arraydecay994
  br i1 %cmp995, label %if.end1000, label %delete.notnull998

delete.notnull998:                                ; preds = %for.end993
  %330 = bitcast i32* %cond602604859865 to i8*
  call void @_ZdaPv(i8* %330) #7
  br label %if.end1000

if.end1000:                                       ; preds = %delete.notnull998, %for.end993
  %arraydecay1001 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1002 = icmp eq i32* %cond19606857866, %arraydecay1001
  br i1 %cmp1002, label %if.end1007, label %delete.notnull1005

delete.notnull1005:                               ; preds = %if.end1000
  %331 = bitcast i32* %cond19606857866 to i8*
  call void @_ZdaPv(i8* %331) #7
  br label %if.end1007

if.end1007:                                       ; preds = %delete.notnull1005, %if.end1000
  %arraydecay1008 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1009 = icmp eq i32* %cond30861864, %arraydecay1008
  br i1 %cmp1009, label %if.end1014, label %delete.notnull1012

delete.notnull1012:                               ; preds = %if.end1007
  %332 = bitcast i32* %cond30861864 to i8*
  call void @_ZdaPv(i8* %332) #7
  br label %if.end1014

if.end1014:                                       ; preds = %delete.notnull1012, %if.end1007
  %arraydecay1015 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1016 = icmp eq i32* %cond114610612618624, %arraydecay1015
  br i1 %cmp1016, label %if.end1021, label %delete.notnull1019

delete.notnull1019:                               ; preds = %if.end1014
  %333 = bitcast i32* %cond114610612618624 to i8*
  call void @_ZdaPv(i8* %333) #7
  br label %if.end1021

if.end1021:                                       ; preds = %delete.notnull1019, %if.end1014
  %arraydecay1022 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1023 = icmp eq i32* %cond125614616626, %arraydecay1022
  br i1 %cmp1023, label %if.end1028, label %delete.notnull1026

delete.notnull1026:                               ; preds = %if.end1021
  %334 = bitcast i32* %cond125614616626 to i8*
  call void @_ZdaPv(i8* %334) #7
  br label %if.end1028

if.end1028:                                       ; preds = %delete.notnull1026, %if.end1021
  %arraydecay1029 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1030 = icmp eq i32* %cond136620622, %arraydecay1029
  br i1 %cmp1030, label %if.end1035, label %delete.notnull1033

delete.notnull1033:                               ; preds = %if.end1028
  %335 = bitcast i32* %cond136620622 to i8*
  call void @_ZdaPv(i8* %335) #7
  br label %if.end1035

if.end1035:                                       ; preds = %delete.notnull1033, %if.end1028
  %arraydecay1036 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1037 = icmp eq i32* %cond147628, %arraydecay1036
  br i1 %cmp1037, label %if.end1042, label %delete.notnull1040

delete.notnull1040:                               ; preds = %if.end1035
  %336 = bitcast i32* %cond147628 to i8*
  call void @_ZdaPv(i8* %336) #7
  br label %if.end1042

if.end1042:                                       ; preds = %delete.notnull1040, %if.end1035
  %arraydecay1043 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1044 = icmp eq i32* %cond158, %arraydecay1043
  br i1 %cmp1044, label %if.end1049, label %delete.notnull1047

delete.notnull1047:                               ; preds = %if.end1042
  %337 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %337) #7
  br label %if.end1049

if.end1049:                                       ; preds = %delete.notnull1047, %if.end1042
  %conv1050 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1051 = getelementptr inbounds double* %1, i64 22
  %arrayidx1053 = getelementptr inbounds double* %1, i64 2
  %338 = load double* %1, align 8, !tbaa !17
  %add1056 = fadd double %329, %338
  store double %add1056, double* %1, align 8, !tbaa !17
  %arrayidx1057 = getelementptr inbounds double* %1, i64 25
  %339 = load double* %arrayidx1057, align 8, !tbaa !17
  %add1058 = fadd double %328, %339
  store double %add1058, double* %arrayidx1057, align 8, !tbaa !17
  %340 = bitcast double* %arrayidx1051 to <2 x double>*
  %341 = load <2 x double>* %340, align 8, !tbaa !17
  %342 = insertelement <2 x double> undef, double %conv1050, i32 0
  %343 = shufflevector <2 x double> %342, <2 x double> %327, <2 x i32> <i32 0, i32 2>
  %344 = fadd <2 x double> %343, %341
  %345 = bitcast double* %arrayidx1051 to <2 x double>*
  store <2 x double> %344, <2 x double>* %345, align 8, !tbaa !17
  %346 = bitcast double* %arrayidx1053 to <2 x double>*
  %347 = load <2 x double>* %346, align 8, !tbaa !17
  %348 = fadd <2 x double> %323, %347
  %349 = bitcast double* %arrayidx1053 to <2 x double>*
  store <2 x double> %348, <2 x double>* %349, align 8, !tbaa !17
  %arrayidx1063 = getelementptr inbounds double* %1, i64 4
  %350 = bitcast double* %arrayidx1063 to <2 x double>*
  %351 = load <2 x double>* %350, align 8, !tbaa !17
  %352 = fadd <2 x double> %324, %351
  %353 = bitcast double* %arrayidx1063 to <2 x double>*
  store <2 x double> %352, <2 x double>* %353, align 8, !tbaa !17
  %arrayidx1067 = getelementptr inbounds double* %1, i64 6
  %354 = bitcast double* %arrayidx1067 to <2 x double>*
  %355 = load <2 x double>* %354, align 8, !tbaa !17
  %356 = shufflevector <2 x double> %324, <2 x double> %327, <2 x i32> <i32 0, i32 3>
  %357 = fadd <2 x double> %356, %355
  %358 = bitcast double* %arrayidx1067 to <2 x double>*
  store <2 x double> %357, <2 x double>* %358, align 8, !tbaa !17
  %arrayidx1071 = getelementptr inbounds double* %1, i64 8
  %359 = bitcast double* %arrayidx1071 to <2 x double>*
  %360 = load <2 x double>* %359, align 8, !tbaa !17
  %361 = shufflevector <2 x double> %325, <2 x double> %324, <2 x i32> <i32 0, i32 3>
  %362 = fadd <2 x double> %361, %360
  %363 = bitcast double* %arrayidx1071 to <2 x double>*
  store <2 x double> %362, <2 x double>* %363, align 8, !tbaa !17
  %arrayidx1075 = getelementptr inbounds double* %1, i64 10
  %364 = bitcast double* %arrayidx1075 to <2 x double>*
  %365 = load <2 x double>* %364, align 8, !tbaa !17
  %366 = fadd <2 x double> %325, %365
  %367 = bitcast double* %arrayidx1075 to <2 x double>*
  store <2 x double> %366, <2 x double>* %367, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1049, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil30calc_pair_energy_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311082 = icmp sgt i32 %14, 0
  br i1 %cmp311082, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301139 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond8318331137 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond198351135 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1128 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1129, %for.inc ]
  %g.01083 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1128, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01083, 1
  %idxprom41 = sext i32 %g.01083 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond8318331137, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1128 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01083, %for.body ]
  %indvars.iv.next1129 = add nuw nsw i64 %indvars.iv1128, 1
  %lftr.wideiv1130 = trunc i64 %indvars.iv.next1129 to i32
  %exitcond1131 = icmp eq i32 %lftr.wideiv1130, %14
  br i1 %exitcond1131, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond8318331137, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond8318331137, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1144 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1983511341143 = phi i32* [ %cond198351135, %for.end ], [ %cond198351135, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond83183311361142 = phi i32* [ %cond8318331137, %for.end ], [ %cond8318331137, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3011381141 = phi i32* [ %cond301139, %for.end ], [ %cond301139, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp561076 = icmp sgt i32 %g.0.lcssa1144, 0
  br i1 %cmp561076, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool751070 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp761071 = icmp sgt i32 %13, 0
  %or.cond8151072 = and i1 %tobool751070, %cmp761071
  br i1 %or.cond8151072, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1124 = phi i64 [ %indvars.iv.next1125, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.01078 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.01077 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond83183311361142, i64 %indvars.iv1124
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.01078, 1
  %idxprom68 = sext i32 %fixg.01078 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1983511341143, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.01077, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.01078, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1125 = add nuw nsw i64 %indvars.iv1124, 1
  %lftr.wideiv1126 = trunc i64 %indvars.iv.next1125 to i32
  %exitcond1127 = icmp eq i32 %lftr.wideiv1126, %g.0.lcssa1144
  br i1 %exitcond1127, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv1122 = phi i64 [ %indvars.iv.next1123, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.21073 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv1122, i32 2
  %36 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %36, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.21073
  %indvars.iv.next1123 = add nuw nsw i64 %indvars.iv1122, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %37 = trunc i64 %indvars.iv.next1123 to i32
  %cmp76 = icmp slt i32 %37, %13
  %or.cond815 = and i1 %tobool75, %cmp76
  br i1 %or.cond815, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool751070, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond83183311361142, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %38 = bitcast i32* %cond83183311361142 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond1983511341143, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %39 = bitcast i32* %cond1983511341143 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond3011381141, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %40 = bitcast i32* %cond3011381141 to i8*
  call void @_ZdaPv(i8* %40) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond1983511341143, i64 %idxprom114
  %41 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond1983511341143, i64 %idxprom116
  store i32 %41, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2838 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %42 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  %46 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %46) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %14, 5
  %47 = sext i32 %add123 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call124 = call noalias i8* @_Znam(i64 %51) #8
  %52 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %51) #8
  %53 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %51) #8
  %54 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %51) #8
  %55 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %51) #8
  %56 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162857 = phi i32* [ %arraydecay154, %cond.true164 ], [ %55, %cond.false166 ]
  %cond140843845855 = phi i32* [ %arraydecay132, %cond.true164 ], [ %53, %cond.false166 ]
  %cond129839841847853 = phi i32* [ %arraydecay121, %cond.true164 ], [ %52, %cond.false166 ]
  %cond151849851 = phi i32* [ %arraydecay143, %cond.true164 ], [ %54, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %56, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %57 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %58 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %59 = load %class.Vector** %arrayidx177, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %60 = load %class.Vector** %arrayidx179, align 8, !tbaa !1
  %mul180 = mul nsw i32 %14, %13
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %61 = load i32* %minPart, align 4, !tbaa !50
  %mul181 = mul nsw i32 %61, %mul180
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %62 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul181, %62
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %63 = load i32* %maxPart, align 4, !tbaa !52
  %mul182 = mul nsw i32 %63, %mul180
  %div184 = sdiv i32 %mul182, %62
  %cmp1861009 = icmp sgt i32 %13, 0
  br i1 %cmp1861009, label %for.body187.lr.ph, label %for.end1250

for.body187.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i828 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast530 = ptrtoint i32* %cond140843845855 to i64
  %sub.ptr.rhs.cast567 = ptrtoint i32* %cond162857 to i64
  %sub.ptr.rhs.cast574 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast581 = ptrtoint i32* %cond151849851 to i64
  %sub947 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3011381141 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i32* %cond129839841847853 to i64
  br label %for.body187

for.body187:                                      ; preds = %for.inc1248, %for.body187.lr.ph
  %exclChecksum.01049 = phi i32 [ 0, %for.body187.lr.ph ], [ %exclChecksum.8, %for.inc1248 ]
  %i.11012 = phi i32 [ 0, %for.body187.lr.ph ], [ %inc1249, %for.inc1248 ]
  %pairlistindex.01011 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairlistindex.2, %for.inc1248 ]
  %pairCount.01010 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairCount.3, %for.inc1248 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %416, %for.inc1248 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %417, %for.inc1248 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %418, %for.inc1248 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %419, %for.inc1248 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %420, %for.inc1248 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %421, %for.inc1248 ]
  %70 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %422, %for.inc1248 ]
  %71 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %423, %for.inc1248 ]
  %72 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %424, %for.inc1248 ]
  %idxprom188 = sext i32 %i.11012 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 2
  %73 = bitcast [4 x i8]* %id to i32*
  %bf.load190 = load i32* %73, align 4
  %bf.clear191 = and i32 %bf.load190, 4194303
  %idxprom.i859 = zext i32 %bf.clear191 to i64
  %74 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %74, i64 %idxprom.i859, i32 0
  %75 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %74, i64 %idxprom.i859, i32 1
  %76 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %74, i64 %idxprom.i859, i32 2
  %77 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %75 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 0
  %78 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 1
  %79 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 2
  %80 = load double* %z, align 8, !tbaa !62
  %arrayidx196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188
  %arrayidx198 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188
  %81 = and i32 %bf.load190, 62914560
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %if.end359, label %if.then210

if.then210:                                       ; preds = %for.body187
  %bf.lshr213 = lshr i32 %bf.load190, 22
  %bf.clear214 = and i32 %bf.lshr213, 7
  %tobool215 = icmp eq i32 %bf.clear214, 0
  br i1 %tobool215, label %if.end230, label %if.then216

if.then216:                                       ; preds = %if.then210
  %mul221 = mul nsw i32 %bf.clear214, %14
  %add222 = add nsw i32 %mul221, %pairCount.01010
  %cmp223 = icmp sge i32 %pairCount.01010, %div
  %cmp225 = icmp slt i32 %pairCount.01010, %div184
  %or.cond817 = and i1 %cmp223, %cmp225
  br i1 %or.cond817, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then216
  %sub227 = add i32 %i.11012, -1
  %add228 = add i32 %sub227, %bf.clear214
  br label %for.inc1248

if.end230:                                        ; preds = %if.then216, %if.then210
  %pairCount.1 = phi i32 [ %pairCount.01010, %if.then210 ], [ %add222, %if.then216 ]
  %83 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool231 = icmp eq i32 %83, 0
  br i1 %tobool231, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end230
  %bf.clear235 = and i32 %bf.load190, 134217728
  %tobool236 = icmp ne i32 %bf.clear235, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end230
  %84 = phi i1 [ false, %if.end230 ], [ %tobool236, %land.rhs ]
  %cond243 = select i1 %84, i32* %cond1983511341143, i32* %cond83183311361142
  %cond248 = select i1 %84, i32 %fixg.2838, i32 %g.0.lcssa1144
  %cmp249 = icmp sgt i32 %cond248, 0
  br i1 %cmp249, label %if.then250, label %if.end329

if.then250:                                       ; preds = %land.end
  %85 = load i32* %cond243, align 4, !tbaa !11
  %idxprom253 = sext i32 %85 to i64
  %x256 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 0
  %86 = load double* %x256, align 8, !tbaa !59
  %y260 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 1
  %87 = load double* %y260, align 8, !tbaa !61
  %z264 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 2
  %88 = load double* %z264, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then290, %if.then250
  %p_j_z.0.ph = phi double [ %88, %if.then250 ], [ %94, %if.then290 ]
  %p_j_y.0.ph = phi double [ %87, %if.then250 ], [ %93, %if.then290 ]
  %p_j_x.0.ph = phi double [ %86, %if.then250 ], [ %92, %if.then290 ]
  %j2.0.ph = phi i32 [ %85, %if.then250 ], [ %91, %if.then290 ]
  %gli.0.ph = phi i32* [ %cond3011381141, %if.then250 ], [ %incdec.ptr, %if.then290 ]
  %g.3.ph = phi i32 [ 0, %if.then250 ], [ %inc266, %if.then290 ]
  %89 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %89, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %94, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %93, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %92, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %91, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc266, %while.body ]
  %90 = trunc i64 %indvars.iv to i32
  %cmp265 = icmp slt i32 %90, %cond248
  br i1 %cmp265, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc266 = add nsw i32 %g.3, 1
  %arrayidx268 = getelementptr inbounds i32* %cond243, i64 %indvars.iv.next
  %91 = load i32* %arrayidx268, align 4, !tbaa !11
  %sub269 = fsub double %78, %p_j_x.0
  %mul270 = fmul double %sub269, %sub269
  %idxprom271 = sext i32 %91 to i64
  %x274 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 0
  %92 = load double* %x274, align 8, !tbaa !59
  %sub275 = fsub double %79, %p_j_y.0
  %mul276 = fmul double %sub275, %sub275
  %add277 = fadd double %mul276, %mul270
  %y281 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 1
  %93 = load double* %y281, align 8, !tbaa !61
  %sub282 = fsub double %80, %p_j_z.0
  %mul283 = fmul double %sub282, %sub282
  %add284 = fadd double %mul283, %add277
  %z288 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 2
  %94 = load double* %z288, align 8, !tbaa !62
  %cmp289 = fcmp ugt double %add284, %3
  br i1 %cmp289, label %while.cond, label %if.then290

if.then290:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div812 = lshr exact i64 %sub.ptr.sub, 2
  %conv292 = trunc i64 %sub.ptr.div812 to i32
  %cmp294870 = icmp sgt i32 %conv292, 0
  br i1 %cmp294870, label %for.body295.lr.ph, label %if.end329

for.body295.lr.ph:                                ; preds = %while.end
  %95 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %96 = lshr i64 %95, 2
  %97 = trunc i64 %96 to i32
  br label %for.body295

for.body295:                                      ; preds = %cond.end315, %for.body295.lr.ph
  %indvars.iv1090 = phi i64 [ 0, %for.body295.lr.ph ], [ %indvars.iv.next1091, %cond.end315 ]
  %pli.0872 = phi i32* [ %cond129839841847853, %for.body295.lr.ph ], [ %add.ptr325, %cond.end315 ]
  %arrayidx298 = getelementptr inbounds i32* %cond3011381141, i64 %indvars.iv1090
  %98 = load i32* %arrayidx298, align 4, !tbaa !11
  %idxprom300 = sext i32 %98 to i64
  %nonbondedGroupIsAtom302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom300, i32 2
  %99 = bitcast [4 x i8]* %nonbondedGroupIsAtom302 to i32*
  %bf.load303 = load i32* %99, align 4
  %bf.clear305 = and i32 %bf.load303, 33554432
  %tobool306 = icmp eq i32 %bf.clear305, 0
  br i1 %tobool306, label %cond.false308, label %cond.end315

cond.false308:                                    ; preds = %for.body295
  %bf.lshr313 = lshr i32 %bf.load303, 22
  %bf.clear314 = and i32 %bf.lshr313, 7
  %phitmp813814 = zext i32 %bf.clear314 to i64
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false308, %for.body295
  %cond316 = phi i64 [ %phitmp813814, %cond.false308 ], [ 1, %for.body295 ]
  store i32 %98, i32* %pli.0872, align 4, !tbaa !11
  %add318 = add nsw i32 %98, 1
  %arrayidx319 = getelementptr inbounds i32* %pli.0872, i64 1
  store i32 %add318, i32* %arrayidx319, align 4, !tbaa !11
  %add320 = add nsw i32 %98, 2
  %arrayidx321 = getelementptr inbounds i32* %pli.0872, i64 2
  store i32 %add320, i32* %arrayidx321, align 4, !tbaa !11
  %add322 = add nsw i32 %98, 3
  %arrayidx323 = getelementptr inbounds i32* %pli.0872, i64 3
  store i32 %add322, i32* %arrayidx323, align 4, !tbaa !11
  %add.ptr325 = getelementptr inbounds i32* %pli.0872, i64 %cond316
  %indvars.iv.next1091 = add nuw nsw i64 %indvars.iv1090, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1091 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %97
  br i1 %exitcond, label %if.end329, label %for.body295

if.end329:                                        ; preds = %cond.end315, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129839841847853, %land.end ], [ %cond129839841847853, %while.end ], [ %add.ptr325, %cond.end315 ]
  %sub.ptr.lhs.cast330 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %sub.ptr.div333809 = lshr exact i64 %sub.ptr.sub332, 2
  %conv334 = trunc i64 %sub.ptr.div333809 to i32
  %tobool335 = icmp eq i32 %conv334, 0
  br i1 %tobool335, label %if.else, label %if.then336

if.then336:                                       ; preds = %if.end329
  %sub337 = shl i64 %sub.ptr.sub332, 30
  %sext810 = add i64 %sub337, -4294967296
  %idxprom338 = ashr exact i64 %sext810, 32
  %arrayidx339 = getelementptr inbounds i32* %cond129839841847853, i64 %idxprom338
  %100 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom340 = ashr exact i64 %sub337, 32
  %arrayidx341 = getelementptr inbounds i32* %cond129839841847853, i64 %idxprom340
  store i32 %100, i32* %arrayidx341, align 4, !tbaa !11
  br label %if.end359

if.else:                                          ; preds = %if.end329
  %bf.load344 = load i32* %73, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end354

cond.false349:                                    ; preds = %if.else
  %bf.lshr352 = lshr i32 %bf.load344, 22
  %bf.clear353 = and i32 %bf.lshr352, 7
  %phitmp = add i32 %bf.clear353, -1
  br label %cond.end354

cond.end354:                                      ; preds = %cond.false349, %if.else
  %cond355 = phi i32 [ %phitmp, %cond.false349 ], [ 0, %if.else ]
  %add357 = add nsw i32 %cond355, %i.11012
  br label %for.inc1248

if.end359:                                        ; preds = %if.then336, %for.body187
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then336 ], [ %pairCount.01010, %for.body187 ]
  %pairlistindex.1 = phi i32 [ %conv334, %if.then336 ], [ %pairlistindex.01011, %for.body187 ]
  %101 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool360 = icmp eq i32 %101, 0
  %bf.load369.pre = load i32* %73, align 4
  br i1 %tobool360, label %land.end367, label %land.rhs361

land.rhs361:                                      ; preds = %if.end359
  %bf.clear365 = and i32 %bf.load369.pre, 67108864
  %tobool366 = icmp ne i32 %bf.clear365, 0
  br label %land.end367

land.end367:                                      ; preds = %land.rhs361, %if.end359
  %102 = phi i1 [ %tobool366, %land.rhs361 ], [ false, %if.end359 ]
  %103 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr370 = lshr i32 %bf.load369.pre, 28
  %mul371 = mul nsw i32 %bf.lshr370, 6
  %idx.ext372743 = zext i32 %mul371 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 1
  %104 = load float* %charge, align 4, !tbaa !63
  %conv374 = fpext float %104 to double
  %mul375 = fmul double %conv374, 3.320636e+02
  %mul376 = fmul double %9, %mul375
  %mul377 = fmul double %4, %mul376
  %bf.clear380 = and i32 %bf.load369.pre, 4194303
  %idxprom.i827860 = zext i32 %bf.clear380 to i64
  %105 = load i32** %atomVdwType.i828, align 8, !tbaa !64
  %arrayidx.i829 = getelementptr inbounds i32* %105, i64 %idxprom.i827860
  %106 = load i32* %arrayidx.i829, align 4, !tbaa !11
  %107 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %108 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv382 = shl i32 %106, 1
  %mul.i = and i32 %conv382, 131070
  %mul2.i = mul i32 %mul.i, %108
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp388897 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %102, label %for.cond387.preheader, label %if.else449

for.cond387.preheader:                            ; preds = %land.end367
  br i1 %cmp388897, label %for.body389, label %if.end528

for.body389:                                      ; preds = %for.inc446, %for.cond387.preheader
  %indvars.iv1101 = phi i64 [ %indvars.iv.next1102, %for.inc446 ], [ 0, %for.cond387.preheader ]
  %exclChecksum.1901 = phi i32 [ %exclChecksum.3, %for.inc446 ], [ %exclChecksum.01049, %for.cond387.preheader ]
  %pli384.0900 = phi i32* [ %pli384.1, %for.inc446 ], [ %cond140843845855, %for.cond387.preheader ]
  %plin.0899 = phi i32* [ %plin.1, %for.inc446 ], [ %cond151849851, %for.cond387.preheader ]
  %arrayidx391 = getelementptr inbounds i32* %cond129839841847853, i64 %indvars.iv1101
  %109 = load i32* %arrayidx391, align 4, !tbaa !11
  %idxprom393 = sext i32 %109 to i64
  %x396 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom393, i32 0, i32 0
  %110 = load double* %x396, align 8, !tbaa !59
  %sub398 = fsub double %78, %110
  %mul399 = fmul double %sub398, %sub398
  %y404 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom393, i32 0, i32 1
  %111 = load double* %y404, align 8, !tbaa !61
  %sub406 = fsub double %79, %111
  %mul407 = fmul double %sub406, %sub406
  %add408 = fadd double %mul399, %mul407
  %z413 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom393, i32 0, i32 2
  %112 = load double* %z413, align 8, !tbaa !62
  %sub414 = fsub double %80, %112
  %mul415 = fmul double %sub414, %sub414
  %add416 = fadd double %add408, %mul415
  %atomFixed419 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom393, i32 2
  %113 = bitcast [4 x i8]* %atomFixed419 to i32*
  %bf.load420 = load i32* %113, align 4
  %bf.clear422 = and i32 %bf.load420, 67108864
  %tobool423 = icmp ne i32 %bf.clear422, 0
  %cmp425 = fcmp ugt double %add416, %2
  %or.cond818 = or i1 %tobool423, %cmp425
  br i1 %or.cond818, label %for.inc446, label %land.lhs.true426

land.lhs.true426:                                 ; preds = %for.body389
  %cmp427 = fcmp ugt double %add416, %11
  br i1 %cmp427, label %if.then431, label %land.lhs.true428

land.lhs.true428:                                 ; preds = %land.lhs.true426
  %inc429 = add nsw i32 %exclChecksum.1901, 1
  %tobool430 = icmp eq i32 %inc429, 0
  br i1 %tobool430, label %if.then431, label %for.inc446

if.then431:                                       ; preds = %land.lhs.true428, %land.lhs.true426
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true428 ], [ %exclChecksum.1901, %land.lhs.true426 ]
  %bf.clear436 = and i32 %bf.load420, 4194303
  %cmp437 = icmp slt i32 %bf.clear436, %75
  %cmp439 = icmp sgt i32 %bf.clear436, %76
  %or.cond819 = or i1 %cmp437, %cmp439
  br i1 %or.cond819, label %if.else442, label %if.then440

if.then440:                                       ; preds = %if.then431
  %incdec.ptr441 = getelementptr inbounds i32* %pli384.0900, i64 1
  store i32 %109, i32* %pli384.0900, align 4, !tbaa !11
  br label %for.inc446

if.else442:                                       ; preds = %if.then431
  %incdec.ptr443 = getelementptr inbounds i32* %plin.0899, i64 1
  store i32 %109, i32* %plin.0899, align 4, !tbaa !11
  br label %for.inc446

for.inc446:                                       ; preds = %if.else442, %if.then440, %land.lhs.true428, %for.body389
  %plin.1 = phi i32* [ %plin.0899, %for.body389 ], [ %plin.0899, %land.lhs.true428 ], [ %plin.0899, %if.then440 ], [ %incdec.ptr443, %if.else442 ]
  %pli384.1 = phi i32* [ %pli384.0900, %for.body389 ], [ %pli384.0900, %land.lhs.true428 ], [ %incdec.ptr441, %if.then440 ], [ %pli384.0900, %if.else442 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1901, %for.body389 ], [ %inc429, %land.lhs.true428 ], [ %exclChecksum.2, %if.then440 ], [ %exclChecksum.2, %if.else442 ]
  %indvars.iv.next1102 = add nuw nsw i64 %indvars.iv1101, 1
  %lftr.wideiv1103 = trunc i64 %indvars.iv.next1102 to i32
  %exitcond1104 = icmp eq i32 %lftr.wideiv1103, %pairlistindex.1
  br i1 %exitcond1104, label %if.end528, label %for.body389

if.else449:                                       ; preds = %land.end367
  br i1 %cmp388897, label %if.then452, label %if.end528

if.then452:                                       ; preds = %if.else449
  %114 = load i32* %cond129839841847853, align 4, !tbaa !11
  %idxprom457 = sext i32 %114 to i64
  %x460 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom457, i32 0, i32 0
  %115 = load double* %x460, align 8, !tbaa !59
  %y465 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom457, i32 0, i32 1
  %116 = load double* %y465, align 8, !tbaa !61
  %z470 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom457, i32 0, i32 2
  %117 = load double* %z470, align 8, !tbaa !62
  br label %while.cond477.outer

while.cond477.outer:                              ; preds = %if.else517, %if.then452
  %idxprom457.pn.ph = phi i64 [ %idxprom457, %if.then452 ], [ %idxprom486, %if.else517 ]
  %p_j_z466.0.ph = phi double [ %117, %if.then452 ], [ %123, %if.else517 ]
  %p_j_y461.0.ph = phi double [ %116, %if.then452 ], [ %122, %if.else517 ]
  %p_j_x456.0.ph = phi double [ %115, %if.then452 ], [ %121, %if.else517 ]
  %j2453.0.ph = phi i32 [ %114, %if.then452 ], [ %120, %if.else517 ]
  %k450.0.ph = phi i32 [ 0, %if.then452 ], [ %inc480, %if.else517 ]
  %plin.2.ph = phi i32* [ %cond151849851, %if.then452 ], [ %incdec.ptr518, %if.else517 ]
  %pli384.2.ph = phi i32* [ %cond140843845855, %if.then452 ], [ %pli384.2.ph880, %if.else517 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.01049, %if.then452 ], [ %exclChecksum.5, %if.else517 ]
  br label %while.cond477.outer873

while.cond477.outer873:                           ; preds = %if.then515, %while.cond477.outer
  %idxprom457.pn.ph874 = phi i64 [ %idxprom486, %if.then515 ], [ %idxprom457.pn.ph, %while.cond477.outer ]
  %p_j_z466.0.ph875 = phi double [ %123, %if.then515 ], [ %p_j_z466.0.ph, %while.cond477.outer ]
  %p_j_y461.0.ph876 = phi double [ %122, %if.then515 ], [ %p_j_y461.0.ph, %while.cond477.outer ]
  %p_j_x456.0.ph877 = phi double [ %121, %if.then515 ], [ %p_j_x456.0.ph, %while.cond477.outer ]
  %j2453.0.ph878 = phi i32 [ %120, %if.then515 ], [ %j2453.0.ph, %while.cond477.outer ]
  %k450.0.ph879 = phi i32 [ %inc480, %if.then515 ], [ %k450.0.ph, %while.cond477.outer ]
  %pli384.2.ph880 = phi i32* [ %incdec.ptr516, %if.then515 ], [ %pli384.2.ph, %while.cond477.outer ]
  %exclChecksum.4.ph881 = phi i32 [ %exclChecksum.5, %if.then515 ], [ %exclChecksum.4.ph, %while.cond477.outer ]
  br label %while.cond477.outer882

while.cond477.outer882:                           ; preds = %land.lhs.true508, %while.cond477.outer873
  %idxprom457.pn.ph883 = phi i64 [ %idxprom486, %land.lhs.true508 ], [ %idxprom457.pn.ph874, %while.cond477.outer873 ]
  %p_j_z466.0.ph884 = phi double [ %123, %land.lhs.true508 ], [ %p_j_z466.0.ph875, %while.cond477.outer873 ]
  %p_j_y461.0.ph885 = phi double [ %122, %land.lhs.true508 ], [ %p_j_y461.0.ph876, %while.cond477.outer873 ]
  %p_j_x456.0.ph886 = phi double [ %121, %land.lhs.true508 ], [ %p_j_x456.0.ph877, %while.cond477.outer873 ]
  %j2453.0.ph887 = phi i32 [ %120, %land.lhs.true508 ], [ %j2453.0.ph878, %while.cond477.outer873 ]
  %k450.0.ph888 = phi i32 [ %inc480, %land.lhs.true508 ], [ %k450.0.ph879, %while.cond477.outer873 ]
  %exclChecksum.4.ph889 = phi i32 [ %inc509, %land.lhs.true508 ], [ %exclChecksum.4.ph881, %while.cond477.outer873 ]
  %118 = sext i32 %k450.0.ph888 to i64
  br label %while.cond477

while.cond477:                                    ; preds = %while.body479, %while.cond477.outer882
  %indvars.iv1097 = phi i64 [ %118, %while.cond477.outer882 ], [ %indvars.iv.next1098, %while.body479 ]
  %idxprom457.pn = phi i64 [ %idxprom457.pn.ph883, %while.cond477.outer882 ], [ %idxprom486, %while.body479 ]
  %p_j_z466.0 = phi double [ %p_j_z466.0.ph884, %while.cond477.outer882 ], [ %123, %while.body479 ]
  %p_j_y461.0 = phi double [ %p_j_y461.0.ph885, %while.cond477.outer882 ], [ %122, %while.body479 ]
  %p_j_x456.0 = phi double [ %p_j_x456.0.ph886, %while.cond477.outer882 ], [ %121, %while.body479 ]
  %j2453.0 = phi i32 [ %j2453.0.ph887, %while.cond477.outer882 ], [ %120, %while.body479 ]
  %k450.0 = phi i32 [ %k450.0.ph888, %while.cond477.outer882 ], [ %inc480, %while.body479 ]
  %119 = trunc i64 %indvars.iv1097 to i32
  %cmp478 = icmp slt i32 %119, %pairlistindex.1
  br i1 %cmp478, label %while.body479, label %if.end528

while.body479:                                    ; preds = %while.cond477
  %atom2471.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom457.pn, i32 2
  %atom2471.0.in.in = bitcast [4 x i8]* %atom2471.0.in.in.in to i32*
  %atom2471.0.in = load i32* %atom2471.0.in.in, align 4
  %atom2471.0 = and i32 %atom2471.0.in, 4194303
  %indvars.iv.next1098 = add nsw i64 %indvars.iv1097, 1
  %inc480 = add nsw i32 %k450.0, 1
  %arrayidx482 = getelementptr inbounds i32* %cond129839841847853, i64 %indvars.iv.next1098
  %120 = load i32* %arrayidx482, align 4, !tbaa !11
  %sub484 = fsub double %78, %p_j_x456.0
  %mul485 = fmul double %sub484, %sub484
  %idxprom486 = sext i32 %120 to i64
  %x489 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom486, i32 0, i32 0
  %121 = load double* %x489, align 8, !tbaa !59
  %sub491 = fsub double %79, %p_j_y461.0
  %mul492 = fmul double %sub491, %sub491
  %add493 = fadd double %mul492, %mul485
  %y497 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom486, i32 0, i32 1
  %122 = load double* %y497, align 8, !tbaa !61
  %sub498 = fsub double %80, %p_j_z466.0
  %mul499 = fmul double %sub498, %sub498
  %add500 = fadd double %mul499, %add493
  %z504 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom486, i32 0, i32 2
  %123 = load double* %z504, align 8, !tbaa !62
  %cmp505 = fcmp ugt double %add500, %2
  br i1 %cmp505, label %while.cond477, label %land.lhs.true506

land.lhs.true506:                                 ; preds = %while.body479
  %cmp507 = fcmp ugt double %add500, %11
  br i1 %cmp507, label %if.then511, label %land.lhs.true508

land.lhs.true508:                                 ; preds = %land.lhs.true506
  %inc509 = add nsw i32 %exclChecksum.4.ph889, 1
  %tobool510 = icmp eq i32 %inc509, 0
  br i1 %tobool510, label %if.then511, label %while.cond477.outer882

if.then511:                                       ; preds = %land.lhs.true508, %land.lhs.true506
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true508 ], [ %exclChecksum.4.ph889, %land.lhs.true506 ]
  %cmp512 = icmp slt i32 %atom2471.0, %75
  %cmp514 = icmp sgt i32 %atom2471.0, %76
  %or.cond820 = or i1 %cmp512, %cmp514
  br i1 %or.cond820, label %if.else517, label %if.then515

if.then515:                                       ; preds = %if.then511
  %incdec.ptr516 = getelementptr inbounds i32* %pli384.2.ph880, i64 1
  store i32 %j2453.0, i32* %pli384.2.ph880, align 4, !tbaa !11
  br label %while.cond477.outer873

if.else517:                                       ; preds = %if.then511
  %incdec.ptr518 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2453.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond477.outer

if.end528:                                        ; preds = %while.cond477, %if.else449, %for.inc446, %for.cond387.preheader
  %plin.4 = phi i32* [ %cond151849851, %if.else449 ], [ %cond151849851, %for.cond387.preheader ], [ %plin.2.ph, %while.cond477 ], [ %plin.1, %for.inc446 ]
  %pli384.4 = phi i32* [ %cond140843845855, %if.else449 ], [ %cond140843845855, %for.cond387.preheader ], [ %pli384.2.ph880, %while.cond477 ], [ %pli384.1, %for.inc446 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.01049, %if.else449 ], [ %exclChecksum.01049, %for.cond387.preheader ], [ %exclChecksum.4.ph889, %while.cond477 ], [ %exclChecksum.3, %for.inc446 ]
  %sub.ptr.lhs.cast529 = ptrtoint i32* %pli384.4 to i64
  %sub.ptr.sub531 = sub i64 %sub.ptr.lhs.cast529, %sub.ptr.rhs.cast530
  %sub.ptr.div532744 = lshr exact i64 %sub.ptr.sub531, 2
  %conv533 = trunc i64 %sub.ptr.div532744 to i32
  %tobool534 = icmp eq i32 %conv533, 0
  br i1 %tobool534, label %for.end565, label %for.cond543.preheader

for.cond543.preheader:                            ; preds = %if.end528
  %sub536 = shl i64 %sub.ptr.sub531, 30
  %sext807 = add i64 %sub536, -4294967296
  %idxprom537 = ashr exact i64 %sext807, 32
  %arrayidx538 = getelementptr inbounds i32* %cond140843845855, i64 %idxprom537
  %124 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom539 = ashr exact i64 %sub536, 32
  %arrayidx540 = getelementptr inbounds i32* %cond140843845855, i64 %idxprom539
  store i32 %124, i32* %arrayidx540, align 4, !tbaa !11
  %cmp544905 = icmp sgt i32 %conv533, 0
  br i1 %cmp544905, label %for.body545.lr.ph, label %for.end565

for.body545.lr.ph:                                ; preds = %for.cond543.preheader
  %125 = sub i64 %sub.ptr.lhs.cast529, %sub.ptr.rhs.cast530
  %126 = lshr i64 %125, 2
  %127 = trunc i64 %126 to i32
  br label %for.body545

for.body545:                                      ; preds = %for.inc563, %for.body545.lr.ph
  %indvars.iv1105 = phi i64 [ 0, %for.body545.lr.ph ], [ %indvars.iv.next1106, %for.inc563 ]
  %plin.5909 = phi i32* [ %plin.4, %for.body545.lr.ph ], [ %plin.6, %for.inc563 ]
  %plix.0908 = phi i32* [ %cond162857, %for.body545.lr.ph ], [ %plix.1, %for.inc563 ]
  %plim.0907 = phi i32* [ %cond173, %for.body545.lr.ph ], [ %plim.1, %for.inc563 ]
  %arrayidx548 = getelementptr inbounds i32* %cond140843845855, i64 %indvars.iv1105
  %128 = load i32* %arrayidx548, align 4, !tbaa !11
  %idxprom550 = sext i32 %128 to i64
  %id552 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom550, i32 2
  %129 = bitcast [4 x i8]* %id552 to i32*
  %bf.load553 = load i32* %129, align 4
  %bf.clear554 = and i32 %bf.load553, 4194303
  %idxprom555806 = zext i32 %bf.clear554 to i64
  %add.ptr.sum = sub i64 %idxprom555806, %idx.ext
  %arrayidx556 = getelementptr inbounds i8* %77, i64 %add.ptr.sum
  %130 = load i8* %arrayidx556, align 1, !tbaa !68
  %conv557 = sext i8 %130 to i32
  switch i32 %conv557, label %for.inc563 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb559
    i32 2, label %sw.bb561
  ]

sw.bb:                                            ; preds = %for.body545
  %incdec.ptr558 = getelementptr inbounds i32* %plin.5909, i64 1
  store i32 %128, i32* %plin.5909, align 4, !tbaa !11
  br label %for.inc563

sw.bb559:                                         ; preds = %for.body545
  %incdec.ptr560 = getelementptr inbounds i32* %plix.0908, i64 1
  store i32 %128, i32* %plix.0908, align 4, !tbaa !11
  br label %for.inc563

sw.bb561:                                         ; preds = %for.body545
  %incdec.ptr562 = getelementptr inbounds i32* %plim.0907, i64 1
  store i32 %128, i32* %plim.0907, align 4, !tbaa !11
  br label %for.inc563

for.inc563:                                       ; preds = %sw.bb561, %sw.bb559, %sw.bb, %for.body545
  %plim.1 = phi i32* [ %plim.0907, %for.body545 ], [ %incdec.ptr562, %sw.bb561 ], [ %plim.0907, %sw.bb559 ], [ %plim.0907, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0908, %for.body545 ], [ %plix.0908, %sw.bb561 ], [ %incdec.ptr560, %sw.bb559 ], [ %plix.0908, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5909, %for.body545 ], [ %plin.5909, %sw.bb561 ], [ %plin.5909, %sw.bb559 ], [ %incdec.ptr558, %sw.bb ]
  %indvars.iv.next1106 = add nuw nsw i64 %indvars.iv1105, 1
  %lftr.wideiv1107 = trunc i64 %indvars.iv.next1106 to i32
  %exitcond1108 = icmp eq i32 %lftr.wideiv1107, %127
  br i1 %exitcond1108, label %for.end565, label %for.body545

for.end565:                                       ; preds = %for.inc563, %for.cond543.preheader, %if.end528
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond543.preheader ], [ %plin.4, %if.end528 ], [ %plin.6, %for.inc563 ]
  %plix.0.lcssa = phi i32* [ %cond162857, %for.cond543.preheader ], [ %cond162857, %if.end528 ], [ %plix.1, %for.inc563 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond543.preheader ], [ %cond173, %if.end528 ], [ %plim.1, %for.inc563 ]
  %sub.ptr.lhs.cast566 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub568 = sub i64 %sub.ptr.lhs.cast566, %sub.ptr.rhs.cast567
  %sub.ptr.div569 = ashr exact i64 %sub.ptr.sub568, 2
  %conv570745 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast573 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub575 = sub i64 %sub.ptr.lhs.cast573, %sub.ptr.rhs.cast574
  %sub.ptr.div576 = ashr exact i64 %sub.ptr.sub575, 2
  %add571 = add i64 %sub.ptr.div576, %conv570745
  %add578 = add i64 %add571, %sub.ptr.div569
  %conv579 = trunc i64 %add578 to i32
  %sub.ptr.lhs.cast580 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub582 = sub i64 %sub.ptr.lhs.cast580, %sub.ptr.rhs.cast581
  %sub.ptr.div583747 = lshr exact i64 %sub.ptr.sub582, 2
  %conv584 = trunc i64 %sub.ptr.div583747 to i32
  %cmp586913 = icmp sgt i32 %conv584, 0
  br i1 %cmp586913, label %for.body587.lr.ph, label %for.end807

for.body587.lr.ph:                                ; preds = %for.end565
  %x728 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y737 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z744 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x783 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y793 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z801 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %131 = sub i64 %sub.ptr.lhs.cast580, %sub.ptr.rhs.cast581
  %132 = lshr i64 %131, 2
  %133 = trunc i64 %132 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.body587.for.body587_crit_edge, %for.body587.lr.ph
  %134 = phi i32* [ %105, %for.body587.lr.ph ], [ %.pre, %for.body587.for.body587_crit_edge ]
  %indvars.iv1109 = phi i64 [ 0, %for.body587.lr.ph ], [ %indvars.iv.next1110, %for.body587.for.body587_crit_edge ]
  %135 = phi <2 x double> [ %64, %for.body587.lr.ph ], [ %214, %for.body587.for.body587_crit_edge ]
  %136 = phi <2 x double> [ %65, %for.body587.lr.ph ], [ %209, %for.body587.for.body587_crit_edge ]
  %137 = phi <2 x double> [ %66, %for.body587.lr.ph ], [ %175, %for.body587.for.body587_crit_edge ]
  %138 = phi <2 x double> [ %67, %for.body587.lr.ph ], [ %181, %for.body587.for.body587_crit_edge ]
  %139 = phi <2 x double> [ %68, %for.body587.lr.ph ], [ %200, %for.body587.for.body587_crit_edge ]
  %140 = phi <2 x double> [ %69, %for.body587.lr.ph ], [ %220, %for.body587.for.body587_crit_edge ]
  %141 = phi <2 x double> [ %70, %for.body587.lr.ph ], [ %225, %for.body587.for.body587_crit_edge ]
  %142 = phi <2 x double> [ %71, %for.body587.lr.ph ], [ %188, %for.body587.for.body587_crit_edge ]
  %143 = phi <2 x double> [ %72, %for.body587.lr.ph ], [ %234, %for.body587.for.body587_crit_edge ]
  %arrayidx590 = getelementptr inbounds i32* %cond151849851, i64 %indvars.iv1109
  %144 = load i32* %arrayidx590, align 4, !tbaa !11
  %idx.ext591 = sext i32 %144 to i64
  %x594 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext591, i32 0, i32 0
  %145 = load double* %x594, align 8, !tbaa !59
  %sub595 = fsub double %78, %145
  %mul597 = fmul double %sub595, %sub595
  %y599 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext591, i32 0, i32 1
  %146 = load double* %y599, align 8, !tbaa !61
  %sub600 = fsub double %79, %146
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %mul597, %mul601
  %z604 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext591, i32 0, i32 2
  %147 = load double* %z604, align 8, !tbaa !62
  %sub605 = fsub double %80, %147
  %mul606 = fmul double %sub605, %sub605
  %add607 = fadd double %add602, %mul606
  %conv608 = fptrunc double %add607 to float
  %148 = bitcast float %conv608 to i32
  %shr = ashr i32 %148, 17
  %add610 = add nsw i32 %shr, %mul
  %id611 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext591, i32 2
  %149 = bitcast [4 x i8]* %id611 to i32*
  %bf.load612 = load i32* %149, align 4
  %bf.clear613 = and i32 %bf.load612, 4194303
  %idxprom.i823863 = zext i32 %bf.clear613 to i64
  %arrayidx.i825 = getelementptr inbounds i32* %134, i64 %idxprom.i823863
  %150 = load i32* %arrayidx.i825, align 4, !tbaa !11
  %conv.i826 = zext i32 %150 to i64
  %conv615 = shl nuw nsw i64 %conv.i826, 1
  %mul616 = and i64 %conv615, 131070
  %mul619 = shl nsw i32 %add610, 4
  %idx.ext620 = sext i32 %mul619 to i64
  %add.ptr621 = getelementptr inbounds double* %7, i64 %idx.ext620
  %151 = load double* %add.ptr621, align 8, !tbaa !17
  %add.ptr621.sum786 = or i64 %idx.ext620, 4
  %add.ptr626 = getelementptr inbounds double* %7, i64 %add.ptr621.sum786
  %152 = load double* %add.ptr626, align 8, !tbaa !17
  %add.ptr621.sum787 = or i64 %idx.ext620, 8
  %add.ptr631 = getelementptr inbounds double* %7, i64 %add.ptr621.sum787
  %153 = load double* %add.ptr631, align 8, !tbaa !17
  %add.ptr631.sum788 = or i64 %idx.ext620, 12
  %add.ptr637 = getelementptr inbounds double* %7, i64 %add.ptr631.sum788
  %154 = load double* %add.ptr637, align 8, !tbaa !17
  %and = and i32 %148, -131072
  %charge640 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext591, i32 1
  %155 = load float* %charge640, align 4, !tbaa !63
  %conv641 = fpext float %155 to double
  %mul642 = fmul double %mul377, %conv641
  %156 = bitcast i32 %and to float
  %conv644 = fpext float %156 to double
  %sub645 = fsub double %add607, %conv644
  %bf.lshr648 = lshr i32 %bf.load612, 28
  %mul649 = shl nuw nsw i32 %bf.lshr648, 1
  %idxprom650789 = zext i32 %mul649 to i64
  %add.ptr373.sum790 = add i64 %idxprom650789, %idx.ext372743
  %arrayidx651 = getelementptr inbounds double* %103, i64 %add.ptr373.sum790
  %157 = load double* %arrayidx651, align 8, !tbaa !17
  %add653791 = or i32 %mul649, 1
  %idxprom654792 = zext i32 %add653791 to i64
  %add.ptr373.sum793 = add i64 %idxprom654792, %idx.ext372743
  %arrayidx655 = getelementptr inbounds double* %103, i64 %add.ptr373.sum793
  %158 = load double* %arrayidx655, align 8, !tbaa !17
  %add.ptr.i.sum864 = add i64 %mul616, %idx.ext.i
  %A657 = getelementptr inbounds %"struct.LJTable::TableEntry"* %107, i64 %add.ptr.i.sum864, i32 0
  %159 = load double* %A657, align 8, !tbaa !69
  %mul658 = fmul double %9, %159
  %B660 = getelementptr inbounds %"struct.LJTable::TableEntry"* %107, i64 %add.ptr.i.sum864, i32 1
  %160 = load double* %B660, align 8, !tbaa !71
  %mul661 = fmul double %9, %160
  %mul662 = fmul double %151, %mul658
  %mul663 = fmul double %152, %mul661
  %sub664 = fsub double %mul662, %mul663
  %add.ptr621.sum794 = or i64 %idx.ext620, 3
  %arrayidx665 = getelementptr inbounds double* %7, i64 %add.ptr621.sum794
  %161 = load double* %arrayidx665, align 8, !tbaa !17
  %mul666 = fmul double %mul658, %161
  %add.ptr626.sum795 = or i64 %idx.ext620, 7
  %arrayidx667 = getelementptr inbounds double* %7, i64 %add.ptr626.sum795
  %162 = load double* %arrayidx667, align 8, !tbaa !17
  %mul668 = fmul double %mul661, %162
  %sub669 = fsub double %mul666, %mul668
  %add.ptr621.sum796 = or i64 %idx.ext620, 2
  %arrayidx670 = getelementptr inbounds double* %7, i64 %add.ptr621.sum796
  %163 = load double* %arrayidx670, align 8, !tbaa !17
  %mul671 = fmul double %mul658, %163
  %add.ptr626.sum797 = or i64 %idx.ext620, 6
  %arrayidx672 = getelementptr inbounds double* %7, i64 %add.ptr626.sum797
  %164 = load double* %arrayidx672, align 8, !tbaa !17
  %mul673 = fmul double %mul661, %164
  %sub674 = fsub double %mul671, %mul673
  %add.ptr621.sum798 = or i64 %idx.ext620, 1
  %arrayidx675 = getelementptr inbounds double* %7, i64 %add.ptr621.sum798
  %165 = load double* %arrayidx675, align 8, !tbaa !17
  %mul676 = fmul double %mul658, %165
  %add.ptr626.sum799 = or i64 %idx.ext620, 5
  %arrayidx677 = getelementptr inbounds double* %7, i64 %add.ptr626.sum799
  %166 = load double* %arrayidx677, align 8, !tbaa !17
  %mul678 = fmul double %mul661, %166
  %sub679 = fsub double %mul676, %mul678
  %mul680 = fmul double %sub645, %sub669
  %add681 = fadd double %mul680, %sub674
  %mul682 = fmul double %sub645, %add681
  %add683 = fadd double %mul682, %sub679
  %mul684 = fmul double %sub645, %add683
  %add685 = fadd double %sub664, %mul684
  %mul690 = fmul double %153, %mul642
  %add.ptr631.sum800 = or i64 %idx.ext620, 11
  %arrayidx691 = getelementptr inbounds double* %7, i64 %add.ptr631.sum800
  %167 = load double* %arrayidx691, align 8, !tbaa !17
  %mul692 = fmul double %mul642, %167
  %add.ptr631.sum801 = or i64 %idx.ext620, 10
  %arrayidx693 = getelementptr inbounds double* %7, i64 %add.ptr631.sum801
  %168 = load double* %arrayidx693, align 8, !tbaa !17
  %mul694 = fmul double %mul642, %168
  %add.ptr631.sum802 = or i64 %idx.ext620, 9
  %arrayidx695 = getelementptr inbounds double* %7, i64 %add.ptr631.sum802
  %169 = load double* %arrayidx695, align 8, !tbaa !17
  %mul696 = fmul double %mul642, %169
  %mul697 = fmul double %sub645, %mul692
  %add698 = fadd double %mul697, %mul694
  %mul699 = fmul double %sub645, %add698
  %add700 = fadd double %mul696, %mul699
  %mul701 = fmul double %sub645, %add700
  %add702 = fadd double %mul690, %mul701
  %add707 = fadd double %sub669, %mul692
  %add708 = fadd double %sub674, %mul694
  %add709 = fadd double %sub679, %mul696
  %mul711 = fmul double %sub645, 3.000000e+00
  %mul712 = fmul double %mul711, %add707
  %mul713 = fmul double %add708, 2.000000e+00
  %add714 = fadd double %mul712, %mul713
  %mul715 = fmul double %sub645, %add714
  %add716 = fadd double %add709, %mul715
  %mul717 = fmul double %157, -2.000000e+00
  %mul718 = fmul double %mul717, %add716
  %mul721 = fmul double %sub595, %mul718
  %170 = insertelement <2 x double> undef, double %add685, i32 0
  %171 = insertelement <2 x double> %170, double %sub595, i32 1
  %172 = insertelement <2 x double> undef, double %157, i32 0
  %173 = insertelement <2 x double> %172, double %mul721, i32 1
  %174 = fmul <2 x double> %171, %173
  %175 = fadd <2 x double> %137, %174
  %176 = insertelement <2 x double> undef, double %sub600, i32 0
  %177 = insertelement <2 x double> %176, double %sub605, i32 1
  %178 = insertelement <2 x double> undef, double %mul721, i32 0
  %179 = insertelement <2 x double> %178, double %mul721, i32 1
  %180 = fmul <2 x double> %177, %179
  %181 = fadd <2 x double> %138, %180
  %182 = load double* %x728, align 8, !tbaa !72
  %add729 = fadd double %182, %mul721
  store double %add729, double* %x728, align 8, !tbaa !72
  %x730 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext591, i32 0
  %mul732 = fmul double %sub600, %mul718
  %183 = insertelement <2 x double> undef, double %add702, i32 0
  %184 = insertelement <2 x double> %183, double %sub600, i32 1
  %185 = insertelement <2 x double> undef, double %158, i32 0
  %186 = insertelement <2 x double> %185, double %mul732, i32 1
  %187 = fmul <2 x double> %184, %186
  %188 = fadd <2 x double> %142, %187
  %189 = load double* %y737, align 8, !tbaa !73
  %add738 = fadd double %189, %mul732
  store double %add738, double* %y737, align 8, !tbaa !73
  %190 = bitcast double* %x730 to <2 x double>*
  %191 = load <2 x double>* %190, align 8, !tbaa !17
  %192 = insertelement <2 x double> %178, double %mul732, i32 1
  %193 = fsub <2 x double> %191, %192
  %194 = bitcast double* %x730 to <2 x double>*
  store <2 x double> %193, <2 x double>* %194, align 8, !tbaa !17
  %mul741 = fmul double %sub605, %mul718
  %195 = insertelement <2 x double> undef, double %sub605, i32 0
  %196 = insertelement <2 x double> %195, double %sub605, i32 1
  %197 = insertelement <2 x double> undef, double %mul732, i32 0
  %198 = insertelement <2 x double> %197, double %mul741, i32 1
  %199 = fmul <2 x double> %196, %198
  %200 = fadd <2 x double> %139, %199
  %201 = load double* %z744, align 8, !tbaa !74
  %add745 = fadd double %201, %mul741
  store double %add745, double* %z744, align 8, !tbaa !74
  %z746 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext591, i32 2
  %202 = load double* %z746, align 8, !tbaa !74
  %sub747 = fsub double %202, %mul741
  store double %sub747, double* %z746, align 8, !tbaa !74
  %add.ptr637.sum803 = or i64 %idx.ext620, 13
  %arrayidx748 = getelementptr inbounds double* %7, i64 %add.ptr637.sum803
  %203 = load double* %arrayidx748, align 8, !tbaa !17
  %add.ptr637.sum804 = or i64 %idx.ext620, 14
  %arrayidx749 = getelementptr inbounds double* %7, i64 %add.ptr637.sum804
  %204 = load double* %arrayidx749, align 8, !tbaa !17
  %add.ptr637.sum805 = or i64 %idx.ext620, 15
  %arrayidx750 = getelementptr inbounds double* %7, i64 %add.ptr637.sum805
  %205 = load double* %arrayidx750, align 8, !tbaa !17
  %mul751 = fmul double %mul642, %205
  %mul752 = fmul double %mul642, %204
  %mul753 = fmul double %mul642, %203
  %mul754 = fmul double %154, %mul642
  %mul755 = fmul double %sub645, %mul751
  %add756 = fadd double %mul752, %mul755
  %mul757 = fmul double %sub645, %add756
  %add758 = fadd double %mul753, %mul757
  %mul759 = fmul double %sub645, %add758
  %add760 = fadd double %mul754, %mul759
  %206 = insertelement <2 x double> %183, double %add760, i32 1
  %207 = insertelement <2 x double> %172, double %157, i32 1
  %208 = fmul <2 x double> %206, %207
  %209 = fadd <2 x double> %136, %208
  %210 = insertelement <2 x double> undef, double %add760, i32 0
  %211 = insertelement <2 x double> %210, double %add685, i32 1
  %212 = insertelement <2 x double> %185, double %158, i32 1
  %213 = fmul <2 x double> %211, %212
  %214 = fadd <2 x double> %135, %213
  %mul766 = fmul double %mul711, %mul751
  %mul767 = fmul double %mul752, 2.000000e+00
  %add768 = fadd double %mul767, %mul766
  %mul769 = fmul double %sub645, %add768
  %add770 = fadd double %mul753, %mul769
  %mul771 = fmul double %add770, -2.000000e+00
  %mul772 = fmul double %157, %mul771
  %mul776 = fmul double %sub595, %mul772
  %215 = insertelement <2 x double> undef, double %sub595, i32 0
  %216 = insertelement <2 x double> %215, double %sub600, i32 1
  %217 = insertelement <2 x double> undef, double %mul776, i32 0
  %218 = insertelement <2 x double> %217, double %mul776, i32 1
  %219 = fmul <2 x double> %216, %218
  %220 = fadd <2 x double> %140, %219
  %221 = load double* %x783, align 8, !tbaa !72
  %add784 = fadd double %221, %mul776
  store double %add784, double* %x783, align 8, !tbaa !72
  %x785 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext591, i32 0
  %mul788 = fmul double %sub600, %mul772
  %222 = insertelement <2 x double> undef, double %mul788, i32 0
  %223 = insertelement <2 x double> %222, double %mul788, i32 1
  %224 = fmul <2 x double> %177, %223
  %225 = fadd <2 x double> %141, %224
  %226 = load double* %y793, align 8, !tbaa !73
  %add794 = fadd double %226, %mul788
  store double %add794, double* %y793, align 8, !tbaa !73
  %227 = bitcast double* %x785 to <2 x double>*
  %228 = load <2 x double>* %227, align 8, !tbaa !17
  %229 = insertelement <2 x double> %217, double %mul788, i32 1
  %230 = fsub <2 x double> %228, %229
  %231 = bitcast double* %x785 to <2 x double>*
  store <2 x double> %230, <2 x double>* %231, align 8, !tbaa !17
  %mul798 = fmul double %sub605, %mul772
  %232 = insertelement <2 x double> %217, double %mul798, i32 1
  %233 = fmul <2 x double> %196, %232
  %234 = fadd <2 x double> %143, %233
  %235 = load double* %z801, align 8, !tbaa !74
  %add802 = fadd double %235, %mul798
  store double %add802, double* %z801, align 8, !tbaa !74
  %z803 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext591, i32 2
  %236 = load double* %z803, align 8, !tbaa !74
  %sub804 = fsub double %236, %mul798
  store double %sub804, double* %z803, align 8, !tbaa !74
  %indvars.iv.next1110 = add nuw nsw i64 %indvars.iv1109, 1
  %lftr.wideiv1111 = trunc i64 %indvars.iv.next1110 to i32
  %exitcond1112 = icmp eq i32 %lftr.wideiv1111, %133
  br i1 %exitcond1112, label %for.end807, label %for.body587.for.body587_crit_edge

for.body587.for.body587_crit_edge:                ; preds = %for.body587
  %.pre = load i32** %atomVdwType.i828, align 8, !tbaa !64
  br label %for.body587

for.end807:                                       ; preds = %for.body587, %for.end565
  %237 = phi <2 x double> [ %64, %for.end565 ], [ %214, %for.body587 ]
  %238 = phi <2 x double> [ %65, %for.end565 ], [ %209, %for.body587 ]
  %239 = phi <2 x double> [ %66, %for.end565 ], [ %175, %for.body587 ]
  %240 = phi <2 x double> [ %67, %for.end565 ], [ %181, %for.body587 ]
  %241 = phi <2 x double> [ %68, %for.end565 ], [ %200, %for.body587 ]
  %242 = phi <2 x double> [ %69, %for.end565 ], [ %220, %for.body587 ]
  %243 = phi <2 x double> [ %70, %for.end565 ], [ %225, %for.body587 ]
  %244 = phi <2 x double> [ %71, %for.end565 ], [ %188, %for.body587 ]
  %245 = phi <2 x double> [ %72, %for.end565 ], [ %234, %for.body587 ]
  %conv812 = trunc i64 %sub.ptr.div576 to i32
  %cmp814951 = icmp sgt i32 %conv812, 0
  br i1 %cmp814951, label %for.body815.lr.ph, label %for.end1098

for.body815.lr.ph:                                ; preds = %for.end807
  %x995 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y1005 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z1013 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x1074 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1084 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1092 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  br label %for.body815

for.body815:                                      ; preds = %for.body815, %for.body815.lr.ph
  %indvars.iv1113 = phi i64 [ 0, %for.body815.lr.ph ], [ %indvars.iv.next1114, %for.body815 ]
  %246 = phi <2 x double> [ %237, %for.body815.lr.ph ], [ %330, %for.body815 ]
  %247 = phi <2 x double> [ %238, %for.body815.lr.ph ], [ %325, %for.body815 ]
  %248 = phi <2 x double> [ %239, %for.body815.lr.ph ], [ %287, %for.body815 ]
  %249 = phi <2 x double> [ %240, %for.body815.lr.ph ], [ %293, %for.body815 ]
  %250 = phi <2 x double> [ %241, %for.body815.lr.ph ], [ %312, %for.body815 ]
  %251 = phi <2 x double> [ %242, %for.body815.lr.ph ], [ %336, %for.body815 ]
  %252 = phi <2 x double> [ %243, %for.body815.lr.ph ], [ %341, %for.body815 ]
  %253 = phi <2 x double> [ %244, %for.body815.lr.ph ], [ %300, %for.body815 ]
  %254 = phi <2 x double> [ %245, %for.body815.lr.ph ], [ %350, %for.body815 ]
  %arrayidx818 = getelementptr inbounds i32* %cond173, i64 %indvars.iv1113
  %255 = load i32* %arrayidx818, align 4, !tbaa !11
  %idx.ext820 = sext i32 %255 to i64
  %x824 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 0
  %256 = load double* %x824, align 8, !tbaa !59
  %sub825 = fsub double %78, %256
  %mul827 = fmul double %sub825, %sub825
  %y830 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 1
  %257 = load double* %y830, align 8, !tbaa !61
  %sub831 = fsub double %79, %257
  %mul832 = fmul double %sub831, %sub831
  %add833 = fadd double %mul827, %mul832
  %z836 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 2
  %258 = load double* %z836, align 8, !tbaa !62
  %sub837 = fsub double %80, %258
  %mul838 = fmul double %sub837, %sub837
  %add839 = fadd double %add833, %mul838
  %conv841 = fptrunc double %add839 to float
  %259 = bitcast float %conv841 to i32
  %shr845 = ashr i32 %259, 17
  %add846 = add nsw i32 %shr845, %mul
  %id848 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 2
  %260 = bitcast [4 x i8]* %id848 to i32*
  %bf.load849 = load i32* %260, align 4
  %bf.clear850 = and i32 %bf.load849, 4194303
  %idxprom.i821861 = zext i32 %bf.clear850 to i64
  %261 = load i32** %atomVdwType.i828, align 8, !tbaa !64
  %arrayidx.i822 = getelementptr inbounds i32* %261, i64 %idxprom.i821861
  %262 = load i32* %arrayidx.i822, align 4, !tbaa !11
  %conv.i = zext i32 %262 to i64
  %conv852 = shl nuw nsw i64 %conv.i, 1
  %mul853 = and i64 %conv852, 131070
  %add.ptr855.sum761 = or i64 %mul853, 1
  %mul858 = shl nsw i32 %add846, 4
  %idx.ext859 = sext i32 %mul858 to i64
  %add.ptr860 = getelementptr inbounds double* %7, i64 %idx.ext859
  %263 = load double* %add.ptr860, align 8, !tbaa !17
  %add.ptr860.sum762 = or i64 %idx.ext859, 4
  %add.ptr867 = getelementptr inbounds double* %7, i64 %add.ptr860.sum762
  %264 = load double* %add.ptr867, align 8, !tbaa !17
  %add.ptr860.sum763 = or i64 %idx.ext859, 8
  %add.ptr874 = getelementptr inbounds double* %7, i64 %add.ptr860.sum763
  %265 = load double* %add.ptr874, align 8, !tbaa !17
  %add.ptr874.sum764 = or i64 %idx.ext859, 12
  %add.ptr882 = getelementptr inbounds double* %7, i64 %add.ptr874.sum764
  %266 = load double* %add.ptr882, align 8, !tbaa !17
  %and886 = and i32 %259, -131072
  %charge888 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 1
  %267 = load float* %charge888, align 4, !tbaa !63
  %conv889 = fpext float %267 to double
  %mul890 = fmul double %mul377, %conv889
  %268 = bitcast i32 %and886 to float
  %conv893 = fpext float %268 to double
  %sub894 = fsub double %add839, %conv893
  %bf.lshr898 = lshr i32 %bf.load849, 28
  %mul900 = shl nuw nsw i32 %bf.lshr898, 1
  %idxprom901765 = zext i32 %mul900 to i64
  %add.ptr373.sum766 = add i64 %idxprom901765, %idx.ext372743
  %arrayidx902 = getelementptr inbounds double* %103, i64 %add.ptr373.sum766
  %269 = load double* %arrayidx902, align 8, !tbaa !17
  %add905767 = or i32 %mul900, 1
  %idxprom906768 = zext i32 %add905767 to i64
  %add.ptr373.sum769 = add i64 %idxprom906768, %idx.ext372743
  %arrayidx907 = getelementptr inbounds double* %103, i64 %add.ptr373.sum769
  %270 = load double* %arrayidx907, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr855.sum761, %idx.ext.i
  %A909 = getelementptr inbounds %"struct.LJTable::TableEntry"* %107, i64 %add.ptr.i.sum, i32 0
  %271 = load double* %A909, align 8, !tbaa !69
  %mul910 = fmul double %9, %271
  %B912 = getelementptr inbounds %"struct.LJTable::TableEntry"* %107, i64 %add.ptr.i.sum, i32 1
  %272 = load double* %B912, align 8, !tbaa !71
  %mul913 = fmul double %9, %272
  %mul915 = fmul double %263, %mul910
  %mul916 = fmul double %264, %mul913
  %sub917 = fsub double %mul915, %mul916
  %add.ptr860.sum770 = or i64 %idx.ext859, 3
  %arrayidx919 = getelementptr inbounds double* %7, i64 %add.ptr860.sum770
  %273 = load double* %arrayidx919, align 8, !tbaa !17
  %mul920 = fmul double %mul910, %273
  %add.ptr867.sum771 = or i64 %idx.ext859, 7
  %arrayidx921 = getelementptr inbounds double* %7, i64 %add.ptr867.sum771
  %274 = load double* %arrayidx921, align 8, !tbaa !17
  %mul922 = fmul double %mul913, %274
  %sub923 = fsub double %mul920, %mul922
  %add.ptr860.sum772 = or i64 %idx.ext859, 2
  %arrayidx925 = getelementptr inbounds double* %7, i64 %add.ptr860.sum772
  %275 = load double* %arrayidx925, align 8, !tbaa !17
  %mul926 = fmul double %mul910, %275
  %add.ptr867.sum773 = or i64 %idx.ext859, 6
  %arrayidx927 = getelementptr inbounds double* %7, i64 %add.ptr867.sum773
  %276 = load double* %arrayidx927, align 8, !tbaa !17
  %mul928 = fmul double %mul913, %276
  %sub929 = fsub double %mul926, %mul928
  %add.ptr860.sum774 = or i64 %idx.ext859, 1
  %arrayidx931 = getelementptr inbounds double* %7, i64 %add.ptr860.sum774
  %277 = load double* %arrayidx931, align 8, !tbaa !17
  %mul932 = fmul double %mul910, %277
  %add.ptr867.sum775 = or i64 %idx.ext859, 5
  %arrayidx933 = getelementptr inbounds double* %7, i64 %add.ptr867.sum775
  %278 = load double* %arrayidx933, align 8, !tbaa !17
  %mul934 = fmul double %mul913, %278
  %sub935 = fsub double %mul932, %mul934
  %mul937 = fmul double %sub894, %sub923
  %add938 = fadd double %mul937, %sub929
  %mul939 = fmul double %sub894, %add938
  %add940 = fadd double %mul939, %sub935
  %mul941 = fmul double %sub894, %add940
  %add942 = fadd double %sub917, %mul941
  %mul948 = fmul double %sub947, %mul890
  %mul949 = fmul double %265, %mul948
  %add.ptr874.sum776 = or i64 %idx.ext859, 11
  %arrayidx951 = getelementptr inbounds double* %7, i64 %add.ptr874.sum776
  %279 = load double* %arrayidx951, align 8, !tbaa !17
  %mul952 = fmul double %mul948, %279
  %add.ptr874.sum777 = or i64 %idx.ext859, 10
  %arrayidx954 = getelementptr inbounds double* %7, i64 %add.ptr874.sum777
  %280 = load double* %arrayidx954, align 8, !tbaa !17
  %mul955 = fmul double %mul948, %280
  %add.ptr874.sum778 = or i64 %idx.ext859, 9
  %arrayidx957 = getelementptr inbounds double* %7, i64 %add.ptr874.sum778
  %281 = load double* %arrayidx957, align 8, !tbaa !17
  %mul958 = fmul double %mul948, %281
  %mul960 = fmul double %sub894, %mul952
  %add961 = fadd double %mul960, %mul955
  %mul962 = fmul double %sub894, %add961
  %add963 = fadd double %mul958, %mul962
  %mul964 = fmul double %sub894, %add963
  %add965 = fadd double %mul949, %mul964
  %add970 = fadd double %sub923, %mul952
  %add971 = fadd double %sub929, %mul955
  %add972 = fadd double %sub935, %mul958
  %mul975 = fmul double %sub894, 3.000000e+00
  %mul976 = fmul double %mul975, %add970
  %mul977 = fmul double %add971, 2.000000e+00
  %add978 = fadd double %mul976, %mul977
  %mul979 = fmul double %sub894, %add978
  %add980 = fadd double %add972, %mul979
  %mul982 = fmul double %269, -2.000000e+00
  %mul983 = fmul double %mul982, %add980
  %mul988 = fmul double %sub825, %mul983
  %282 = insertelement <2 x double> undef, double %add942, i32 0
  %283 = insertelement <2 x double> %282, double %sub825, i32 1
  %284 = insertelement <2 x double> undef, double %269, i32 0
  %285 = insertelement <2 x double> %284, double %mul988, i32 1
  %286 = fmul <2 x double> %283, %285
  %287 = fadd <2 x double> %248, %286
  %288 = insertelement <2 x double> undef, double %sub831, i32 0
  %289 = insertelement <2 x double> %288, double %sub837, i32 1
  %290 = insertelement <2 x double> undef, double %mul988, i32 0
  %291 = insertelement <2 x double> %290, double %mul988, i32 1
  %292 = fmul <2 x double> %289, %291
  %293 = fadd <2 x double> %249, %292
  %294 = load double* %x995, align 8, !tbaa !72
  %add996 = fadd double %294, %mul988
  store double %add996, double* %x995, align 8, !tbaa !72
  %x997 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext820, i32 0
  %mul1000 = fmul double %sub831, %mul983
  %295 = insertelement <2 x double> undef, double %add965, i32 0
  %296 = insertelement <2 x double> %295, double %sub831, i32 1
  %297 = insertelement <2 x double> undef, double %270, i32 0
  %298 = insertelement <2 x double> %297, double %mul1000, i32 1
  %299 = fmul <2 x double> %296, %298
  %300 = fadd <2 x double> %253, %299
  %301 = load double* %y1005, align 8, !tbaa !73
  %add1006 = fadd double %301, %mul1000
  store double %add1006, double* %y1005, align 8, !tbaa !73
  %302 = bitcast double* %x997 to <2 x double>*
  %303 = load <2 x double>* %302, align 8, !tbaa !17
  %304 = insertelement <2 x double> %290, double %mul1000, i32 1
  %305 = fsub <2 x double> %303, %304
  %306 = bitcast double* %x997 to <2 x double>*
  store <2 x double> %305, <2 x double>* %306, align 8, !tbaa !17
  %mul1010 = fmul double %sub837, %mul983
  %307 = insertelement <2 x double> undef, double %sub837, i32 0
  %308 = insertelement <2 x double> %307, double %sub837, i32 1
  %309 = insertelement <2 x double> undef, double %mul1000, i32 0
  %310 = insertelement <2 x double> %309, double %mul1010, i32 1
  %311 = fmul <2 x double> %308, %310
  %312 = fadd <2 x double> %250, %311
  %313 = load double* %z1013, align 8, !tbaa !74
  %add1014 = fadd double %313, %mul1010
  store double %add1014, double* %z1013, align 8, !tbaa !74
  %z1015 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext820, i32 2
  %314 = load double* %z1015, align 8, !tbaa !74
  %sub1016 = fsub double %314, %mul1010
  store double %sub1016, double* %z1015, align 8, !tbaa !74
  %add.ptr882.sum779 = or i64 %idx.ext859, 13
  %arrayidx1018 = getelementptr inbounds double* %7, i64 %add.ptr882.sum779
  %315 = load double* %arrayidx1018, align 8, !tbaa !17
  %add.ptr882.sum780 = or i64 %idx.ext859, 14
  %arrayidx1020 = getelementptr inbounds double* %7, i64 %add.ptr882.sum780
  %316 = load double* %arrayidx1020, align 8, !tbaa !17
  %add.ptr882.sum781 = or i64 %idx.ext859, 15
  %arrayidx1022 = getelementptr inbounds double* %7, i64 %add.ptr882.sum781
  %317 = load double* %arrayidx1022, align 8, !tbaa !17
  %mul1023 = shl nsw i32 %add846, 2
  %idx.ext1024 = sext i32 %mul1023 to i64
  %add.ptr1025 = getelementptr inbounds double* %8, i64 %idx.ext1024
  %318 = load double* %add.ptr1025, align 8, !tbaa !17
  %mul1027 = fmul double %sub, %318
  %sub1028 = fsub double %266, %mul1027
  %add.ptr1025.sum782 = or i64 %idx.ext1024, 1
  %arrayidx1029 = getelementptr inbounds double* %8, i64 %add.ptr1025.sum782
  %319 = load double* %arrayidx1029, align 8, !tbaa !17
  %mul1030 = fmul double %sub, %319
  %sub1031 = fsub double %315, %mul1030
  %add.ptr1025.sum783 = or i64 %idx.ext1024, 2
  %arrayidx1032 = getelementptr inbounds double* %8, i64 %add.ptr1025.sum783
  %320 = load double* %arrayidx1032, align 8, !tbaa !17
  %mul1033 = fmul double %sub, %320
  %sub1034 = fsub double %316, %mul1033
  %add.ptr1025.sum784 = or i64 %idx.ext1024, 3
  %arrayidx1035 = getelementptr inbounds double* %8, i64 %add.ptr1025.sum784
  %321 = load double* %arrayidx1035, align 8, !tbaa !17
  %mul1036 = fmul double %sub, %321
  %sub1037 = fsub double %317, %mul1036
  %mul1038 = fmul double %mul890, %sub1037
  %mul1039 = fmul double %mul890, %sub1034
  %mul1040 = fmul double %mul890, %sub1031
  %mul1041 = fmul double %mul890, %sub1028
  %mul1043 = fmul double %sub894, %mul1038
  %add1044 = fadd double %mul1039, %mul1043
  %mul1045 = fmul double %sub894, %add1044
  %add1046 = fadd double %mul1040, %mul1045
  %mul1047 = fmul double %sub894, %add1046
  %add1048 = fadd double %mul1041, %mul1047
  %322 = insertelement <2 x double> %295, double %add1048, i32 1
  %323 = insertelement <2 x double> %284, double %269, i32 1
  %324 = fmul <2 x double> %322, %323
  %325 = fadd <2 x double> %247, %324
  %326 = insertelement <2 x double> undef, double %add1048, i32 0
  %327 = insertelement <2 x double> %326, double %add942, i32 1
  %328 = insertelement <2 x double> %297, double %270, i32 1
  %329 = fmul <2 x double> %327, %328
  %330 = fadd <2 x double> %246, %329
  %mul1055 = fmul double %mul975, %mul1038
  %mul1056 = fmul double %mul1039, 2.000000e+00
  %add1057 = fadd double %mul1056, %mul1055
  %mul1058 = fmul double %sub894, %add1057
  %add1059 = fadd double %mul1040, %mul1058
  %mul1061 = fmul double %add1059, -2.000000e+00
  %mul1062 = fmul double %269, %mul1061
  %mul1067 = fmul double %sub825, %mul1062
  %331 = insertelement <2 x double> undef, double %sub825, i32 0
  %332 = insertelement <2 x double> %331, double %sub831, i32 1
  %333 = insertelement <2 x double> undef, double %mul1067, i32 0
  %334 = insertelement <2 x double> %333, double %mul1067, i32 1
  %335 = fmul <2 x double> %332, %334
  %336 = fadd <2 x double> %251, %335
  %337 = load double* %x1074, align 8, !tbaa !72
  %add1075 = fadd double %337, %mul1067
  store double %add1075, double* %x1074, align 8, !tbaa !72
  %x1076 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext820, i32 0
  %mul1079 = fmul double %sub831, %mul1062
  %338 = insertelement <2 x double> undef, double %mul1079, i32 0
  %339 = insertelement <2 x double> %338, double %mul1079, i32 1
  %340 = fmul <2 x double> %289, %339
  %341 = fadd <2 x double> %252, %340
  %342 = load double* %y1084, align 8, !tbaa !73
  %add1085 = fadd double %342, %mul1079
  store double %add1085, double* %y1084, align 8, !tbaa !73
  %343 = bitcast double* %x1076 to <2 x double>*
  %344 = load <2 x double>* %343, align 8, !tbaa !17
  %345 = insertelement <2 x double> %333, double %mul1079, i32 1
  %346 = fsub <2 x double> %344, %345
  %347 = bitcast double* %x1076 to <2 x double>*
  store <2 x double> %346, <2 x double>* %347, align 8, !tbaa !17
  %mul1089 = fmul double %sub837, %mul1062
  %348 = insertelement <2 x double> %333, double %mul1089, i32 1
  %349 = fmul <2 x double> %308, %348
  %350 = fadd <2 x double> %254, %349
  %351 = load double* %z1092, align 8, !tbaa !74
  %add1093 = fadd double %351, %mul1089
  store double %add1093, double* %z1092, align 8, !tbaa !74
  %z1094 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext820, i32 2
  %352 = load double* %z1094, align 8, !tbaa !74
  %sub1095 = fsub double %352, %mul1089
  store double %sub1095, double* %z1094, align 8, !tbaa !74
  %indvars.iv.next1114 = add nuw nsw i64 %indvars.iv1113, 1
  %lftr.wideiv1115 = trunc i64 %indvars.iv.next1114 to i32
  %exitcond1116 = icmp eq i32 %lftr.wideiv1115, %conv812
  br i1 %exitcond1116, label %for.end1098, label %for.body815

for.end1098:                                      ; preds = %for.body815, %for.end807
  %353 = phi <2 x double> [ %237, %for.end807 ], [ %330, %for.body815 ]
  %354 = phi <2 x double> [ %238, %for.end807 ], [ %325, %for.body815 ]
  %355 = phi <2 x double> [ %239, %for.end807 ], [ %287, %for.body815 ]
  %356 = phi <2 x double> [ %240, %for.end807 ], [ %293, %for.body815 ]
  %357 = phi <2 x double> [ %241, %for.end807 ], [ %312, %for.body815 ]
  %358 = phi <2 x double> [ %242, %for.end807 ], [ %336, %for.body815 ]
  %359 = phi <2 x double> [ %243, %for.end807 ], [ %341, %for.body815 ]
  %360 = phi <2 x double> [ %244, %for.end807 ], [ %300, %for.body815 ]
  %361 = phi <2 x double> [ %245, %for.end807 ], [ %350, %for.body815 ]
  %conv1103 = trunc i64 %sub.ptr.div569 to i32
  %cmp1105989 = icmp sgt i32 %conv1103, 0
  br i1 %cmp1105989, label %for.body1106.lr.ph, label %for.inc1248

for.body1106.lr.ph:                               ; preds = %for.end1098
  %362 = extractelement <2 x double> %353, i32 0
  %363 = extractelement <2 x double> %354, i32 1
  %364 = extractelement <2 x double> %354, i32 0
  %x1223 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1233 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1241 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %365 = insertelement <2 x double> undef, double %364, i32 0
  br label %for.body1106

for.body1106:                                     ; preds = %for.body1106, %for.body1106.lr.ph
  %indvars.iv1117 = phi i64 [ 0, %for.body1106.lr.ph ], [ %indvars.iv.next1118, %for.body1106 ]
  %fullElectEnergy.3998 = phi double [ %363, %for.body1106.lr.ph ], [ %add1199, %for.body1106 ]
  %fullElectEnergy_s.3997 = phi double [ %362, %for.body1106.lr.ph ], [ %add1201, %for.body1106 ]
  %366 = phi <2 x double> [ %358, %for.body1106.lr.ph ], [ %392, %for.body1106 ]
  %367 = phi <2 x double> [ %359, %for.body1106.lr.ph ], [ %399, %for.body1106 ]
  %368 = phi <2 x double> [ %361, %for.body1106.lr.ph ], [ %410, %for.body1106 ]
  %arrayidx1109 = getelementptr inbounds i32* %cond162857, i64 %indvars.iv1117
  %369 = load i32* %arrayidx1109, align 4, !tbaa !11
  %idx.ext1111 = sext i32 %369 to i64
  %x1115 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1111, i32 0, i32 0
  %370 = load double* %x1115, align 8, !tbaa !59
  %sub1116 = fsub double %78, %370
  %mul1118 = fmul double %sub1116, %sub1116
  %y1121 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1111, i32 0, i32 1
  %371 = load double* %y1121, align 8, !tbaa !61
  %sub1122 = fsub double %79, %371
  %mul1123 = fmul double %sub1122, %sub1122
  %add1124 = fadd double %mul1118, %mul1123
  %z1127 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1111, i32 0, i32 2
  %372 = load double* %z1127, align 8, !tbaa !62
  %sub1128 = fsub double %80, %372
  %mul1129 = fmul double %sub1128, %sub1128
  %add1130 = fadd double %add1124, %mul1129
  %conv1132 = fptrunc double %add1130 to float
  %373 = bitcast float %conv1132 to i32
  %shr1136 = ashr i32 %373, 17
  %add1137 = add nsw i32 %shr1136, %mul
  %mul1139 = shl nsw i32 %add1137, 4
  %idx.ext1140 = sext i32 %mul1139 to i64
  %add.ptr1142.sum749 = or i64 %idx.ext1140, 12
  %add.ptr1143 = getelementptr inbounds double* %7, i64 %add.ptr1142.sum749
  %374 = load double* %add.ptr1143, align 8, !tbaa !17
  %and1147 = and i32 %373, -131072
  %charge1149 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1111, i32 1
  %375 = load float* %charge1149, align 4, !tbaa !63
  %conv1150 = fpext float %375 to double
  %mul1151 = fmul double %mul377, %conv1150
  %376 = bitcast i32 %and1147 to float
  %conv1154 = fpext float %376 to double
  %sub1155 = fsub double %add1130, %conv1154
  %partition1157 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1111, i32 2
  %377 = bitcast [4 x i8]* %partition1157 to i32*
  %bf.load1158 = load i32* %377, align 4
  %bf.lshr1159 = lshr i32 %bf.load1158, 28
  %mul1161 = shl nuw nsw i32 %bf.lshr1159, 1
  %idxprom1162750 = zext i32 %mul1161 to i64
  %add.ptr373.sum = add i64 %idxprom1162750, %idx.ext372743
  %arrayidx1163 = getelementptr inbounds double* %103, i64 %add.ptr373.sum
  %378 = load double* %arrayidx1163, align 8, !tbaa !17
  %add1166751 = or i32 %mul1161, 1
  %idxprom1167752 = zext i32 %add1166751 to i64
  %add.ptr373.sum753 = add i64 %idxprom1167752, %idx.ext372743
  %arrayidx1168 = getelementptr inbounds double* %103, i64 %add.ptr373.sum753
  %379 = load double* %arrayidx1168, align 8, !tbaa !17
  %add.ptr1143.sum754 = or i64 %idx.ext1140, 13
  %arrayidx1170 = getelementptr inbounds double* %7, i64 %add.ptr1143.sum754
  %380 = load double* %arrayidx1170, align 8, !tbaa !17
  %add.ptr1143.sum755 = or i64 %idx.ext1140, 14
  %arrayidx1172 = getelementptr inbounds double* %7, i64 %add.ptr1143.sum755
  %381 = load double* %arrayidx1172, align 8, !tbaa !17
  %add.ptr1143.sum756 = or i64 %idx.ext1140, 15
  %arrayidx1174 = getelementptr inbounds double* %7, i64 %add.ptr1143.sum756
  %382 = load double* %arrayidx1174, align 8, !tbaa !17
  %mul1176 = shl nsw i32 %add1137, 2
  %idx.ext1177 = sext i32 %mul1176 to i64
  %add.ptr1178 = getelementptr inbounds double* %8, i64 %idx.ext1177
  %383 = load double* %add.ptr1178, align 8, !tbaa !17
  %sub1180 = fsub double %374, %383
  %add.ptr1178.sum757 = or i64 %idx.ext1177, 1
  %arrayidx1181 = getelementptr inbounds double* %8, i64 %add.ptr1178.sum757
  %384 = load double* %arrayidx1181, align 8, !tbaa !17
  %sub1182 = fsub double %380, %384
  %add.ptr1178.sum758 = or i64 %idx.ext1177, 2
  %arrayidx1183 = getelementptr inbounds double* %8, i64 %add.ptr1178.sum758
  %385 = load double* %arrayidx1183, align 8, !tbaa !17
  %sub1184 = fsub double %381, %385
  %add.ptr1178.sum759 = or i64 %idx.ext1177, 3
  %arrayidx1185 = getelementptr inbounds double* %8, i64 %add.ptr1178.sum759
  %386 = load double* %arrayidx1185, align 8, !tbaa !17
  %sub1186 = fsub double %382, %386
  %mul1187 = fmul double %mul1151, %sub1186
  %mul1188 = fmul double %mul1151, %sub1184
  %mul1189 = fmul double %mul1151, %sub1182
  %mul1190 = fmul double %mul1151, %sub1180
  %mul1192 = fmul double %sub1155, %mul1187
  %add1193 = fadd double %mul1188, %mul1192
  %mul1194 = fmul double %sub1155, %add1193
  %add1195 = fadd double %mul1189, %mul1194
  %mul1196 = fmul double %sub1155, %add1195
  %add1197 = fadd double %mul1190, %mul1196
  %mul1198 = fmul double %378, %add1197
  %add1199 = fadd double %fullElectEnergy.3998, %mul1198
  %mul1200 = fmul double %379, %add1197
  %add1201 = fadd double %fullElectEnergy_s.3997, %mul1200
  %mul1203 = fmul double %sub1155, 3.000000e+00
  %mul1204 = fmul double %mul1203, %mul1187
  %mul1205 = fmul double %mul1188, 2.000000e+00
  %add1206 = fadd double %mul1205, %mul1204
  %mul1207 = fmul double %sub1155, %add1206
  %add1208 = fadd double %mul1189, %mul1207
  %mul1210 = fmul double %add1208, -2.000000e+00
  %mul1211 = fmul double %378, %mul1210
  %mul1216 = fmul double %sub1116, %mul1211
  %387 = insertelement <2 x double> undef, double %sub1116, i32 0
  %388 = insertelement <2 x double> %387, double %sub1122, i32 1
  %389 = insertelement <2 x double> undef, double %mul1216, i32 0
  %390 = insertelement <2 x double> %389, double %mul1216, i32 1
  %391 = fmul <2 x double> %388, %390
  %392 = fadd <2 x double> %366, %391
  %393 = load double* %x1223, align 8, !tbaa !72
  %add1224 = fadd double %393, %mul1216
  store double %add1224, double* %x1223, align 8, !tbaa !72
  %x1225 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1111, i32 0
  %mul1228 = fmul double %sub1122, %mul1211
  %394 = insertelement <2 x double> undef, double %sub1122, i32 0
  %395 = insertelement <2 x double> %394, double %sub1128, i32 1
  %396 = insertelement <2 x double> undef, double %mul1228, i32 0
  %397 = insertelement <2 x double> %396, double %mul1228, i32 1
  %398 = fmul <2 x double> %395, %397
  %399 = fadd <2 x double> %367, %398
  %400 = load double* %y1233, align 8, !tbaa !73
  %add1234 = fadd double %400, %mul1228
  store double %add1234, double* %y1233, align 8, !tbaa !73
  %401 = bitcast double* %x1225 to <2 x double>*
  %402 = load <2 x double>* %401, align 8, !tbaa !17
  %403 = insertelement <2 x double> %389, double %mul1228, i32 1
  %404 = fsub <2 x double> %402, %403
  %405 = bitcast double* %x1225 to <2 x double>*
  store <2 x double> %404, <2 x double>* %405, align 8, !tbaa !17
  %mul1238 = fmul double %sub1128, %mul1211
  %406 = insertelement <2 x double> undef, double %sub1128, i32 0
  %407 = insertelement <2 x double> %406, double %sub1128, i32 1
  %408 = insertelement <2 x double> %389, double %mul1238, i32 1
  %409 = fmul <2 x double> %407, %408
  %410 = fadd <2 x double> %368, %409
  %411 = load double* %z1241, align 8, !tbaa !74
  %add1242 = fadd double %411, %mul1238
  store double %add1242, double* %z1241, align 8, !tbaa !74
  %z1243 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1111, i32 2
  %412 = load double* %z1243, align 8, !tbaa !74
  %sub1244 = fsub double %412, %mul1238
  store double %sub1244, double* %z1243, align 8, !tbaa !74
  %indvars.iv.next1118 = add nuw nsw i64 %indvars.iv1117, 1
  %lftr.wideiv1119 = trunc i64 %indvars.iv.next1118 to i32
  %exitcond1120 = icmp eq i32 %lftr.wideiv1119, %conv1103
  br i1 %exitcond1120, label %for.inc1248.loopexit, label %for.body1106

for.inc1248.loopexit:                             ; preds = %for.body1106
  %413 = insertelement <2 x double> undef, double %add1201, i32 0
  %414 = shufflevector <2 x double> %413, <2 x double> %353, <2 x i32> <i32 0, i32 3>
  %415 = insertelement <2 x double> %365, double %add1199, i32 1
  br label %for.inc1248

for.inc1248:                                      ; preds = %for.inc1248.loopexit, %for.end1098, %cond.end354, %if.then226
  %pairCount.3 = phi i32 [ %add222, %if.then226 ], [ %pairCount.1, %cond.end354 ], [ %pairCount.2, %for.end1098 ], [ %pairCount.2, %for.inc1248.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.01011, %if.then226 ], [ 0, %cond.end354 ], [ %pairlistindex.1, %for.end1098 ], [ %pairlistindex.1, %for.inc1248.loopexit ]
  %i.2 = phi i32 [ %add228, %if.then226 ], [ %add357, %cond.end354 ], [ %i.11012, %for.end1098 ], [ %i.11012, %for.inc1248.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.01049, %if.then226 ], [ %exclChecksum.01049, %cond.end354 ], [ %conv579, %for.end1098 ], [ %conv579, %for.inc1248.loopexit ]
  %416 = phi <2 x double> [ %64, %if.then226 ], [ %64, %cond.end354 ], [ %353, %for.end1098 ], [ %414, %for.inc1248.loopexit ]
  %417 = phi <2 x double> [ %65, %if.then226 ], [ %65, %cond.end354 ], [ %354, %for.end1098 ], [ %415, %for.inc1248.loopexit ]
  %418 = phi <2 x double> [ %66, %if.then226 ], [ %66, %cond.end354 ], [ %355, %for.end1098 ], [ %355, %for.inc1248.loopexit ]
  %419 = phi <2 x double> [ %67, %if.then226 ], [ %67, %cond.end354 ], [ %356, %for.end1098 ], [ %356, %for.inc1248.loopexit ]
  %420 = phi <2 x double> [ %68, %if.then226 ], [ %68, %cond.end354 ], [ %357, %for.end1098 ], [ %357, %for.inc1248.loopexit ]
  %421 = phi <2 x double> [ %69, %if.then226 ], [ %69, %cond.end354 ], [ %358, %for.end1098 ], [ %392, %for.inc1248.loopexit ]
  %422 = phi <2 x double> [ %70, %if.then226 ], [ %70, %cond.end354 ], [ %359, %for.end1098 ], [ %399, %for.inc1248.loopexit ]
  %423 = phi <2 x double> [ %71, %if.then226 ], [ %71, %cond.end354 ], [ %360, %for.end1098 ], [ %360, %for.inc1248.loopexit ]
  %424 = phi <2 x double> [ %72, %if.then226 ], [ %72, %cond.end354 ], [ %361, %for.end1098 ], [ %410, %for.inc1248.loopexit ]
  %inc1249 = add nsw i32 %i.2, 1
  %cmp186 = icmp slt i32 %inc1249, %13
  br i1 %cmp186, label %for.body187, label %for.end1250

for.end1250:                                      ; preds = %for.inc1248, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1248 ]
  %425 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %416, %for.inc1248 ]
  %426 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %417, %for.inc1248 ]
  %427 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %418, %for.inc1248 ]
  %428 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %419, %for.inc1248 ]
  %429 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %420, %for.inc1248 ]
  %430 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %421, %for.inc1248 ]
  %431 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %422, %for.inc1248 ]
  %432 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %423, %for.inc1248 ]
  %433 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %424, %for.inc1248 ]
  %434 = extractelement <2 x double> %433, i32 1
  %arraydecay1251 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1252 = icmp eq i32* %cond83183311361142, %arraydecay1251
  br i1 %cmp1252, label %if.end1257, label %delete.notnull1255

delete.notnull1255:                               ; preds = %for.end1250
  %435 = bitcast i32* %cond83183311361142 to i8*
  call void @_ZdaPv(i8* %435) #7
  br label %if.end1257

if.end1257:                                       ; preds = %delete.notnull1255, %for.end1250
  %arraydecay1258 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1259 = icmp eq i32* %cond1983511341143, %arraydecay1258
  br i1 %cmp1259, label %if.end1264, label %delete.notnull1262

delete.notnull1262:                               ; preds = %if.end1257
  %436 = bitcast i32* %cond1983511341143 to i8*
  call void @_ZdaPv(i8* %436) #7
  br label %if.end1264

if.end1264:                                       ; preds = %delete.notnull1262, %if.end1257
  %arraydecay1265 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1266 = icmp eq i32* %cond3011381141, %arraydecay1265
  br i1 %cmp1266, label %if.end1271, label %delete.notnull1269

delete.notnull1269:                               ; preds = %if.end1264
  %437 = bitcast i32* %cond3011381141 to i8*
  call void @_ZdaPv(i8* %437) #7
  br label %if.end1271

if.end1271:                                       ; preds = %delete.notnull1269, %if.end1264
  %arraydecay1272 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1273 = icmp eq i32* %cond129839841847853, %arraydecay1272
  br i1 %cmp1273, label %if.end1278, label %delete.notnull1276

delete.notnull1276:                               ; preds = %if.end1271
  %438 = bitcast i32* %cond129839841847853 to i8*
  call void @_ZdaPv(i8* %438) #7
  br label %if.end1278

if.end1278:                                       ; preds = %delete.notnull1276, %if.end1271
  %arraydecay1279 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1280 = icmp eq i32* %cond140843845855, %arraydecay1279
  br i1 %cmp1280, label %if.end1285, label %delete.notnull1283

delete.notnull1283:                               ; preds = %if.end1278
  %439 = bitcast i32* %cond140843845855 to i8*
  call void @_ZdaPv(i8* %439) #7
  br label %if.end1285

if.end1285:                                       ; preds = %delete.notnull1283, %if.end1278
  %arraydecay1286 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1287 = icmp eq i32* %cond151849851, %arraydecay1286
  br i1 %cmp1287, label %if.end1292, label %delete.notnull1290

delete.notnull1290:                               ; preds = %if.end1285
  %440 = bitcast i32* %cond151849851 to i8*
  call void @_ZdaPv(i8* %440) #7
  br label %if.end1292

if.end1292:                                       ; preds = %delete.notnull1290, %if.end1285
  %arraydecay1293 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1294 = icmp eq i32* %cond162857, %arraydecay1293
  br i1 %cmp1294, label %if.end1299, label %delete.notnull1297

delete.notnull1297:                               ; preds = %if.end1292
  %441 = bitcast i32* %cond162857 to i8*
  call void @_ZdaPv(i8* %441) #7
  br label %if.end1299

if.end1299:                                       ; preds = %delete.notnull1297, %if.end1292
  %arraydecay1300 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1301 = icmp eq i32* %cond173, %arraydecay1300
  br i1 %cmp1301, label %if.end1306, label %delete.notnull1304

delete.notnull1304:                               ; preds = %if.end1299
  %442 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %442) #7
  br label %if.end1306

if.end1306:                                       ; preds = %delete.notnull1304, %if.end1299
  %conv1307 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1308 = getelementptr inbounds double* %1, i64 22
  %arrayidx1310 = getelementptr inbounds double* %1, i64 2
  %443 = bitcast double* %arrayidx1308 to <2 x double>*
  %444 = load <2 x double>* %443, align 8, !tbaa !17
  %445 = insertelement <2 x double> undef, double %conv1307, i32 0
  %446 = shufflevector <2 x double> %445, <2 x double> %432, <2 x i32> <i32 0, i32 2>
  %447 = fadd <2 x double> %446, %444
  %448 = bitcast double* %arrayidx1308 to <2 x double>*
  store <2 x double> %447, <2 x double>* %448, align 8, !tbaa !17
  %449 = bitcast double* %arrayidx1310 to <2 x double>*
  %450 = load <2 x double>* %449, align 8, !tbaa !17
  %451 = fadd <2 x double> %427, %450
  %452 = bitcast double* %arrayidx1310 to <2 x double>*
  store <2 x double> %451, <2 x double>* %452, align 8, !tbaa !17
  %arrayidx1320 = getelementptr inbounds double* %1, i64 4
  %453 = bitcast double* %arrayidx1320 to <2 x double>*
  %454 = load <2 x double>* %453, align 8, !tbaa !17
  %455 = fadd <2 x double> %428, %454
  %456 = bitcast double* %arrayidx1320 to <2 x double>*
  store <2 x double> %455, <2 x double>* %456, align 8, !tbaa !17
  %arrayidx1324 = getelementptr inbounds double* %1, i64 6
  %457 = bitcast double* %arrayidx1324 to <2 x double>*
  %458 = load <2 x double>* %457, align 8, !tbaa !17
  %459 = shufflevector <2 x double> %428, <2 x double> %432, <2 x i32> <i32 0, i32 3>
  %460 = fadd <2 x double> %459, %458
  %461 = bitcast double* %arrayidx1324 to <2 x double>*
  store <2 x double> %460, <2 x double>* %461, align 8, !tbaa !17
  %arrayidx1328 = getelementptr inbounds double* %1, i64 8
  %462 = bitcast double* %arrayidx1328 to <2 x double>*
  %463 = load <2 x double>* %462, align 8, !tbaa !17
  %464 = shufflevector <2 x double> %429, <2 x double> %428, <2 x i32> <i32 0, i32 3>
  %465 = fadd <2 x double> %464, %463
  %466 = bitcast double* %arrayidx1328 to <2 x double>*
  store <2 x double> %465, <2 x double>* %466, align 8, !tbaa !17
  %arrayidx1332 = getelementptr inbounds double* %1, i64 10
  %467 = bitcast double* %arrayidx1332 to <2 x double>*
  %468 = load <2 x double>* %467, align 8, !tbaa !17
  %469 = fadd <2 x double> %429, %468
  %470 = bitcast double* %arrayidx1332 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 8, !tbaa !17
  %471 = bitcast double* %1 to <2 x double>*
  %472 = load <2 x double>* %471, align 8, !tbaa !17
  %473 = fadd <2 x double> %426, %472
  %474 = bitcast double* %1 to <2 x double>*
  store <2 x double> %473, <2 x double>* %474, align 8, !tbaa !17
  %arrayidx1338 = getelementptr inbounds double* %1, i64 24
  %475 = bitcast double* %arrayidx1338 to <2 x double>*
  %476 = load <2 x double>* %475, align 8, !tbaa !17
  %477 = fadd <2 x double> %425, %476
  %478 = bitcast double* %arrayidx1338 to <2 x double>*
  store <2 x double> %477, <2 x double>* %478, align 8, !tbaa !17
  %arrayidx1340 = getelementptr inbounds double* %1, i64 12
  %479 = bitcast double* %arrayidx1340 to <2 x double>*
  %480 = load <2 x double>* %479, align 8, !tbaa !17
  %481 = fadd <2 x double> %430, %480
  %482 = bitcast double* %arrayidx1340 to <2 x double>*
  store <2 x double> %481, <2 x double>* %482, align 8, !tbaa !17
  %arrayidx1344 = getelementptr inbounds double* %1, i64 14
  %483 = bitcast double* %arrayidx1344 to <2 x double>*
  %484 = load <2 x double>* %483, align 8, !tbaa !17
  %485 = shufflevector <2 x double> %433, <2 x double> %430, <2 x i32> <i32 0, i32 3>
  %486 = fadd <2 x double> %485, %484
  %487 = bitcast double* %arrayidx1344 to <2 x double>*
  store <2 x double> %486, <2 x double>* %487, align 8, !tbaa !17
  %arrayidx1348 = getelementptr inbounds double* %1, i64 16
  %488 = bitcast double* %arrayidx1348 to <2 x double>*
  %489 = load <2 x double>* %488, align 8, !tbaa !17
  %490 = fadd <2 x double> %431, %489
  %491 = bitcast double* %arrayidx1348 to <2 x double>*
  store <2 x double> %490, <2 x double>* %491, align 8, !tbaa !17
  %arrayidx1352 = getelementptr inbounds double* %1, i64 18
  %492 = bitcast double* %arrayidx1352 to <2 x double>*
  %493 = load <2 x double>* %492, align 8, !tbaa !17
  %494 = shufflevector <2 x double> %433, <2 x double> %431, <2 x i32> <i32 0, i32 3>
  %495 = fadd <2 x double> %494, %493
  %496 = bitcast double* %arrayidx1352 to <2 x double>*
  store <2 x double> %495, <2 x double>* %496, align 8, !tbaa !17
  %arrayidx1356 = getelementptr inbounds double* %1, i64 20
  %497 = load double* %arrayidx1356, align 8, !tbaa !17
  %add1357 = fadd double %434, %497
  store double %add1357, double* %arrayidx1356, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %46) #6
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1306, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil30calc_self_energy_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311120 = icmp sgt i32 %14, 0
  br i1 %cmp311120, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301195 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond8658671193 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond198691191 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1183 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1184, %for.inc ]
  %g.01121 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1183, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01121, 1
  %idxprom41 = sext i32 %g.01121 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond8658671193, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1183 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01121, %for.body ]
  %indvars.iv.next1184 = add nuw nsw i64 %indvars.iv1183, 1
  %lftr.wideiv1185 = trunc i64 %indvars.iv.next1184 to i32
  %exitcond1186 = icmp eq i32 %lftr.wideiv1185, %14
  br i1 %exitcond1186, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond8658671193, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond8658671193, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1200 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1986911901199 = phi i32* [ %cond198691191, %for.end ], [ %cond198691191, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond86586711921198 = phi i32* [ %cond8658671193, %for.end ], [ %cond8658671193, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3011941197 = phi i32* [ %cond301195, %for.end ], [ %cond301195, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp561114 = icmp sgt i32 %g.0.lcssa1200, 0
  br i1 %cmp561114, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1179 = phi i64 [ %indvars.iv.next1180, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.01116 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.01115 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond86586711921198, i64 %indvars.iv1179
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.01116, 1
  %idxprom68 = sext i32 %fixg.01116 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1986911901199, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.01115, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.01116, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1180 = add nuw nsw i64 %indvars.iv1179, 1
  %lftr.wideiv1181 = trunc i64 %indvars.iv.next1180 to i32
  %exitcond1182 = icmp eq i32 %lftr.wideiv1181, %g.0.lcssa1200
  br i1 %exitcond1182, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond86586711921198, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %36 = bitcast i32* %cond86586711921198 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1986911901199, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %37 = bitcast i32* %cond1986911901199 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3011941197, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %38 = bitcast i32* %cond3011941197 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1986911901199, i64 %idxprom99
  %39 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1986911901199, i64 %idxprom101
  store i32 %39, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2872 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %40 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %14, 5
  %45 = sext i32 %add108 to i64
  %46 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %45, i64 4)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 -1, i64 %48
  %call109 = call noalias i8* @_Znam(i64 %49) #8
  %50 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %49) #8
  %51 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %49) #8
  %52 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %49) #8
  %53 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %49) #8
  %54 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147891 = phi i32* [ %arraydecay139, %cond.true149 ], [ %53, %cond.false151 ]
  %cond125877879889 = phi i32* [ %arraydecay117, %cond.true149 ], [ %51, %cond.false151 ]
  %cond114873875881887 = phi i32* [ %arraydecay106, %cond.true149 ], [ %50, %cond.false151 ]
  %cond136883885 = phi i32* [ %arraydecay128, %cond.true149 ], [ %52, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %54, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %55 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %56 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %57 = load %class.Vector** %arrayidx162, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %58 = load %class.Vector** %arrayidx164, align 8, !tbaa !1
  %sub165 = add nsw i32 %13, -1
  %mul166 = mul nsw i32 %sub165, %14
  %div = sdiv i32 %mul166, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %59 = load i32* %minPart, align 4, !tbaa !50
  %mul167 = mul nsw i32 %59, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %60 = load i32* %numParts, align 4, !tbaa !51
  %div168 = sdiv i32 %mul167, %60
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %61 = load i32* %maxPart, align 4, !tbaa !52
  %mul169 = mul nsw i32 %61, %div
  %div171 = sdiv i32 %mul169, %60
  %cmp1741068 = icmp sgt i32 %sub165, 0
  br i1 %cmp1741068, label %for.body175.lr.ph, label %for.end1297

for.body175.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i862 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast554 = ptrtoint i32* %cond125877879889 to i64
  %sub.ptr.rhs.cast614 = ptrtoint i32* %cond147891 to i64
  %sub.ptr.rhs.cast621 = ptrtoint i32* %cond158 to i64
  %sub994 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3011941197 to i64
  %sub.ptr.rhs.cast372 = ptrtoint i32* %cond114873875881887 to i64
  br label %for.body175

for.body175:                                      ; preds = %for.inc1295, %for.body175.lr.ph
  %exclChecksum.01094 = phi i32 [ 0, %for.body175.lr.ph ], [ %exclChecksum.10, %for.inc1295 ]
  %i.01075 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc1296, %for.inc1295 ]
  %j_hgroup.01074 = phi i32 [ 0, %for.body175.lr.ph ], [ %j_hgroup.3, %for.inc1295 ]
  %g_lower.01073 = phi i32 [ 0, %for.body175.lr.ph ], [ %g_lower.4, %for.inc1295 ]
  %fixg_lower.01072 = phi i32 [ 0, %for.body175.lr.ph ], [ %fixg_lower.4, %for.inc1295 ]
  %pairlistindex.01071 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistindex.3, %for.inc1295 ]
  %pairlistoffset.01070 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistoffset.2, %for.inc1295 ]
  %pairCount.01069 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairCount.3, %for.inc1295 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %434, %for.inc1295 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %435, %for.inc1295 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %436, %for.inc1295 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %437, %for.inc1295 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %438, %for.inc1295 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %439, %for.inc1295 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %440, %for.inc1295 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %441, %for.inc1295 ]
  %70 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %442, %for.inc1295 ]
  %idxprom176 = sext i32 %i.01075 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 2
  %71 = bitcast [4 x i8]* %id to i32*
  %bf.load178 = load i32* %71, align 4
  %bf.clear179 = and i32 %bf.load178, 4194303
  %idxprom.i893 = zext i32 %bf.clear179 to i64
  %72 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i893, i32 0
  %73 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i893, i32 1
  %74 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i893, i32 2
  %75 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %73 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 0
  %76 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 1
  %77 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 2
  %78 = load double* %z, align 8, !tbaa !62
  %arrayidx184 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176
  %arrayidx186 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176
  %79 = and i32 %bf.load178, 62914560
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %if.else, label %if.then198

if.then198:                                       ; preds = %for.body175
  %bf.lshr201 = lshr i32 %bf.load178, 22
  %bf.clear202 = and i32 %bf.lshr201, 7
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.end224, label %if.then204

if.then204:                                       ; preds = %if.then198
  %sub210 = sub nsw i32 %sub165, %i.01075
  %mul211 = mul nsw i32 %bf.clear202, %sub210
  %add212 = add nsw i32 %mul211, %pairCount.01069
  %sub213 = add nsw i32 %bf.clear202, -1
  %mul214 = mul nsw i32 %sub213, %bf.clear202
  %div215.neg = sdiv i32 %mul214, -2
  %sub216 = add i32 %add212, %div215.neg
  %cmp217 = icmp sge i32 %pairCount.01069, %div168
  %cmp219 = icmp slt i32 %pairCount.01069, %div171
  %or.cond851 = and i1 %cmp217, %cmp219
  br i1 %or.cond851, label %if.end224, label %if.then220

if.then220:                                       ; preds = %if.then204
  %add222 = add nsw i32 %sub213, %i.01075
  br label %for.inc1295

if.end224:                                        ; preds = %if.then204, %if.then198
  %pairCount.1 = phi i32 [ %pairCount.01069, %if.then198 ], [ %sub216, %if.then204 ]
  %81 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool225 = icmp eq i32 %81, 0
  br i1 %tobool225, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end224
  %bf.clear229 = and i32 %bf.load178, 134217728
  %tobool230 = icmp ne i32 %bf.clear229, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end224
  %82 = phi i1 [ false, %if.end224 ], [ %tobool230, %land.rhs ]
  br i1 %tobool203, label %if.end259, label %if.then236

if.then236:                                       ; preds = %land.end
  %add241 = add nsw i32 %bf.clear202, %i.01075
  %cmp242900 = icmp slt i32 %g_lower.01073, %g.0.lcssa1200
  br i1 %cmp242900, label %land.rhs243.lr.ph, label %while.cond249.loopexit

land.rhs243.lr.ph:                                ; preds = %if.then236
  %83 = sext i32 %g_lower.01073 to i64
  br label %land.rhs243

while.cond:                                       ; preds = %land.rhs243
  %84 = trunc i64 %indvars.iv.next to i32
  %cmp242 = icmp slt i32 %84, %g.0.lcssa1200
  br i1 %cmp242, label %land.rhs243, label %while.cond249.loopexit

land.rhs243:                                      ; preds = %while.cond, %land.rhs243.lr.ph
  %indvars.iv = phi i64 [ %83, %land.rhs243.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1901 = phi i32 [ %g_lower.01073, %land.rhs243.lr.ph ], [ %inc248, %while.cond ]
  %arrayidx245 = getelementptr inbounds i32* %cond86586711921198, i64 %indvars.iv
  %85 = load i32* %arrayidx245, align 4, !tbaa !11
  %cmp246 = icmp slt i32 %85, %add241
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc248 = add nsw i32 %g_lower.1901, 1
  br i1 %cmp246, label %while.cond, label %while.cond249.loopexit

while.cond249.loopexit:                           ; preds = %land.rhs243, %while.cond, %if.then236
  %g_lower.1.lcssa = phi i32 [ %g_lower.01073, %if.then236 ], [ %inc248, %while.cond ], [ %g_lower.1901, %land.rhs243 ]
  %cmp250902 = icmp slt i32 %fixg_lower.01072, %fixg.2872
  br i1 %cmp250902, label %land.rhs251.lr.ph, label %if.end259

land.rhs251.lr.ph:                                ; preds = %while.cond249.loopexit
  %86 = sext i32 %fixg_lower.01072 to i64
  br label %land.rhs251

while.cond249:                                    ; preds = %land.rhs251
  %87 = trunc i64 %indvars.iv.next1129 to i32
  %cmp250 = icmp slt i32 %87, %fixg.2872
  br i1 %cmp250, label %land.rhs251, label %if.end259

land.rhs251:                                      ; preds = %while.cond249, %land.rhs251.lr.ph
  %indvars.iv1128 = phi i64 [ %86, %land.rhs251.lr.ph ], [ %indvars.iv.next1129, %while.cond249 ]
  %fixg_lower.1903 = phi i32 [ %fixg_lower.01072, %land.rhs251.lr.ph ], [ %inc257, %while.cond249 ]
  %arrayidx253 = getelementptr inbounds i32* %cond1986911901199, i64 %indvars.iv1128
  %88 = load i32* %arrayidx253, align 4, !tbaa !11
  %cmp254 = icmp slt i32 %88, %add241
  %indvars.iv.next1129 = add nsw i64 %indvars.iv1128, 1
  %inc257 = add nsw i32 %fixg_lower.1903, 1
  br i1 %cmp254, label %while.cond249, label %if.end259

if.end259:                                        ; preds = %land.rhs251, %while.cond249, %while.cond249.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.01072, %land.end ], [ %fixg_lower.01072, %while.cond249.loopexit ], [ %fixg_lower.1903, %land.rhs251 ], [ %inc257, %while.cond249 ]
  %g_lower.2 = phi i32 [ %g_lower.01073, %land.end ], [ %g_lower.1.lcssa, %while.cond249.loopexit ], [ %g_lower.1.lcssa, %while.cond249 ], [ %g_lower.1.lcssa, %land.rhs251 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.01074, %land.end ], [ %add241, %while.cond249.loopexit ], [ %add241, %while.cond249 ], [ %add241, %land.rhs251 ]
  %j.1905 = add nsw i32 %i.01075, 1
  %cmp262906 = icmp slt i32 %j.1905, %j_hgroup.1
  br i1 %cmp262906, label %for.body263.lr.ph, label %for.end269

for.body263.lr.ph:                                ; preds = %if.end259
  %89 = add i32 %j_hgroup.1, -1
  %90 = sub i32 %89, %i.01075
  %91 = add i32 %j_hgroup.1, -2
  %92 = sub i32 %91, %i.01075
  %93 = zext i32 %92 to i64
  %94 = add i64 %93, 1
  %end.idx = add i64 %93, 1
  %n.vec = and i64 %94, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1905
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body263.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body263.lr.ph ]
  %95 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1905, %95
  %broadcast.splatinsert1248 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1249 = shufflevector <4 x i32> %broadcast.splatinsert1248, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1250 = add <4 x i32> %broadcast.splat1249, <i32 0, i32 1, i32 2, i32 3>
  %induction1251 = add <4 x i32> %broadcast.splat1249, <i32 4, i32 5, i32 6, i32 7>
  %96 = getelementptr inbounds i32* %cond114873875881887, i64 %index
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %induction1250, <4 x i32>* %97, align 4
  %.sum1254 = or i64 %index, 4
  %98 = getelementptr i32* %cond114873875881887, i64 %.sum1254
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %induction1251, <4 x i32>* %99, align 4
  %index.next = add i64 %index, 8
  %100 = icmp eq i64 %index.next, %n.vec
  br i1 %100, label %middle.block, label %vector.body, !llvm.loop !77

middle.block:                                     ; preds = %vector.body, %for.body263.lr.ph
  %resume.val = phi i64 [ 0, %for.body263.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1246 = phi i32 [ %j.1905, %for.body263.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond261.for.end269_crit_edge, label %for.body263

for.body263:                                      ; preds = %for.body263, %middle.block
  %indvars.iv1130 = phi i64 [ %indvars.iv.next1131, %for.body263 ], [ %resume.val, %middle.block ]
  %j.1908 = phi i32 [ %j.1, %for.body263 ], [ %resume.val1246, %middle.block ]
  %indvars.iv.next1131 = add nuw nsw i64 %indvars.iv1130, 1
  %arrayidx266 = getelementptr inbounds i32* %cond114873875881887, i64 %indvars.iv1130
  store i32 %j.1908, i32* %arrayidx266, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1908, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1131 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %90
  br i1 %exitcond, label %for.cond261.for.end269_crit_edge, label %for.body263, !llvm.loop !78

for.cond261.for.end269_crit_edge:                 ; preds = %for.body263, %middle.block
  %phitmp = sext i32 %90 to i64
  br label %for.end269

for.end269:                                       ; preds = %for.cond261.for.end269_crit_edge, %if.end259
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond261.for.end269_crit_edge ], [ 0, %if.end259 ]
  %add.ptr271 = getelementptr inbounds i32* %cond114873875881887, i64 %pairlistindex.1.lcssa
  %cond276 = select i1 %82, i32* %cond1986911901199, i32* %cond86586711921198
  %cond281 = select i1 %82, i32 %fixg_lower.2, i32 %g_lower.2
  %cond286 = select i1 %82, i32 %fixg.2872, i32 %g.0.lcssa1200
  %cmp287 = icmp slt i32 %cond281, %cond286
  br i1 %cmp287, label %if.then288, label %if.end370

if.then288:                                       ; preds = %for.end269
  %idxprom289 = sext i32 %cond281 to i64
  %arrayidx290 = getelementptr inbounds i32* %cond276, i64 %idxprom289
  %101 = load i32* %arrayidx290, align 4, !tbaa !11
  %idxprom291 = sext i32 %101 to i64
  %x294 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 0
  %102 = load double* %x294, align 8, !tbaa !59
  %y298 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 1
  %103 = load double* %y298, align 8, !tbaa !61
  %z302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 2
  %104 = load double* %z302, align 8, !tbaa !62
  br label %while.cond303.outer

while.cond303.outer:                              ; preds = %if.then330, %if.then288
  %p_j_z.0.ph = phi double [ %104, %if.then288 ], [ %110, %if.then330 ]
  %p_j_y.0.ph = phi double [ %103, %if.then288 ], [ %109, %if.then330 ]
  %p_j_x.0.ph = phi double [ %102, %if.then288 ], [ %108, %if.then330 ]
  %j2.0.ph = phi i32 [ %101, %if.then288 ], [ %107, %if.then330 ]
  %gli.0.ph = phi i32* [ %cond3011941197, %if.then288 ], [ %incdec.ptr, %if.then330 ]
  %g.3.ph = phi i32 [ %cond281, %if.then288 ], [ %inc306, %if.then330 ]
  %105 = sext i32 %g.3.ph to i64
  br label %while.cond303

while.cond303:                                    ; preds = %while.body305, %while.cond303.outer
  %indvars.iv1136 = phi i64 [ %105, %while.cond303.outer ], [ %indvars.iv.next1137, %while.body305 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond303.outer ], [ %110, %while.body305 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond303.outer ], [ %109, %while.body305 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond303.outer ], [ %108, %while.body305 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond303.outer ], [ %107, %while.body305 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond303.outer ], [ %inc306, %while.body305 ]
  %106 = trunc i64 %indvars.iv1136 to i32
  %cmp304 = icmp slt i32 %106, %cond286
  br i1 %cmp304, label %while.body305, label %while.end332

while.body305:                                    ; preds = %while.cond303
  %indvars.iv.next1137 = add nsw i64 %indvars.iv1136, 1
  %inc306 = add nsw i32 %g.3, 1
  %arrayidx308 = getelementptr inbounds i32* %cond276, i64 %indvars.iv.next1137
  %107 = load i32* %arrayidx308, align 4, !tbaa !11
  %sub309 = fsub double %76, %p_j_x.0
  %mul310 = fmul double %sub309, %sub309
  %idxprom311 = sext i32 %107 to i64
  %x314 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 0
  %108 = load double* %x314, align 8, !tbaa !59
  %sub315 = fsub double %77, %p_j_y.0
  %mul316 = fmul double %sub315, %sub315
  %add317 = fadd double %mul316, %mul310
  %y321 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 1
  %109 = load double* %y321, align 8, !tbaa !61
  %sub322 = fsub double %78, %p_j_z.0
  %mul323 = fmul double %sub322, %sub322
  %add324 = fadd double %mul323, %add317
  %z328 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 2
  %110 = load double* %z328, align 8, !tbaa !62
  %cmp329 = fcmp ugt double %add324, %3
  br i1 %cmp329, label %while.cond303, label %if.then330

if.then330:                                       ; preds = %while.body305
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond303.outer

while.end332:                                     ; preds = %while.cond303
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div848 = lshr exact i64 %sub.ptr.sub, 2
  %conv333 = trunc i64 %sub.ptr.div848 to i32
  %cmp335914 = icmp sgt i32 %conv333, 0
  br i1 %cmp335914, label %for.body336.lr.ph, label %if.end370

for.body336.lr.ph:                                ; preds = %while.end332
  %111 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %112 = lshr i64 %111, 2
  %113 = trunc i64 %112 to i32
  br label %for.body336

for.body336:                                      ; preds = %cond.end356, %for.body336.lr.ph
  %indvars.iv1138 = phi i64 [ 0, %for.body336.lr.ph ], [ %indvars.iv.next1139, %cond.end356 ]
  %pli.0916 = phi i32* [ %add.ptr271, %for.body336.lr.ph ], [ %add.ptr366, %cond.end356 ]
  %arrayidx339 = getelementptr inbounds i32* %cond3011941197, i64 %indvars.iv1138
  %114 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom341 = sext i32 %114 to i64
  %nonbondedGroupIsAtom343 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom341, i32 2
  %115 = bitcast [4 x i8]* %nonbondedGroupIsAtom343 to i32*
  %bf.load344 = load i32* %115, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end356

cond.false349:                                    ; preds = %for.body336
  %bf.lshr354 = lshr i32 %bf.load344, 22
  %bf.clear355 = and i32 %bf.lshr354, 7
  %phitmp849 = zext i32 %bf.clear355 to i64
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false349, %for.body336
  %cond357 = phi i64 [ %phitmp849, %cond.false349 ], [ 1, %for.body336 ]
  store i32 %114, i32* %pli.0916, align 4, !tbaa !11
  %add359 = add nsw i32 %114, 1
  %arrayidx360 = getelementptr inbounds i32* %pli.0916, i64 1
  store i32 %add359, i32* %arrayidx360, align 4, !tbaa !11
  %add361 = add nsw i32 %114, 2
  %arrayidx362 = getelementptr inbounds i32* %pli.0916, i64 2
  store i32 %add361, i32* %arrayidx362, align 4, !tbaa !11
  %add363 = add nsw i32 %114, 3
  %arrayidx364 = getelementptr inbounds i32* %pli.0916, i64 3
  store i32 %add363, i32* %arrayidx364, align 4, !tbaa !11
  %add.ptr366 = getelementptr inbounds i32* %pli.0916, i64 %cond357
  %indvars.iv.next1139 = add nuw nsw i64 %indvars.iv1138, 1
  %lftr.wideiv1140 = trunc i64 %indvars.iv.next1139 to i32
  %exitcond1141 = icmp eq i32 %lftr.wideiv1140, %113
  br i1 %exitcond1141, label %if.end370, label %for.body336

if.end370:                                        ; preds = %cond.end356, %while.end332, %for.end269
  %pli.1 = phi i32* [ %add.ptr271, %for.end269 ], [ %add.ptr271, %while.end332 ], [ %add.ptr366, %cond.end356 ]
  %sub.ptr.lhs.cast371 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub373 = sub i64 %sub.ptr.lhs.cast371, %sub.ptr.rhs.cast372
  %sub.ptr.div374845 = lshr exact i64 %sub.ptr.sub373, 2
  %conv375 = trunc i64 %sub.ptr.div374845 to i32
  %tobool376 = icmp eq i32 %conv375, 0
  br i1 %tobool376, label %if.end385, label %if.then377

if.then377:                                       ; preds = %if.end370
  %sub378 = shl i64 %sub.ptr.sub373, 30
  %sext846 = add i64 %sub378, -4294967296
  %idxprom379 = ashr exact i64 %sext846, 32
  %arrayidx380 = getelementptr inbounds i32* %cond114873875881887, i64 %idxprom379
  %116 = load i32* %arrayidx380, align 4, !tbaa !11
  %idxprom381 = ashr exact i64 %sub378, 32
  %arrayidx382 = getelementptr inbounds i32* %cond114873875881887, i64 %idxprom381
  store i32 %116, i32* %arrayidx382, align 4, !tbaa !11
  br label %if.end385

if.else:                                          ; preds = %for.body175
  %inc384 = add nsw i32 %pairlistoffset.01070, 1
  br label %if.end385

if.end385:                                        ; preds = %if.else, %if.then377, %if.end370
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then377 ], [ %pairCount.1, %if.end370 ], [ %pairCount.01069, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then377 ], [ 0, %if.end370 ], [ %inc384, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv375, %if.then377 ], [ 0, %if.end370 ], [ %pairlistindex.01071, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then377 ], [ %fixg_lower.2, %if.end370 ], [ %fixg_lower.01072, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then377 ], [ %g_lower.2, %if.end370 ], [ %g_lower.01073, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then377 ], [ %j_hgroup.1, %if.end370 ], [ %j_hgroup.01074, %if.else ]
  %117 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool386 = icmp eq i32 %117, 0
  %bf.load394.pre = load i32* %71, align 4
  br i1 %tobool386, label %land.end392, label %land.rhs387

land.rhs387:                                      ; preds = %if.end385
  %bf.clear390 = and i32 %bf.load394.pre, 67108864
  %tobool391 = icmp ne i32 %bf.clear390, 0
  br label %land.end392

land.end392:                                      ; preds = %land.rhs387, %if.end385
  %118 = phi i1 [ %tobool391, %land.rhs387 ], [ false, %if.end385 ]
  %119 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr395 = lshr i32 %bf.load394.pre, 28
  %mul396 = mul nsw i32 %bf.lshr395, 6
  %idx.ext397779 = zext i32 %mul396 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 1
  %120 = load float* %charge, align 4, !tbaa !63
  %conv399 = fpext float %120 to double
  %mul400 = fmul double %conv399, 3.320636e+02
  %mul401 = fmul double %9, %mul400
  %mul402 = fmul double %4, %mul401
  %bf.clear405 = and i32 %bf.load394.pre, 4194303
  %idxprom.i861894 = zext i32 %bf.clear405 to i64
  %121 = load i32** %atomVdwType.i862, align 8, !tbaa !64
  %arrayidx.i863 = getelementptr inbounds i32* %121, i64 %idxprom.i861894
  %122 = load i32* %arrayidx.i863, align 4, !tbaa !11
  %123 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %124 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv407 = shl i32 %122, 1
  %mul.i = and i32 %conv407, 131070
  %mul2.i = mul i32 %mul.i, %124
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp413942 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %118, label %for.cond412.preheader, label %if.else473

for.cond412.preheader:                            ; preds = %land.end392
  br i1 %cmp413942, label %for.body414.lr.ph, label %if.end552

for.body414.lr.ph:                                ; preds = %for.cond412.preheader
  %125 = sext i32 %pairlistoffset.1 to i64
  br label %for.body414

for.body414:                                      ; preds = %for.inc470, %for.body414.lr.ph
  %indvars.iv1151 = phi i64 [ %125, %for.body414.lr.ph ], [ %indvars.iv.next1152, %for.inc470 ]
  %exclChecksum.1946 = phi i32 [ %exclChecksum.01094, %for.body414.lr.ph ], [ %exclChecksum.3, %for.inc470 ]
  %pli409.0945 = phi i32* [ %cond125877879889, %for.body414.lr.ph ], [ %pli409.1, %for.inc470 ]
  %plin.0944 = phi i32* [ %cond136883885, %for.body414.lr.ph ], [ %plin.1, %for.inc470 ]
  %arrayidx416 = getelementptr inbounds i32* %cond114873875881887, i64 %indvars.iv1151
  %126 = load i32* %arrayidx416, align 4, !tbaa !11
  %idxprom418 = sext i32 %126 to i64
  %x421 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom418, i32 0, i32 0
  %127 = load double* %x421, align 8, !tbaa !59
  %sub423 = fsub double %76, %127
  %mul424 = fmul double %sub423, %sub423
  %y429 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom418, i32 0, i32 1
  %128 = load double* %y429, align 8, !tbaa !61
  %sub431 = fsub double %77, %128
  %mul432 = fmul double %sub431, %sub431
  %add433 = fadd double %mul424, %mul432
  %z438 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom418, i32 0, i32 2
  %129 = load double* %z438, align 8, !tbaa !62
  %sub439 = fsub double %78, %129
  %mul440 = fmul double %sub439, %sub439
  %add441 = fadd double %add433, %mul440
  %atomFixed444 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom418, i32 2
  %130 = bitcast [4 x i8]* %atomFixed444 to i32*
  %bf.load445 = load i32* %130, align 4
  %bf.clear447 = and i32 %bf.load445, 67108864
  %tobool448 = icmp ne i32 %bf.clear447, 0
  %cmp449 = fcmp ugt double %add441, %2
  %or.cond852 = or i1 %tobool448, %cmp449
  br i1 %or.cond852, label %for.inc470, label %land.lhs.true450

land.lhs.true450:                                 ; preds = %for.body414
  %cmp451 = fcmp ugt double %add441, %11
  br i1 %cmp451, label %if.then455, label %land.lhs.true452

land.lhs.true452:                                 ; preds = %land.lhs.true450
  %inc453 = add nsw i32 %exclChecksum.1946, 1
  %tobool454 = icmp eq i32 %inc453, 0
  br i1 %tobool454, label %if.then455, label %for.inc470

if.then455:                                       ; preds = %land.lhs.true452, %land.lhs.true450
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true452 ], [ %exclChecksum.1946, %land.lhs.true450 ]
  %bf.clear460 = and i32 %bf.load445, 4194303
  %cmp461 = icmp slt i32 %bf.clear460, %73
  %cmp463 = icmp sgt i32 %bf.clear460, %74
  %or.cond853 = or i1 %cmp461, %cmp463
  br i1 %or.cond853, label %if.else466, label %if.then464

if.then464:                                       ; preds = %if.then455
  %incdec.ptr465 = getelementptr inbounds i32* %pli409.0945, i64 1
  store i32 %126, i32* %pli409.0945, align 4, !tbaa !11
  br label %for.inc470

if.else466:                                       ; preds = %if.then455
  %incdec.ptr467 = getelementptr inbounds i32* %plin.0944, i64 1
  store i32 %126, i32* %plin.0944, align 4, !tbaa !11
  br label %for.inc470

for.inc470:                                       ; preds = %if.else466, %if.then464, %land.lhs.true452, %for.body414
  %plin.1 = phi i32* [ %plin.0944, %for.body414 ], [ %plin.0944, %land.lhs.true452 ], [ %plin.0944, %if.then464 ], [ %incdec.ptr467, %if.else466 ]
  %pli409.1 = phi i32* [ %pli409.0945, %for.body414 ], [ %pli409.0945, %land.lhs.true452 ], [ %incdec.ptr465, %if.then464 ], [ %pli409.0945, %if.else466 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1946, %for.body414 ], [ %inc453, %land.lhs.true452 ], [ %exclChecksum.2, %if.then464 ], [ %exclChecksum.2, %if.else466 ]
  %indvars.iv.next1152 = add nsw i64 %indvars.iv1151, 1
  %lftr.wideiv1153 = trunc i64 %indvars.iv.next1152 to i32
  %exitcond1154 = icmp eq i32 %lftr.wideiv1153, %pairlistindex.2
  br i1 %exitcond1154, label %if.end552, label %for.body414

if.else473:                                       ; preds = %land.end392
  br i1 %cmp413942, label %if.then476, label %if.end552

if.then476:                                       ; preds = %if.else473
  %idxprom478 = sext i32 %pairlistoffset.1 to i64
  %arrayidx479 = getelementptr inbounds i32* %cond114873875881887, i64 %idxprom478
  %131 = load i32* %arrayidx479, align 4, !tbaa !11
  %idxprom481 = sext i32 %131 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 0
  %132 = load double* %x484, align 8, !tbaa !59
  %y489 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 1
  %133 = load double* %y489, align 8, !tbaa !61
  %z494 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 2
  %134 = load double* %z494, align 8, !tbaa !62
  br label %while.cond501.outer

while.cond501.outer:                              ; preds = %if.else541, %if.then476
  %idxprom481.pn.ph = phi i64 [ %idxprom481, %if.then476 ], [ %idxprom510, %if.else541 ]
  %p_j_z490.0.ph = phi double [ %134, %if.then476 ], [ %140, %if.else541 ]
  %p_j_y485.0.ph = phi double [ %133, %if.then476 ], [ %139, %if.else541 ]
  %p_j_x480.0.ph = phi double [ %132, %if.then476 ], [ %138, %if.else541 ]
  %j2477.0.ph = phi i32 [ %131, %if.then476 ], [ %137, %if.else541 ]
  %k474.0.ph = phi i32 [ %pairlistoffset.1, %if.then476 ], [ %inc504, %if.else541 ]
  %plin.2.ph = phi i32* [ %cond136883885, %if.then476 ], [ %incdec.ptr542, %if.else541 ]
  %pli409.2.ph = phi i32* [ %cond125877879889, %if.then476 ], [ %pli409.2.ph925, %if.else541 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.01094, %if.then476 ], [ %exclChecksum.5, %if.else541 ]
  br label %while.cond501.outer918

while.cond501.outer918:                           ; preds = %if.then539, %while.cond501.outer
  %idxprom481.pn.ph919 = phi i64 [ %idxprom510, %if.then539 ], [ %idxprom481.pn.ph, %while.cond501.outer ]
  %p_j_z490.0.ph920 = phi double [ %140, %if.then539 ], [ %p_j_z490.0.ph, %while.cond501.outer ]
  %p_j_y485.0.ph921 = phi double [ %139, %if.then539 ], [ %p_j_y485.0.ph, %while.cond501.outer ]
  %p_j_x480.0.ph922 = phi double [ %138, %if.then539 ], [ %p_j_x480.0.ph, %while.cond501.outer ]
  %j2477.0.ph923 = phi i32 [ %137, %if.then539 ], [ %j2477.0.ph, %while.cond501.outer ]
  %k474.0.ph924 = phi i32 [ %inc504, %if.then539 ], [ %k474.0.ph, %while.cond501.outer ]
  %pli409.2.ph925 = phi i32* [ %incdec.ptr540, %if.then539 ], [ %pli409.2.ph, %while.cond501.outer ]
  %exclChecksum.4.ph926 = phi i32 [ %exclChecksum.5, %if.then539 ], [ %exclChecksum.4.ph, %while.cond501.outer ]
  br label %while.cond501.outer927

while.cond501.outer927:                           ; preds = %land.lhs.true532, %while.cond501.outer918
  %idxprom481.pn.ph928 = phi i64 [ %idxprom510, %land.lhs.true532 ], [ %idxprom481.pn.ph919, %while.cond501.outer918 ]
  %p_j_z490.0.ph929 = phi double [ %140, %land.lhs.true532 ], [ %p_j_z490.0.ph920, %while.cond501.outer918 ]
  %p_j_y485.0.ph930 = phi double [ %139, %land.lhs.true532 ], [ %p_j_y485.0.ph921, %while.cond501.outer918 ]
  %p_j_x480.0.ph931 = phi double [ %138, %land.lhs.true532 ], [ %p_j_x480.0.ph922, %while.cond501.outer918 ]
  %j2477.0.ph932 = phi i32 [ %137, %land.lhs.true532 ], [ %j2477.0.ph923, %while.cond501.outer918 ]
  %k474.0.ph933 = phi i32 [ %inc504, %land.lhs.true532 ], [ %k474.0.ph924, %while.cond501.outer918 ]
  %exclChecksum.4.ph934 = phi i32 [ %inc533, %land.lhs.true532 ], [ %exclChecksum.4.ph926, %while.cond501.outer918 ]
  %135 = sext i32 %k474.0.ph933 to i64
  br label %while.cond501

while.cond501:                                    ; preds = %while.body503, %while.cond501.outer927
  %indvars.iv1147 = phi i64 [ %135, %while.cond501.outer927 ], [ %indvars.iv.next1148, %while.body503 ]
  %idxprom481.pn = phi i64 [ %idxprom481.pn.ph928, %while.cond501.outer927 ], [ %idxprom510, %while.body503 ]
  %p_j_z490.0 = phi double [ %p_j_z490.0.ph929, %while.cond501.outer927 ], [ %140, %while.body503 ]
  %p_j_y485.0 = phi double [ %p_j_y485.0.ph930, %while.cond501.outer927 ], [ %139, %while.body503 ]
  %p_j_x480.0 = phi double [ %p_j_x480.0.ph931, %while.cond501.outer927 ], [ %138, %while.body503 ]
  %j2477.0 = phi i32 [ %j2477.0.ph932, %while.cond501.outer927 ], [ %137, %while.body503 ]
  %k474.0 = phi i32 [ %k474.0.ph933, %while.cond501.outer927 ], [ %inc504, %while.body503 ]
  %136 = trunc i64 %indvars.iv1147 to i32
  %cmp502 = icmp slt i32 %136, %pairlistindex.2
  br i1 %cmp502, label %while.body503, label %if.end552

while.body503:                                    ; preds = %while.cond501
  %atom2495.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481.pn, i32 2
  %atom2495.0.in.in = bitcast [4 x i8]* %atom2495.0.in.in.in to i32*
  %atom2495.0.in = load i32* %atom2495.0.in.in, align 4
  %atom2495.0 = and i32 %atom2495.0.in, 4194303
  %indvars.iv.next1148 = add nsw i64 %indvars.iv1147, 1
  %inc504 = add nsw i32 %k474.0, 1
  %arrayidx506 = getelementptr inbounds i32* %cond114873875881887, i64 %indvars.iv.next1148
  %137 = load i32* %arrayidx506, align 4, !tbaa !11
  %sub508 = fsub double %76, %p_j_x480.0
  %mul509 = fmul double %sub508, %sub508
  %idxprom510 = sext i32 %137 to i64
  %x513 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom510, i32 0, i32 0
  %138 = load double* %x513, align 8, !tbaa !59
  %sub515 = fsub double %77, %p_j_y485.0
  %mul516 = fmul double %sub515, %sub515
  %add517 = fadd double %mul516, %mul509
  %y521 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom510, i32 0, i32 1
  %139 = load double* %y521, align 8, !tbaa !61
  %sub522 = fsub double %78, %p_j_z490.0
  %mul523 = fmul double %sub522, %sub522
  %add524 = fadd double %mul523, %add517
  %z528 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom510, i32 0, i32 2
  %140 = load double* %z528, align 8, !tbaa !62
  %cmp529 = fcmp ugt double %add524, %2
  br i1 %cmp529, label %while.cond501, label %land.lhs.true530

land.lhs.true530:                                 ; preds = %while.body503
  %cmp531 = fcmp ugt double %add524, %11
  br i1 %cmp531, label %if.then535, label %land.lhs.true532

land.lhs.true532:                                 ; preds = %land.lhs.true530
  %inc533 = add nsw i32 %exclChecksum.4.ph934, 1
  %tobool534 = icmp eq i32 %inc533, 0
  br i1 %tobool534, label %if.then535, label %while.cond501.outer927

if.then535:                                       ; preds = %land.lhs.true532, %land.lhs.true530
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true532 ], [ %exclChecksum.4.ph934, %land.lhs.true530 ]
  %cmp536 = icmp slt i32 %atom2495.0, %73
  %cmp538 = icmp sgt i32 %atom2495.0, %74
  %or.cond854 = or i1 %cmp536, %cmp538
  br i1 %or.cond854, label %if.else541, label %if.then539

if.then539:                                       ; preds = %if.then535
  %incdec.ptr540 = getelementptr inbounds i32* %pli409.2.ph925, i64 1
  store i32 %j2477.0, i32* %pli409.2.ph925, align 4, !tbaa !11
  br label %while.cond501.outer918

if.else541:                                       ; preds = %if.then535
  %incdec.ptr542 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2477.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond501.outer

if.end552:                                        ; preds = %while.cond501, %if.else473, %for.inc470, %for.cond412.preheader
  %plin.4 = phi i32* [ %cond136883885, %if.else473 ], [ %cond136883885, %for.cond412.preheader ], [ %plin.2.ph, %while.cond501 ], [ %plin.1, %for.inc470 ]
  %pli409.4 = phi i32* [ %cond125877879889, %if.else473 ], [ %cond125877879889, %for.cond412.preheader ], [ %pli409.2.ph925, %while.cond501 ], [ %pli409.1, %for.inc470 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.01094, %if.else473 ], [ %exclChecksum.01094, %for.cond412.preheader ], [ %exclChecksum.4.ph934, %while.cond501 ], [ %exclChecksum.3, %for.inc470 ]
  %sub.ptr.lhs.cast553 = ptrtoint i32* %pli409.4 to i64
  %sub.ptr.sub555 = sub i64 %sub.ptr.lhs.cast553, %sub.ptr.rhs.cast554
  %sub.ptr.div556780 = lshr exact i64 %sub.ptr.sub555, 2
  %conv557 = trunc i64 %sub.ptr.div556780 to i32
  %tobool558 = icmp eq i32 %conv557, 0
  br i1 %tobool558, label %for.cond567.preheader, label %if.then559

if.then559:                                       ; preds = %if.end552
  %sub560 = shl i64 %sub.ptr.sub555, 30
  %sext843 = add i64 %sub560, -4294967296
  %idxprom561 = ashr exact i64 %sext843, 32
  %arrayidx562 = getelementptr inbounds i32* %cond125877879889, i64 %idxprom561
  %141 = load i32* %arrayidx562, align 4, !tbaa !11
  %idxprom563 = ashr exact i64 %sub560, 32
  %arrayidx564 = getelementptr inbounds i32* %cond125877879889, i64 %idxprom563
  store i32 %141, i32* %arrayidx564, align 4, !tbaa !11
  br label %for.cond567.preheader

for.cond567.preheader:                            ; preds = %if.then559, %if.end552
  %cmp568950 = icmp ult i32* %cond136883885, %plin.4
  br i1 %cmp568950, label %land.lhs.true569, label %for.cond576.loopexit

land.lhs.true569:                                 ; preds = %for.body571, %for.cond567.preheader
  %exclChecksum.8953 = phi i32 [ %dec, %for.body571 ], [ %exclChecksum.7, %for.cond567.preheader ]
  %plix.0952 = phi i32* [ %incdec.ptr572, %for.body571 ], [ %cond147891, %for.cond567.preheader ]
  %pln.0951 = phi i32* [ %incdec.ptr574, %for.body571 ], [ %cond136883885, %for.cond567.preheader ]
  %142 = load i32* %pln.0951, align 4, !tbaa !11
  %cmp570 = icmp slt i32 %142, %j_hgroup.2
  br i1 %cmp570, label %for.body571, label %for.cond576.loopexit

for.body571:                                      ; preds = %land.lhs.true569
  %incdec.ptr572 = getelementptr inbounds i32* %plix.0952, i64 1
  store i32 %142, i32* %plix.0952, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8953, -1
  %incdec.ptr574 = getelementptr inbounds i32* %pln.0951, i64 1
  %cmp568 = icmp ult i32* %incdec.ptr574, %plin.4
  br i1 %cmp568, label %land.lhs.true569, label %for.cond576.loopexit

for.cond576.loopexit:                             ; preds = %for.body571, %land.lhs.true569, %for.cond567.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond567.preheader ], [ %dec, %for.body571 ], [ %exclChecksum.8953, %land.lhs.true569 ]
  %plix.0.lcssa = phi i32* [ %cond147891, %for.cond567.preheader ], [ %incdec.ptr572, %for.body571 ], [ %plix.0952, %land.lhs.true569 ]
  %pln.0.lcssa = phi i32* [ %cond136883885, %for.cond567.preheader ], [ %incdec.ptr574, %for.body571 ], [ %pln.0951, %land.lhs.true569 ]
  %cmp577957 = icmp sgt i32 %conv557, 0
  br i1 %cmp577957, label %land.lhs.true578, label %for.cond590.loopexit

land.lhs.true578:                                 ; preds = %for.body582, %for.cond576.loopexit
  %indvars.iv1161 = phi i64 [ %indvars.iv.next1162, %for.body582 ], [ 0, %for.cond576.loopexit ]
  %exclChecksum.9960 = phi i32 [ %dec586, %for.body582 ], [ %exclChecksum.8.lcssa, %for.cond576.loopexit ]
  %plix.1959 = phi i32* [ %incdec.ptr585, %for.body582 ], [ %plix.0.lcssa, %for.cond576.loopexit ]
  %k566.0958 = phi i32 [ %inc588, %for.body582 ], [ 0, %for.cond576.loopexit ]
  %arrayidx580 = getelementptr inbounds i32* %cond125877879889, i64 %indvars.iv1161
  %143 = load i32* %arrayidx580, align 4, !tbaa !11
  %cmp581 = icmp slt i32 %143, %j_hgroup.2
  br i1 %cmp581, label %for.body582, label %for.cond590.loopexit

for.body582:                                      ; preds = %land.lhs.true578
  %incdec.ptr585 = getelementptr inbounds i32* %plix.1959, i64 1
  store i32 %143, i32* %plix.1959, align 4, !tbaa !11
  %dec586 = add nsw i32 %exclChecksum.9960, -1
  %indvars.iv.next1162 = add nuw nsw i64 %indvars.iv1161, 1
  %inc588 = add nsw i32 %k566.0958, 1
  %144 = trunc i64 %indvars.iv.next1162 to i32
  %cmp577 = icmp slt i32 %144, %conv557
  br i1 %cmp577, label %land.lhs.true578, label %for.cond590.loopexit

for.cond590.loopexit:                             ; preds = %for.body582, %land.lhs.true578, %for.cond576.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond576.loopexit ], [ %dec586, %for.body582 ], [ %exclChecksum.9960, %land.lhs.true578 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond576.loopexit ], [ %incdec.ptr585, %for.body582 ], [ %plix.1959, %land.lhs.true578 ]
  %k566.0.lcssa = phi i32 [ 0, %for.cond576.loopexit ], [ %inc588, %for.body582 ], [ %k566.0958, %land.lhs.true578 ]
  %cmp591964 = icmp slt i32 %k566.0.lcssa, %conv557
  br i1 %cmp591964, label %for.body592.lr.ph, label %for.end612

for.body592.lr.ph:                                ; preds = %for.cond590.loopexit
  %145 = sext i32 %k566.0.lcssa to i64
  %146 = sub i64 %sub.ptr.lhs.cast553, %sub.ptr.rhs.cast554
  %147 = lshr i64 %146, 2
  %148 = trunc i64 %147 to i32
  br label %for.body592

for.body592:                                      ; preds = %for.inc610, %for.body592.lr.ph
  %indvars.iv1163 = phi i64 [ %145, %for.body592.lr.ph ], [ %indvars.iv.next1164, %for.inc610 ]
  %plin.5968 = phi i32* [ %plin.4, %for.body592.lr.ph ], [ %plin.6, %for.inc610 ]
  %plix.2967 = phi i32* [ %plix.1.lcssa, %for.body592.lr.ph ], [ %plix.3, %for.inc610 ]
  %plim.0966 = phi i32* [ %cond158, %for.body592.lr.ph ], [ %plim.1, %for.inc610 ]
  %arrayidx595 = getelementptr inbounds i32* %cond125877879889, i64 %indvars.iv1163
  %149 = load i32* %arrayidx595, align 4, !tbaa !11
  %idxprom597 = sext i32 %149 to i64
  %id599 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom597, i32 2
  %150 = bitcast [4 x i8]* %id599 to i32*
  %bf.load600 = load i32* %150, align 4
  %bf.clear601 = and i32 %bf.load600, 4194303
  %idxprom602842 = zext i32 %bf.clear601 to i64
  %add.ptr.sum = sub i64 %idxprom602842, %idx.ext
  %arrayidx603 = getelementptr inbounds i8* %75, i64 %add.ptr.sum
  %151 = load i8* %arrayidx603, align 1, !tbaa !68
  %conv604 = sext i8 %151 to i32
  switch i32 %conv604, label %for.inc610 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb606
    i32 2, label %sw.bb608
  ]

sw.bb:                                            ; preds = %for.body592
  %incdec.ptr605 = getelementptr inbounds i32* %plin.5968, i64 1
  store i32 %149, i32* %plin.5968, align 4, !tbaa !11
  br label %for.inc610

sw.bb606:                                         ; preds = %for.body592
  %incdec.ptr607 = getelementptr inbounds i32* %plix.2967, i64 1
  store i32 %149, i32* %plix.2967, align 4, !tbaa !11
  br label %for.inc610

sw.bb608:                                         ; preds = %for.body592
  %incdec.ptr609 = getelementptr inbounds i32* %plim.0966, i64 1
  store i32 %149, i32* %plim.0966, align 4, !tbaa !11
  br label %for.inc610

for.inc610:                                       ; preds = %sw.bb608, %sw.bb606, %sw.bb, %for.body592
  %plim.1 = phi i32* [ %plim.0966, %for.body592 ], [ %incdec.ptr609, %sw.bb608 ], [ %plim.0966, %sw.bb606 ], [ %plim.0966, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2967, %for.body592 ], [ %plix.2967, %sw.bb608 ], [ %incdec.ptr607, %sw.bb606 ], [ %plix.2967, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5968, %for.body592 ], [ %plin.5968, %sw.bb608 ], [ %plin.5968, %sw.bb606 ], [ %incdec.ptr605, %sw.bb ]
  %indvars.iv.next1164 = add nsw i64 %indvars.iv1163, 1
  %lftr.wideiv1165 = trunc i64 %indvars.iv.next1164 to i32
  %exitcond1166 = icmp eq i32 %lftr.wideiv1165, %148
  br i1 %exitcond1166, label %for.end612, label %for.body592

for.end612:                                       ; preds = %for.inc610, %for.cond590.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond590.loopexit ], [ %plin.6, %for.inc610 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond590.loopexit ], [ %plix.3, %for.inc610 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond590.loopexit ], [ %plim.1, %for.inc610 ]
  %sub.ptr.lhs.cast613 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub615 = sub i64 %sub.ptr.lhs.cast613, %sub.ptr.rhs.cast614
  %sub.ptr.div616 = ashr exact i64 %sub.ptr.sub615, 2
  %conv617781 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast620 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub622 = sub i64 %sub.ptr.lhs.cast620, %sub.ptr.rhs.cast621
  %sub.ptr.div623 = ashr exact i64 %sub.ptr.sub622, 2
  %add618 = add i64 %sub.ptr.div623, %conv617781
  %add625 = add i64 %add618, %sub.ptr.div616
  %conv626 = trunc i64 %add625 to i32
  %sub.ptr.lhs.cast627 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast628 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub629 = sub i64 %sub.ptr.lhs.cast627, %sub.ptr.rhs.cast628
  %sub.ptr.div630783 = lshr exact i64 %sub.ptr.sub629, 2
  %conv631 = trunc i64 %sub.ptr.div630783 to i32
  %cmp633972 = icmp sgt i32 %conv631, 0
  br i1 %cmp633972, label %for.body634.lr.ph, label %for.end854

for.body634.lr.ph:                                ; preds = %for.end612
  %x775 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y784 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z791 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x830 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y840 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z848 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body634

for.body634:                                      ; preds = %for.body634.for.body634_crit_edge, %for.body634.lr.ph
  %152 = phi i32* [ %121, %for.body634.lr.ph ], [ %.pre, %for.body634.for.body634_crit_edge ]
  %indvars.iv1167 = phi i64 [ 0, %for.body634.lr.ph ], [ %indvars.iv.next1168, %for.body634.for.body634_crit_edge ]
  %153 = phi <2 x double> [ %62, %for.body634.lr.ph ], [ %232, %for.body634.for.body634_crit_edge ]
  %154 = phi <2 x double> [ %63, %for.body634.lr.ph ], [ %227, %for.body634.for.body634_crit_edge ]
  %155 = phi <2 x double> [ %64, %for.body634.lr.ph ], [ %193, %for.body634.for.body634_crit_edge ]
  %156 = phi <2 x double> [ %65, %for.body634.lr.ph ], [ %199, %for.body634.for.body634_crit_edge ]
  %157 = phi <2 x double> [ %66, %for.body634.lr.ph ], [ %218, %for.body634.for.body634_crit_edge ]
  %158 = phi <2 x double> [ %67, %for.body634.lr.ph ], [ %238, %for.body634.for.body634_crit_edge ]
  %159 = phi <2 x double> [ %68, %for.body634.lr.ph ], [ %243, %for.body634.for.body634_crit_edge ]
  %160 = phi <2 x double> [ %69, %for.body634.lr.ph ], [ %206, %for.body634.for.body634_crit_edge ]
  %161 = phi <2 x double> [ %70, %for.body634.lr.ph ], [ %252, %for.body634.for.body634_crit_edge ]
  %arrayidx637 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv1167
  %162 = load i32* %arrayidx637, align 4, !tbaa !11
  %idx.ext638 = sext i32 %162 to i64
  %x641 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext638, i32 0, i32 0
  %163 = load double* %x641, align 8, !tbaa !59
  %sub642 = fsub double %76, %163
  %mul644 = fmul double %sub642, %sub642
  %y646 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext638, i32 0, i32 1
  %164 = load double* %y646, align 8, !tbaa !61
  %sub647 = fsub double %77, %164
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %mul644, %mul648
  %z651 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext638, i32 0, i32 2
  %165 = load double* %z651, align 8, !tbaa !62
  %sub652 = fsub double %78, %165
  %mul653 = fmul double %sub652, %sub652
  %add654 = fadd double %add649, %mul653
  %conv655 = fptrunc double %add654 to float
  %166 = bitcast float %conv655 to i32
  %shr = ashr i32 %166, 17
  %add657 = add nsw i32 %shr, %mul
  %id658 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext638, i32 2
  %167 = bitcast [4 x i8]* %id658 to i32*
  %bf.load659 = load i32* %167, align 4
  %bf.clear660 = and i32 %bf.load659, 4194303
  %idxprom.i857897 = zext i32 %bf.clear660 to i64
  %arrayidx.i859 = getelementptr inbounds i32* %152, i64 %idxprom.i857897
  %168 = load i32* %arrayidx.i859, align 4, !tbaa !11
  %conv.i860 = zext i32 %168 to i64
  %conv662 = shl nuw nsw i64 %conv.i860, 1
  %mul663 = and i64 %conv662, 131070
  %mul666 = shl nsw i32 %add657, 4
  %idx.ext667 = sext i32 %mul666 to i64
  %add.ptr668 = getelementptr inbounds double* %7, i64 %idx.ext667
  %169 = load double* %add.ptr668, align 8, !tbaa !17
  %add.ptr668.sum822 = or i64 %idx.ext667, 4
  %add.ptr673 = getelementptr inbounds double* %7, i64 %add.ptr668.sum822
  %170 = load double* %add.ptr673, align 8, !tbaa !17
  %add.ptr668.sum823 = or i64 %idx.ext667, 8
  %add.ptr678 = getelementptr inbounds double* %7, i64 %add.ptr668.sum823
  %171 = load double* %add.ptr678, align 8, !tbaa !17
  %add.ptr678.sum824 = or i64 %idx.ext667, 12
  %add.ptr684 = getelementptr inbounds double* %7, i64 %add.ptr678.sum824
  %172 = load double* %add.ptr684, align 8, !tbaa !17
  %and = and i32 %166, -131072
  %charge687 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext638, i32 1
  %173 = load float* %charge687, align 4, !tbaa !63
  %conv688 = fpext float %173 to double
  %mul689 = fmul double %mul402, %conv688
  %174 = bitcast i32 %and to float
  %conv691 = fpext float %174 to double
  %sub692 = fsub double %add654, %conv691
  %bf.lshr695 = lshr i32 %bf.load659, 28
  %mul696 = shl nuw nsw i32 %bf.lshr695, 1
  %idxprom697825 = zext i32 %mul696 to i64
  %add.ptr398.sum826 = add i64 %idxprom697825, %idx.ext397779
  %arrayidx698 = getelementptr inbounds double* %119, i64 %add.ptr398.sum826
  %175 = load double* %arrayidx698, align 8, !tbaa !17
  %add700827 = or i32 %mul696, 1
  %idxprom701828 = zext i32 %add700827 to i64
  %add.ptr398.sum829 = add i64 %idxprom701828, %idx.ext397779
  %arrayidx702 = getelementptr inbounds double* %119, i64 %add.ptr398.sum829
  %176 = load double* %arrayidx702, align 8, !tbaa !17
  %add.ptr.i.sum898 = add i64 %mul663, %idx.ext.i
  %A704 = getelementptr inbounds %"struct.LJTable::TableEntry"* %123, i64 %add.ptr.i.sum898, i32 0
  %177 = load double* %A704, align 8, !tbaa !69
  %mul705 = fmul double %9, %177
  %B707 = getelementptr inbounds %"struct.LJTable::TableEntry"* %123, i64 %add.ptr.i.sum898, i32 1
  %178 = load double* %B707, align 8, !tbaa !71
  %mul708 = fmul double %9, %178
  %mul709 = fmul double %169, %mul705
  %mul710 = fmul double %170, %mul708
  %sub711 = fsub double %mul709, %mul710
  %add.ptr668.sum830 = or i64 %idx.ext667, 3
  %arrayidx712 = getelementptr inbounds double* %7, i64 %add.ptr668.sum830
  %179 = load double* %arrayidx712, align 8, !tbaa !17
  %mul713 = fmul double %mul705, %179
  %add.ptr673.sum831 = or i64 %idx.ext667, 7
  %arrayidx714 = getelementptr inbounds double* %7, i64 %add.ptr673.sum831
  %180 = load double* %arrayidx714, align 8, !tbaa !17
  %mul715 = fmul double %mul708, %180
  %sub716 = fsub double %mul713, %mul715
  %add.ptr668.sum832 = or i64 %idx.ext667, 2
  %arrayidx717 = getelementptr inbounds double* %7, i64 %add.ptr668.sum832
  %181 = load double* %arrayidx717, align 8, !tbaa !17
  %mul718 = fmul double %mul705, %181
  %add.ptr673.sum833 = or i64 %idx.ext667, 6
  %arrayidx719 = getelementptr inbounds double* %7, i64 %add.ptr673.sum833
  %182 = load double* %arrayidx719, align 8, !tbaa !17
  %mul720 = fmul double %mul708, %182
  %sub721 = fsub double %mul718, %mul720
  %add.ptr668.sum834 = or i64 %idx.ext667, 1
  %arrayidx722 = getelementptr inbounds double* %7, i64 %add.ptr668.sum834
  %183 = load double* %arrayidx722, align 8, !tbaa !17
  %mul723 = fmul double %mul705, %183
  %add.ptr673.sum835 = or i64 %idx.ext667, 5
  %arrayidx724 = getelementptr inbounds double* %7, i64 %add.ptr673.sum835
  %184 = load double* %arrayidx724, align 8, !tbaa !17
  %mul725 = fmul double %mul708, %184
  %sub726 = fsub double %mul723, %mul725
  %mul727 = fmul double %sub692, %sub716
  %add728 = fadd double %mul727, %sub721
  %mul729 = fmul double %sub692, %add728
  %add730 = fadd double %mul729, %sub726
  %mul731 = fmul double %sub692, %add730
  %add732 = fadd double %sub711, %mul731
  %mul737 = fmul double %171, %mul689
  %add.ptr678.sum836 = or i64 %idx.ext667, 11
  %arrayidx738 = getelementptr inbounds double* %7, i64 %add.ptr678.sum836
  %185 = load double* %arrayidx738, align 8, !tbaa !17
  %mul739 = fmul double %mul689, %185
  %add.ptr678.sum837 = or i64 %idx.ext667, 10
  %arrayidx740 = getelementptr inbounds double* %7, i64 %add.ptr678.sum837
  %186 = load double* %arrayidx740, align 8, !tbaa !17
  %mul741 = fmul double %mul689, %186
  %add.ptr678.sum838 = or i64 %idx.ext667, 9
  %arrayidx742 = getelementptr inbounds double* %7, i64 %add.ptr678.sum838
  %187 = load double* %arrayidx742, align 8, !tbaa !17
  %mul743 = fmul double %mul689, %187
  %mul744 = fmul double %sub692, %mul739
  %add745 = fadd double %mul744, %mul741
  %mul746 = fmul double %sub692, %add745
  %add747 = fadd double %mul743, %mul746
  %mul748 = fmul double %sub692, %add747
  %add749 = fadd double %mul737, %mul748
  %add754 = fadd double %sub716, %mul739
  %add755 = fadd double %sub721, %mul741
  %add756 = fadd double %sub726, %mul743
  %mul758 = fmul double %sub692, 3.000000e+00
  %mul759 = fmul double %mul758, %add754
  %mul760 = fmul double %add755, 2.000000e+00
  %add761 = fadd double %mul759, %mul760
  %mul762 = fmul double %sub692, %add761
  %add763 = fadd double %add756, %mul762
  %mul764 = fmul double %175, -2.000000e+00
  %mul765 = fmul double %mul764, %add763
  %mul768 = fmul double %sub642, %mul765
  %188 = insertelement <2 x double> undef, double %add732, i32 0
  %189 = insertelement <2 x double> %188, double %sub642, i32 1
  %190 = insertelement <2 x double> undef, double %175, i32 0
  %191 = insertelement <2 x double> %190, double %mul768, i32 1
  %192 = fmul <2 x double> %189, %191
  %193 = fadd <2 x double> %155, %192
  %194 = insertelement <2 x double> undef, double %sub647, i32 0
  %195 = insertelement <2 x double> %194, double %sub652, i32 1
  %196 = insertelement <2 x double> undef, double %mul768, i32 0
  %197 = insertelement <2 x double> %196, double %mul768, i32 1
  %198 = fmul <2 x double> %195, %197
  %199 = fadd <2 x double> %156, %198
  %200 = load double* %x775, align 8, !tbaa !72
  %add776 = fadd double %200, %mul768
  store double %add776, double* %x775, align 8, !tbaa !72
  %x777 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext638, i32 0
  %mul779 = fmul double %sub647, %mul765
  %201 = insertelement <2 x double> undef, double %add749, i32 0
  %202 = insertelement <2 x double> %201, double %sub647, i32 1
  %203 = insertelement <2 x double> undef, double %176, i32 0
  %204 = insertelement <2 x double> %203, double %mul779, i32 1
  %205 = fmul <2 x double> %202, %204
  %206 = fadd <2 x double> %160, %205
  %207 = load double* %y784, align 8, !tbaa !73
  %add785 = fadd double %207, %mul779
  store double %add785, double* %y784, align 8, !tbaa !73
  %208 = bitcast double* %x777 to <2 x double>*
  %209 = load <2 x double>* %208, align 8, !tbaa !17
  %210 = insertelement <2 x double> %196, double %mul779, i32 1
  %211 = fsub <2 x double> %209, %210
  %212 = bitcast double* %x777 to <2 x double>*
  store <2 x double> %211, <2 x double>* %212, align 8, !tbaa !17
  %mul788 = fmul double %sub652, %mul765
  %213 = insertelement <2 x double> undef, double %sub652, i32 0
  %214 = insertelement <2 x double> %213, double %sub652, i32 1
  %215 = insertelement <2 x double> undef, double %mul779, i32 0
  %216 = insertelement <2 x double> %215, double %mul788, i32 1
  %217 = fmul <2 x double> %214, %216
  %218 = fadd <2 x double> %157, %217
  %219 = load double* %z791, align 8, !tbaa !74
  %add792 = fadd double %219, %mul788
  store double %add792, double* %z791, align 8, !tbaa !74
  %z793 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext638, i32 2
  %220 = load double* %z793, align 8, !tbaa !74
  %sub794 = fsub double %220, %mul788
  store double %sub794, double* %z793, align 8, !tbaa !74
  %add.ptr684.sum839 = or i64 %idx.ext667, 13
  %arrayidx795 = getelementptr inbounds double* %7, i64 %add.ptr684.sum839
  %221 = load double* %arrayidx795, align 8, !tbaa !17
  %add.ptr684.sum840 = or i64 %idx.ext667, 14
  %arrayidx796 = getelementptr inbounds double* %7, i64 %add.ptr684.sum840
  %222 = load double* %arrayidx796, align 8, !tbaa !17
  %add.ptr684.sum841 = or i64 %idx.ext667, 15
  %arrayidx797 = getelementptr inbounds double* %7, i64 %add.ptr684.sum841
  %223 = load double* %arrayidx797, align 8, !tbaa !17
  %mul798 = fmul double %mul689, %223
  %mul799 = fmul double %mul689, %222
  %mul800 = fmul double %mul689, %221
  %mul801 = fmul double %172, %mul689
  %mul802 = fmul double %sub692, %mul798
  %add803 = fadd double %mul799, %mul802
  %mul804 = fmul double %sub692, %add803
  %add805 = fadd double %mul800, %mul804
  %mul806 = fmul double %sub692, %add805
  %add807 = fadd double %mul801, %mul806
  %224 = insertelement <2 x double> %201, double %add807, i32 1
  %225 = insertelement <2 x double> %190, double %175, i32 1
  %226 = fmul <2 x double> %224, %225
  %227 = fadd <2 x double> %154, %226
  %228 = insertelement <2 x double> undef, double %add807, i32 0
  %229 = insertelement <2 x double> %228, double %add732, i32 1
  %230 = insertelement <2 x double> %203, double %176, i32 1
  %231 = fmul <2 x double> %229, %230
  %232 = fadd <2 x double> %153, %231
  %mul813 = fmul double %mul758, %mul798
  %mul814 = fmul double %mul799, 2.000000e+00
  %add815 = fadd double %mul814, %mul813
  %mul816 = fmul double %sub692, %add815
  %add817 = fadd double %mul800, %mul816
  %mul818 = fmul double %add817, -2.000000e+00
  %mul819 = fmul double %175, %mul818
  %mul823 = fmul double %sub642, %mul819
  %233 = insertelement <2 x double> undef, double %sub642, i32 0
  %234 = insertelement <2 x double> %233, double %sub647, i32 1
  %235 = insertelement <2 x double> undef, double %mul823, i32 0
  %236 = insertelement <2 x double> %235, double %mul823, i32 1
  %237 = fmul <2 x double> %234, %236
  %238 = fadd <2 x double> %158, %237
  %239 = load double* %x830, align 8, !tbaa !72
  %add831 = fadd double %239, %mul823
  store double %add831, double* %x830, align 8, !tbaa !72
  %x832 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext638, i32 0
  %mul835 = fmul double %sub647, %mul819
  %240 = insertelement <2 x double> undef, double %mul835, i32 0
  %241 = insertelement <2 x double> %240, double %mul835, i32 1
  %242 = fmul <2 x double> %195, %241
  %243 = fadd <2 x double> %159, %242
  %244 = load double* %y840, align 8, !tbaa !73
  %add841 = fadd double %244, %mul835
  store double %add841, double* %y840, align 8, !tbaa !73
  %245 = bitcast double* %x832 to <2 x double>*
  %246 = load <2 x double>* %245, align 8, !tbaa !17
  %247 = insertelement <2 x double> %235, double %mul835, i32 1
  %248 = fsub <2 x double> %246, %247
  %249 = bitcast double* %x832 to <2 x double>*
  store <2 x double> %248, <2 x double>* %249, align 8, !tbaa !17
  %mul845 = fmul double %sub652, %mul819
  %250 = insertelement <2 x double> %235, double %mul845, i32 1
  %251 = fmul <2 x double> %214, %250
  %252 = fadd <2 x double> %161, %251
  %253 = load double* %z848, align 8, !tbaa !74
  %add849 = fadd double %253, %mul845
  store double %add849, double* %z848, align 8, !tbaa !74
  %z850 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext638, i32 2
  %254 = load double* %z850, align 8, !tbaa !74
  %sub851 = fsub double %254, %mul845
  store double %sub851, double* %z850, align 8, !tbaa !74
  %indvars.iv.next1168 = add nuw nsw i64 %indvars.iv1167, 1
  %lftr.wideiv1169 = trunc i64 %indvars.iv.next1168 to i32
  %exitcond1170 = icmp eq i32 %lftr.wideiv1169, %conv631
  br i1 %exitcond1170, label %for.end854, label %for.body634.for.body634_crit_edge

for.body634.for.body634_crit_edge:                ; preds = %for.body634
  %.pre = load i32** %atomVdwType.i862, align 8, !tbaa !64
  br label %for.body634

for.end854:                                       ; preds = %for.body634, %for.end612
  %255 = phi <2 x double> [ %62, %for.end612 ], [ %232, %for.body634 ]
  %256 = phi <2 x double> [ %63, %for.end612 ], [ %227, %for.body634 ]
  %257 = phi <2 x double> [ %64, %for.end612 ], [ %193, %for.body634 ]
  %258 = phi <2 x double> [ %65, %for.end612 ], [ %199, %for.body634 ]
  %259 = phi <2 x double> [ %66, %for.end612 ], [ %218, %for.body634 ]
  %260 = phi <2 x double> [ %67, %for.end612 ], [ %238, %for.body634 ]
  %261 = phi <2 x double> [ %68, %for.end612 ], [ %243, %for.body634 ]
  %262 = phi <2 x double> [ %69, %for.end612 ], [ %206, %for.body634 ]
  %263 = phi <2 x double> [ %70, %for.end612 ], [ %252, %for.body634 ]
  %conv859 = trunc i64 %sub.ptr.div623 to i32
  %cmp8611010 = icmp sgt i32 %conv859, 0
  br i1 %cmp8611010, label %for.body862.lr.ph, label %for.end1145

for.body862.lr.ph:                                ; preds = %for.end854
  %x1042 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y1052 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z1060 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x1121 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1131 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1139 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body862

for.body862:                                      ; preds = %for.body862, %for.body862.lr.ph
  %indvars.iv1171 = phi i64 [ 0, %for.body862.lr.ph ], [ %indvars.iv.next1172, %for.body862 ]
  %264 = phi <2 x double> [ %255, %for.body862.lr.ph ], [ %348, %for.body862 ]
  %265 = phi <2 x double> [ %256, %for.body862.lr.ph ], [ %343, %for.body862 ]
  %266 = phi <2 x double> [ %257, %for.body862.lr.ph ], [ %305, %for.body862 ]
  %267 = phi <2 x double> [ %258, %for.body862.lr.ph ], [ %311, %for.body862 ]
  %268 = phi <2 x double> [ %259, %for.body862.lr.ph ], [ %330, %for.body862 ]
  %269 = phi <2 x double> [ %260, %for.body862.lr.ph ], [ %354, %for.body862 ]
  %270 = phi <2 x double> [ %261, %for.body862.lr.ph ], [ %359, %for.body862 ]
  %271 = phi <2 x double> [ %262, %for.body862.lr.ph ], [ %318, %for.body862 ]
  %272 = phi <2 x double> [ %263, %for.body862.lr.ph ], [ %368, %for.body862 ]
  %arrayidx865 = getelementptr inbounds i32* %cond158, i64 %indvars.iv1171
  %273 = load i32* %arrayidx865, align 4, !tbaa !11
  %idx.ext867 = sext i32 %273 to i64
  %x871 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext867, i32 0, i32 0
  %274 = load double* %x871, align 8, !tbaa !59
  %sub872 = fsub double %76, %274
  %mul874 = fmul double %sub872, %sub872
  %y877 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext867, i32 0, i32 1
  %275 = load double* %y877, align 8, !tbaa !61
  %sub878 = fsub double %77, %275
  %mul879 = fmul double %sub878, %sub878
  %add880 = fadd double %mul874, %mul879
  %z883 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext867, i32 0, i32 2
  %276 = load double* %z883, align 8, !tbaa !62
  %sub884 = fsub double %78, %276
  %mul885 = fmul double %sub884, %sub884
  %add886 = fadd double %add880, %mul885
  %conv888 = fptrunc double %add886 to float
  %277 = bitcast float %conv888 to i32
  %shr892 = ashr i32 %277, 17
  %add893 = add nsw i32 %shr892, %mul
  %id895 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext867, i32 2
  %278 = bitcast [4 x i8]* %id895 to i32*
  %bf.load896 = load i32* %278, align 4
  %bf.clear897 = and i32 %bf.load896, 4194303
  %idxprom.i855895 = zext i32 %bf.clear897 to i64
  %279 = load i32** %atomVdwType.i862, align 8, !tbaa !64
  %arrayidx.i856 = getelementptr inbounds i32* %279, i64 %idxprom.i855895
  %280 = load i32* %arrayidx.i856, align 4, !tbaa !11
  %conv.i = zext i32 %280 to i64
  %conv899 = shl nuw nsw i64 %conv.i, 1
  %mul900 = and i64 %conv899, 131070
  %add.ptr902.sum797 = or i64 %mul900, 1
  %mul905 = shl nsw i32 %add893, 4
  %idx.ext906 = sext i32 %mul905 to i64
  %add.ptr907 = getelementptr inbounds double* %7, i64 %idx.ext906
  %281 = load double* %add.ptr907, align 8, !tbaa !17
  %add.ptr907.sum798 = or i64 %idx.ext906, 4
  %add.ptr914 = getelementptr inbounds double* %7, i64 %add.ptr907.sum798
  %282 = load double* %add.ptr914, align 8, !tbaa !17
  %add.ptr907.sum799 = or i64 %idx.ext906, 8
  %add.ptr921 = getelementptr inbounds double* %7, i64 %add.ptr907.sum799
  %283 = load double* %add.ptr921, align 8, !tbaa !17
  %add.ptr921.sum800 = or i64 %idx.ext906, 12
  %add.ptr929 = getelementptr inbounds double* %7, i64 %add.ptr921.sum800
  %284 = load double* %add.ptr929, align 8, !tbaa !17
  %and933 = and i32 %277, -131072
  %charge935 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext867, i32 1
  %285 = load float* %charge935, align 4, !tbaa !63
  %conv936 = fpext float %285 to double
  %mul937 = fmul double %mul402, %conv936
  %286 = bitcast i32 %and933 to float
  %conv940 = fpext float %286 to double
  %sub941 = fsub double %add886, %conv940
  %bf.lshr945 = lshr i32 %bf.load896, 28
  %mul947 = shl nuw nsw i32 %bf.lshr945, 1
  %idxprom948801 = zext i32 %mul947 to i64
  %add.ptr398.sum802 = add i64 %idxprom948801, %idx.ext397779
  %arrayidx949 = getelementptr inbounds double* %119, i64 %add.ptr398.sum802
  %287 = load double* %arrayidx949, align 8, !tbaa !17
  %add952803 = or i32 %mul947, 1
  %idxprom953804 = zext i32 %add952803 to i64
  %add.ptr398.sum805 = add i64 %idxprom953804, %idx.ext397779
  %arrayidx954 = getelementptr inbounds double* %119, i64 %add.ptr398.sum805
  %288 = load double* %arrayidx954, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr902.sum797, %idx.ext.i
  %A956 = getelementptr inbounds %"struct.LJTable::TableEntry"* %123, i64 %add.ptr.i.sum, i32 0
  %289 = load double* %A956, align 8, !tbaa !69
  %mul957 = fmul double %9, %289
  %B959 = getelementptr inbounds %"struct.LJTable::TableEntry"* %123, i64 %add.ptr.i.sum, i32 1
  %290 = load double* %B959, align 8, !tbaa !71
  %mul960 = fmul double %9, %290
  %mul962 = fmul double %281, %mul957
  %mul963 = fmul double %282, %mul960
  %sub964 = fsub double %mul962, %mul963
  %add.ptr907.sum806 = or i64 %idx.ext906, 3
  %arrayidx966 = getelementptr inbounds double* %7, i64 %add.ptr907.sum806
  %291 = load double* %arrayidx966, align 8, !tbaa !17
  %mul967 = fmul double %mul957, %291
  %add.ptr914.sum807 = or i64 %idx.ext906, 7
  %arrayidx968 = getelementptr inbounds double* %7, i64 %add.ptr914.sum807
  %292 = load double* %arrayidx968, align 8, !tbaa !17
  %mul969 = fmul double %mul960, %292
  %sub970 = fsub double %mul967, %mul969
  %add.ptr907.sum808 = or i64 %idx.ext906, 2
  %arrayidx972 = getelementptr inbounds double* %7, i64 %add.ptr907.sum808
  %293 = load double* %arrayidx972, align 8, !tbaa !17
  %mul973 = fmul double %mul957, %293
  %add.ptr914.sum809 = or i64 %idx.ext906, 6
  %arrayidx974 = getelementptr inbounds double* %7, i64 %add.ptr914.sum809
  %294 = load double* %arrayidx974, align 8, !tbaa !17
  %mul975 = fmul double %mul960, %294
  %sub976 = fsub double %mul973, %mul975
  %add.ptr907.sum810 = or i64 %idx.ext906, 1
  %arrayidx978 = getelementptr inbounds double* %7, i64 %add.ptr907.sum810
  %295 = load double* %arrayidx978, align 8, !tbaa !17
  %mul979 = fmul double %mul957, %295
  %add.ptr914.sum811 = or i64 %idx.ext906, 5
  %arrayidx980 = getelementptr inbounds double* %7, i64 %add.ptr914.sum811
  %296 = load double* %arrayidx980, align 8, !tbaa !17
  %mul981 = fmul double %mul960, %296
  %sub982 = fsub double %mul979, %mul981
  %mul984 = fmul double %sub941, %sub970
  %add985 = fadd double %mul984, %sub976
  %mul986 = fmul double %sub941, %add985
  %add987 = fadd double %mul986, %sub982
  %mul988 = fmul double %sub941, %add987
  %add989 = fadd double %sub964, %mul988
  %mul995 = fmul double %sub994, %mul937
  %mul996 = fmul double %283, %mul995
  %add.ptr921.sum812 = or i64 %idx.ext906, 11
  %arrayidx998 = getelementptr inbounds double* %7, i64 %add.ptr921.sum812
  %297 = load double* %arrayidx998, align 8, !tbaa !17
  %mul999 = fmul double %mul995, %297
  %add.ptr921.sum813 = or i64 %idx.ext906, 10
  %arrayidx1001 = getelementptr inbounds double* %7, i64 %add.ptr921.sum813
  %298 = load double* %arrayidx1001, align 8, !tbaa !17
  %mul1002 = fmul double %mul995, %298
  %add.ptr921.sum814 = or i64 %idx.ext906, 9
  %arrayidx1004 = getelementptr inbounds double* %7, i64 %add.ptr921.sum814
  %299 = load double* %arrayidx1004, align 8, !tbaa !17
  %mul1005 = fmul double %mul995, %299
  %mul1007 = fmul double %sub941, %mul999
  %add1008 = fadd double %mul1007, %mul1002
  %mul1009 = fmul double %sub941, %add1008
  %add1010 = fadd double %mul1005, %mul1009
  %mul1011 = fmul double %sub941, %add1010
  %add1012 = fadd double %mul996, %mul1011
  %add1017 = fadd double %sub970, %mul999
  %add1018 = fadd double %sub976, %mul1002
  %add1019 = fadd double %sub982, %mul1005
  %mul1022 = fmul double %sub941, 3.000000e+00
  %mul1023 = fmul double %mul1022, %add1017
  %mul1024 = fmul double %add1018, 2.000000e+00
  %add1025 = fadd double %mul1023, %mul1024
  %mul1026 = fmul double %sub941, %add1025
  %add1027 = fadd double %add1019, %mul1026
  %mul1029 = fmul double %287, -2.000000e+00
  %mul1030 = fmul double %mul1029, %add1027
  %mul1035 = fmul double %sub872, %mul1030
  %300 = insertelement <2 x double> undef, double %add989, i32 0
  %301 = insertelement <2 x double> %300, double %sub872, i32 1
  %302 = insertelement <2 x double> undef, double %287, i32 0
  %303 = insertelement <2 x double> %302, double %mul1035, i32 1
  %304 = fmul <2 x double> %301, %303
  %305 = fadd <2 x double> %266, %304
  %306 = insertelement <2 x double> undef, double %sub878, i32 0
  %307 = insertelement <2 x double> %306, double %sub884, i32 1
  %308 = insertelement <2 x double> undef, double %mul1035, i32 0
  %309 = insertelement <2 x double> %308, double %mul1035, i32 1
  %310 = fmul <2 x double> %307, %309
  %311 = fadd <2 x double> %267, %310
  %312 = load double* %x1042, align 8, !tbaa !72
  %add1043 = fadd double %312, %mul1035
  store double %add1043, double* %x1042, align 8, !tbaa !72
  %x1044 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext867, i32 0
  %mul1047 = fmul double %sub878, %mul1030
  %313 = insertelement <2 x double> undef, double %add1012, i32 0
  %314 = insertelement <2 x double> %313, double %sub878, i32 1
  %315 = insertelement <2 x double> undef, double %288, i32 0
  %316 = insertelement <2 x double> %315, double %mul1047, i32 1
  %317 = fmul <2 x double> %314, %316
  %318 = fadd <2 x double> %271, %317
  %319 = load double* %y1052, align 8, !tbaa !73
  %add1053 = fadd double %319, %mul1047
  store double %add1053, double* %y1052, align 8, !tbaa !73
  %320 = bitcast double* %x1044 to <2 x double>*
  %321 = load <2 x double>* %320, align 8, !tbaa !17
  %322 = insertelement <2 x double> %308, double %mul1047, i32 1
  %323 = fsub <2 x double> %321, %322
  %324 = bitcast double* %x1044 to <2 x double>*
  store <2 x double> %323, <2 x double>* %324, align 8, !tbaa !17
  %mul1057 = fmul double %sub884, %mul1030
  %325 = insertelement <2 x double> undef, double %sub884, i32 0
  %326 = insertelement <2 x double> %325, double %sub884, i32 1
  %327 = insertelement <2 x double> undef, double %mul1047, i32 0
  %328 = insertelement <2 x double> %327, double %mul1057, i32 1
  %329 = fmul <2 x double> %326, %328
  %330 = fadd <2 x double> %268, %329
  %331 = load double* %z1060, align 8, !tbaa !74
  %add1061 = fadd double %331, %mul1057
  store double %add1061, double* %z1060, align 8, !tbaa !74
  %z1062 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext867, i32 2
  %332 = load double* %z1062, align 8, !tbaa !74
  %sub1063 = fsub double %332, %mul1057
  store double %sub1063, double* %z1062, align 8, !tbaa !74
  %add.ptr929.sum815 = or i64 %idx.ext906, 13
  %arrayidx1065 = getelementptr inbounds double* %7, i64 %add.ptr929.sum815
  %333 = load double* %arrayidx1065, align 8, !tbaa !17
  %add.ptr929.sum816 = or i64 %idx.ext906, 14
  %arrayidx1067 = getelementptr inbounds double* %7, i64 %add.ptr929.sum816
  %334 = load double* %arrayidx1067, align 8, !tbaa !17
  %add.ptr929.sum817 = or i64 %idx.ext906, 15
  %arrayidx1069 = getelementptr inbounds double* %7, i64 %add.ptr929.sum817
  %335 = load double* %arrayidx1069, align 8, !tbaa !17
  %mul1070 = shl nsw i32 %add893, 2
  %idx.ext1071 = sext i32 %mul1070 to i64
  %add.ptr1072 = getelementptr inbounds double* %8, i64 %idx.ext1071
  %336 = load double* %add.ptr1072, align 8, !tbaa !17
  %mul1074 = fmul double %sub, %336
  %sub1075 = fsub double %284, %mul1074
  %add.ptr1072.sum818 = or i64 %idx.ext1071, 1
  %arrayidx1076 = getelementptr inbounds double* %8, i64 %add.ptr1072.sum818
  %337 = load double* %arrayidx1076, align 8, !tbaa !17
  %mul1077 = fmul double %sub, %337
  %sub1078 = fsub double %333, %mul1077
  %add.ptr1072.sum819 = or i64 %idx.ext1071, 2
  %arrayidx1079 = getelementptr inbounds double* %8, i64 %add.ptr1072.sum819
  %338 = load double* %arrayidx1079, align 8, !tbaa !17
  %mul1080 = fmul double %sub, %338
  %sub1081 = fsub double %334, %mul1080
  %add.ptr1072.sum820 = or i64 %idx.ext1071, 3
  %arrayidx1082 = getelementptr inbounds double* %8, i64 %add.ptr1072.sum820
  %339 = load double* %arrayidx1082, align 8, !tbaa !17
  %mul1083 = fmul double %sub, %339
  %sub1084 = fsub double %335, %mul1083
  %mul1085 = fmul double %mul937, %sub1084
  %mul1086 = fmul double %mul937, %sub1081
  %mul1087 = fmul double %mul937, %sub1078
  %mul1088 = fmul double %mul937, %sub1075
  %mul1090 = fmul double %sub941, %mul1085
  %add1091 = fadd double %mul1086, %mul1090
  %mul1092 = fmul double %sub941, %add1091
  %add1093 = fadd double %mul1087, %mul1092
  %mul1094 = fmul double %sub941, %add1093
  %add1095 = fadd double %mul1088, %mul1094
  %340 = insertelement <2 x double> %313, double %add1095, i32 1
  %341 = insertelement <2 x double> %302, double %287, i32 1
  %342 = fmul <2 x double> %340, %341
  %343 = fadd <2 x double> %265, %342
  %344 = insertelement <2 x double> undef, double %add1095, i32 0
  %345 = insertelement <2 x double> %344, double %add989, i32 1
  %346 = insertelement <2 x double> %315, double %288, i32 1
  %347 = fmul <2 x double> %345, %346
  %348 = fadd <2 x double> %264, %347
  %mul1102 = fmul double %mul1022, %mul1085
  %mul1103 = fmul double %mul1086, 2.000000e+00
  %add1104 = fadd double %mul1103, %mul1102
  %mul1105 = fmul double %sub941, %add1104
  %add1106 = fadd double %mul1087, %mul1105
  %mul1108 = fmul double %add1106, -2.000000e+00
  %mul1109 = fmul double %287, %mul1108
  %mul1114 = fmul double %sub872, %mul1109
  %349 = insertelement <2 x double> undef, double %sub872, i32 0
  %350 = insertelement <2 x double> %349, double %sub878, i32 1
  %351 = insertelement <2 x double> undef, double %mul1114, i32 0
  %352 = insertelement <2 x double> %351, double %mul1114, i32 1
  %353 = fmul <2 x double> %350, %352
  %354 = fadd <2 x double> %269, %353
  %355 = load double* %x1121, align 8, !tbaa !72
  %add1122 = fadd double %355, %mul1114
  store double %add1122, double* %x1121, align 8, !tbaa !72
  %x1123 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext867, i32 0
  %mul1126 = fmul double %sub878, %mul1109
  %356 = insertelement <2 x double> undef, double %mul1126, i32 0
  %357 = insertelement <2 x double> %356, double %mul1126, i32 1
  %358 = fmul <2 x double> %307, %357
  %359 = fadd <2 x double> %270, %358
  %360 = load double* %y1131, align 8, !tbaa !73
  %add1132 = fadd double %360, %mul1126
  store double %add1132, double* %y1131, align 8, !tbaa !73
  %361 = bitcast double* %x1123 to <2 x double>*
  %362 = load <2 x double>* %361, align 8, !tbaa !17
  %363 = insertelement <2 x double> %351, double %mul1126, i32 1
  %364 = fsub <2 x double> %362, %363
  %365 = bitcast double* %x1123 to <2 x double>*
  store <2 x double> %364, <2 x double>* %365, align 8, !tbaa !17
  %mul1136 = fmul double %sub884, %mul1109
  %366 = insertelement <2 x double> %351, double %mul1136, i32 1
  %367 = fmul <2 x double> %326, %366
  %368 = fadd <2 x double> %272, %367
  %369 = load double* %z1139, align 8, !tbaa !74
  %add1140 = fadd double %369, %mul1136
  store double %add1140, double* %z1139, align 8, !tbaa !74
  %z1141 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext867, i32 2
  %370 = load double* %z1141, align 8, !tbaa !74
  %sub1142 = fsub double %370, %mul1136
  store double %sub1142, double* %z1141, align 8, !tbaa !74
  %indvars.iv.next1172 = add nuw nsw i64 %indvars.iv1171, 1
  %lftr.wideiv1173 = trunc i64 %indvars.iv.next1172 to i32
  %exitcond1174 = icmp eq i32 %lftr.wideiv1173, %conv859
  br i1 %exitcond1174, label %for.end1145, label %for.body862

for.end1145:                                      ; preds = %for.body862, %for.end854
  %371 = phi <2 x double> [ %255, %for.end854 ], [ %348, %for.body862 ]
  %372 = phi <2 x double> [ %256, %for.end854 ], [ %343, %for.body862 ]
  %373 = phi <2 x double> [ %257, %for.end854 ], [ %305, %for.body862 ]
  %374 = phi <2 x double> [ %258, %for.end854 ], [ %311, %for.body862 ]
  %375 = phi <2 x double> [ %259, %for.end854 ], [ %330, %for.body862 ]
  %376 = phi <2 x double> [ %260, %for.end854 ], [ %354, %for.body862 ]
  %377 = phi <2 x double> [ %261, %for.end854 ], [ %359, %for.body862 ]
  %378 = phi <2 x double> [ %262, %for.end854 ], [ %318, %for.body862 ]
  %379 = phi <2 x double> [ %263, %for.end854 ], [ %368, %for.body862 ]
  %conv1150 = trunc i64 %sub.ptr.div616 to i32
  %cmp11521048 = icmp sgt i32 %conv1150, 0
  br i1 %cmp11521048, label %for.body1153.lr.ph, label %for.inc1295

for.body1153.lr.ph:                               ; preds = %for.end1145
  %380 = extractelement <2 x double> %371, i32 0
  %381 = extractelement <2 x double> %372, i32 1
  %382 = extractelement <2 x double> %372, i32 0
  %x1270 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1280 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1288 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  %383 = insertelement <2 x double> undef, double %382, i32 0
  br label %for.body1153

for.body1153:                                     ; preds = %for.body1153, %for.body1153.lr.ph
  %indvars.iv1175 = phi i64 [ 0, %for.body1153.lr.ph ], [ %indvars.iv.next1176, %for.body1153 ]
  %fullElectEnergy.31057 = phi double [ %381, %for.body1153.lr.ph ], [ %add1246, %for.body1153 ]
  %fullElectEnergy_s.31056 = phi double [ %380, %for.body1153.lr.ph ], [ %add1248, %for.body1153 ]
  %384 = phi <2 x double> [ %376, %for.body1153.lr.ph ], [ %410, %for.body1153 ]
  %385 = phi <2 x double> [ %377, %for.body1153.lr.ph ], [ %417, %for.body1153 ]
  %386 = phi <2 x double> [ %379, %for.body1153.lr.ph ], [ %428, %for.body1153 ]
  %arrayidx1156 = getelementptr inbounds i32* %cond147891, i64 %indvars.iv1175
  %387 = load i32* %arrayidx1156, align 4, !tbaa !11
  %idx.ext1158 = sext i32 %387 to i64
  %x1162 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1158, i32 0, i32 0
  %388 = load double* %x1162, align 8, !tbaa !59
  %sub1163 = fsub double %76, %388
  %mul1165 = fmul double %sub1163, %sub1163
  %y1168 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1158, i32 0, i32 1
  %389 = load double* %y1168, align 8, !tbaa !61
  %sub1169 = fsub double %77, %389
  %mul1170 = fmul double %sub1169, %sub1169
  %add1171 = fadd double %mul1165, %mul1170
  %z1174 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1158, i32 0, i32 2
  %390 = load double* %z1174, align 8, !tbaa !62
  %sub1175 = fsub double %78, %390
  %mul1176 = fmul double %sub1175, %sub1175
  %add1177 = fadd double %add1171, %mul1176
  %conv1179 = fptrunc double %add1177 to float
  %391 = bitcast float %conv1179 to i32
  %shr1183 = ashr i32 %391, 17
  %add1184 = add nsw i32 %shr1183, %mul
  %mul1186 = shl nsw i32 %add1184, 4
  %idx.ext1187 = sext i32 %mul1186 to i64
  %add.ptr1189.sum785 = or i64 %idx.ext1187, 12
  %add.ptr1190 = getelementptr inbounds double* %7, i64 %add.ptr1189.sum785
  %392 = load double* %add.ptr1190, align 8, !tbaa !17
  %and1194 = and i32 %391, -131072
  %charge1196 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1158, i32 1
  %393 = load float* %charge1196, align 4, !tbaa !63
  %conv1197 = fpext float %393 to double
  %mul1198 = fmul double %mul402, %conv1197
  %394 = bitcast i32 %and1194 to float
  %conv1201 = fpext float %394 to double
  %sub1202 = fsub double %add1177, %conv1201
  %partition1204 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1158, i32 2
  %395 = bitcast [4 x i8]* %partition1204 to i32*
  %bf.load1205 = load i32* %395, align 4
  %bf.lshr1206 = lshr i32 %bf.load1205, 28
  %mul1208 = shl nuw nsw i32 %bf.lshr1206, 1
  %idxprom1209786 = zext i32 %mul1208 to i64
  %add.ptr398.sum = add i64 %idxprom1209786, %idx.ext397779
  %arrayidx1210 = getelementptr inbounds double* %119, i64 %add.ptr398.sum
  %396 = load double* %arrayidx1210, align 8, !tbaa !17
  %add1213787 = or i32 %mul1208, 1
  %idxprom1214788 = zext i32 %add1213787 to i64
  %add.ptr398.sum789 = add i64 %idxprom1214788, %idx.ext397779
  %arrayidx1215 = getelementptr inbounds double* %119, i64 %add.ptr398.sum789
  %397 = load double* %arrayidx1215, align 8, !tbaa !17
  %add.ptr1190.sum790 = or i64 %idx.ext1187, 13
  %arrayidx1217 = getelementptr inbounds double* %7, i64 %add.ptr1190.sum790
  %398 = load double* %arrayidx1217, align 8, !tbaa !17
  %add.ptr1190.sum791 = or i64 %idx.ext1187, 14
  %arrayidx1219 = getelementptr inbounds double* %7, i64 %add.ptr1190.sum791
  %399 = load double* %arrayidx1219, align 8, !tbaa !17
  %add.ptr1190.sum792 = or i64 %idx.ext1187, 15
  %arrayidx1221 = getelementptr inbounds double* %7, i64 %add.ptr1190.sum792
  %400 = load double* %arrayidx1221, align 8, !tbaa !17
  %mul1223 = shl nsw i32 %add1184, 2
  %idx.ext1224 = sext i32 %mul1223 to i64
  %add.ptr1225 = getelementptr inbounds double* %8, i64 %idx.ext1224
  %401 = load double* %add.ptr1225, align 8, !tbaa !17
  %sub1227 = fsub double %392, %401
  %add.ptr1225.sum793 = or i64 %idx.ext1224, 1
  %arrayidx1228 = getelementptr inbounds double* %8, i64 %add.ptr1225.sum793
  %402 = load double* %arrayidx1228, align 8, !tbaa !17
  %sub1229 = fsub double %398, %402
  %add.ptr1225.sum794 = or i64 %idx.ext1224, 2
  %arrayidx1230 = getelementptr inbounds double* %8, i64 %add.ptr1225.sum794
  %403 = load double* %arrayidx1230, align 8, !tbaa !17
  %sub1231 = fsub double %399, %403
  %add.ptr1225.sum795 = or i64 %idx.ext1224, 3
  %arrayidx1232 = getelementptr inbounds double* %8, i64 %add.ptr1225.sum795
  %404 = load double* %arrayidx1232, align 8, !tbaa !17
  %sub1233 = fsub double %400, %404
  %mul1234 = fmul double %mul1198, %sub1233
  %mul1235 = fmul double %mul1198, %sub1231
  %mul1236 = fmul double %mul1198, %sub1229
  %mul1237 = fmul double %mul1198, %sub1227
  %mul1239 = fmul double %sub1202, %mul1234
  %add1240 = fadd double %mul1235, %mul1239
  %mul1241 = fmul double %sub1202, %add1240
  %add1242 = fadd double %mul1236, %mul1241
  %mul1243 = fmul double %sub1202, %add1242
  %add1244 = fadd double %mul1237, %mul1243
  %mul1245 = fmul double %396, %add1244
  %add1246 = fadd double %fullElectEnergy.31057, %mul1245
  %mul1247 = fmul double %397, %add1244
  %add1248 = fadd double %fullElectEnergy_s.31056, %mul1247
  %mul1250 = fmul double %sub1202, 3.000000e+00
  %mul1251 = fmul double %mul1250, %mul1234
  %mul1252 = fmul double %mul1235, 2.000000e+00
  %add1253 = fadd double %mul1252, %mul1251
  %mul1254 = fmul double %sub1202, %add1253
  %add1255 = fadd double %mul1236, %mul1254
  %mul1257 = fmul double %add1255, -2.000000e+00
  %mul1258 = fmul double %396, %mul1257
  %mul1263 = fmul double %sub1163, %mul1258
  %405 = insertelement <2 x double> undef, double %sub1163, i32 0
  %406 = insertelement <2 x double> %405, double %sub1169, i32 1
  %407 = insertelement <2 x double> undef, double %mul1263, i32 0
  %408 = insertelement <2 x double> %407, double %mul1263, i32 1
  %409 = fmul <2 x double> %406, %408
  %410 = fadd <2 x double> %384, %409
  %411 = load double* %x1270, align 8, !tbaa !72
  %add1271 = fadd double %411, %mul1263
  store double %add1271, double* %x1270, align 8, !tbaa !72
  %x1272 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1158, i32 0
  %mul1275 = fmul double %sub1169, %mul1258
  %412 = insertelement <2 x double> undef, double %sub1169, i32 0
  %413 = insertelement <2 x double> %412, double %sub1175, i32 1
  %414 = insertelement <2 x double> undef, double %mul1275, i32 0
  %415 = insertelement <2 x double> %414, double %mul1275, i32 1
  %416 = fmul <2 x double> %413, %415
  %417 = fadd <2 x double> %385, %416
  %418 = load double* %y1280, align 8, !tbaa !73
  %add1281 = fadd double %418, %mul1275
  store double %add1281, double* %y1280, align 8, !tbaa !73
  %419 = bitcast double* %x1272 to <2 x double>*
  %420 = load <2 x double>* %419, align 8, !tbaa !17
  %421 = insertelement <2 x double> %407, double %mul1275, i32 1
  %422 = fsub <2 x double> %420, %421
  %423 = bitcast double* %x1272 to <2 x double>*
  store <2 x double> %422, <2 x double>* %423, align 8, !tbaa !17
  %mul1285 = fmul double %sub1175, %mul1258
  %424 = insertelement <2 x double> undef, double %sub1175, i32 0
  %425 = insertelement <2 x double> %424, double %sub1175, i32 1
  %426 = insertelement <2 x double> %407, double %mul1285, i32 1
  %427 = fmul <2 x double> %425, %426
  %428 = fadd <2 x double> %386, %427
  %429 = load double* %z1288, align 8, !tbaa !74
  %add1289 = fadd double %429, %mul1285
  store double %add1289, double* %z1288, align 8, !tbaa !74
  %z1290 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1158, i32 2
  %430 = load double* %z1290, align 8, !tbaa !74
  %sub1291 = fsub double %430, %mul1285
  store double %sub1291, double* %z1290, align 8, !tbaa !74
  %indvars.iv.next1176 = add nuw nsw i64 %indvars.iv1175, 1
  %lftr.wideiv1177 = trunc i64 %indvars.iv.next1176 to i32
  %exitcond1178 = icmp eq i32 %lftr.wideiv1177, %conv1150
  br i1 %exitcond1178, label %for.inc1295.loopexit, label %for.body1153

for.inc1295.loopexit:                             ; preds = %for.body1153
  %431 = insertelement <2 x double> undef, double %add1248, i32 0
  %432 = shufflevector <2 x double> %431, <2 x double> %371, <2 x i32> <i32 0, i32 3>
  %433 = insertelement <2 x double> %383, double %add1246, i32 1
  br label %for.inc1295

for.inc1295:                                      ; preds = %for.inc1295.loopexit, %for.end1145, %if.then220
  %pairCount.3 = phi i32 [ %sub216, %if.then220 ], [ %pairCount.2, %for.end1145 ], [ %pairCount.2, %for.inc1295.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.01070, %if.then220 ], [ %pairlistoffset.1, %for.end1145 ], [ %pairlistoffset.1, %for.inc1295.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.01071, %if.then220 ], [ %pairlistindex.2, %for.end1145 ], [ %pairlistindex.2, %for.inc1295.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.01072, %if.then220 ], [ %fixg_lower.3, %for.end1145 ], [ %fixg_lower.3, %for.inc1295.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.01073, %if.then220 ], [ %g_lower.3, %for.end1145 ], [ %g_lower.3, %for.inc1295.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.01074, %if.then220 ], [ %j_hgroup.2, %for.end1145 ], [ %j_hgroup.2, %for.inc1295.loopexit ]
  %i.1 = phi i32 [ %add222, %if.then220 ], [ %i.01075, %for.end1145 ], [ %i.01075, %for.inc1295.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.01094, %if.then220 ], [ %conv626, %for.end1145 ], [ %conv626, %for.inc1295.loopexit ]
  %434 = phi <2 x double> [ %62, %if.then220 ], [ %371, %for.end1145 ], [ %432, %for.inc1295.loopexit ]
  %435 = phi <2 x double> [ %63, %if.then220 ], [ %372, %for.end1145 ], [ %433, %for.inc1295.loopexit ]
  %436 = phi <2 x double> [ %64, %if.then220 ], [ %373, %for.end1145 ], [ %373, %for.inc1295.loopexit ]
  %437 = phi <2 x double> [ %65, %if.then220 ], [ %374, %for.end1145 ], [ %374, %for.inc1295.loopexit ]
  %438 = phi <2 x double> [ %66, %if.then220 ], [ %375, %for.end1145 ], [ %375, %for.inc1295.loopexit ]
  %439 = phi <2 x double> [ %67, %if.then220 ], [ %376, %for.end1145 ], [ %410, %for.inc1295.loopexit ]
  %440 = phi <2 x double> [ %68, %if.then220 ], [ %377, %for.end1145 ], [ %417, %for.inc1295.loopexit ]
  %441 = phi <2 x double> [ %69, %if.then220 ], [ %378, %for.end1145 ], [ %378, %for.inc1295.loopexit ]
  %442 = phi <2 x double> [ %70, %if.then220 ], [ %379, %for.end1145 ], [ %428, %for.inc1295.loopexit ]
  %inc1296 = add nsw i32 %i.1, 1
  %cmp174 = icmp sgt i32 %sub165, %inc1296
  br i1 %cmp174, label %for.body175, label %for.end1297

for.end1297:                                      ; preds = %for.inc1295, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1295 ]
  %443 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %434, %for.inc1295 ]
  %444 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %435, %for.inc1295 ]
  %445 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %436, %for.inc1295 ]
  %446 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %437, %for.inc1295 ]
  %447 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %438, %for.inc1295 ]
  %448 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %439, %for.inc1295 ]
  %449 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %440, %for.inc1295 ]
  %450 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %441, %for.inc1295 ]
  %451 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %442, %for.inc1295 ]
  %452 = extractelement <2 x double> %451, i32 1
  %arraydecay1298 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1299 = icmp eq i32* %cond86586711921198, %arraydecay1298
  br i1 %cmp1299, label %if.end1304, label %delete.notnull1302

delete.notnull1302:                               ; preds = %for.end1297
  %453 = bitcast i32* %cond86586711921198 to i8*
  call void @_ZdaPv(i8* %453) #7
  br label %if.end1304

if.end1304:                                       ; preds = %delete.notnull1302, %for.end1297
  %arraydecay1305 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1306 = icmp eq i32* %cond1986911901199, %arraydecay1305
  br i1 %cmp1306, label %if.end1311, label %delete.notnull1309

delete.notnull1309:                               ; preds = %if.end1304
  %454 = bitcast i32* %cond1986911901199 to i8*
  call void @_ZdaPv(i8* %454) #7
  br label %if.end1311

if.end1311:                                       ; preds = %delete.notnull1309, %if.end1304
  %arraydecay1312 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1313 = icmp eq i32* %cond3011941197, %arraydecay1312
  br i1 %cmp1313, label %if.end1318, label %delete.notnull1316

delete.notnull1316:                               ; preds = %if.end1311
  %455 = bitcast i32* %cond3011941197 to i8*
  call void @_ZdaPv(i8* %455) #7
  br label %if.end1318

if.end1318:                                       ; preds = %delete.notnull1316, %if.end1311
  %arraydecay1319 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1320 = icmp eq i32* %cond114873875881887, %arraydecay1319
  br i1 %cmp1320, label %if.end1325, label %delete.notnull1323

delete.notnull1323:                               ; preds = %if.end1318
  %456 = bitcast i32* %cond114873875881887 to i8*
  call void @_ZdaPv(i8* %456) #7
  br label %if.end1325

if.end1325:                                       ; preds = %delete.notnull1323, %if.end1318
  %arraydecay1326 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1327 = icmp eq i32* %cond125877879889, %arraydecay1326
  br i1 %cmp1327, label %if.end1332, label %delete.notnull1330

delete.notnull1330:                               ; preds = %if.end1325
  %457 = bitcast i32* %cond125877879889 to i8*
  call void @_ZdaPv(i8* %457) #7
  br label %if.end1332

if.end1332:                                       ; preds = %delete.notnull1330, %if.end1325
  %arraydecay1333 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1334 = icmp eq i32* %cond136883885, %arraydecay1333
  br i1 %cmp1334, label %if.end1339, label %delete.notnull1337

delete.notnull1337:                               ; preds = %if.end1332
  %458 = bitcast i32* %cond136883885 to i8*
  call void @_ZdaPv(i8* %458) #7
  br label %if.end1339

if.end1339:                                       ; preds = %delete.notnull1337, %if.end1332
  %arraydecay1340 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1341 = icmp eq i32* %cond147891, %arraydecay1340
  br i1 %cmp1341, label %if.end1346, label %delete.notnull1344

delete.notnull1344:                               ; preds = %if.end1339
  %459 = bitcast i32* %cond147891 to i8*
  call void @_ZdaPv(i8* %459) #7
  br label %if.end1346

if.end1346:                                       ; preds = %delete.notnull1344, %if.end1339
  %arraydecay1347 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1348 = icmp eq i32* %cond158, %arraydecay1347
  br i1 %cmp1348, label %if.end1353, label %delete.notnull1351

delete.notnull1351:                               ; preds = %if.end1346
  %460 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %460) #7
  br label %if.end1353

if.end1353:                                       ; preds = %delete.notnull1351, %if.end1346
  %conv1354 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1355 = getelementptr inbounds double* %1, i64 22
  %arrayidx1357 = getelementptr inbounds double* %1, i64 2
  %461 = bitcast double* %arrayidx1355 to <2 x double>*
  %462 = load <2 x double>* %461, align 8, !tbaa !17
  %463 = insertelement <2 x double> undef, double %conv1354, i32 0
  %464 = shufflevector <2 x double> %463, <2 x double> %450, <2 x i32> <i32 0, i32 2>
  %465 = fadd <2 x double> %464, %462
  %466 = bitcast double* %arrayidx1355 to <2 x double>*
  store <2 x double> %465, <2 x double>* %466, align 8, !tbaa !17
  %467 = bitcast double* %arrayidx1357 to <2 x double>*
  %468 = load <2 x double>* %467, align 8, !tbaa !17
  %469 = fadd <2 x double> %445, %468
  %470 = bitcast double* %arrayidx1357 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 8, !tbaa !17
  %arrayidx1367 = getelementptr inbounds double* %1, i64 4
  %471 = bitcast double* %arrayidx1367 to <2 x double>*
  %472 = load <2 x double>* %471, align 8, !tbaa !17
  %473 = fadd <2 x double> %446, %472
  %474 = bitcast double* %arrayidx1367 to <2 x double>*
  store <2 x double> %473, <2 x double>* %474, align 8, !tbaa !17
  %arrayidx1371 = getelementptr inbounds double* %1, i64 6
  %475 = bitcast double* %arrayidx1371 to <2 x double>*
  %476 = load <2 x double>* %475, align 8, !tbaa !17
  %477 = shufflevector <2 x double> %446, <2 x double> %450, <2 x i32> <i32 0, i32 3>
  %478 = fadd <2 x double> %477, %476
  %479 = bitcast double* %arrayidx1371 to <2 x double>*
  store <2 x double> %478, <2 x double>* %479, align 8, !tbaa !17
  %arrayidx1375 = getelementptr inbounds double* %1, i64 8
  %480 = bitcast double* %arrayidx1375 to <2 x double>*
  %481 = load <2 x double>* %480, align 8, !tbaa !17
  %482 = shufflevector <2 x double> %447, <2 x double> %446, <2 x i32> <i32 0, i32 3>
  %483 = fadd <2 x double> %482, %481
  %484 = bitcast double* %arrayidx1375 to <2 x double>*
  store <2 x double> %483, <2 x double>* %484, align 8, !tbaa !17
  %arrayidx1379 = getelementptr inbounds double* %1, i64 10
  %485 = bitcast double* %arrayidx1379 to <2 x double>*
  %486 = load <2 x double>* %485, align 8, !tbaa !17
  %487 = fadd <2 x double> %447, %486
  %488 = bitcast double* %arrayidx1379 to <2 x double>*
  store <2 x double> %487, <2 x double>* %488, align 8, !tbaa !17
  %489 = bitcast double* %1 to <2 x double>*
  %490 = load <2 x double>* %489, align 8, !tbaa !17
  %491 = fadd <2 x double> %444, %490
  %492 = bitcast double* %1 to <2 x double>*
  store <2 x double> %491, <2 x double>* %492, align 8, !tbaa !17
  %arrayidx1385 = getelementptr inbounds double* %1, i64 24
  %493 = bitcast double* %arrayidx1385 to <2 x double>*
  %494 = load <2 x double>* %493, align 8, !tbaa !17
  %495 = fadd <2 x double> %443, %494
  %496 = bitcast double* %arrayidx1385 to <2 x double>*
  store <2 x double> %495, <2 x double>* %496, align 8, !tbaa !17
  %arrayidx1387 = getelementptr inbounds double* %1, i64 12
  %497 = bitcast double* %arrayidx1387 to <2 x double>*
  %498 = load <2 x double>* %497, align 8, !tbaa !17
  %499 = fadd <2 x double> %448, %498
  %500 = bitcast double* %arrayidx1387 to <2 x double>*
  store <2 x double> %499, <2 x double>* %500, align 8, !tbaa !17
  %arrayidx1391 = getelementptr inbounds double* %1, i64 14
  %501 = bitcast double* %arrayidx1391 to <2 x double>*
  %502 = load <2 x double>* %501, align 8, !tbaa !17
  %503 = shufflevector <2 x double> %451, <2 x double> %448, <2 x i32> <i32 0, i32 3>
  %504 = fadd <2 x double> %503, %502
  %505 = bitcast double* %arrayidx1391 to <2 x double>*
  store <2 x double> %504, <2 x double>* %505, align 8, !tbaa !17
  %arrayidx1395 = getelementptr inbounds double* %1, i64 16
  %506 = bitcast double* %arrayidx1395 to <2 x double>*
  %507 = load <2 x double>* %506, align 8, !tbaa !17
  %508 = fadd <2 x double> %449, %507
  %509 = bitcast double* %arrayidx1395 to <2 x double>*
  store <2 x double> %508, <2 x double>* %509, align 8, !tbaa !17
  %arrayidx1399 = getelementptr inbounds double* %1, i64 18
  %510 = bitcast double* %arrayidx1399 to <2 x double>*
  %511 = load <2 x double>* %510, align 8, !tbaa !17
  %512 = shufflevector <2 x double> %451, <2 x double> %449, <2 x i32> <i32 0, i32 3>
  %513 = fadd <2 x double> %512, %511
  %514 = bitcast double* %arrayidx1399 to <2 x double>*
  store <2 x double> %513, <2 x double>* %514, align 8, !tbaa !17
  %arrayidx1403 = getelementptr inbounds double* %1, i64 20
  %515 = load double* %arrayidx1403, align 8, !tbaa !17
  %add1404 = fadd double %452, %515
  store double %add1404, double* %arrayidx1403, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1353, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil36calc_pair_energy_merge_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31890 = icmp sgt i32 %13, 0
  br i1 %cmp31890, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30947 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond695697945 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19699943 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv936 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next937, %for.inc ]
  %g.0891 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv936, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0891, 1
  %idxprom41 = sext i32 %g.0891 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond695697945, i64 %idxprom41
  %30 = trunc i64 %indvars.iv936 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0891, %for.body ]
  %indvars.iv.next937 = add nuw nsw i64 %indvars.iv936, 1
  %lftr.wideiv938 = trunc i64 %indvars.iv.next937 to i32
  %exitcond939 = icmp eq i32 %lftr.wideiv938, %13
  br i1 %exitcond939, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond695697945, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond695697945, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa952 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19699942951 = phi i32* [ %cond19699943, %for.end ], [ %cond19699943, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond695697944950 = phi i32* [ %cond695697945, %for.end ], [ %cond695697945, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30946949 = phi i32* [ %cond30947, %for.end ], [ %cond30947, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56884 = icmp sgt i32 %g.0.lcssa952, 0
  br i1 %cmp56884, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75878 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76879 = icmp sgt i32 %12, 0
  %or.cond679880 = and i1 %tobool75878, %cmp76879
  br i1 %or.cond679880, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv932 = phi i64 [ %indvars.iv.next933, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0886 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0885 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond695697944950, i64 %indvars.iv932
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0886, 1
  %idxprom68 = sext i32 %fixg.0886 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19699942951, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0885, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0886, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next933 = add nuw nsw i64 %indvars.iv932, 1
  %lftr.wideiv934 = trunc i64 %indvars.iv.next933 to i32
  %exitcond935 = icmp eq i32 %lftr.wideiv934, %g.0.lcssa952
  br i1 %exitcond935, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv930 = phi i64 [ %indvars.iv.next931, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2881 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv930, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2881
  %indvars.iv.next931 = add nuw nsw i64 %indvars.iv930, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next931 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond679 = and i1 %tobool75, %cmp76
  br i1 %or.cond679, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75878, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond695697944950, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond695697944950 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19699942951, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19699942951 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30946949, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30946949 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19699942951, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19699942951, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2702 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162721 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140707709719 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129703705711717 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151713715 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183841 = icmp sgt i32 %12, 0
  br i1 %cmp183841, label %for.body184.lr.ph, label %for.end1109

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i692 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast525 = ptrtoint i32* %cond140707709719 to i64
  %sub.ptr.rhs.cast562 = ptrtoint i32* %cond162721 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast576 = ptrtoint i32* %cond151713715 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30946949 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129703705711717 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc1107, %for.body184.lr.ph
  %exclChecksum.0865 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc1107 ]
  %i.1844 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc1108, %for.inc1107 ]
  %pairlistindex.0843 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc1107 ]
  %pairCount.0842 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc1107 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %354, %for.inc1107 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %355, %for.inc1107 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %356, %for.inc1107 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %357, %for.inc1107 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %358, %for.inc1107 ]
  %idxprom185 = sext i32 %i.1844 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %66 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %66, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i723 = zext i32 %bf.clear188 to i64
  %67 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i723, i32 0
  %68 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i723, i32 1
  %69 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %67, i64 %idxprom.i723, i32 2
  %70 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %68 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %71 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %72 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %73 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %74 = and i32 %bf.load187, 62914560
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0842
  %cmp218 = icmp sge i32 %pairCount.0842, %div
  %cmp220 = icmp slt i32 %pairCount.0842, %div181
  %or.cond681 = and i1 %cmp218, %cmp220
  br i1 %or.cond681, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1844, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc1107

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0842, %if.then205 ], [ %add217, %if.then211 ]
  %76 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %76, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %77 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %77, i32* %cond19699942951, i32* %cond695697944950
  %cond243 = select i1 %77, i32 %fixg.2702, i32 %g.0.lcssa952
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %78 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %78 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %79 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %80 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %81 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %81, %if.then245 ], [ %87, %if.then285 ]
  %p_j_y.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_x.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %j2.0.ph = phi i32 [ %78, %if.then245 ], [ %84, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30946949, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %82 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %82, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %87, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %83 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %83, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %84 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %71, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %84 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %85 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %72, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %86 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %73, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %87 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div676 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div676 to i32
  %cmp289734 = icmp sgt i32 %conv287, 0
  br i1 %cmp289734, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %88 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %89 = lshr i64 %88, 2
  %90 = trunc i64 %89 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv898 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next899, %cond.end310 ]
  %pli.0736 = phi i32* [ %cond129703705711717, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30946949, i64 %indvars.iv898
  %91 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %91 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %92 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %92, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp677678 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp677678, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %91, i32* %pli.0736, align 4, !tbaa !11
  %add313 = add nsw i32 %91, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0736, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %91, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0736, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %91, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0736, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0736, i64 %cond311
  %indvars.iv.next899 = add nuw nsw i64 %indvars.iv898, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next899 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %90
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129703705711717, %land.end ], [ %cond129703705711717, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328673 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328673 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext674 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext674, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129703705711717, i64 %idxprom333
  %93 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129703705711717, i64 %idxprom335
  store i32 %93, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %66, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1844
  br label %for.inc1107

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0842, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0843, %for.body184 ]
  %94 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %94, 0
  %bf.load364.pre = load i32* %66, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load364.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %95 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %96 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr365 = lshr i32 %bf.load364.pre, 28
  %mul366 = mul nsw i32 %bf.lshr365, 6
  %idx.ext367614 = zext i32 %mul366 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %97 = load float* %charge, align 4, !tbaa !63
  %conv369 = fpext float %97 to double
  %mul370 = fmul double %conv369, 3.320636e+02
  %mul371 = fmul double %8, %mul370
  %mul372 = fmul double %4, %mul371
  %bf.clear375 = and i32 %bf.load364.pre, 4194303
  %idxprom.i691724 = zext i32 %bf.clear375 to i64
  %98 = load i32** %atomVdwType.i692, align 8, !tbaa !64
  %arrayidx.i693 = getelementptr inbounds i32* %98, i64 %idxprom.i691724
  %99 = load i32* %arrayidx.i693, align 4, !tbaa !11
  %100 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %101 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv377 = shl i32 %99, 1
  %mul.i = and i32 %conv377, 131070
  %mul2.i = mul i32 %mul.i, %101
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp383761 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %95, label %for.cond382.preheader, label %if.else444

for.cond382.preheader:                            ; preds = %land.end362
  br i1 %cmp383761, label %for.body384, label %if.end523

for.body384:                                      ; preds = %for.inc441, %for.cond382.preheader
  %indvars.iv909 = phi i64 [ %indvars.iv.next910, %for.inc441 ], [ 0, %for.cond382.preheader ]
  %exclChecksum.1765 = phi i32 [ %exclChecksum.3, %for.inc441 ], [ %exclChecksum.0865, %for.cond382.preheader ]
  %pli379.0764 = phi i32* [ %pli379.1, %for.inc441 ], [ %cond140707709719, %for.cond382.preheader ]
  %plin.0763 = phi i32* [ %plin.1, %for.inc441 ], [ %cond151713715, %for.cond382.preheader ]
  %arrayidx386 = getelementptr inbounds i32* %cond129703705711717, i64 %indvars.iv909
  %102 = load i32* %arrayidx386, align 4, !tbaa !11
  %idxprom388 = sext i32 %102 to i64
  %x391 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 0
  %103 = load double* %x391, align 8, !tbaa !59
  %sub393 = fsub double %71, %103
  %mul394 = fmul double %sub393, %sub393
  %y399 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 1
  %104 = load double* %y399, align 8, !tbaa !61
  %sub401 = fsub double %72, %104
  %mul402 = fmul double %sub401, %sub401
  %add403 = fadd double %mul394, %mul402
  %z408 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 2
  %105 = load double* %z408, align 8, !tbaa !62
  %sub409 = fsub double %73, %105
  %mul410 = fmul double %sub409, %sub409
  %add411 = fadd double %add403, %mul410
  %atomFixed414 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 2
  %106 = bitcast [4 x i8]* %atomFixed414 to i32*
  %bf.load415 = load i32* %106, align 4
  %bf.clear417 = and i32 %bf.load415, 67108864
  %tobool418 = icmp ne i32 %bf.clear417, 0
  %cmp420 = fcmp ugt double %add411, %2
  %or.cond682 = or i1 %tobool418, %cmp420
  br i1 %or.cond682, label %for.inc441, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %for.body384
  %cmp422 = fcmp ugt double %add411, %10
  br i1 %cmp422, label %if.then426, label %land.lhs.true423

land.lhs.true423:                                 ; preds = %land.lhs.true421
  %inc424 = add nsw i32 %exclChecksum.1765, 1
  %tobool425 = icmp eq i32 %inc424, 0
  br i1 %tobool425, label %if.then426, label %for.inc441

if.then426:                                       ; preds = %land.lhs.true423, %land.lhs.true421
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true423 ], [ %exclChecksum.1765, %land.lhs.true421 ]
  %bf.clear431 = and i32 %bf.load415, 4194303
  %cmp432 = icmp slt i32 %bf.clear431, %68
  %cmp434 = icmp sgt i32 %bf.clear431, %69
  %or.cond683 = or i1 %cmp432, %cmp434
  br i1 %or.cond683, label %if.else437, label %if.then435

if.then435:                                       ; preds = %if.then426
  %incdec.ptr436 = getelementptr inbounds i32* %pli379.0764, i64 1
  store i32 %102, i32* %pli379.0764, align 4, !tbaa !11
  br label %for.inc441

if.else437:                                       ; preds = %if.then426
  %incdec.ptr438 = getelementptr inbounds i32* %plin.0763, i64 1
  store i32 %102, i32* %plin.0763, align 4, !tbaa !11
  br label %for.inc441

for.inc441:                                       ; preds = %if.else437, %if.then435, %land.lhs.true423, %for.body384
  %plin.1 = phi i32* [ %plin.0763, %for.body384 ], [ %plin.0763, %land.lhs.true423 ], [ %plin.0763, %if.then435 ], [ %incdec.ptr438, %if.else437 ]
  %pli379.1 = phi i32* [ %pli379.0764, %for.body384 ], [ %pli379.0764, %land.lhs.true423 ], [ %incdec.ptr436, %if.then435 ], [ %pli379.0764, %if.else437 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1765, %for.body384 ], [ %inc424, %land.lhs.true423 ], [ %exclChecksum.2, %if.then435 ], [ %exclChecksum.2, %if.else437 ]
  %indvars.iv.next910 = add nuw nsw i64 %indvars.iv909, 1
  %lftr.wideiv911 = trunc i64 %indvars.iv.next910 to i32
  %exitcond912 = icmp eq i32 %lftr.wideiv911, %pairlistindex.1
  br i1 %exitcond912, label %if.end523, label %for.body384

if.else444:                                       ; preds = %land.end362
  br i1 %cmp383761, label %if.then447, label %if.end523

if.then447:                                       ; preds = %if.else444
  %107 = load i32* %cond129703705711717, align 4, !tbaa !11
  %idxprom452 = sext i32 %107 to i64
  %x455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 0
  %108 = load double* %x455, align 8, !tbaa !59
  %y460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 1
  %109 = load double* %y460, align 8, !tbaa !61
  %z465 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 2
  %110 = load double* %z465, align 8, !tbaa !62
  br label %while.cond472.outer

while.cond472.outer:                              ; preds = %if.else512, %if.then447
  %idxprom452.pn.ph = phi i64 [ %idxprom452, %if.then447 ], [ %idxprom481, %if.else512 ]
  %p_j_z461.0.ph = phi double [ %110, %if.then447 ], [ %116, %if.else512 ]
  %p_j_y456.0.ph = phi double [ %109, %if.then447 ], [ %115, %if.else512 ]
  %p_j_x451.0.ph = phi double [ %108, %if.then447 ], [ %114, %if.else512 ]
  %j2448.0.ph = phi i32 [ %107, %if.then447 ], [ %113, %if.else512 ]
  %k445.0.ph = phi i32 [ 0, %if.then447 ], [ %inc475, %if.else512 ]
  %plin.2.ph = phi i32* [ %cond151713715, %if.then447 ], [ %incdec.ptr513, %if.else512 ]
  %pli379.2.ph = phi i32* [ %cond140707709719, %if.then447 ], [ %pli379.2.ph744, %if.else512 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0865, %if.then447 ], [ %exclChecksum.5, %if.else512 ]
  br label %while.cond472.outer737

while.cond472.outer737:                           ; preds = %if.then510, %while.cond472.outer
  %idxprom452.pn.ph738 = phi i64 [ %idxprom481, %if.then510 ], [ %idxprom452.pn.ph, %while.cond472.outer ]
  %p_j_z461.0.ph739 = phi double [ %116, %if.then510 ], [ %p_j_z461.0.ph, %while.cond472.outer ]
  %p_j_y456.0.ph740 = phi double [ %115, %if.then510 ], [ %p_j_y456.0.ph, %while.cond472.outer ]
  %p_j_x451.0.ph741 = phi double [ %114, %if.then510 ], [ %p_j_x451.0.ph, %while.cond472.outer ]
  %j2448.0.ph742 = phi i32 [ %113, %if.then510 ], [ %j2448.0.ph, %while.cond472.outer ]
  %k445.0.ph743 = phi i32 [ %inc475, %if.then510 ], [ %k445.0.ph, %while.cond472.outer ]
  %pli379.2.ph744 = phi i32* [ %incdec.ptr511, %if.then510 ], [ %pli379.2.ph, %while.cond472.outer ]
  %exclChecksum.4.ph745 = phi i32 [ %exclChecksum.5, %if.then510 ], [ %exclChecksum.4.ph, %while.cond472.outer ]
  br label %while.cond472.outer746

while.cond472.outer746:                           ; preds = %land.lhs.true503, %while.cond472.outer737
  %idxprom452.pn.ph747 = phi i64 [ %idxprom481, %land.lhs.true503 ], [ %idxprom452.pn.ph738, %while.cond472.outer737 ]
  %p_j_z461.0.ph748 = phi double [ %116, %land.lhs.true503 ], [ %p_j_z461.0.ph739, %while.cond472.outer737 ]
  %p_j_y456.0.ph749 = phi double [ %115, %land.lhs.true503 ], [ %p_j_y456.0.ph740, %while.cond472.outer737 ]
  %p_j_x451.0.ph750 = phi double [ %114, %land.lhs.true503 ], [ %p_j_x451.0.ph741, %while.cond472.outer737 ]
  %j2448.0.ph751 = phi i32 [ %113, %land.lhs.true503 ], [ %j2448.0.ph742, %while.cond472.outer737 ]
  %k445.0.ph752 = phi i32 [ %inc475, %land.lhs.true503 ], [ %k445.0.ph743, %while.cond472.outer737 ]
  %exclChecksum.4.ph753 = phi i32 [ %inc504, %land.lhs.true503 ], [ %exclChecksum.4.ph745, %while.cond472.outer737 ]
  %111 = sext i32 %k445.0.ph752 to i64
  br label %while.cond472

while.cond472:                                    ; preds = %while.body474, %while.cond472.outer746
  %indvars.iv905 = phi i64 [ %111, %while.cond472.outer746 ], [ %indvars.iv.next906, %while.body474 ]
  %idxprom452.pn = phi i64 [ %idxprom452.pn.ph747, %while.cond472.outer746 ], [ %idxprom481, %while.body474 ]
  %p_j_z461.0 = phi double [ %p_j_z461.0.ph748, %while.cond472.outer746 ], [ %116, %while.body474 ]
  %p_j_y456.0 = phi double [ %p_j_y456.0.ph749, %while.cond472.outer746 ], [ %115, %while.body474 ]
  %p_j_x451.0 = phi double [ %p_j_x451.0.ph750, %while.cond472.outer746 ], [ %114, %while.body474 ]
  %j2448.0 = phi i32 [ %j2448.0.ph751, %while.cond472.outer746 ], [ %113, %while.body474 ]
  %k445.0 = phi i32 [ %k445.0.ph752, %while.cond472.outer746 ], [ %inc475, %while.body474 ]
  %112 = trunc i64 %indvars.iv905 to i32
  %cmp473 = icmp slt i32 %112, %pairlistindex.1
  br i1 %cmp473, label %while.body474, label %if.end523

while.body474:                                    ; preds = %while.cond472
  %atom2466.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452.pn, i32 2
  %atom2466.0.in.in = bitcast [4 x i8]* %atom2466.0.in.in.in to i32*
  %atom2466.0.in = load i32* %atom2466.0.in.in, align 4
  %atom2466.0 = and i32 %atom2466.0.in, 4194303
  %indvars.iv.next906 = add nsw i64 %indvars.iv905, 1
  %inc475 = add nsw i32 %k445.0, 1
  %arrayidx477 = getelementptr inbounds i32* %cond129703705711717, i64 %indvars.iv.next906
  %113 = load i32* %arrayidx477, align 4, !tbaa !11
  %sub479 = fsub double %71, %p_j_x451.0
  %mul480 = fmul double %sub479, %sub479
  %idxprom481 = sext i32 %113 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 0
  %114 = load double* %x484, align 8, !tbaa !59
  %sub486 = fsub double %72, %p_j_y456.0
  %mul487 = fmul double %sub486, %sub486
  %add488 = fadd double %mul487, %mul480
  %y492 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 1
  %115 = load double* %y492, align 8, !tbaa !61
  %sub493 = fsub double %73, %p_j_z461.0
  %mul494 = fmul double %sub493, %sub493
  %add495 = fadd double %mul494, %add488
  %z499 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 2
  %116 = load double* %z499, align 8, !tbaa !62
  %cmp500 = fcmp ugt double %add495, %2
  br i1 %cmp500, label %while.cond472, label %land.lhs.true501

land.lhs.true501:                                 ; preds = %while.body474
  %cmp502 = fcmp ugt double %add495, %10
  br i1 %cmp502, label %if.then506, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true501
  %inc504 = add nsw i32 %exclChecksum.4.ph753, 1
  %tobool505 = icmp eq i32 %inc504, 0
  br i1 %tobool505, label %if.then506, label %while.cond472.outer746

if.then506:                                       ; preds = %land.lhs.true503, %land.lhs.true501
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true503 ], [ %exclChecksum.4.ph753, %land.lhs.true501 ]
  %cmp507 = icmp slt i32 %atom2466.0, %68
  %cmp509 = icmp sgt i32 %atom2466.0, %69
  %or.cond684 = or i1 %cmp507, %cmp509
  br i1 %or.cond684, label %if.else512, label %if.then510

if.then510:                                       ; preds = %if.then506
  %incdec.ptr511 = getelementptr inbounds i32* %pli379.2.ph744, i64 1
  store i32 %j2448.0, i32* %pli379.2.ph744, align 4, !tbaa !11
  br label %while.cond472.outer737

if.else512:                                       ; preds = %if.then506
  %incdec.ptr513 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2448.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond472.outer

if.end523:                                        ; preds = %while.cond472, %if.else444, %for.inc441, %for.cond382.preheader
  %plin.4 = phi i32* [ %cond151713715, %if.else444 ], [ %cond151713715, %for.cond382.preheader ], [ %plin.2.ph, %while.cond472 ], [ %plin.1, %for.inc441 ]
  %pli379.4 = phi i32* [ %cond140707709719, %if.else444 ], [ %cond140707709719, %for.cond382.preheader ], [ %pli379.2.ph744, %while.cond472 ], [ %pli379.1, %for.inc441 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0865, %if.else444 ], [ %exclChecksum.0865, %for.cond382.preheader ], [ %exclChecksum.4.ph753, %while.cond472 ], [ %exclChecksum.3, %for.inc441 ]
  %sub.ptr.lhs.cast524 = ptrtoint i32* %pli379.4 to i64
  %sub.ptr.sub526 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %sub.ptr.div527615 = lshr exact i64 %sub.ptr.sub526, 2
  %conv528 = trunc i64 %sub.ptr.div527615 to i32
  %tobool529 = icmp eq i32 %conv528, 0
  br i1 %tobool529, label %for.end560, label %for.cond538.preheader

for.cond538.preheader:                            ; preds = %if.end523
  %sub531 = shl i64 %sub.ptr.sub526, 30
  %sext671 = add i64 %sub531, -4294967296
  %idxprom532 = ashr exact i64 %sext671, 32
  %arrayidx533 = getelementptr inbounds i32* %cond140707709719, i64 %idxprom532
  %117 = load i32* %arrayidx533, align 4, !tbaa !11
  %idxprom534 = ashr exact i64 %sub531, 32
  %arrayidx535 = getelementptr inbounds i32* %cond140707709719, i64 %idxprom534
  store i32 %117, i32* %arrayidx535, align 4, !tbaa !11
  %cmp539769 = icmp sgt i32 %conv528, 0
  br i1 %cmp539769, label %for.body540.lr.ph, label %for.end560

for.body540.lr.ph:                                ; preds = %for.cond538.preheader
  %118 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %119 = lshr i64 %118, 2
  %120 = trunc i64 %119 to i32
  br label %for.body540

for.body540:                                      ; preds = %for.inc558, %for.body540.lr.ph
  %indvars.iv913 = phi i64 [ 0, %for.body540.lr.ph ], [ %indvars.iv.next914, %for.inc558 ]
  %plin.5773 = phi i32* [ %plin.4, %for.body540.lr.ph ], [ %plin.6, %for.inc558 ]
  %plix.0772 = phi i32* [ %cond162721, %for.body540.lr.ph ], [ %plix.1, %for.inc558 ]
  %plim.0771 = phi i32* [ %cond173, %for.body540.lr.ph ], [ %plim.1, %for.inc558 ]
  %arrayidx543 = getelementptr inbounds i32* %cond140707709719, i64 %indvars.iv913
  %121 = load i32* %arrayidx543, align 4, !tbaa !11
  %idxprom545 = sext i32 %121 to i64
  %id547 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom545, i32 2
  %122 = bitcast [4 x i8]* %id547 to i32*
  %bf.load548 = load i32* %122, align 4
  %bf.clear549 = and i32 %bf.load548, 4194303
  %idxprom550670 = zext i32 %bf.clear549 to i64
  %add.ptr.sum = sub i64 %idxprom550670, %idx.ext
  %arrayidx551 = getelementptr inbounds i8* %70, i64 %add.ptr.sum
  %123 = load i8* %arrayidx551, align 1, !tbaa !68
  %conv552 = sext i8 %123 to i32
  switch i32 %conv552, label %for.inc558 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb554
    i32 2, label %sw.bb556
  ]

sw.bb:                                            ; preds = %for.body540
  %incdec.ptr553 = getelementptr inbounds i32* %plin.5773, i64 1
  store i32 %121, i32* %plin.5773, align 4, !tbaa !11
  br label %for.inc558

sw.bb554:                                         ; preds = %for.body540
  %incdec.ptr555 = getelementptr inbounds i32* %plix.0772, i64 1
  store i32 %121, i32* %plix.0772, align 4, !tbaa !11
  br label %for.inc558

sw.bb556:                                         ; preds = %for.body540
  %incdec.ptr557 = getelementptr inbounds i32* %plim.0771, i64 1
  store i32 %121, i32* %plim.0771, align 4, !tbaa !11
  br label %for.inc558

for.inc558:                                       ; preds = %sw.bb556, %sw.bb554, %sw.bb, %for.body540
  %plim.1 = phi i32* [ %plim.0771, %for.body540 ], [ %incdec.ptr557, %sw.bb556 ], [ %plim.0771, %sw.bb554 ], [ %plim.0771, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0772, %for.body540 ], [ %plix.0772, %sw.bb556 ], [ %incdec.ptr555, %sw.bb554 ], [ %plix.0772, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5773, %for.body540 ], [ %plin.5773, %sw.bb556 ], [ %plin.5773, %sw.bb554 ], [ %incdec.ptr553, %sw.bb ]
  %indvars.iv.next914 = add nuw nsw i64 %indvars.iv913, 1
  %lftr.wideiv915 = trunc i64 %indvars.iv.next914 to i32
  %exitcond916 = icmp eq i32 %lftr.wideiv915, %120
  br i1 %exitcond916, label %for.end560, label %for.body540

for.end560:                                       ; preds = %for.inc558, %for.cond538.preheader, %if.end523
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond538.preheader ], [ %plin.4, %if.end523 ], [ %plin.6, %for.inc558 ]
  %plix.0.lcssa = phi i32* [ %cond162721, %for.cond538.preheader ], [ %cond162721, %if.end523 ], [ %plix.1, %for.inc558 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond538.preheader ], [ %cond173, %if.end523 ], [ %plim.1, %for.inc558 ]
  %sub.ptr.lhs.cast561 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub563 = sub i64 %sub.ptr.lhs.cast561, %sub.ptr.rhs.cast562
  %sub.ptr.div564 = ashr exact i64 %sub.ptr.sub563, 2
  %conv565616 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast568 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %sub.ptr.div571 = ashr exact i64 %sub.ptr.sub570, 2
  %add566 = add i64 %sub.ptr.div571, %conv565616
  %add573 = add i64 %add566, %sub.ptr.div564
  %conv574 = trunc i64 %add573 to i32
  %sub.ptr.lhs.cast575 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %sub.ptr.div578618 = lshr exact i64 %sub.ptr.sub577, 2
  %conv579 = trunc i64 %sub.ptr.div578618 to i32
  %cmp581777 = icmp sgt i32 %conv579, 0
  br i1 %cmp581777, label %for.body582.lr.ph, label %for.end739

for.body582.lr.ph:                                ; preds = %for.end560
  %x717 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y726 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z733 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %124 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %125 = lshr i64 %124, 2
  %126 = trunc i64 %125 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.body582.for.body582_crit_edge, %for.body582.lr.ph
  %127 = phi i32* [ %98, %for.body582.lr.ph ], [ %.pre, %for.body582.for.body582_crit_edge ]
  %indvars.iv917 = phi i64 [ 0, %for.body582.lr.ph ], [ %indvars.iv.next918, %for.body582.for.body582_crit_edge ]
  %128 = phi <2 x double> [ %61, %for.body582.lr.ph ], [ %175, %for.body582.for.body582_crit_edge ]
  %129 = phi <2 x double> [ %62, %for.body582.lr.ph ], [ %179, %for.body582.for.body582_crit_edge ]
  %130 = phi <2 x double> [ %63, %for.body582.lr.ph ], [ %186, %for.body582.for.body582_crit_edge ]
  %131 = phi <2 x double> [ %64, %for.body582.lr.ph ], [ %193, %for.body582.for.body582_crit_edge ]
  %132 = phi <2 x double> [ %65, %for.body582.lr.ph ], [ %204, %for.body582.for.body582_crit_edge ]
  %arrayidx585 = getelementptr inbounds i32* %cond151713715, i64 %indvars.iv917
  %133 = load i32* %arrayidx585, align 4, !tbaa !11
  %idx.ext586 = sext i32 %133 to i64
  %x589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 0
  %134 = load double* %x589, align 8, !tbaa !59
  %sub590 = fsub double %71, %134
  %mul592 = fmul double %sub590, %sub590
  %y594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 1
  %135 = load double* %y594, align 8, !tbaa !61
  %sub595 = fsub double %72, %135
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %mul592, %mul596
  %z599 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 2
  %136 = load double* %z599, align 8, !tbaa !62
  %sub600 = fsub double %73, %136
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %add597, %mul601
  %conv603 = fptrunc double %add602 to float
  %137 = bitcast float %conv603 to i32
  %shr = ashr i32 %137, 17
  %add605 = add nsw i32 %shr, %mul
  %id606 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 2
  %138 = bitcast [4 x i8]* %id606 to i32*
  %bf.load607 = load i32* %138, align 4
  %bf.clear608 = and i32 %bf.load607, 4194303
  %idxprom.i687727 = zext i32 %bf.clear608 to i64
  %arrayidx.i689 = getelementptr inbounds i32* %127, i64 %idxprom.i687727
  %139 = load i32* %arrayidx.i689, align 4, !tbaa !11
  %conv.i690 = zext i32 %139 to i64
  %conv610 = shl nuw nsw i64 %conv.i690, 1
  %mul611 = and i64 %conv610, 131070
  %mul614 = shl nsw i32 %add605, 4
  %idx.ext615 = sext i32 %mul614 to i64
  %add.ptr616 = getelementptr inbounds double* %7, i64 %idx.ext615
  %140 = load double* %add.ptr616, align 8, !tbaa !17
  %add.ptr616.sum654 = or i64 %idx.ext615, 4
  %add.ptr621 = getelementptr inbounds double* %7, i64 %add.ptr616.sum654
  %141 = load double* %add.ptr621, align 8, !tbaa !17
  %add.ptr616.sum655 = or i64 %idx.ext615, 8
  %add.ptr626 = getelementptr inbounds double* %7, i64 %add.ptr616.sum655
  %142 = load double* %add.ptr626, align 8, !tbaa !17
  %and = and i32 %137, -131072
  %charge629 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 1
  %143 = load float* %charge629, align 4, !tbaa !63
  %conv630 = fpext float %143 to double
  %mul631 = fmul double %mul372, %conv630
  %144 = bitcast i32 %and to float
  %conv633 = fpext float %144 to double
  %sub634 = fsub double %add602, %conv633
  %bf.lshr637 = lshr i32 %bf.load607, 28
  %mul638 = shl nuw nsw i32 %bf.lshr637, 1
  %idxprom639656 = zext i32 %mul638 to i64
  %add.ptr368.sum657 = add i64 %idxprom639656, %idx.ext367614
  %arrayidx640 = getelementptr inbounds double* %96, i64 %add.ptr368.sum657
  %145 = load double* %arrayidx640, align 8, !tbaa !17
  %add642658 = or i32 %mul638, 1
  %idxprom643659 = zext i32 %add642658 to i64
  %add.ptr368.sum660 = add i64 %idxprom643659, %idx.ext367614
  %arrayidx644 = getelementptr inbounds double* %96, i64 %add.ptr368.sum660
  %146 = load double* %arrayidx644, align 8, !tbaa !17
  %add.ptr.i.sum728 = add i64 %mul611, %idx.ext.i
  %A646 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum728, i32 0
  %147 = load double* %A646, align 8, !tbaa !69
  %mul647 = fmul double %8, %147
  %B649 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum728, i32 1
  %148 = load double* %B649, align 8, !tbaa !71
  %mul650 = fmul double %8, %148
  %mul651 = fmul double %140, %mul647
  %mul652 = fmul double %141, %mul650
  %sub653 = fsub double %mul651, %mul652
  %add.ptr616.sum661 = or i64 %idx.ext615, 3
  %arrayidx654 = getelementptr inbounds double* %7, i64 %add.ptr616.sum661
  %149 = load double* %arrayidx654, align 8, !tbaa !17
  %mul655 = fmul double %mul647, %149
  %add.ptr621.sum662 = or i64 %idx.ext615, 7
  %arrayidx656 = getelementptr inbounds double* %7, i64 %add.ptr621.sum662
  %150 = load double* %arrayidx656, align 8, !tbaa !17
  %mul657 = fmul double %mul650, %150
  %sub658 = fsub double %mul655, %mul657
  %add.ptr616.sum663 = or i64 %idx.ext615, 2
  %arrayidx659 = getelementptr inbounds double* %7, i64 %add.ptr616.sum663
  %151 = load double* %arrayidx659, align 8, !tbaa !17
  %mul660 = fmul double %mul647, %151
  %add.ptr621.sum664 = or i64 %idx.ext615, 6
  %arrayidx661 = getelementptr inbounds double* %7, i64 %add.ptr621.sum664
  %152 = load double* %arrayidx661, align 8, !tbaa !17
  %mul662 = fmul double %mul650, %152
  %sub663 = fsub double %mul660, %mul662
  %add.ptr616.sum665 = or i64 %idx.ext615, 1
  %arrayidx664 = getelementptr inbounds double* %7, i64 %add.ptr616.sum665
  %153 = load double* %arrayidx664, align 8, !tbaa !17
  %mul665 = fmul double %mul647, %153
  %add.ptr621.sum666 = or i64 %idx.ext615, 5
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr621.sum666
  %154 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul650, %154
  %sub668 = fsub double %mul665, %mul667
  %mul669 = fmul double %sub634, %sub658
  %add670 = fadd double %mul669, %sub663
  %add.ptr626.sum667 = or i64 %idx.ext615, 9
  %arrayidx679 = getelementptr inbounds double* %7, i64 %add.ptr626.sum667
  %155 = load double* %arrayidx679, align 8, !tbaa !17
  %add.ptr626.sum668 = or i64 %idx.ext615, 10
  %arrayidx680 = getelementptr inbounds double* %7, i64 %add.ptr626.sum668
  %156 = load double* %arrayidx680, align 8, !tbaa !17
  %add.ptr626.sum669 = or i64 %idx.ext615, 11
  %arrayidx681 = getelementptr inbounds double* %7, i64 %add.ptr626.sum669
  %157 = load double* %arrayidx681, align 8, !tbaa !17
  %mul682 = fmul double %mul631, %157
  %mul683 = fmul double %mul631, %156
  %158 = insertelement <2 x double> undef, double %mul631, i32 0
  %159 = insertelement <2 x double> %158, double %add670, i32 1
  %160 = insertelement <2 x double> undef, double %155, i32 0
  %161 = insertelement <2 x double> %160, double %sub634, i32 1
  %162 = fmul <2 x double> %159, %161
  %mul685 = fmul double %142, %mul631
  %mul686 = fmul double %sub634, %mul682
  %add687 = fadd double %mul683, %mul686
  %mul688 = fmul double %sub634, %add687
  %163 = insertelement <2 x double> undef, double %mul688, i32 0
  %164 = insertelement <2 x double> %163, double %sub668, i32 1
  %165 = fadd <2 x double> %162, %164
  %166 = insertelement <2 x double> undef, double %sub634, i32 0
  %167 = insertelement <2 x double> %166, double %sub634, i32 1
  %168 = fmul <2 x double> %165, %167
  %169 = insertelement <2 x double> undef, double %mul685, i32 0
  %170 = insertelement <2 x double> %169, double %sub653, i32 1
  %171 = fadd <2 x double> %170, %168
  %172 = insertelement <2 x double> undef, double %145, i32 0
  %173 = insertelement <2 x double> %172, double %145, i32 1
  %174 = fmul <2 x double> %171, %173
  %175 = fadd <2 x double> %128, %174
  %176 = insertelement <2 x double> undef, double %146, i32 0
  %177 = insertelement <2 x double> %176, double %146, i32 1
  %178 = fmul <2 x double> %171, %177
  %179 = fadd <2 x double> %129, %178
  %add696 = fadd double %sub658, %mul682
  %add697 = fadd double %sub663, %mul683
  %180 = extractelement <2 x double> %162, i32 0
  %add698 = fadd double %180, %sub668
  %mul700 = fmul double %sub634, 3.000000e+00
  %mul701 = fmul double %mul700, %add696
  %mul702 = fmul double %add697, 2.000000e+00
  %add703 = fadd double %mul702, %mul701
  %mul704 = fmul double %sub634, %add703
  %add705 = fadd double %add698, %mul704
  %mul706 = fmul double %add705, -2.000000e+00
  %mul707 = fmul double %145, %mul706
  %mul710 = fmul double %sub590, %mul707
  %181 = insertelement <2 x double> undef, double %sub590, i32 0
  %182 = insertelement <2 x double> %181, double %sub595, i32 1
  %183 = insertelement <2 x double> undef, double %mul710, i32 0
  %184 = insertelement <2 x double> %183, double %mul710, i32 1
  %185 = fmul <2 x double> %182, %184
  %186 = fadd <2 x double> %130, %185
  %187 = load double* %x717, align 8, !tbaa !72
  %add718 = fadd double %187, %mul710
  store double %add718, double* %x717, align 8, !tbaa !72
  %x719 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 0
  %mul721 = fmul double %sub595, %mul707
  %188 = insertelement <2 x double> undef, double %sub595, i32 0
  %189 = insertelement <2 x double> %188, double %sub600, i32 1
  %190 = insertelement <2 x double> undef, double %mul721, i32 0
  %191 = insertelement <2 x double> %190, double %mul721, i32 1
  %192 = fmul <2 x double> %189, %191
  %193 = fadd <2 x double> %131, %192
  %194 = load double* %y726, align 8, !tbaa !73
  %add727 = fadd double %194, %mul721
  store double %add727, double* %y726, align 8, !tbaa !73
  %195 = bitcast double* %x719 to <2 x double>*
  %196 = load <2 x double>* %195, align 8, !tbaa !17
  %197 = insertelement <2 x double> %183, double %mul721, i32 1
  %198 = fsub <2 x double> %196, %197
  %199 = bitcast double* %x719 to <2 x double>*
  store <2 x double> %198, <2 x double>* %199, align 8, !tbaa !17
  %mul730 = fmul double %sub600, %mul707
  %200 = insertelement <2 x double> undef, double %sub600, i32 0
  %201 = insertelement <2 x double> %200, double %sub600, i32 1
  %202 = insertelement <2 x double> %183, double %mul730, i32 1
  %203 = fmul <2 x double> %201, %202
  %204 = fadd <2 x double> %132, %203
  %205 = load double* %z733, align 8, !tbaa !74
  %add734 = fadd double %205, %mul730
  store double %add734, double* %z733, align 8, !tbaa !74
  %z735 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 2
  %206 = load double* %z735, align 8, !tbaa !74
  %sub736 = fsub double %206, %mul730
  store double %sub736, double* %z735, align 8, !tbaa !74
  %indvars.iv.next918 = add nuw nsw i64 %indvars.iv917, 1
  %lftr.wideiv919 = trunc i64 %indvars.iv.next918 to i32
  %exitcond920 = icmp eq i32 %lftr.wideiv919, %126
  br i1 %exitcond920, label %for.end739, label %for.body582.for.body582_crit_edge

for.body582.for.body582_crit_edge:                ; preds = %for.body582
  %.pre = load i32** %atomVdwType.i692, align 8, !tbaa !64
  br label %for.body582

for.end739:                                       ; preds = %for.body582, %for.end560
  %207 = phi <2 x double> [ %61, %for.end560 ], [ %175, %for.body582 ]
  %208 = phi <2 x double> [ %62, %for.end560 ], [ %179, %for.body582 ]
  %209 = phi <2 x double> [ %63, %for.end560 ], [ %186, %for.body582 ]
  %210 = phi <2 x double> [ %64, %for.end560 ], [ %193, %for.body582 ]
  %211 = phi <2 x double> [ %65, %for.end560 ], [ %204, %for.body582 ]
  %conv744 = trunc i64 %sub.ptr.div571 to i32
  %cmp746799 = icmp sgt i32 %conv744, 0
  br i1 %cmp746799, label %for.body747.lr.ph, label %for.end957

for.body747.lr.ph:                                ; preds = %for.end739
  %x933 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y943 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z951 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body747

for.body747:                                      ; preds = %for.body747, %for.body747.lr.ph
  %indvars.iv921 = phi i64 [ 0, %for.body747.lr.ph ], [ %indvars.iv.next922, %for.body747 ]
  %212 = phi <2 x double> [ %207, %for.body747.lr.ph ], [ %264, %for.body747 ]
  %213 = phi <2 x double> [ %208, %for.body747.lr.ph ], [ %268, %for.body747 ]
  %214 = phi <2 x double> [ %209, %for.body747.lr.ph ], [ %275, %for.body747 ]
  %215 = phi <2 x double> [ %210, %for.body747.lr.ph ], [ %282, %for.body747 ]
  %216 = phi <2 x double> [ %211, %for.body747.lr.ph ], [ %293, %for.body747 ]
  %arrayidx750 = getelementptr inbounds i32* %cond173, i64 %indvars.iv921
  %217 = load i32* %arrayidx750, align 4, !tbaa !11
  %idx.ext752 = sext i32 %217 to i64
  %x756 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 0
  %218 = load double* %x756, align 8, !tbaa !59
  %sub757 = fsub double %71, %218
  %mul759 = fmul double %sub757, %sub757
  %y762 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 1
  %219 = load double* %y762, align 8, !tbaa !61
  %sub763 = fsub double %72, %219
  %mul764 = fmul double %sub763, %sub763
  %add765 = fadd double %mul759, %mul764
  %z768 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 0, i32 2
  %220 = load double* %z768, align 8, !tbaa !62
  %sub769 = fsub double %73, %220
  %mul770 = fmul double %sub769, %sub769
  %add771 = fadd double %add765, %mul770
  %conv773 = fptrunc double %add771 to float
  %221 = bitcast float %conv773 to i32
  %shr777 = ashr i32 %221, 17
  %add778 = add nsw i32 %shr777, %mul
  %id780 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 2
  %222 = bitcast [4 x i8]* %id780 to i32*
  %bf.load781 = load i32* %222, align 4
  %bf.clear782 = and i32 %bf.load781, 4194303
  %idxprom.i685725 = zext i32 %bf.clear782 to i64
  %223 = load i32** %atomVdwType.i692, align 8, !tbaa !64
  %arrayidx.i686 = getelementptr inbounds i32* %223, i64 %idxprom.i685725
  %224 = load i32* %arrayidx.i686, align 4, !tbaa !11
  %conv.i = zext i32 %224 to i64
  %conv784 = shl nuw nsw i64 %conv.i, 1
  %mul785 = and i64 %conv784, 131070
  %add.ptr787.sum632 = or i64 %mul785, 1
  %mul790 = shl nsw i32 %add778, 4
  %idx.ext791 = sext i32 %mul790 to i64
  %add.ptr792 = getelementptr inbounds double* %7, i64 %idx.ext791
  %225 = load double* %add.ptr792, align 8, !tbaa !17
  %add.ptr792.sum633 = or i64 %idx.ext791, 4
  %add.ptr799 = getelementptr inbounds double* %7, i64 %add.ptr792.sum633
  %226 = load double* %add.ptr799, align 8, !tbaa !17
  %add.ptr792.sum634 = or i64 %idx.ext791, 8
  %add.ptr806 = getelementptr inbounds double* %7, i64 %add.ptr792.sum634
  %227 = load double* %add.ptr806, align 8, !tbaa !17
  %and810 = and i32 %221, -131072
  %charge812 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext752, i32 1
  %228 = load float* %charge812, align 4, !tbaa !63
  %conv813 = fpext float %228 to double
  %mul814 = fmul double %mul372, %conv813
  %229 = bitcast i32 %and810 to float
  %conv817 = fpext float %229 to double
  %sub818 = fsub double %add771, %conv817
  %bf.lshr822 = lshr i32 %bf.load781, 28
  %mul824 = shl nuw nsw i32 %bf.lshr822, 1
  %idxprom825635 = zext i32 %mul824 to i64
  %add.ptr368.sum636 = add i64 %idxprom825635, %idx.ext367614
  %arrayidx826 = getelementptr inbounds double* %96, i64 %add.ptr368.sum636
  %230 = load double* %arrayidx826, align 8, !tbaa !17
  %add829637 = or i32 %mul824, 1
  %idxprom830638 = zext i32 %add829637 to i64
  %add.ptr368.sum639 = add i64 %idxprom830638, %idx.ext367614
  %arrayidx831 = getelementptr inbounds double* %96, i64 %add.ptr368.sum639
  %231 = load double* %arrayidx831, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr787.sum632, %idx.ext.i
  %A833 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 0
  %232 = load double* %A833, align 8, !tbaa !69
  %mul834 = fmul double %8, %232
  %B836 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 1
  %233 = load double* %B836, align 8, !tbaa !71
  %mul837 = fmul double %8, %233
  %mul839 = fmul double %225, %mul834
  %mul840 = fmul double %226, %mul837
  %sub841 = fsub double %mul839, %mul840
  %add.ptr792.sum640 = or i64 %idx.ext791, 3
  %arrayidx843 = getelementptr inbounds double* %7, i64 %add.ptr792.sum640
  %234 = load double* %arrayidx843, align 8, !tbaa !17
  %mul844 = fmul double %mul834, %234
  %add.ptr799.sum641 = or i64 %idx.ext791, 7
  %arrayidx845 = getelementptr inbounds double* %7, i64 %add.ptr799.sum641
  %235 = load double* %arrayidx845, align 8, !tbaa !17
  %mul846 = fmul double %mul837, %235
  %sub847 = fsub double %mul844, %mul846
  %add.ptr792.sum642 = or i64 %idx.ext791, 2
  %arrayidx849 = getelementptr inbounds double* %7, i64 %add.ptr792.sum642
  %236 = load double* %arrayidx849, align 8, !tbaa !17
  %mul850 = fmul double %mul834, %236
  %add.ptr799.sum643 = or i64 %idx.ext791, 6
  %arrayidx851 = getelementptr inbounds double* %7, i64 %add.ptr799.sum643
  %237 = load double* %arrayidx851, align 8, !tbaa !17
  %mul852 = fmul double %mul837, %237
  %sub853 = fsub double %mul850, %mul852
  %add.ptr792.sum644 = or i64 %idx.ext791, 1
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr792.sum644
  %238 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul834, %238
  %add.ptr799.sum645 = or i64 %idx.ext791, 5
  %arrayidx857 = getelementptr inbounds double* %7, i64 %add.ptr799.sum645
  %239 = load double* %arrayidx857, align 8, !tbaa !17
  %mul858 = fmul double %mul837, %239
  %sub859 = fsub double %mul856, %mul858
  %mul861 = fmul double %sub818, %sub847
  %add862 = fadd double %mul861, %sub853
  %add.ptr806.sum646 = or i64 %idx.ext791, 9
  %arrayidx872 = getelementptr inbounds double* %7, i64 %add.ptr806.sum646
  %240 = load double* %arrayidx872, align 8, !tbaa !17
  %add.ptr806.sum647 = or i64 %idx.ext791, 10
  %arrayidx874 = getelementptr inbounds double* %7, i64 %add.ptr806.sum647
  %241 = load double* %arrayidx874, align 8, !tbaa !17
  %add.ptr806.sum648 = or i64 %idx.ext791, 11
  %arrayidx876 = getelementptr inbounds double* %7, i64 %add.ptr806.sum648
  %242 = load double* %arrayidx876, align 8, !tbaa !17
  %add.ptr877.sum649 = or i64 %idx.ext791, 12
  %add.ptr880 = getelementptr inbounds double* %7, i64 %add.ptr877.sum649
  %243 = load double* %add.ptr880, align 8, !tbaa !17
  %mul882 = fmul double %sub, %243
  %sub883 = fsub double %227, %mul882
  %add.ptr880.sum650 = or i64 %idx.ext791, 13
  %arrayidx884 = getelementptr inbounds double* %7, i64 %add.ptr880.sum650
  %244 = load double* %arrayidx884, align 8, !tbaa !17
  %mul885 = fmul double %sub, %244
  %sub886 = fsub double %240, %mul885
  %add.ptr880.sum651 = or i64 %idx.ext791, 14
  %arrayidx887 = getelementptr inbounds double* %7, i64 %add.ptr880.sum651
  %245 = load double* %arrayidx887, align 8, !tbaa !17
  %mul888 = fmul double %sub, %245
  %sub889 = fsub double %241, %mul888
  %add.ptr880.sum652 = or i64 %idx.ext791, 15
  %arrayidx890 = getelementptr inbounds double* %7, i64 %add.ptr880.sum652
  %246 = load double* %arrayidx890, align 8, !tbaa !17
  %mul891 = fmul double %sub, %246
  %sub892 = fsub double %242, %mul891
  %mul893 = fmul double %mul814, %sub892
  %mul894 = fmul double %mul814, %sub889
  %247 = insertelement <2 x double> undef, double %sub886, i32 0
  %248 = insertelement <2 x double> %247, double %add862, i32 1
  %249 = insertelement <2 x double> undef, double %mul814, i32 0
  %250 = insertelement <2 x double> %249, double %sub818, i32 1
  %251 = fmul <2 x double> %248, %250
  %mul896 = fmul double %mul814, %sub883
  %mul898 = fmul double %sub818, %mul893
  %add899 = fadd double %mul894, %mul898
  %mul900 = fmul double %sub818, %add899
  %252 = insertelement <2 x double> undef, double %mul900, i32 0
  %253 = insertelement <2 x double> %252, double %sub859, i32 1
  %254 = fadd <2 x double> %251, %253
  %255 = insertelement <2 x double> undef, double %sub818, i32 0
  %256 = insertelement <2 x double> %255, double %sub818, i32 1
  %257 = fmul <2 x double> %254, %256
  %258 = insertelement <2 x double> undef, double %mul896, i32 0
  %259 = insertelement <2 x double> %258, double %sub841, i32 1
  %260 = fadd <2 x double> %259, %257
  %261 = insertelement <2 x double> undef, double %230, i32 0
  %262 = insertelement <2 x double> %261, double %230, i32 1
  %263 = fmul <2 x double> %260, %262
  %264 = fadd <2 x double> %212, %263
  %265 = insertelement <2 x double> undef, double %231, i32 0
  %266 = insertelement <2 x double> %265, double %231, i32 1
  %267 = fmul <2 x double> %260, %266
  %268 = fadd <2 x double> %213, %267
  %add908 = fadd double %sub847, %mul893
  %add909 = fadd double %sub853, %mul894
  %269 = extractelement <2 x double> %251, i32 0
  %add910 = fadd double %sub859, %269
  %mul913 = fmul double %sub818, 3.000000e+00
  %mul914 = fmul double %mul913, %add908
  %mul915 = fmul double %add909, 2.000000e+00
  %add916 = fadd double %mul915, %mul914
  %mul917 = fmul double %sub818, %add916
  %add918 = fadd double %add910, %mul917
  %mul920 = fmul double %add918, -2.000000e+00
  %mul921 = fmul double %230, %mul920
  %mul926 = fmul double %sub757, %mul921
  %270 = insertelement <2 x double> undef, double %sub757, i32 0
  %271 = insertelement <2 x double> %270, double %sub763, i32 1
  %272 = insertelement <2 x double> undef, double %mul926, i32 0
  %273 = insertelement <2 x double> %272, double %mul926, i32 1
  %274 = fmul <2 x double> %271, %273
  %275 = fadd <2 x double> %214, %274
  %276 = load double* %x933, align 8, !tbaa !72
  %add934 = fadd double %276, %mul926
  store double %add934, double* %x933, align 8, !tbaa !72
  %x935 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext752, i32 0
  %mul938 = fmul double %sub763, %mul921
  %277 = insertelement <2 x double> undef, double %sub763, i32 0
  %278 = insertelement <2 x double> %277, double %sub769, i32 1
  %279 = insertelement <2 x double> undef, double %mul938, i32 0
  %280 = insertelement <2 x double> %279, double %mul938, i32 1
  %281 = fmul <2 x double> %278, %280
  %282 = fadd <2 x double> %215, %281
  %283 = load double* %y943, align 8, !tbaa !73
  %add944 = fadd double %283, %mul938
  store double %add944, double* %y943, align 8, !tbaa !73
  %284 = bitcast double* %x935 to <2 x double>*
  %285 = load <2 x double>* %284, align 8, !tbaa !17
  %286 = insertelement <2 x double> %272, double %mul938, i32 1
  %287 = fsub <2 x double> %285, %286
  %288 = bitcast double* %x935 to <2 x double>*
  store <2 x double> %287, <2 x double>* %288, align 8, !tbaa !17
  %mul948 = fmul double %sub769, %mul921
  %289 = insertelement <2 x double> undef, double %sub769, i32 0
  %290 = insertelement <2 x double> %289, double %sub769, i32 1
  %291 = insertelement <2 x double> %272, double %mul948, i32 1
  %292 = fmul <2 x double> %290, %291
  %293 = fadd <2 x double> %216, %292
  %294 = load double* %z951, align 8, !tbaa !74
  %add952 = fadd double %294, %mul948
  store double %add952, double* %z951, align 8, !tbaa !74
  %z953 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext752, i32 2
  %295 = load double* %z953, align 8, !tbaa !74
  %sub954 = fsub double %295, %mul948
  store double %sub954, double* %z953, align 8, !tbaa !74
  %indvars.iv.next922 = add nuw nsw i64 %indvars.iv921, 1
  %lftr.wideiv923 = trunc i64 %indvars.iv.next922 to i32
  %exitcond924 = icmp eq i32 %lftr.wideiv923, %conv744
  br i1 %exitcond924, label %for.end957, label %for.body747

for.end957:                                       ; preds = %for.body747, %for.end739
  %296 = phi <2 x double> [ %207, %for.end739 ], [ %264, %for.body747 ]
  %297 = phi <2 x double> [ %208, %for.end739 ], [ %268, %for.body747 ]
  %298 = phi <2 x double> [ %209, %for.end739 ], [ %275, %for.body747 ]
  %299 = phi <2 x double> [ %210, %for.end739 ], [ %282, %for.body747 ]
  %300 = phi <2 x double> [ %211, %for.end739 ], [ %293, %for.body747 ]
  %conv962 = trunc i64 %sub.ptr.div564 to i32
  %cmp964821 = icmp sgt i32 %conv962, 0
  br i1 %cmp964821, label %for.body965.lr.ph, label %for.inc1107

for.body965.lr.ph:                                ; preds = %for.end957
  %301 = extractelement <2 x double> %296, i32 0
  %302 = extractelement <2 x double> %297, i32 0
  %x1082 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y1092 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z1100 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body965

for.body965:                                      ; preds = %for.body965, %for.body965.lr.ph
  %indvars.iv925 = phi i64 [ 0, %for.body965.lr.ph ], [ %indvars.iv.next926, %for.body965 ]
  %fullElectEnergy.3830 = phi double [ %301, %for.body965.lr.ph ], [ %add1058, %for.body965 ]
  %fullElectEnergy_s.3829 = phi double [ %302, %for.body965.lr.ph ], [ %add1060, %for.body965 ]
  %303 = phi <2 x double> [ %298, %for.body965.lr.ph ], [ %329, %for.body965 ]
  %304 = phi <2 x double> [ %299, %for.body965.lr.ph ], [ %336, %for.body965 ]
  %305 = phi <2 x double> [ %300, %for.body965.lr.ph ], [ %347, %for.body965 ]
  %arrayidx968 = getelementptr inbounds i32* %cond162721, i64 %indvars.iv925
  %306 = load i32* %arrayidx968, align 4, !tbaa !11
  %idx.ext970 = sext i32 %306 to i64
  %x974 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext970, i32 0, i32 0
  %307 = load double* %x974, align 8, !tbaa !59
  %sub975 = fsub double %71, %307
  %mul977 = fmul double %sub975, %sub975
  %y980 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext970, i32 0, i32 1
  %308 = load double* %y980, align 8, !tbaa !61
  %sub981 = fsub double %72, %308
  %mul982 = fmul double %sub981, %sub981
  %add983 = fadd double %mul977, %mul982
  %z986 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext970, i32 0, i32 2
  %309 = load double* %z986, align 8, !tbaa !62
  %sub987 = fsub double %73, %309
  %mul988 = fmul double %sub987, %sub987
  %add989 = fadd double %add983, %mul988
  %conv991 = fptrunc double %add989 to float
  %310 = bitcast float %conv991 to i32
  %shr995 = ashr i32 %310, 17
  %add996 = add nsw i32 %shr995, %mul
  %mul998 = shl nsw i32 %add996, 4
  %idx.ext999 = sext i32 %mul998 to i64
  %add.ptr1000.sum619 = or i64 %idx.ext999, 8
  %add.ptr1001 = getelementptr inbounds double* %7, i64 %add.ptr1000.sum619
  %311 = load double* %add.ptr1001, align 8, !tbaa !17
  %and1005 = and i32 %310, -131072
  %charge1007 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext970, i32 1
  %312 = load float* %charge1007, align 4, !tbaa !63
  %conv1008 = fpext float %312 to double
  %mul1009 = fmul double %mul372, %conv1008
  %313 = bitcast i32 %and1005 to float
  %conv1012 = fpext float %313 to double
  %sub1013 = fsub double %add989, %conv1012
  %partition1015 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext970, i32 2
  %314 = bitcast [4 x i8]* %partition1015 to i32*
  %bf.load1016 = load i32* %314, align 4
  %bf.lshr1017 = lshr i32 %bf.load1016, 28
  %mul1019 = shl nuw nsw i32 %bf.lshr1017, 1
  %idxprom1020620 = zext i32 %mul1019 to i64
  %add.ptr368.sum = add i64 %idxprom1020620, %idx.ext367614
  %arrayidx1021 = getelementptr inbounds double* %96, i64 %add.ptr368.sum
  %315 = load double* %arrayidx1021, align 8, !tbaa !17
  %add1024621 = or i32 %mul1019, 1
  %idxprom1025622 = zext i32 %add1024621 to i64
  %add.ptr368.sum623 = add i64 %idxprom1025622, %idx.ext367614
  %arrayidx1026 = getelementptr inbounds double* %96, i64 %add.ptr368.sum623
  %316 = load double* %arrayidx1026, align 8, !tbaa !17
  %add.ptr1001.sum624 = or i64 %idx.ext999, 9
  %arrayidx1028 = getelementptr inbounds double* %7, i64 %add.ptr1001.sum624
  %317 = load double* %arrayidx1028, align 8, !tbaa !17
  %add.ptr1001.sum625 = or i64 %idx.ext999, 10
  %arrayidx1030 = getelementptr inbounds double* %7, i64 %add.ptr1001.sum625
  %318 = load double* %arrayidx1030, align 8, !tbaa !17
  %add.ptr1001.sum626 = or i64 %idx.ext999, 11
  %arrayidx1032 = getelementptr inbounds double* %7, i64 %add.ptr1001.sum626
  %319 = load double* %arrayidx1032, align 8, !tbaa !17
  %add.ptr1034.sum627 = or i64 %idx.ext999, 12
  %add.ptr1037 = getelementptr inbounds double* %7, i64 %add.ptr1034.sum627
  %320 = load double* %add.ptr1037, align 8, !tbaa !17
  %sub1039 = fsub double %311, %320
  %add.ptr1037.sum628 = or i64 %idx.ext999, 13
  %arrayidx1040 = getelementptr inbounds double* %7, i64 %add.ptr1037.sum628
  %321 = load double* %arrayidx1040, align 8, !tbaa !17
  %sub1041 = fsub double %317, %321
  %add.ptr1037.sum629 = or i64 %idx.ext999, 14
  %arrayidx1042 = getelementptr inbounds double* %7, i64 %add.ptr1037.sum629
  %322 = load double* %arrayidx1042, align 8, !tbaa !17
  %sub1043 = fsub double %318, %322
  %add.ptr1037.sum630 = or i64 %idx.ext999, 15
  %arrayidx1044 = getelementptr inbounds double* %7, i64 %add.ptr1037.sum630
  %323 = load double* %arrayidx1044, align 8, !tbaa !17
  %sub1045 = fsub double %319, %323
  %mul1046 = fmul double %mul1009, %sub1045
  %mul1047 = fmul double %mul1009, %sub1043
  %mul1048 = fmul double %mul1009, %sub1041
  %mul1049 = fmul double %mul1009, %sub1039
  %mul1051 = fmul double %sub1013, %mul1046
  %add1052 = fadd double %mul1047, %mul1051
  %mul1053 = fmul double %sub1013, %add1052
  %add1054 = fadd double %mul1048, %mul1053
  %mul1055 = fmul double %sub1013, %add1054
  %add1056 = fadd double %mul1049, %mul1055
  %mul1057 = fmul double %315, %add1056
  %add1058 = fadd double %fullElectEnergy.3830, %mul1057
  %mul1059 = fmul double %316, %add1056
  %add1060 = fadd double %fullElectEnergy_s.3829, %mul1059
  %mul1062 = fmul double %sub1013, 3.000000e+00
  %mul1063 = fmul double %mul1062, %mul1046
  %mul1064 = fmul double %mul1047, 2.000000e+00
  %add1065 = fadd double %mul1064, %mul1063
  %mul1066 = fmul double %sub1013, %add1065
  %add1067 = fadd double %mul1048, %mul1066
  %mul1069 = fmul double %add1067, -2.000000e+00
  %mul1070 = fmul double %315, %mul1069
  %mul1075 = fmul double %sub975, %mul1070
  %324 = insertelement <2 x double> undef, double %sub975, i32 0
  %325 = insertelement <2 x double> %324, double %sub981, i32 1
  %326 = insertelement <2 x double> undef, double %mul1075, i32 0
  %327 = insertelement <2 x double> %326, double %mul1075, i32 1
  %328 = fmul <2 x double> %325, %327
  %329 = fadd <2 x double> %303, %328
  %330 = load double* %x1082, align 8, !tbaa !72
  %add1083 = fadd double %330, %mul1075
  store double %add1083, double* %x1082, align 8, !tbaa !72
  %x1084 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext970, i32 0
  %mul1087 = fmul double %sub981, %mul1070
  %331 = insertelement <2 x double> undef, double %sub981, i32 0
  %332 = insertelement <2 x double> %331, double %sub987, i32 1
  %333 = insertelement <2 x double> undef, double %mul1087, i32 0
  %334 = insertelement <2 x double> %333, double %mul1087, i32 1
  %335 = fmul <2 x double> %332, %334
  %336 = fadd <2 x double> %304, %335
  %337 = load double* %y1092, align 8, !tbaa !73
  %add1093 = fadd double %337, %mul1087
  store double %add1093, double* %y1092, align 8, !tbaa !73
  %338 = bitcast double* %x1084 to <2 x double>*
  %339 = load <2 x double>* %338, align 8, !tbaa !17
  %340 = insertelement <2 x double> %326, double %mul1087, i32 1
  %341 = fsub <2 x double> %339, %340
  %342 = bitcast double* %x1084 to <2 x double>*
  store <2 x double> %341, <2 x double>* %342, align 8, !tbaa !17
  %mul1097 = fmul double %sub987, %mul1070
  %343 = insertelement <2 x double> undef, double %sub987, i32 0
  %344 = insertelement <2 x double> %343, double %sub987, i32 1
  %345 = insertelement <2 x double> %326, double %mul1097, i32 1
  %346 = fmul <2 x double> %344, %345
  %347 = fadd <2 x double> %305, %346
  %348 = load double* %z1100, align 8, !tbaa !74
  %add1101 = fadd double %348, %mul1097
  store double %add1101, double* %z1100, align 8, !tbaa !74
  %z1102 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext970, i32 2
  %349 = load double* %z1102, align 8, !tbaa !74
  %sub1103 = fsub double %349, %mul1097
  store double %sub1103, double* %z1102, align 8, !tbaa !74
  %indvars.iv.next926 = add nuw nsw i64 %indvars.iv925, 1
  %lftr.wideiv927 = trunc i64 %indvars.iv.next926 to i32
  %exitcond928 = icmp eq i32 %lftr.wideiv927, %conv962
  br i1 %exitcond928, label %for.inc1107.loopexit, label %for.body965

for.inc1107.loopexit:                             ; preds = %for.body965
  %350 = insertelement <2 x double> undef, double %add1060, i32 0
  %351 = insertelement <2 x double> undef, double %add1058, i32 0
  %352 = shufflevector <2 x double> %351, <2 x double> %296, <2 x i32> <i32 0, i32 3>
  %353 = shufflevector <2 x double> %350, <2 x double> %297, <2 x i32> <i32 0, i32 3>
  br label %for.inc1107

for.inc1107:                                      ; preds = %for.inc1107.loopexit, %for.end957, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end957 ], [ %pairCount.2, %for.inc1107.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0843, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end957 ], [ %pairlistindex.1, %for.inc1107.loopexit ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1844, %for.end957 ], [ %i.1844, %for.inc1107.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0865, %if.then221 ], [ %exclChecksum.0865, %cond.end349 ], [ %conv574, %for.end957 ], [ %conv574, %for.inc1107.loopexit ]
  %354 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %296, %for.end957 ], [ %352, %for.inc1107.loopexit ]
  %355 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %297, %for.end957 ], [ %353, %for.inc1107.loopexit ]
  %356 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %298, %for.end957 ], [ %329, %for.inc1107.loopexit ]
  %357 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %299, %for.end957 ], [ %336, %for.inc1107.loopexit ]
  %358 = phi <2 x double> [ %65, %if.then221 ], [ %65, %cond.end349 ], [ %300, %for.end957 ], [ %347, %for.inc1107.loopexit ]
  %inc1108 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc1108, %12
  br i1 %cmp183, label %for.body184, label %for.end1109

for.end1109:                                      ; preds = %for.inc1107, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1107 ]
  %359 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %354, %for.inc1107 ]
  %360 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %355, %for.inc1107 ]
  %361 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %356, %for.inc1107 ]
  %362 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %357, %for.inc1107 ]
  %363 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %358, %for.inc1107 ]
  %364 = extractelement <2 x double> %363, i32 1
  %arraydecay1110 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1111 = icmp eq i32* %cond695697944950, %arraydecay1110
  br i1 %cmp1111, label %if.end1116, label %delete.notnull1114

delete.notnull1114:                               ; preds = %for.end1109
  %365 = bitcast i32* %cond695697944950 to i8*
  call void @_ZdaPv(i8* %365) #7
  br label %if.end1116

if.end1116:                                       ; preds = %delete.notnull1114, %for.end1109
  %arraydecay1117 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1118 = icmp eq i32* %cond19699942951, %arraydecay1117
  br i1 %cmp1118, label %if.end1123, label %delete.notnull1121

delete.notnull1121:                               ; preds = %if.end1116
  %366 = bitcast i32* %cond19699942951 to i8*
  call void @_ZdaPv(i8* %366) #7
  br label %if.end1123

if.end1123:                                       ; preds = %delete.notnull1121, %if.end1116
  %arraydecay1124 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1125 = icmp eq i32* %cond30946949, %arraydecay1124
  br i1 %cmp1125, label %if.end1130, label %delete.notnull1128

delete.notnull1128:                               ; preds = %if.end1123
  %367 = bitcast i32* %cond30946949 to i8*
  call void @_ZdaPv(i8* %367) #7
  br label %if.end1130

if.end1130:                                       ; preds = %delete.notnull1128, %if.end1123
  %arraydecay1131 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1132 = icmp eq i32* %cond129703705711717, %arraydecay1131
  br i1 %cmp1132, label %if.end1137, label %delete.notnull1135

delete.notnull1135:                               ; preds = %if.end1130
  %368 = bitcast i32* %cond129703705711717 to i8*
  call void @_ZdaPv(i8* %368) #7
  br label %if.end1137

if.end1137:                                       ; preds = %delete.notnull1135, %if.end1130
  %arraydecay1138 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1139 = icmp eq i32* %cond140707709719, %arraydecay1138
  br i1 %cmp1139, label %if.end1144, label %delete.notnull1142

delete.notnull1142:                               ; preds = %if.end1137
  %369 = bitcast i32* %cond140707709719 to i8*
  call void @_ZdaPv(i8* %369) #7
  br label %if.end1144

if.end1144:                                       ; preds = %delete.notnull1142, %if.end1137
  %arraydecay1145 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1146 = icmp eq i32* %cond151713715, %arraydecay1145
  br i1 %cmp1146, label %if.end1151, label %delete.notnull1149

delete.notnull1149:                               ; preds = %if.end1144
  %370 = bitcast i32* %cond151713715 to i8*
  call void @_ZdaPv(i8* %370) #7
  br label %if.end1151

if.end1151:                                       ; preds = %delete.notnull1149, %if.end1144
  %arraydecay1152 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1153 = icmp eq i32* %cond162721, %arraydecay1152
  br i1 %cmp1153, label %if.end1158, label %delete.notnull1156

delete.notnull1156:                               ; preds = %if.end1151
  %371 = bitcast i32* %cond162721 to i8*
  call void @_ZdaPv(i8* %371) #7
  br label %if.end1158

if.end1158:                                       ; preds = %delete.notnull1156, %if.end1151
  %arraydecay1159 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1160 = icmp eq i32* %cond173, %arraydecay1159
  br i1 %cmp1160, label %if.end1165, label %delete.notnull1163

delete.notnull1163:                               ; preds = %if.end1158
  %372 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %372) #7
  br label %if.end1165

if.end1165:                                       ; preds = %delete.notnull1163, %if.end1158
  %conv1166 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1167 = getelementptr inbounds double* %1, i64 22
  %373 = load double* %arrayidx1167, align 8, !tbaa !17
  %add1168 = fadd double %conv1166, %373
  store double %add1168, double* %arrayidx1167, align 8, !tbaa !17
  %arrayidx1173 = getelementptr inbounds double* %1, i64 1
  %374 = bitcast double* %arrayidx1173 to <2 x double>*
  %375 = load <2 x double>* %374, align 8, !tbaa !17
  %376 = fadd <2 x double> %359, %375
  %377 = bitcast double* %arrayidx1173 to <2 x double>*
  store <2 x double> %376, <2 x double>* %377, align 8, !tbaa !17
  %arrayidx1175 = getelementptr inbounds double* %1, i64 24
  %378 = bitcast double* %arrayidx1175 to <2 x double>*
  %379 = load <2 x double>* %378, align 8, !tbaa !17
  %380 = fadd <2 x double> %360, %379
  %381 = bitcast double* %arrayidx1175 to <2 x double>*
  store <2 x double> %380, <2 x double>* %381, align 8, !tbaa !17
  %arrayidx1177 = getelementptr inbounds double* %1, i64 12
  %382 = bitcast double* %arrayidx1177 to <2 x double>*
  %383 = load <2 x double>* %382, align 8, !tbaa !17
  %384 = fadd <2 x double> %361, %383
  %385 = bitcast double* %arrayidx1177 to <2 x double>*
  store <2 x double> %384, <2 x double>* %385, align 8, !tbaa !17
  %arrayidx1181 = getelementptr inbounds double* %1, i64 14
  %386 = bitcast double* %arrayidx1181 to <2 x double>*
  %387 = load <2 x double>* %386, align 8, !tbaa !17
  %388 = shufflevector <2 x double> %363, <2 x double> %361, <2 x i32> <i32 0, i32 3>
  %389 = fadd <2 x double> %388, %387
  %390 = bitcast double* %arrayidx1181 to <2 x double>*
  store <2 x double> %389, <2 x double>* %390, align 8, !tbaa !17
  %arrayidx1185 = getelementptr inbounds double* %1, i64 16
  %391 = bitcast double* %arrayidx1185 to <2 x double>*
  %392 = load <2 x double>* %391, align 8, !tbaa !17
  %393 = fadd <2 x double> %362, %392
  %394 = bitcast double* %arrayidx1185 to <2 x double>*
  store <2 x double> %393, <2 x double>* %394, align 8, !tbaa !17
  %arrayidx1189 = getelementptr inbounds double* %1, i64 18
  %395 = bitcast double* %arrayidx1189 to <2 x double>*
  %396 = load <2 x double>* %395, align 8, !tbaa !17
  %397 = shufflevector <2 x double> %363, <2 x double> %362, <2 x i32> <i32 0, i32 3>
  %398 = fadd <2 x double> %397, %396
  %399 = bitcast double* %arrayidx1189 to <2 x double>*
  store <2 x double> %398, <2 x double>* %399, align 8, !tbaa !17
  %arrayidx1193 = getelementptr inbounds double* %1, i64 20
  %400 = load double* %arrayidx1193, align 8, !tbaa !17
  %add1194 = fadd double %364, %400
  store double %add1194, double* %arrayidx1193, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1165, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil36calc_self_energy_merge_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31936 = icmp sgt i32 %13, 0
  br i1 %cmp31936, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301011 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond7297311009 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond197331007 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv999 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1000, %for.inc ]
  %g.0937 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv999, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0937, 1
  %idxprom41 = sext i32 %g.0937 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond7297311009, i64 %idxprom41
  %30 = trunc i64 %indvars.iv999 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0937, %for.body ]
  %indvars.iv.next1000 = add nuw nsw i64 %indvars.iv999, 1
  %lftr.wideiv1001 = trunc i64 %indvars.iv.next1000 to i32
  %exitcond1002 = icmp eq i32 %lftr.wideiv1001, %13
  br i1 %exitcond1002, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond7297311009, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond7297311009, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1016 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1973310061015 = phi i32* [ %cond197331007, %for.end ], [ %cond197331007, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond72973110081014 = phi i32* [ %cond7297311009, %for.end ], [ %cond7297311009, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3010101013 = phi i32* [ %cond301011, %for.end ], [ %cond301011, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56930 = icmp sgt i32 %g.0.lcssa1016, 0
  br i1 %cmp56930, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv995 = phi i64 [ %indvars.iv.next996, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0932 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0931 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond72973110081014, i64 %indvars.iv995
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0932, 1
  %idxprom68 = sext i32 %fixg.0932 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1973310061015, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0931, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0932, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next996 = add nuw nsw i64 %indvars.iv995, 1
  %lftr.wideiv997 = trunc i64 %indvars.iv.next996 to i32
  %exitcond998 = icmp eq i32 %lftr.wideiv997, %g.0.lcssa1016
  br i1 %exitcond998, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond72973110081014, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond72973110081014 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1973310061015, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond1973310061015 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3010101013, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond3010101013 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1973310061015, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1973310061015, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2736 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147755 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125741743753 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114737739745751 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136747749 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171900 = icmp sgt i32 %sub162, 0
  br i1 %cmp171900, label %for.body172.lr.ph, label %for.end1156

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i726 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast549 = ptrtoint i32* %cond125741743753 to i64
  %sub.ptr.rhs.cast609 = ptrtoint i32* %cond147755 to i64
  %sub.ptr.rhs.cast616 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3010101013 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114737739745751 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1154, %for.body172.lr.ph
  %exclChecksum.0918 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1154 ]
  %i.0907 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1155, %for.inc1154 ]
  %j_hgroup.0906 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1154 ]
  %g_lower.0905 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1154 ]
  %fixg_lower.0904 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1154 ]
  %pairlistindex.0903 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1154 ]
  %pairlistoffset.0902 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1154 ]
  %pairCount.0901 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1154 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %372, %for.inc1154 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %373, %for.inc1154 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %374, %for.inc1154 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %375, %for.inc1154 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %376, %for.inc1154 ]
  %idxprom173 = sext i32 %i.0907 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %64, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i757 = zext i32 %bf.clear176 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i757, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i757, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i757, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %72 = and i32 %bf.load175, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0907
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0901
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0901, %div165
  %cmp214 = icmp slt i32 %pairCount.0901, %div168
  %or.cond715 = and i1 %cmp212, %cmp214
  br i1 %or.cond715, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0907
  br label %for.inc1154

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0901, %if.then193 ], [ %sub211, %if.then199 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %74, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %75 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0907
  %cmp237764 = icmp slt i32 %g_lower.0905, %g.0.lcssa1016
  br i1 %cmp237764, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %76 = sext i32 %g_lower.0905 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %77 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %77, %g.0.lcssa1016
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %76, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1765 = phi i32 [ %g_lower.0905, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond72973110081014, i64 %indvars.iv
  %78 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %78, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1765, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0905, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1765, %land.rhs238 ]
  %cmp245766 = icmp slt i32 %fixg_lower.0904, %fixg.2736
  br i1 %cmp245766, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %79 = sext i32 %fixg_lower.0904 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %80 = trunc i64 %indvars.iv.next945 to i32
  %cmp245 = icmp slt i32 %80, %fixg.2736
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv944 = phi i64 [ %79, %land.rhs246.lr.ph ], [ %indvars.iv.next945, %while.cond244 ]
  %fixg_lower.1767 = phi i32 [ %fixg_lower.0904, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond1973310061015, i64 %indvars.iv944
  %81 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %81, %add236
  %indvars.iv.next945 = add nsw i64 %indvars.iv944, 1
  %inc252 = add nsw i32 %fixg_lower.1767, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0904, %land.end ], [ %fixg_lower.0904, %while.cond244.loopexit ], [ %fixg_lower.1767, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0905, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0906, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1769 = add nsw i32 %i.0907, 1
  %cmp257770 = icmp slt i32 %j.1769, %j_hgroup.1
  br i1 %cmp257770, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %82 = add i32 %j_hgroup.1, -1
  %83 = sub i32 %82, %i.0907
  %84 = add i32 %j_hgroup.1, -2
  %85 = sub i32 %84, %i.0907
  %86 = zext i32 %85 to i64
  %87 = add i64 %86, 1
  %end.idx = add i64 %86, 1
  %n.vec = and i64 %87, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1769
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %88 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1769, %88
  %broadcast.splatinsert1052 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1053 = shufflevector <4 x i32> %broadcast.splatinsert1052, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1054 = add <4 x i32> %broadcast.splat1053, <i32 0, i32 1, i32 2, i32 3>
  %induction1055 = add <4 x i32> %broadcast.splat1053, <i32 4, i32 5, i32 6, i32 7>
  %89 = getelementptr inbounds i32* %cond114737739745751, i64 %index
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction1054, <4 x i32>* %90, align 4
  %.sum1058 = or i64 %index, 4
  %91 = getelementptr i32* %cond114737739745751, i64 %.sum1058
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %induction1055, <4 x i32>* %92, align 4
  %index.next = add i64 %index, 8
  %93 = icmp eq i64 %index.next, %n.vec
  br i1 %93, label %middle.block, label %vector.body, !llvm.loop !79

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1050 = phi i32 [ %j.1769, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv946 = phi i64 [ %indvars.iv.next947, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1772 = phi i32 [ %j.1, %for.body258 ], [ %resume.val1050, %middle.block ]
  %indvars.iv.next947 = add nuw nsw i64 %indvars.iv946, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114737739745751, i64 %indvars.iv946
  store i32 %j.1772, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1772, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next947 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %83
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !80

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %83 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114737739745751, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %75, i32* %cond1973310061015, i32* %cond72973110081014
  %cond276 = select i1 %75, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %75, i32 %fixg.2736, i32 %g.0.lcssa1016
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %94 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %94 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %95 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %96 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %97 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %97, %if.then283 ], [ %103, %if.then325 ]
  %p_j_y.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_x.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %j2.0.ph = phi i32 [ %94, %if.then283 ], [ %100, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond3010101013, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %98 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv952 = phi i64 [ %98, %while.cond298.outer ], [ %indvars.iv.next953, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %103, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %99 = trunc i64 %indvars.iv952 to i32
  %cmp299 = icmp slt i32 %99, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next953 = add nsw i64 %indvars.iv952, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next953
  %100 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %69, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %100 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %101 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %70, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %102 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %71, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %103 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div712 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div712 to i32
  %cmp330778 = icmp sgt i32 %conv328, 0
  br i1 %cmp330778, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %104 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %105 = lshr i64 %104, 2
  %106 = trunc i64 %105 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv954 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next955, %cond.end351 ]
  %pli.0780 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond3010101013, i64 %indvars.iv954
  %107 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %107 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %108 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %108, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp713 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp713, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %107, i32* %pli.0780, align 4, !tbaa !11
  %add354 = add nsw i32 %107, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0780, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %107, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0780, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %107, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0780, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0780, i64 %cond352
  %indvars.iv.next955 = add nuw nsw i64 %indvars.iv954, 1
  %lftr.wideiv956 = trunc i64 %indvars.iv.next955 to i32
  %exitcond957 = icmp eq i32 %lftr.wideiv956, %106
  br i1 %exitcond957, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369709 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369709 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext710 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext710, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114737739745751, i64 %idxprom374
  %109 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114737739745751, i64 %idxprom376
  store i32 %109, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0902, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0901, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0903, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0904, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0905, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0906, %if.else ]
  %110 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %110, 0
  %bf.load389.pre = load i32* %64, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load389.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %111 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %112 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr390 = lshr i32 %bf.load389.pre, 28
  %mul391 = mul nsw i32 %bf.lshr390, 6
  %idx.ext392650 = zext i32 %mul391 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %113 = load float* %charge, align 4, !tbaa !63
  %conv394 = fpext float %113 to double
  %mul395 = fmul double %conv394, 3.320636e+02
  %mul396 = fmul double %8, %mul395
  %mul397 = fmul double %4, %mul396
  %bf.clear400 = and i32 %bf.load389.pre, 4194303
  %idxprom.i725758 = zext i32 %bf.clear400 to i64
  %114 = load i32** %atomVdwType.i726, align 8, !tbaa !64
  %arrayidx.i727 = getelementptr inbounds i32* %114, i64 %idxprom.i725758
  %115 = load i32* %arrayidx.i727, align 4, !tbaa !11
  %116 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %117 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv402 = shl i32 %115, 1
  %mul.i = and i32 %conv402, 131070
  %mul2.i = mul i32 %mul.i, %117
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp408806 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %111, label %for.cond407.preheader, label %if.else468

for.cond407.preheader:                            ; preds = %land.end387
  br i1 %cmp408806, label %for.body409.lr.ph, label %if.end547

for.body409.lr.ph:                                ; preds = %for.cond407.preheader
  %118 = sext i32 %pairlistoffset.1 to i64
  br label %for.body409

for.body409:                                      ; preds = %for.inc465, %for.body409.lr.ph
  %indvars.iv967 = phi i64 [ %118, %for.body409.lr.ph ], [ %indvars.iv.next968, %for.inc465 ]
  %exclChecksum.1810 = phi i32 [ %exclChecksum.0918, %for.body409.lr.ph ], [ %exclChecksum.3, %for.inc465 ]
  %pli404.0809 = phi i32* [ %cond125741743753, %for.body409.lr.ph ], [ %pli404.1, %for.inc465 ]
  %plin.0808 = phi i32* [ %cond136747749, %for.body409.lr.ph ], [ %plin.1, %for.inc465 ]
  %arrayidx411 = getelementptr inbounds i32* %cond114737739745751, i64 %indvars.iv967
  %119 = load i32* %arrayidx411, align 4, !tbaa !11
  %idxprom413 = sext i32 %119 to i64
  %x416 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 0
  %120 = load double* %x416, align 8, !tbaa !59
  %sub418 = fsub double %69, %120
  %mul419 = fmul double %sub418, %sub418
  %y424 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 1
  %121 = load double* %y424, align 8, !tbaa !61
  %sub426 = fsub double %70, %121
  %mul427 = fmul double %sub426, %sub426
  %add428 = fadd double %mul419, %mul427
  %z433 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 2
  %122 = load double* %z433, align 8, !tbaa !62
  %sub434 = fsub double %71, %122
  %mul435 = fmul double %sub434, %sub434
  %add436 = fadd double %add428, %mul435
  %atomFixed439 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 2
  %123 = bitcast [4 x i8]* %atomFixed439 to i32*
  %bf.load440 = load i32* %123, align 4
  %bf.clear442 = and i32 %bf.load440, 67108864
  %tobool443 = icmp ne i32 %bf.clear442, 0
  %cmp444 = fcmp ugt double %add436, %2
  %or.cond716 = or i1 %tobool443, %cmp444
  br i1 %or.cond716, label %for.inc465, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %for.body409
  %cmp446 = fcmp ugt double %add436, %10
  br i1 %cmp446, label %if.then450, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %land.lhs.true445
  %inc448 = add nsw i32 %exclChecksum.1810, 1
  %tobool449 = icmp eq i32 %inc448, 0
  br i1 %tobool449, label %if.then450, label %for.inc465

if.then450:                                       ; preds = %land.lhs.true447, %land.lhs.true445
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true447 ], [ %exclChecksum.1810, %land.lhs.true445 ]
  %bf.clear455 = and i32 %bf.load440, 4194303
  %cmp456 = icmp slt i32 %bf.clear455, %66
  %cmp458 = icmp sgt i32 %bf.clear455, %67
  %or.cond717 = or i1 %cmp456, %cmp458
  br i1 %or.cond717, label %if.else461, label %if.then459

if.then459:                                       ; preds = %if.then450
  %incdec.ptr460 = getelementptr inbounds i32* %pli404.0809, i64 1
  store i32 %119, i32* %pli404.0809, align 4, !tbaa !11
  br label %for.inc465

if.else461:                                       ; preds = %if.then450
  %incdec.ptr462 = getelementptr inbounds i32* %plin.0808, i64 1
  store i32 %119, i32* %plin.0808, align 4, !tbaa !11
  br label %for.inc465

for.inc465:                                       ; preds = %if.else461, %if.then459, %land.lhs.true447, %for.body409
  %plin.1 = phi i32* [ %plin.0808, %for.body409 ], [ %plin.0808, %land.lhs.true447 ], [ %plin.0808, %if.then459 ], [ %incdec.ptr462, %if.else461 ]
  %pli404.1 = phi i32* [ %pli404.0809, %for.body409 ], [ %pli404.0809, %land.lhs.true447 ], [ %incdec.ptr460, %if.then459 ], [ %pli404.0809, %if.else461 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1810, %for.body409 ], [ %inc448, %land.lhs.true447 ], [ %exclChecksum.2, %if.then459 ], [ %exclChecksum.2, %if.else461 ]
  %indvars.iv.next968 = add nsw i64 %indvars.iv967, 1
  %lftr.wideiv969 = trunc i64 %indvars.iv.next968 to i32
  %exitcond970 = icmp eq i32 %lftr.wideiv969, %pairlistindex.2
  br i1 %exitcond970, label %if.end547, label %for.body409

if.else468:                                       ; preds = %land.end387
  br i1 %cmp408806, label %if.then471, label %if.end547

if.then471:                                       ; preds = %if.else468
  %idxprom473 = sext i32 %pairlistoffset.1 to i64
  %arrayidx474 = getelementptr inbounds i32* %cond114737739745751, i64 %idxprom473
  %124 = load i32* %arrayidx474, align 4, !tbaa !11
  %idxprom476 = sext i32 %124 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %125 = load double* %x479, align 8, !tbaa !59
  %y484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %126 = load double* %y484, align 8, !tbaa !61
  %z489 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %127 = load double* %z489, align 8, !tbaa !62
  br label %while.cond496.outer

while.cond496.outer:                              ; preds = %if.else536, %if.then471
  %idxprom476.pn.ph = phi i64 [ %idxprom476, %if.then471 ], [ %idxprom505, %if.else536 ]
  %p_j_z485.0.ph = phi double [ %127, %if.then471 ], [ %133, %if.else536 ]
  %p_j_y480.0.ph = phi double [ %126, %if.then471 ], [ %132, %if.else536 ]
  %p_j_x475.0.ph = phi double [ %125, %if.then471 ], [ %131, %if.else536 ]
  %j2472.0.ph = phi i32 [ %124, %if.then471 ], [ %130, %if.else536 ]
  %k469.0.ph = phi i32 [ %pairlistoffset.1, %if.then471 ], [ %inc499, %if.else536 ]
  %plin.2.ph = phi i32* [ %cond136747749, %if.then471 ], [ %incdec.ptr537, %if.else536 ]
  %pli404.2.ph = phi i32* [ %cond125741743753, %if.then471 ], [ %pli404.2.ph789, %if.else536 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0918, %if.then471 ], [ %exclChecksum.5, %if.else536 ]
  br label %while.cond496.outer782

while.cond496.outer782:                           ; preds = %if.then534, %while.cond496.outer
  %idxprom476.pn.ph783 = phi i64 [ %idxprom505, %if.then534 ], [ %idxprom476.pn.ph, %while.cond496.outer ]
  %p_j_z485.0.ph784 = phi double [ %133, %if.then534 ], [ %p_j_z485.0.ph, %while.cond496.outer ]
  %p_j_y480.0.ph785 = phi double [ %132, %if.then534 ], [ %p_j_y480.0.ph, %while.cond496.outer ]
  %p_j_x475.0.ph786 = phi double [ %131, %if.then534 ], [ %p_j_x475.0.ph, %while.cond496.outer ]
  %j2472.0.ph787 = phi i32 [ %130, %if.then534 ], [ %j2472.0.ph, %while.cond496.outer ]
  %k469.0.ph788 = phi i32 [ %inc499, %if.then534 ], [ %k469.0.ph, %while.cond496.outer ]
  %pli404.2.ph789 = phi i32* [ %incdec.ptr535, %if.then534 ], [ %pli404.2.ph, %while.cond496.outer ]
  %exclChecksum.4.ph790 = phi i32 [ %exclChecksum.5, %if.then534 ], [ %exclChecksum.4.ph, %while.cond496.outer ]
  br label %while.cond496.outer791

while.cond496.outer791:                           ; preds = %land.lhs.true527, %while.cond496.outer782
  %idxprom476.pn.ph792 = phi i64 [ %idxprom505, %land.lhs.true527 ], [ %idxprom476.pn.ph783, %while.cond496.outer782 ]
  %p_j_z485.0.ph793 = phi double [ %133, %land.lhs.true527 ], [ %p_j_z485.0.ph784, %while.cond496.outer782 ]
  %p_j_y480.0.ph794 = phi double [ %132, %land.lhs.true527 ], [ %p_j_y480.0.ph785, %while.cond496.outer782 ]
  %p_j_x475.0.ph795 = phi double [ %131, %land.lhs.true527 ], [ %p_j_x475.0.ph786, %while.cond496.outer782 ]
  %j2472.0.ph796 = phi i32 [ %130, %land.lhs.true527 ], [ %j2472.0.ph787, %while.cond496.outer782 ]
  %k469.0.ph797 = phi i32 [ %inc499, %land.lhs.true527 ], [ %k469.0.ph788, %while.cond496.outer782 ]
  %exclChecksum.4.ph798 = phi i32 [ %inc528, %land.lhs.true527 ], [ %exclChecksum.4.ph790, %while.cond496.outer782 ]
  %128 = sext i32 %k469.0.ph797 to i64
  br label %while.cond496

while.cond496:                                    ; preds = %while.body498, %while.cond496.outer791
  %indvars.iv963 = phi i64 [ %128, %while.cond496.outer791 ], [ %indvars.iv.next964, %while.body498 ]
  %idxprom476.pn = phi i64 [ %idxprom476.pn.ph792, %while.cond496.outer791 ], [ %idxprom505, %while.body498 ]
  %p_j_z485.0 = phi double [ %p_j_z485.0.ph793, %while.cond496.outer791 ], [ %133, %while.body498 ]
  %p_j_y480.0 = phi double [ %p_j_y480.0.ph794, %while.cond496.outer791 ], [ %132, %while.body498 ]
  %p_j_x475.0 = phi double [ %p_j_x475.0.ph795, %while.cond496.outer791 ], [ %131, %while.body498 ]
  %j2472.0 = phi i32 [ %j2472.0.ph796, %while.cond496.outer791 ], [ %130, %while.body498 ]
  %k469.0 = phi i32 [ %k469.0.ph797, %while.cond496.outer791 ], [ %inc499, %while.body498 ]
  %129 = trunc i64 %indvars.iv963 to i32
  %cmp497 = icmp slt i32 %129, %pairlistindex.2
  br i1 %cmp497, label %while.body498, label %if.end547

while.body498:                                    ; preds = %while.cond496
  %atom2490.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476.pn, i32 2
  %atom2490.0.in.in = bitcast [4 x i8]* %atom2490.0.in.in.in to i32*
  %atom2490.0.in = load i32* %atom2490.0.in.in, align 4
  %atom2490.0 = and i32 %atom2490.0.in, 4194303
  %indvars.iv.next964 = add nsw i64 %indvars.iv963, 1
  %inc499 = add nsw i32 %k469.0, 1
  %arrayidx501 = getelementptr inbounds i32* %cond114737739745751, i64 %indvars.iv.next964
  %130 = load i32* %arrayidx501, align 4, !tbaa !11
  %sub503 = fsub double %69, %p_j_x475.0
  %mul504 = fmul double %sub503, %sub503
  %idxprom505 = sext i32 %130 to i64
  %x508 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 0
  %131 = load double* %x508, align 8, !tbaa !59
  %sub510 = fsub double %70, %p_j_y480.0
  %mul511 = fmul double %sub510, %sub510
  %add512 = fadd double %mul511, %mul504
  %y516 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 1
  %132 = load double* %y516, align 8, !tbaa !61
  %sub517 = fsub double %71, %p_j_z485.0
  %mul518 = fmul double %sub517, %sub517
  %add519 = fadd double %mul518, %add512
  %z523 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 2
  %133 = load double* %z523, align 8, !tbaa !62
  %cmp524 = fcmp ugt double %add519, %2
  br i1 %cmp524, label %while.cond496, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %while.body498
  %cmp526 = fcmp ugt double %add519, %10
  br i1 %cmp526, label %if.then530, label %land.lhs.true527

land.lhs.true527:                                 ; preds = %land.lhs.true525
  %inc528 = add nsw i32 %exclChecksum.4.ph798, 1
  %tobool529 = icmp eq i32 %inc528, 0
  br i1 %tobool529, label %if.then530, label %while.cond496.outer791

if.then530:                                       ; preds = %land.lhs.true527, %land.lhs.true525
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true527 ], [ %exclChecksum.4.ph798, %land.lhs.true525 ]
  %cmp531 = icmp slt i32 %atom2490.0, %66
  %cmp533 = icmp sgt i32 %atom2490.0, %67
  %or.cond718 = or i1 %cmp531, %cmp533
  br i1 %or.cond718, label %if.else536, label %if.then534

if.then534:                                       ; preds = %if.then530
  %incdec.ptr535 = getelementptr inbounds i32* %pli404.2.ph789, i64 1
  store i32 %j2472.0, i32* %pli404.2.ph789, align 4, !tbaa !11
  br label %while.cond496.outer782

if.else536:                                       ; preds = %if.then530
  %incdec.ptr537 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2472.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond496.outer

if.end547:                                        ; preds = %while.cond496, %if.else468, %for.inc465, %for.cond407.preheader
  %plin.4 = phi i32* [ %cond136747749, %if.else468 ], [ %cond136747749, %for.cond407.preheader ], [ %plin.2.ph, %while.cond496 ], [ %plin.1, %for.inc465 ]
  %pli404.4 = phi i32* [ %cond125741743753, %if.else468 ], [ %cond125741743753, %for.cond407.preheader ], [ %pli404.2.ph789, %while.cond496 ], [ %pli404.1, %for.inc465 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0918, %if.else468 ], [ %exclChecksum.0918, %for.cond407.preheader ], [ %exclChecksum.4.ph798, %while.cond496 ], [ %exclChecksum.3, %for.inc465 ]
  %sub.ptr.lhs.cast548 = ptrtoint i32* %pli404.4 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %sub.ptr.div551651 = lshr exact i64 %sub.ptr.sub550, 2
  %conv552 = trunc i64 %sub.ptr.div551651 to i32
  %tobool553 = icmp eq i32 %conv552, 0
  br i1 %tobool553, label %for.cond562.preheader, label %if.then554

if.then554:                                       ; preds = %if.end547
  %sub555 = shl i64 %sub.ptr.sub550, 30
  %sext707 = add i64 %sub555, -4294967296
  %idxprom556 = ashr exact i64 %sext707, 32
  %arrayidx557 = getelementptr inbounds i32* %cond125741743753, i64 %idxprom556
  %134 = load i32* %arrayidx557, align 4, !tbaa !11
  %idxprom558 = ashr exact i64 %sub555, 32
  %arrayidx559 = getelementptr inbounds i32* %cond125741743753, i64 %idxprom558
  store i32 %134, i32* %arrayidx559, align 4, !tbaa !11
  br label %for.cond562.preheader

for.cond562.preheader:                            ; preds = %if.then554, %if.end547
  %cmp563814 = icmp ult i32* %cond136747749, %plin.4
  br i1 %cmp563814, label %land.lhs.true564, label %for.cond571.loopexit

land.lhs.true564:                                 ; preds = %for.body566, %for.cond562.preheader
  %exclChecksum.8817 = phi i32 [ %dec, %for.body566 ], [ %exclChecksum.7, %for.cond562.preheader ]
  %plix.0816 = phi i32* [ %incdec.ptr567, %for.body566 ], [ %cond147755, %for.cond562.preheader ]
  %pln.0815 = phi i32* [ %incdec.ptr569, %for.body566 ], [ %cond136747749, %for.cond562.preheader ]
  %135 = load i32* %pln.0815, align 4, !tbaa !11
  %cmp565 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp565, label %for.body566, label %for.cond571.loopexit

for.body566:                                      ; preds = %land.lhs.true564
  %incdec.ptr567 = getelementptr inbounds i32* %plix.0816, i64 1
  store i32 %135, i32* %plix.0816, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8817, -1
  %incdec.ptr569 = getelementptr inbounds i32* %pln.0815, i64 1
  %cmp563 = icmp ult i32* %incdec.ptr569, %plin.4
  br i1 %cmp563, label %land.lhs.true564, label %for.cond571.loopexit

for.cond571.loopexit:                             ; preds = %for.body566, %land.lhs.true564, %for.cond562.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond562.preheader ], [ %dec, %for.body566 ], [ %exclChecksum.8817, %land.lhs.true564 ]
  %plix.0.lcssa = phi i32* [ %cond147755, %for.cond562.preheader ], [ %incdec.ptr567, %for.body566 ], [ %plix.0816, %land.lhs.true564 ]
  %pln.0.lcssa = phi i32* [ %cond136747749, %for.cond562.preheader ], [ %incdec.ptr569, %for.body566 ], [ %pln.0815, %land.lhs.true564 ]
  %cmp572821 = icmp sgt i32 %conv552, 0
  br i1 %cmp572821, label %land.lhs.true573, label %for.cond585.loopexit

land.lhs.true573:                                 ; preds = %for.body577, %for.cond571.loopexit
  %indvars.iv977 = phi i64 [ %indvars.iv.next978, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %exclChecksum.9824 = phi i32 [ %dec581, %for.body577 ], [ %exclChecksum.8.lcssa, %for.cond571.loopexit ]
  %plix.1823 = phi i32* [ %incdec.ptr580, %for.body577 ], [ %plix.0.lcssa, %for.cond571.loopexit ]
  %k561.0822 = phi i32 [ %inc583, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %arrayidx575 = getelementptr inbounds i32* %cond125741743753, i64 %indvars.iv977
  %136 = load i32* %arrayidx575, align 4, !tbaa !11
  %cmp576 = icmp slt i32 %136, %j_hgroup.2
  br i1 %cmp576, label %for.body577, label %for.cond585.loopexit

for.body577:                                      ; preds = %land.lhs.true573
  %incdec.ptr580 = getelementptr inbounds i32* %plix.1823, i64 1
  store i32 %136, i32* %plix.1823, align 4, !tbaa !11
  %dec581 = add nsw i32 %exclChecksum.9824, -1
  %indvars.iv.next978 = add nuw nsw i64 %indvars.iv977, 1
  %inc583 = add nsw i32 %k561.0822, 1
  %137 = trunc i64 %indvars.iv.next978 to i32
  %cmp572 = icmp slt i32 %137, %conv552
  br i1 %cmp572, label %land.lhs.true573, label %for.cond585.loopexit

for.cond585.loopexit:                             ; preds = %for.body577, %land.lhs.true573, %for.cond571.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond571.loopexit ], [ %dec581, %for.body577 ], [ %exclChecksum.9824, %land.lhs.true573 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond571.loopexit ], [ %incdec.ptr580, %for.body577 ], [ %plix.1823, %land.lhs.true573 ]
  %k561.0.lcssa = phi i32 [ 0, %for.cond571.loopexit ], [ %inc583, %for.body577 ], [ %k561.0822, %land.lhs.true573 ]
  %cmp586828 = icmp slt i32 %k561.0.lcssa, %conv552
  br i1 %cmp586828, label %for.body587.lr.ph, label %for.end607

for.body587.lr.ph:                                ; preds = %for.cond585.loopexit
  %138 = sext i32 %k561.0.lcssa to i64
  %139 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %140 = lshr i64 %139, 2
  %141 = trunc i64 %140 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.inc605, %for.body587.lr.ph
  %indvars.iv979 = phi i64 [ %138, %for.body587.lr.ph ], [ %indvars.iv.next980, %for.inc605 ]
  %plin.5832 = phi i32* [ %plin.4, %for.body587.lr.ph ], [ %plin.6, %for.inc605 ]
  %plix.2831 = phi i32* [ %plix.1.lcssa, %for.body587.lr.ph ], [ %plix.3, %for.inc605 ]
  %plim.0830 = phi i32* [ %cond158, %for.body587.lr.ph ], [ %plim.1, %for.inc605 ]
  %arrayidx590 = getelementptr inbounds i32* %cond125741743753, i64 %indvars.iv979
  %142 = load i32* %arrayidx590, align 4, !tbaa !11
  %idxprom592 = sext i32 %142 to i64
  %id594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom592, i32 2
  %143 = bitcast [4 x i8]* %id594 to i32*
  %bf.load595 = load i32* %143, align 4
  %bf.clear596 = and i32 %bf.load595, 4194303
  %idxprom597706 = zext i32 %bf.clear596 to i64
  %add.ptr.sum = sub i64 %idxprom597706, %idx.ext
  %arrayidx598 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %144 = load i8* %arrayidx598, align 1, !tbaa !68
  %conv599 = sext i8 %144 to i32
  switch i32 %conv599, label %for.inc605 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb601
    i32 2, label %sw.bb603
  ]

sw.bb:                                            ; preds = %for.body587
  %incdec.ptr600 = getelementptr inbounds i32* %plin.5832, i64 1
  store i32 %142, i32* %plin.5832, align 4, !tbaa !11
  br label %for.inc605

sw.bb601:                                         ; preds = %for.body587
  %incdec.ptr602 = getelementptr inbounds i32* %plix.2831, i64 1
  store i32 %142, i32* %plix.2831, align 4, !tbaa !11
  br label %for.inc605

sw.bb603:                                         ; preds = %for.body587
  %incdec.ptr604 = getelementptr inbounds i32* %plim.0830, i64 1
  store i32 %142, i32* %plim.0830, align 4, !tbaa !11
  br label %for.inc605

for.inc605:                                       ; preds = %sw.bb603, %sw.bb601, %sw.bb, %for.body587
  %plim.1 = phi i32* [ %plim.0830, %for.body587 ], [ %incdec.ptr604, %sw.bb603 ], [ %plim.0830, %sw.bb601 ], [ %plim.0830, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2831, %for.body587 ], [ %plix.2831, %sw.bb603 ], [ %incdec.ptr602, %sw.bb601 ], [ %plix.2831, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5832, %for.body587 ], [ %plin.5832, %sw.bb603 ], [ %plin.5832, %sw.bb601 ], [ %incdec.ptr600, %sw.bb ]
  %indvars.iv.next980 = add nsw i64 %indvars.iv979, 1
  %lftr.wideiv981 = trunc i64 %indvars.iv.next980 to i32
  %exitcond982 = icmp eq i32 %lftr.wideiv981, %141
  br i1 %exitcond982, label %for.end607, label %for.body587

for.end607:                                       ; preds = %for.inc605, %for.cond585.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond585.loopexit ], [ %plin.6, %for.inc605 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond585.loopexit ], [ %plix.3, %for.inc605 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond585.loopexit ], [ %plim.1, %for.inc605 ]
  %sub.ptr.lhs.cast608 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub610 = sub i64 %sub.ptr.lhs.cast608, %sub.ptr.rhs.cast609
  %sub.ptr.div611 = ashr exact i64 %sub.ptr.sub610, 2
  %conv612652 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast615 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub617 = sub i64 %sub.ptr.lhs.cast615, %sub.ptr.rhs.cast616
  %sub.ptr.div618 = ashr exact i64 %sub.ptr.sub617, 2
  %add613 = add i64 %sub.ptr.div618, %conv612652
  %add620 = add i64 %add613, %sub.ptr.div611
  %conv621 = trunc i64 %add620 to i32
  %sub.ptr.lhs.cast622 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast623 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub624 = sub i64 %sub.ptr.lhs.cast622, %sub.ptr.rhs.cast623
  %sub.ptr.div625654 = lshr exact i64 %sub.ptr.sub624, 2
  %conv626 = trunc i64 %sub.ptr.div625654 to i32
  %cmp628836 = icmp sgt i32 %conv626, 0
  br i1 %cmp628836, label %for.body629.lr.ph, label %for.end786

for.body629.lr.ph:                                ; preds = %for.end607
  %x764 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y773 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z780 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body629

for.body629:                                      ; preds = %for.body629.for.body629_crit_edge, %for.body629.lr.ph
  %145 = phi i32* [ %114, %for.body629.lr.ph ], [ %.pre, %for.body629.for.body629_crit_edge ]
  %indvars.iv983 = phi i64 [ 0, %for.body629.lr.ph ], [ %indvars.iv.next984, %for.body629.for.body629_crit_edge ]
  %146 = phi <2 x double> [ %59, %for.body629.lr.ph ], [ %193, %for.body629.for.body629_crit_edge ]
  %147 = phi <2 x double> [ %60, %for.body629.lr.ph ], [ %197, %for.body629.for.body629_crit_edge ]
  %148 = phi <2 x double> [ %61, %for.body629.lr.ph ], [ %204, %for.body629.for.body629_crit_edge ]
  %149 = phi <2 x double> [ %62, %for.body629.lr.ph ], [ %211, %for.body629.for.body629_crit_edge ]
  %150 = phi <2 x double> [ %63, %for.body629.lr.ph ], [ %222, %for.body629.for.body629_crit_edge ]
  %arrayidx632 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv983
  %151 = load i32* %arrayidx632, align 4, !tbaa !11
  %idx.ext633 = sext i32 %151 to i64
  %x636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 0
  %152 = load double* %x636, align 8, !tbaa !59
  %sub637 = fsub double %69, %152
  %mul639 = fmul double %sub637, %sub637
  %y641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 1
  %153 = load double* %y641, align 8, !tbaa !61
  %sub642 = fsub double %70, %153
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %mul639, %mul643
  %z646 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 2
  %154 = load double* %z646, align 8, !tbaa !62
  %sub647 = fsub double %71, %154
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %add644, %mul648
  %conv650 = fptrunc double %add649 to float
  %155 = bitcast float %conv650 to i32
  %shr = ashr i32 %155, 17
  %add652 = add nsw i32 %shr, %mul
  %id653 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 2
  %156 = bitcast [4 x i8]* %id653 to i32*
  %bf.load654 = load i32* %156, align 4
  %bf.clear655 = and i32 %bf.load654, 4194303
  %idxprom.i721761 = zext i32 %bf.clear655 to i64
  %arrayidx.i723 = getelementptr inbounds i32* %145, i64 %idxprom.i721761
  %157 = load i32* %arrayidx.i723, align 4, !tbaa !11
  %conv.i724 = zext i32 %157 to i64
  %conv657 = shl nuw nsw i64 %conv.i724, 1
  %mul658 = and i64 %conv657, 131070
  %mul661 = shl nsw i32 %add652, 4
  %idx.ext662 = sext i32 %mul661 to i64
  %add.ptr663 = getelementptr inbounds double* %7, i64 %idx.ext662
  %158 = load double* %add.ptr663, align 8, !tbaa !17
  %add.ptr663.sum690 = or i64 %idx.ext662, 4
  %add.ptr668 = getelementptr inbounds double* %7, i64 %add.ptr663.sum690
  %159 = load double* %add.ptr668, align 8, !tbaa !17
  %add.ptr663.sum691 = or i64 %idx.ext662, 8
  %add.ptr673 = getelementptr inbounds double* %7, i64 %add.ptr663.sum691
  %160 = load double* %add.ptr673, align 8, !tbaa !17
  %and = and i32 %155, -131072
  %charge676 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 1
  %161 = load float* %charge676, align 4, !tbaa !63
  %conv677 = fpext float %161 to double
  %mul678 = fmul double %mul397, %conv677
  %162 = bitcast i32 %and to float
  %conv680 = fpext float %162 to double
  %sub681 = fsub double %add649, %conv680
  %bf.lshr684 = lshr i32 %bf.load654, 28
  %mul685 = shl nuw nsw i32 %bf.lshr684, 1
  %idxprom686692 = zext i32 %mul685 to i64
  %add.ptr393.sum693 = add i64 %idxprom686692, %idx.ext392650
  %arrayidx687 = getelementptr inbounds double* %112, i64 %add.ptr393.sum693
  %163 = load double* %arrayidx687, align 8, !tbaa !17
  %add689694 = or i32 %mul685, 1
  %idxprom690695 = zext i32 %add689694 to i64
  %add.ptr393.sum696 = add i64 %idxprom690695, %idx.ext392650
  %arrayidx691 = getelementptr inbounds double* %112, i64 %add.ptr393.sum696
  %164 = load double* %arrayidx691, align 8, !tbaa !17
  %add.ptr.i.sum762 = add i64 %mul658, %idx.ext.i
  %A693 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum762, i32 0
  %165 = load double* %A693, align 8, !tbaa !69
  %mul694 = fmul double %8, %165
  %B696 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum762, i32 1
  %166 = load double* %B696, align 8, !tbaa !71
  %mul697 = fmul double %8, %166
  %mul698 = fmul double %158, %mul694
  %mul699 = fmul double %159, %mul697
  %sub700 = fsub double %mul698, %mul699
  %add.ptr663.sum697 = or i64 %idx.ext662, 3
  %arrayidx701 = getelementptr inbounds double* %7, i64 %add.ptr663.sum697
  %167 = load double* %arrayidx701, align 8, !tbaa !17
  %mul702 = fmul double %mul694, %167
  %add.ptr668.sum698 = or i64 %idx.ext662, 7
  %arrayidx703 = getelementptr inbounds double* %7, i64 %add.ptr668.sum698
  %168 = load double* %arrayidx703, align 8, !tbaa !17
  %mul704 = fmul double %mul697, %168
  %sub705 = fsub double %mul702, %mul704
  %add.ptr663.sum699 = or i64 %idx.ext662, 2
  %arrayidx706 = getelementptr inbounds double* %7, i64 %add.ptr663.sum699
  %169 = load double* %arrayidx706, align 8, !tbaa !17
  %mul707 = fmul double %mul694, %169
  %add.ptr668.sum700 = or i64 %idx.ext662, 6
  %arrayidx708 = getelementptr inbounds double* %7, i64 %add.ptr668.sum700
  %170 = load double* %arrayidx708, align 8, !tbaa !17
  %mul709 = fmul double %mul697, %170
  %sub710 = fsub double %mul707, %mul709
  %add.ptr663.sum701 = or i64 %idx.ext662, 1
  %arrayidx711 = getelementptr inbounds double* %7, i64 %add.ptr663.sum701
  %171 = load double* %arrayidx711, align 8, !tbaa !17
  %mul712 = fmul double %mul694, %171
  %add.ptr668.sum702 = or i64 %idx.ext662, 5
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr668.sum702
  %172 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul697, %172
  %sub715 = fsub double %mul712, %mul714
  %mul716 = fmul double %sub681, %sub705
  %add717 = fadd double %mul716, %sub710
  %add.ptr673.sum703 = or i64 %idx.ext662, 9
  %arrayidx726 = getelementptr inbounds double* %7, i64 %add.ptr673.sum703
  %173 = load double* %arrayidx726, align 8, !tbaa !17
  %add.ptr673.sum704 = or i64 %idx.ext662, 10
  %arrayidx727 = getelementptr inbounds double* %7, i64 %add.ptr673.sum704
  %174 = load double* %arrayidx727, align 8, !tbaa !17
  %add.ptr673.sum705 = or i64 %idx.ext662, 11
  %arrayidx728 = getelementptr inbounds double* %7, i64 %add.ptr673.sum705
  %175 = load double* %arrayidx728, align 8, !tbaa !17
  %mul729 = fmul double %mul678, %175
  %mul730 = fmul double %mul678, %174
  %176 = insertelement <2 x double> undef, double %mul678, i32 0
  %177 = insertelement <2 x double> %176, double %add717, i32 1
  %178 = insertelement <2 x double> undef, double %173, i32 0
  %179 = insertelement <2 x double> %178, double %sub681, i32 1
  %180 = fmul <2 x double> %177, %179
  %mul732 = fmul double %160, %mul678
  %mul733 = fmul double %sub681, %mul729
  %add734 = fadd double %mul730, %mul733
  %mul735 = fmul double %sub681, %add734
  %181 = insertelement <2 x double> undef, double %mul735, i32 0
  %182 = insertelement <2 x double> %181, double %sub715, i32 1
  %183 = fadd <2 x double> %180, %182
  %184 = insertelement <2 x double> undef, double %sub681, i32 0
  %185 = insertelement <2 x double> %184, double %sub681, i32 1
  %186 = fmul <2 x double> %183, %185
  %187 = insertelement <2 x double> undef, double %mul732, i32 0
  %188 = insertelement <2 x double> %187, double %sub700, i32 1
  %189 = fadd <2 x double> %188, %186
  %190 = insertelement <2 x double> undef, double %163, i32 0
  %191 = insertelement <2 x double> %190, double %163, i32 1
  %192 = fmul <2 x double> %189, %191
  %193 = fadd <2 x double> %146, %192
  %194 = insertelement <2 x double> undef, double %164, i32 0
  %195 = insertelement <2 x double> %194, double %164, i32 1
  %196 = fmul <2 x double> %189, %195
  %197 = fadd <2 x double> %147, %196
  %add743 = fadd double %sub705, %mul729
  %add744 = fadd double %sub710, %mul730
  %198 = extractelement <2 x double> %180, i32 0
  %add745 = fadd double %198, %sub715
  %mul747 = fmul double %sub681, 3.000000e+00
  %mul748 = fmul double %mul747, %add743
  %mul749 = fmul double %add744, 2.000000e+00
  %add750 = fadd double %mul749, %mul748
  %mul751 = fmul double %sub681, %add750
  %add752 = fadd double %add745, %mul751
  %mul753 = fmul double %add752, -2.000000e+00
  %mul754 = fmul double %163, %mul753
  %mul757 = fmul double %sub637, %mul754
  %199 = insertelement <2 x double> undef, double %sub637, i32 0
  %200 = insertelement <2 x double> %199, double %sub642, i32 1
  %201 = insertelement <2 x double> undef, double %mul757, i32 0
  %202 = insertelement <2 x double> %201, double %mul757, i32 1
  %203 = fmul <2 x double> %200, %202
  %204 = fadd <2 x double> %148, %203
  %205 = load double* %x764, align 8, !tbaa !72
  %add765 = fadd double %205, %mul757
  store double %add765, double* %x764, align 8, !tbaa !72
  %x766 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 0
  %mul768 = fmul double %sub642, %mul754
  %206 = insertelement <2 x double> undef, double %sub642, i32 0
  %207 = insertelement <2 x double> %206, double %sub647, i32 1
  %208 = insertelement <2 x double> undef, double %mul768, i32 0
  %209 = insertelement <2 x double> %208, double %mul768, i32 1
  %210 = fmul <2 x double> %207, %209
  %211 = fadd <2 x double> %149, %210
  %212 = load double* %y773, align 8, !tbaa !73
  %add774 = fadd double %212, %mul768
  store double %add774, double* %y773, align 8, !tbaa !73
  %213 = bitcast double* %x766 to <2 x double>*
  %214 = load <2 x double>* %213, align 8, !tbaa !17
  %215 = insertelement <2 x double> %201, double %mul768, i32 1
  %216 = fsub <2 x double> %214, %215
  %217 = bitcast double* %x766 to <2 x double>*
  store <2 x double> %216, <2 x double>* %217, align 8, !tbaa !17
  %mul777 = fmul double %sub647, %mul754
  %218 = insertelement <2 x double> undef, double %sub647, i32 0
  %219 = insertelement <2 x double> %218, double %sub647, i32 1
  %220 = insertelement <2 x double> %201, double %mul777, i32 1
  %221 = fmul <2 x double> %219, %220
  %222 = fadd <2 x double> %150, %221
  %223 = load double* %z780, align 8, !tbaa !74
  %add781 = fadd double %223, %mul777
  store double %add781, double* %z780, align 8, !tbaa !74
  %z782 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 2
  %224 = load double* %z782, align 8, !tbaa !74
  %sub783 = fsub double %224, %mul777
  store double %sub783, double* %z782, align 8, !tbaa !74
  %indvars.iv.next984 = add nuw nsw i64 %indvars.iv983, 1
  %lftr.wideiv985 = trunc i64 %indvars.iv.next984 to i32
  %exitcond986 = icmp eq i32 %lftr.wideiv985, %conv626
  br i1 %exitcond986, label %for.end786, label %for.body629.for.body629_crit_edge

for.body629.for.body629_crit_edge:                ; preds = %for.body629
  %.pre = load i32** %atomVdwType.i726, align 8, !tbaa !64
  br label %for.body629

for.end786:                                       ; preds = %for.body629, %for.end607
  %225 = phi <2 x double> [ %59, %for.end607 ], [ %193, %for.body629 ]
  %226 = phi <2 x double> [ %60, %for.end607 ], [ %197, %for.body629 ]
  %227 = phi <2 x double> [ %61, %for.end607 ], [ %204, %for.body629 ]
  %228 = phi <2 x double> [ %62, %for.end607 ], [ %211, %for.body629 ]
  %229 = phi <2 x double> [ %63, %for.end607 ], [ %222, %for.body629 ]
  %conv791 = trunc i64 %sub.ptr.div618 to i32
  %cmp793858 = icmp sgt i32 %conv791, 0
  br i1 %cmp793858, label %for.body794.lr.ph, label %for.end1004

for.body794.lr.ph:                                ; preds = %for.end786
  %x980 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y990 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z998 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body794

for.body794:                                      ; preds = %for.body794, %for.body794.lr.ph
  %indvars.iv987 = phi i64 [ 0, %for.body794.lr.ph ], [ %indvars.iv.next988, %for.body794 ]
  %230 = phi <2 x double> [ %225, %for.body794.lr.ph ], [ %282, %for.body794 ]
  %231 = phi <2 x double> [ %226, %for.body794.lr.ph ], [ %286, %for.body794 ]
  %232 = phi <2 x double> [ %227, %for.body794.lr.ph ], [ %293, %for.body794 ]
  %233 = phi <2 x double> [ %228, %for.body794.lr.ph ], [ %300, %for.body794 ]
  %234 = phi <2 x double> [ %229, %for.body794.lr.ph ], [ %311, %for.body794 ]
  %arrayidx797 = getelementptr inbounds i32* %cond158, i64 %indvars.iv987
  %235 = load i32* %arrayidx797, align 4, !tbaa !11
  %idx.ext799 = sext i32 %235 to i64
  %x803 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 0
  %236 = load double* %x803, align 8, !tbaa !59
  %sub804 = fsub double %69, %236
  %mul806 = fmul double %sub804, %sub804
  %y809 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 1
  %237 = load double* %y809, align 8, !tbaa !61
  %sub810 = fsub double %70, %237
  %mul811 = fmul double %sub810, %sub810
  %add812 = fadd double %mul806, %mul811
  %z815 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 2
  %238 = load double* %z815, align 8, !tbaa !62
  %sub816 = fsub double %71, %238
  %mul817 = fmul double %sub816, %sub816
  %add818 = fadd double %add812, %mul817
  %conv820 = fptrunc double %add818 to float
  %239 = bitcast float %conv820 to i32
  %shr824 = ashr i32 %239, 17
  %add825 = add nsw i32 %shr824, %mul
  %id827 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 2
  %240 = bitcast [4 x i8]* %id827 to i32*
  %bf.load828 = load i32* %240, align 4
  %bf.clear829 = and i32 %bf.load828, 4194303
  %idxprom.i719759 = zext i32 %bf.clear829 to i64
  %241 = load i32** %atomVdwType.i726, align 8, !tbaa !64
  %arrayidx.i720 = getelementptr inbounds i32* %241, i64 %idxprom.i719759
  %242 = load i32* %arrayidx.i720, align 4, !tbaa !11
  %conv.i = zext i32 %242 to i64
  %conv831 = shl nuw nsw i64 %conv.i, 1
  %mul832 = and i64 %conv831, 131070
  %add.ptr834.sum668 = or i64 %mul832, 1
  %mul837 = shl nsw i32 %add825, 4
  %idx.ext838 = sext i32 %mul837 to i64
  %add.ptr839 = getelementptr inbounds double* %7, i64 %idx.ext838
  %243 = load double* %add.ptr839, align 8, !tbaa !17
  %add.ptr839.sum669 = or i64 %idx.ext838, 4
  %add.ptr846 = getelementptr inbounds double* %7, i64 %add.ptr839.sum669
  %244 = load double* %add.ptr846, align 8, !tbaa !17
  %add.ptr839.sum670 = or i64 %idx.ext838, 8
  %add.ptr853 = getelementptr inbounds double* %7, i64 %add.ptr839.sum670
  %245 = load double* %add.ptr853, align 8, !tbaa !17
  %and857 = and i32 %239, -131072
  %charge859 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 1
  %246 = load float* %charge859, align 4, !tbaa !63
  %conv860 = fpext float %246 to double
  %mul861 = fmul double %mul397, %conv860
  %247 = bitcast i32 %and857 to float
  %conv864 = fpext float %247 to double
  %sub865 = fsub double %add818, %conv864
  %bf.lshr869 = lshr i32 %bf.load828, 28
  %mul871 = shl nuw nsw i32 %bf.lshr869, 1
  %idxprom872671 = zext i32 %mul871 to i64
  %add.ptr393.sum672 = add i64 %idxprom872671, %idx.ext392650
  %arrayidx873 = getelementptr inbounds double* %112, i64 %add.ptr393.sum672
  %248 = load double* %arrayidx873, align 8, !tbaa !17
  %add876673 = or i32 %mul871, 1
  %idxprom877674 = zext i32 %add876673 to i64
  %add.ptr393.sum675 = add i64 %idxprom877674, %idx.ext392650
  %arrayidx878 = getelementptr inbounds double* %112, i64 %add.ptr393.sum675
  %249 = load double* %arrayidx878, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr834.sum668, %idx.ext.i
  %A880 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 0
  %250 = load double* %A880, align 8, !tbaa !69
  %mul881 = fmul double %8, %250
  %B883 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 1
  %251 = load double* %B883, align 8, !tbaa !71
  %mul884 = fmul double %8, %251
  %mul886 = fmul double %243, %mul881
  %mul887 = fmul double %244, %mul884
  %sub888 = fsub double %mul886, %mul887
  %add.ptr839.sum676 = or i64 %idx.ext838, 3
  %arrayidx890 = getelementptr inbounds double* %7, i64 %add.ptr839.sum676
  %252 = load double* %arrayidx890, align 8, !tbaa !17
  %mul891 = fmul double %mul881, %252
  %add.ptr846.sum677 = or i64 %idx.ext838, 7
  %arrayidx892 = getelementptr inbounds double* %7, i64 %add.ptr846.sum677
  %253 = load double* %arrayidx892, align 8, !tbaa !17
  %mul893 = fmul double %mul884, %253
  %sub894 = fsub double %mul891, %mul893
  %add.ptr839.sum678 = or i64 %idx.ext838, 2
  %arrayidx896 = getelementptr inbounds double* %7, i64 %add.ptr839.sum678
  %254 = load double* %arrayidx896, align 8, !tbaa !17
  %mul897 = fmul double %mul881, %254
  %add.ptr846.sum679 = or i64 %idx.ext838, 6
  %arrayidx898 = getelementptr inbounds double* %7, i64 %add.ptr846.sum679
  %255 = load double* %arrayidx898, align 8, !tbaa !17
  %mul899 = fmul double %mul884, %255
  %sub900 = fsub double %mul897, %mul899
  %add.ptr839.sum680 = or i64 %idx.ext838, 1
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr839.sum680
  %256 = load double* %arrayidx902, align 8, !tbaa !17
  %mul903 = fmul double %mul881, %256
  %add.ptr846.sum681 = or i64 %idx.ext838, 5
  %arrayidx904 = getelementptr inbounds double* %7, i64 %add.ptr846.sum681
  %257 = load double* %arrayidx904, align 8, !tbaa !17
  %mul905 = fmul double %mul884, %257
  %sub906 = fsub double %mul903, %mul905
  %mul908 = fmul double %sub865, %sub894
  %add909 = fadd double %mul908, %sub900
  %add.ptr853.sum682 = or i64 %idx.ext838, 9
  %arrayidx919 = getelementptr inbounds double* %7, i64 %add.ptr853.sum682
  %258 = load double* %arrayidx919, align 8, !tbaa !17
  %add.ptr853.sum683 = or i64 %idx.ext838, 10
  %arrayidx921 = getelementptr inbounds double* %7, i64 %add.ptr853.sum683
  %259 = load double* %arrayidx921, align 8, !tbaa !17
  %add.ptr853.sum684 = or i64 %idx.ext838, 11
  %arrayidx923 = getelementptr inbounds double* %7, i64 %add.ptr853.sum684
  %260 = load double* %arrayidx923, align 8, !tbaa !17
  %add.ptr924.sum685 = or i64 %idx.ext838, 12
  %add.ptr927 = getelementptr inbounds double* %7, i64 %add.ptr924.sum685
  %261 = load double* %add.ptr927, align 8, !tbaa !17
  %mul929 = fmul double %sub, %261
  %sub930 = fsub double %245, %mul929
  %add.ptr927.sum686 = or i64 %idx.ext838, 13
  %arrayidx931 = getelementptr inbounds double* %7, i64 %add.ptr927.sum686
  %262 = load double* %arrayidx931, align 8, !tbaa !17
  %mul932 = fmul double %sub, %262
  %sub933 = fsub double %258, %mul932
  %add.ptr927.sum687 = or i64 %idx.ext838, 14
  %arrayidx934 = getelementptr inbounds double* %7, i64 %add.ptr927.sum687
  %263 = load double* %arrayidx934, align 8, !tbaa !17
  %mul935 = fmul double %sub, %263
  %sub936 = fsub double %259, %mul935
  %add.ptr927.sum688 = or i64 %idx.ext838, 15
  %arrayidx937 = getelementptr inbounds double* %7, i64 %add.ptr927.sum688
  %264 = load double* %arrayidx937, align 8, !tbaa !17
  %mul938 = fmul double %sub, %264
  %sub939 = fsub double %260, %mul938
  %mul940 = fmul double %mul861, %sub939
  %mul941 = fmul double %mul861, %sub936
  %265 = insertelement <2 x double> undef, double %sub933, i32 0
  %266 = insertelement <2 x double> %265, double %add909, i32 1
  %267 = insertelement <2 x double> undef, double %mul861, i32 0
  %268 = insertelement <2 x double> %267, double %sub865, i32 1
  %269 = fmul <2 x double> %266, %268
  %mul943 = fmul double %mul861, %sub930
  %mul945 = fmul double %sub865, %mul940
  %add946 = fadd double %mul941, %mul945
  %mul947 = fmul double %sub865, %add946
  %270 = insertelement <2 x double> undef, double %mul947, i32 0
  %271 = insertelement <2 x double> %270, double %sub906, i32 1
  %272 = fadd <2 x double> %269, %271
  %273 = insertelement <2 x double> undef, double %sub865, i32 0
  %274 = insertelement <2 x double> %273, double %sub865, i32 1
  %275 = fmul <2 x double> %272, %274
  %276 = insertelement <2 x double> undef, double %mul943, i32 0
  %277 = insertelement <2 x double> %276, double %sub888, i32 1
  %278 = fadd <2 x double> %277, %275
  %279 = insertelement <2 x double> undef, double %248, i32 0
  %280 = insertelement <2 x double> %279, double %248, i32 1
  %281 = fmul <2 x double> %278, %280
  %282 = fadd <2 x double> %230, %281
  %283 = insertelement <2 x double> undef, double %249, i32 0
  %284 = insertelement <2 x double> %283, double %249, i32 1
  %285 = fmul <2 x double> %278, %284
  %286 = fadd <2 x double> %231, %285
  %add955 = fadd double %sub894, %mul940
  %add956 = fadd double %sub900, %mul941
  %287 = extractelement <2 x double> %269, i32 0
  %add957 = fadd double %sub906, %287
  %mul960 = fmul double %sub865, 3.000000e+00
  %mul961 = fmul double %mul960, %add955
  %mul962 = fmul double %add956, 2.000000e+00
  %add963 = fadd double %mul962, %mul961
  %mul964 = fmul double %sub865, %add963
  %add965 = fadd double %add957, %mul964
  %mul967 = fmul double %add965, -2.000000e+00
  %mul968 = fmul double %248, %mul967
  %mul973 = fmul double %sub804, %mul968
  %288 = insertelement <2 x double> undef, double %sub804, i32 0
  %289 = insertelement <2 x double> %288, double %sub810, i32 1
  %290 = insertelement <2 x double> undef, double %mul973, i32 0
  %291 = insertelement <2 x double> %290, double %mul973, i32 1
  %292 = fmul <2 x double> %289, %291
  %293 = fadd <2 x double> %232, %292
  %294 = load double* %x980, align 8, !tbaa !72
  %add981 = fadd double %294, %mul973
  store double %add981, double* %x980, align 8, !tbaa !72
  %x982 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext799, i32 0
  %mul985 = fmul double %sub810, %mul968
  %295 = insertelement <2 x double> undef, double %sub810, i32 0
  %296 = insertelement <2 x double> %295, double %sub816, i32 1
  %297 = insertelement <2 x double> undef, double %mul985, i32 0
  %298 = insertelement <2 x double> %297, double %mul985, i32 1
  %299 = fmul <2 x double> %296, %298
  %300 = fadd <2 x double> %233, %299
  %301 = load double* %y990, align 8, !tbaa !73
  %add991 = fadd double %301, %mul985
  store double %add991, double* %y990, align 8, !tbaa !73
  %302 = bitcast double* %x982 to <2 x double>*
  %303 = load <2 x double>* %302, align 8, !tbaa !17
  %304 = insertelement <2 x double> %290, double %mul985, i32 1
  %305 = fsub <2 x double> %303, %304
  %306 = bitcast double* %x982 to <2 x double>*
  store <2 x double> %305, <2 x double>* %306, align 8, !tbaa !17
  %mul995 = fmul double %sub816, %mul968
  %307 = insertelement <2 x double> undef, double %sub816, i32 0
  %308 = insertelement <2 x double> %307, double %sub816, i32 1
  %309 = insertelement <2 x double> %290, double %mul995, i32 1
  %310 = fmul <2 x double> %308, %309
  %311 = fadd <2 x double> %234, %310
  %312 = load double* %z998, align 8, !tbaa !74
  %add999 = fadd double %312, %mul995
  store double %add999, double* %z998, align 8, !tbaa !74
  %z1000 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext799, i32 2
  %313 = load double* %z1000, align 8, !tbaa !74
  %sub1001 = fsub double %313, %mul995
  store double %sub1001, double* %z1000, align 8, !tbaa !74
  %indvars.iv.next988 = add nuw nsw i64 %indvars.iv987, 1
  %lftr.wideiv989 = trunc i64 %indvars.iv.next988 to i32
  %exitcond990 = icmp eq i32 %lftr.wideiv989, %conv791
  br i1 %exitcond990, label %for.end1004, label %for.body794

for.end1004:                                      ; preds = %for.body794, %for.end786
  %314 = phi <2 x double> [ %225, %for.end786 ], [ %282, %for.body794 ]
  %315 = phi <2 x double> [ %226, %for.end786 ], [ %286, %for.body794 ]
  %316 = phi <2 x double> [ %227, %for.end786 ], [ %293, %for.body794 ]
  %317 = phi <2 x double> [ %228, %for.end786 ], [ %300, %for.body794 ]
  %318 = phi <2 x double> [ %229, %for.end786 ], [ %311, %for.body794 ]
  %conv1009 = trunc i64 %sub.ptr.div611 to i32
  %cmp1011880 = icmp sgt i32 %conv1009, 0
  br i1 %cmp1011880, label %for.body1012.lr.ph, label %for.inc1154

for.body1012.lr.ph:                               ; preds = %for.end1004
  %319 = extractelement <2 x double> %314, i32 0
  %320 = extractelement <2 x double> %315, i32 0
  %x1129 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1139 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1147 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body1012

for.body1012:                                     ; preds = %for.body1012, %for.body1012.lr.ph
  %indvars.iv991 = phi i64 [ 0, %for.body1012.lr.ph ], [ %indvars.iv.next992, %for.body1012 ]
  %fullElectEnergy.3889 = phi double [ %319, %for.body1012.lr.ph ], [ %add1105, %for.body1012 ]
  %fullElectEnergy_s.3888 = phi double [ %320, %for.body1012.lr.ph ], [ %add1107, %for.body1012 ]
  %321 = phi <2 x double> [ %316, %for.body1012.lr.ph ], [ %347, %for.body1012 ]
  %322 = phi <2 x double> [ %317, %for.body1012.lr.ph ], [ %354, %for.body1012 ]
  %323 = phi <2 x double> [ %318, %for.body1012.lr.ph ], [ %365, %for.body1012 ]
  %arrayidx1015 = getelementptr inbounds i32* %cond147755, i64 %indvars.iv991
  %324 = load i32* %arrayidx1015, align 4, !tbaa !11
  %idx.ext1017 = sext i32 %324 to i64
  %x1021 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext1017, i32 0, i32 0
  %325 = load double* %x1021, align 8, !tbaa !59
  %sub1022 = fsub double %69, %325
  %mul1024 = fmul double %sub1022, %sub1022
  %y1027 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext1017, i32 0, i32 1
  %326 = load double* %y1027, align 8, !tbaa !61
  %sub1028 = fsub double %70, %326
  %mul1029 = fmul double %sub1028, %sub1028
  %add1030 = fadd double %mul1024, %mul1029
  %z1033 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext1017, i32 0, i32 2
  %327 = load double* %z1033, align 8, !tbaa !62
  %sub1034 = fsub double %71, %327
  %mul1035 = fmul double %sub1034, %sub1034
  %add1036 = fadd double %add1030, %mul1035
  %conv1038 = fptrunc double %add1036 to float
  %328 = bitcast float %conv1038 to i32
  %shr1042 = ashr i32 %328, 17
  %add1043 = add nsw i32 %shr1042, %mul
  %mul1045 = shl nsw i32 %add1043, 4
  %idx.ext1046 = sext i32 %mul1045 to i64
  %add.ptr1047.sum655 = or i64 %idx.ext1046, 8
  %add.ptr1048 = getelementptr inbounds double* %7, i64 %add.ptr1047.sum655
  %329 = load double* %add.ptr1048, align 8, !tbaa !17
  %and1052 = and i32 %328, -131072
  %charge1054 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext1017, i32 1
  %330 = load float* %charge1054, align 4, !tbaa !63
  %conv1055 = fpext float %330 to double
  %mul1056 = fmul double %mul397, %conv1055
  %331 = bitcast i32 %and1052 to float
  %conv1059 = fpext float %331 to double
  %sub1060 = fsub double %add1036, %conv1059
  %partition1062 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext1017, i32 2
  %332 = bitcast [4 x i8]* %partition1062 to i32*
  %bf.load1063 = load i32* %332, align 4
  %bf.lshr1064 = lshr i32 %bf.load1063, 28
  %mul1066 = shl nuw nsw i32 %bf.lshr1064, 1
  %idxprom1067656 = zext i32 %mul1066 to i64
  %add.ptr393.sum = add i64 %idxprom1067656, %idx.ext392650
  %arrayidx1068 = getelementptr inbounds double* %112, i64 %add.ptr393.sum
  %333 = load double* %arrayidx1068, align 8, !tbaa !17
  %add1071657 = or i32 %mul1066, 1
  %idxprom1072658 = zext i32 %add1071657 to i64
  %add.ptr393.sum659 = add i64 %idxprom1072658, %idx.ext392650
  %arrayidx1073 = getelementptr inbounds double* %112, i64 %add.ptr393.sum659
  %334 = load double* %arrayidx1073, align 8, !tbaa !17
  %add.ptr1048.sum660 = or i64 %idx.ext1046, 9
  %arrayidx1075 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum660
  %335 = load double* %arrayidx1075, align 8, !tbaa !17
  %add.ptr1048.sum661 = or i64 %idx.ext1046, 10
  %arrayidx1077 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum661
  %336 = load double* %arrayidx1077, align 8, !tbaa !17
  %add.ptr1048.sum662 = or i64 %idx.ext1046, 11
  %arrayidx1079 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum662
  %337 = load double* %arrayidx1079, align 8, !tbaa !17
  %add.ptr1081.sum663 = or i64 %idx.ext1046, 12
  %add.ptr1084 = getelementptr inbounds double* %7, i64 %add.ptr1081.sum663
  %338 = load double* %add.ptr1084, align 8, !tbaa !17
  %sub1086 = fsub double %329, %338
  %add.ptr1084.sum664 = or i64 %idx.ext1046, 13
  %arrayidx1087 = getelementptr inbounds double* %7, i64 %add.ptr1084.sum664
  %339 = load double* %arrayidx1087, align 8, !tbaa !17
  %sub1088 = fsub double %335, %339
  %add.ptr1084.sum665 = or i64 %idx.ext1046, 14
  %arrayidx1089 = getelementptr inbounds double* %7, i64 %add.ptr1084.sum665
  %340 = load double* %arrayidx1089, align 8, !tbaa !17
  %sub1090 = fsub double %336, %340
  %add.ptr1084.sum666 = or i64 %idx.ext1046, 15
  %arrayidx1091 = getelementptr inbounds double* %7, i64 %add.ptr1084.sum666
  %341 = load double* %arrayidx1091, align 8, !tbaa !17
  %sub1092 = fsub double %337, %341
  %mul1093 = fmul double %mul1056, %sub1092
  %mul1094 = fmul double %mul1056, %sub1090
  %mul1095 = fmul double %mul1056, %sub1088
  %mul1096 = fmul double %mul1056, %sub1086
  %mul1098 = fmul double %sub1060, %mul1093
  %add1099 = fadd double %mul1094, %mul1098
  %mul1100 = fmul double %sub1060, %add1099
  %add1101 = fadd double %mul1095, %mul1100
  %mul1102 = fmul double %sub1060, %add1101
  %add1103 = fadd double %mul1096, %mul1102
  %mul1104 = fmul double %333, %add1103
  %add1105 = fadd double %fullElectEnergy.3889, %mul1104
  %mul1106 = fmul double %334, %add1103
  %add1107 = fadd double %fullElectEnergy_s.3888, %mul1106
  %mul1109 = fmul double %sub1060, 3.000000e+00
  %mul1110 = fmul double %mul1109, %mul1093
  %mul1111 = fmul double %mul1094, 2.000000e+00
  %add1112 = fadd double %mul1111, %mul1110
  %mul1113 = fmul double %sub1060, %add1112
  %add1114 = fadd double %mul1095, %mul1113
  %mul1116 = fmul double %add1114, -2.000000e+00
  %mul1117 = fmul double %333, %mul1116
  %mul1122 = fmul double %sub1022, %mul1117
  %342 = insertelement <2 x double> undef, double %sub1022, i32 0
  %343 = insertelement <2 x double> %342, double %sub1028, i32 1
  %344 = insertelement <2 x double> undef, double %mul1122, i32 0
  %345 = insertelement <2 x double> %344, double %mul1122, i32 1
  %346 = fmul <2 x double> %343, %345
  %347 = fadd <2 x double> %321, %346
  %348 = load double* %x1129, align 8, !tbaa !72
  %add1130 = fadd double %348, %mul1122
  store double %add1130, double* %x1129, align 8, !tbaa !72
  %x1131 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext1017, i32 0
  %mul1134 = fmul double %sub1028, %mul1117
  %349 = insertelement <2 x double> undef, double %sub1028, i32 0
  %350 = insertelement <2 x double> %349, double %sub1034, i32 1
  %351 = insertelement <2 x double> undef, double %mul1134, i32 0
  %352 = insertelement <2 x double> %351, double %mul1134, i32 1
  %353 = fmul <2 x double> %350, %352
  %354 = fadd <2 x double> %322, %353
  %355 = load double* %y1139, align 8, !tbaa !73
  %add1140 = fadd double %355, %mul1134
  store double %add1140, double* %y1139, align 8, !tbaa !73
  %356 = bitcast double* %x1131 to <2 x double>*
  %357 = load <2 x double>* %356, align 8, !tbaa !17
  %358 = insertelement <2 x double> %344, double %mul1134, i32 1
  %359 = fsub <2 x double> %357, %358
  %360 = bitcast double* %x1131 to <2 x double>*
  store <2 x double> %359, <2 x double>* %360, align 8, !tbaa !17
  %mul1144 = fmul double %sub1034, %mul1117
  %361 = insertelement <2 x double> undef, double %sub1034, i32 0
  %362 = insertelement <2 x double> %361, double %sub1034, i32 1
  %363 = insertelement <2 x double> %344, double %mul1144, i32 1
  %364 = fmul <2 x double> %362, %363
  %365 = fadd <2 x double> %323, %364
  %366 = load double* %z1147, align 8, !tbaa !74
  %add1148 = fadd double %366, %mul1144
  store double %add1148, double* %z1147, align 8, !tbaa !74
  %z1149 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext1017, i32 2
  %367 = load double* %z1149, align 8, !tbaa !74
  %sub1150 = fsub double %367, %mul1144
  store double %sub1150, double* %z1149, align 8, !tbaa !74
  %indvars.iv.next992 = add nuw nsw i64 %indvars.iv991, 1
  %lftr.wideiv993 = trunc i64 %indvars.iv.next992 to i32
  %exitcond994 = icmp eq i32 %lftr.wideiv993, %conv1009
  br i1 %exitcond994, label %for.inc1154.loopexit, label %for.body1012

for.inc1154.loopexit:                             ; preds = %for.body1012
  %368 = insertelement <2 x double> undef, double %add1107, i32 0
  %369 = insertelement <2 x double> undef, double %add1105, i32 0
  %370 = shufflevector <2 x double> %369, <2 x double> %314, <2 x i32> <i32 0, i32 3>
  %371 = shufflevector <2 x double> %368, <2 x double> %315, <2 x i32> <i32 0, i32 3>
  br label %for.inc1154

for.inc1154:                                      ; preds = %for.inc1154.loopexit, %for.end1004, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end1004 ], [ %pairCount.2, %for.inc1154.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0902, %if.then215 ], [ %pairlistoffset.1, %for.end1004 ], [ %pairlistoffset.1, %for.inc1154.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0903, %if.then215 ], [ %pairlistindex.2, %for.end1004 ], [ %pairlistindex.2, %for.inc1154.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0904, %if.then215 ], [ %fixg_lower.3, %for.end1004 ], [ %fixg_lower.3, %for.inc1154.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.0905, %if.then215 ], [ %g_lower.3, %for.end1004 ], [ %g_lower.3, %for.inc1154.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0906, %if.then215 ], [ %j_hgroup.2, %for.end1004 ], [ %j_hgroup.2, %for.inc1154.loopexit ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0907, %for.end1004 ], [ %i.0907, %for.inc1154.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0918, %if.then215 ], [ %conv621, %for.end1004 ], [ %conv621, %for.inc1154.loopexit ]
  %372 = phi <2 x double> [ %59, %if.then215 ], [ %314, %for.end1004 ], [ %370, %for.inc1154.loopexit ]
  %373 = phi <2 x double> [ %60, %if.then215 ], [ %315, %for.end1004 ], [ %371, %for.inc1154.loopexit ]
  %374 = phi <2 x double> [ %61, %if.then215 ], [ %316, %for.end1004 ], [ %347, %for.inc1154.loopexit ]
  %375 = phi <2 x double> [ %62, %if.then215 ], [ %317, %for.end1004 ], [ %354, %for.inc1154.loopexit ]
  %376 = phi <2 x double> [ %63, %if.then215 ], [ %318, %for.end1004 ], [ %365, %for.inc1154.loopexit ]
  %inc1155 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1155
  br i1 %cmp171, label %for.body172, label %for.end1156

for.end1156:                                      ; preds = %for.inc1154, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1154 ]
  %377 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %372, %for.inc1154 ]
  %378 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %373, %for.inc1154 ]
  %379 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %374, %for.inc1154 ]
  %380 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %375, %for.inc1154 ]
  %381 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %376, %for.inc1154 ]
  %382 = extractelement <2 x double> %381, i32 1
  %arraydecay1157 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1158 = icmp eq i32* %cond72973110081014, %arraydecay1157
  br i1 %cmp1158, label %if.end1163, label %delete.notnull1161

delete.notnull1161:                               ; preds = %for.end1156
  %383 = bitcast i32* %cond72973110081014 to i8*
  call void @_ZdaPv(i8* %383) #7
  br label %if.end1163

if.end1163:                                       ; preds = %delete.notnull1161, %for.end1156
  %arraydecay1164 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1165 = icmp eq i32* %cond1973310061015, %arraydecay1164
  br i1 %cmp1165, label %if.end1170, label %delete.notnull1168

delete.notnull1168:                               ; preds = %if.end1163
  %384 = bitcast i32* %cond1973310061015 to i8*
  call void @_ZdaPv(i8* %384) #7
  br label %if.end1170

if.end1170:                                       ; preds = %delete.notnull1168, %if.end1163
  %arraydecay1171 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1172 = icmp eq i32* %cond3010101013, %arraydecay1171
  br i1 %cmp1172, label %if.end1177, label %delete.notnull1175

delete.notnull1175:                               ; preds = %if.end1170
  %385 = bitcast i32* %cond3010101013 to i8*
  call void @_ZdaPv(i8* %385) #7
  br label %if.end1177

if.end1177:                                       ; preds = %delete.notnull1175, %if.end1170
  %arraydecay1178 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1179 = icmp eq i32* %cond114737739745751, %arraydecay1178
  br i1 %cmp1179, label %if.end1184, label %delete.notnull1182

delete.notnull1182:                               ; preds = %if.end1177
  %386 = bitcast i32* %cond114737739745751 to i8*
  call void @_ZdaPv(i8* %386) #7
  br label %if.end1184

if.end1184:                                       ; preds = %delete.notnull1182, %if.end1177
  %arraydecay1185 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1186 = icmp eq i32* %cond125741743753, %arraydecay1185
  br i1 %cmp1186, label %if.end1191, label %delete.notnull1189

delete.notnull1189:                               ; preds = %if.end1184
  %387 = bitcast i32* %cond125741743753 to i8*
  call void @_ZdaPv(i8* %387) #7
  br label %if.end1191

if.end1191:                                       ; preds = %delete.notnull1189, %if.end1184
  %arraydecay1192 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1193 = icmp eq i32* %cond136747749, %arraydecay1192
  br i1 %cmp1193, label %if.end1198, label %delete.notnull1196

delete.notnull1196:                               ; preds = %if.end1191
  %388 = bitcast i32* %cond136747749 to i8*
  call void @_ZdaPv(i8* %388) #7
  br label %if.end1198

if.end1198:                                       ; preds = %delete.notnull1196, %if.end1191
  %arraydecay1199 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1200 = icmp eq i32* %cond147755, %arraydecay1199
  br i1 %cmp1200, label %if.end1205, label %delete.notnull1203

delete.notnull1203:                               ; preds = %if.end1198
  %389 = bitcast i32* %cond147755 to i8*
  call void @_ZdaPv(i8* %389) #7
  br label %if.end1205

if.end1205:                                       ; preds = %delete.notnull1203, %if.end1198
  %arraydecay1206 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1207 = icmp eq i32* %cond158, %arraydecay1206
  br i1 %cmp1207, label %if.end1212, label %delete.notnull1210

delete.notnull1210:                               ; preds = %if.end1205
  %390 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %390) #7
  br label %if.end1212

if.end1212:                                       ; preds = %delete.notnull1210, %if.end1205
  %conv1213 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1214 = getelementptr inbounds double* %1, i64 22
  %391 = load double* %arrayidx1214, align 8, !tbaa !17
  %add1215 = fadd double %conv1213, %391
  store double %add1215, double* %arrayidx1214, align 8, !tbaa !17
  %arrayidx1220 = getelementptr inbounds double* %1, i64 1
  %392 = bitcast double* %arrayidx1220 to <2 x double>*
  %393 = load <2 x double>* %392, align 8, !tbaa !17
  %394 = fadd <2 x double> %377, %393
  %395 = bitcast double* %arrayidx1220 to <2 x double>*
  store <2 x double> %394, <2 x double>* %395, align 8, !tbaa !17
  %arrayidx1222 = getelementptr inbounds double* %1, i64 24
  %396 = bitcast double* %arrayidx1222 to <2 x double>*
  %397 = load <2 x double>* %396, align 8, !tbaa !17
  %398 = fadd <2 x double> %378, %397
  %399 = bitcast double* %arrayidx1222 to <2 x double>*
  store <2 x double> %398, <2 x double>* %399, align 8, !tbaa !17
  %arrayidx1224 = getelementptr inbounds double* %1, i64 12
  %400 = bitcast double* %arrayidx1224 to <2 x double>*
  %401 = load <2 x double>* %400, align 8, !tbaa !17
  %402 = fadd <2 x double> %379, %401
  %403 = bitcast double* %arrayidx1224 to <2 x double>*
  store <2 x double> %402, <2 x double>* %403, align 8, !tbaa !17
  %arrayidx1228 = getelementptr inbounds double* %1, i64 14
  %404 = bitcast double* %arrayidx1228 to <2 x double>*
  %405 = load <2 x double>* %404, align 8, !tbaa !17
  %406 = shufflevector <2 x double> %381, <2 x double> %379, <2 x i32> <i32 0, i32 3>
  %407 = fadd <2 x double> %406, %405
  %408 = bitcast double* %arrayidx1228 to <2 x double>*
  store <2 x double> %407, <2 x double>* %408, align 8, !tbaa !17
  %arrayidx1232 = getelementptr inbounds double* %1, i64 16
  %409 = bitcast double* %arrayidx1232 to <2 x double>*
  %410 = load <2 x double>* %409, align 8, !tbaa !17
  %411 = fadd <2 x double> %380, %410
  %412 = bitcast double* %arrayidx1232 to <2 x double>*
  store <2 x double> %411, <2 x double>* %412, align 8, !tbaa !17
  %arrayidx1236 = getelementptr inbounds double* %1, i64 18
  %413 = bitcast double* %arrayidx1236 to <2 x double>*
  %414 = load <2 x double>* %413, align 8, !tbaa !17
  %415 = shufflevector <2 x double> %381, <2 x double> %380, <2 x i32> <i32 0, i32 3>
  %416 = fadd <2 x double> %415, %414
  %417 = bitcast double* %arrayidx1236 to <2 x double>*
  store <2 x double> %416, <2 x double>* %417, align 8, !tbaa !17
  %arrayidx1240 = getelementptr inbounds double* %1, i64 20
  %418 = load double* %arrayidx1240, align 8, !tbaa !17
  %add1241 = fadd double %382, %418
  store double %add1241, double* %arrayidx1240, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1212, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil35calc_pair_energy_slow_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31769 = icmp sgt i32 %13, 0
  br i1 %cmp31769, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30826 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond593595824 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19597822 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv815 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next816, %for.inc ]
  %g.0770 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv815, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0770, 1
  %idxprom41 = sext i32 %g.0770 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond593595824, i64 %idxprom41
  %30 = trunc i64 %indvars.iv815 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0770, %for.body ]
  %indvars.iv.next816 = add nuw nsw i64 %indvars.iv815, 1
  %lftr.wideiv817 = trunc i64 %indvars.iv.next816 to i32
  %exitcond818 = icmp eq i32 %lftr.wideiv817, %13
  br i1 %exitcond818, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond593595824, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond593595824, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa831 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19597821830 = phi i32* [ %cond19597822, %for.end ], [ %cond19597822, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond593595823829 = phi i32* [ %cond593595824, %for.end ], [ %cond593595824, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30825828 = phi i32* [ %cond30826, %for.end ], [ %cond30826, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56763 = icmp sgt i32 %g.0.lcssa831, 0
  br i1 %cmp56763, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75757 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76758 = icmp sgt i32 %12, 0
  %or.cond585759 = and i1 %tobool75757, %cmp76758
  br i1 %or.cond585759, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv811 = phi i64 [ %indvars.iv.next812, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0765 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0764 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond593595823829, i64 %indvars.iv811
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0765, 1
  %idxprom68 = sext i32 %fixg.0765 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19597821830, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0764, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0765, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next812 = add nuw nsw i64 %indvars.iv811, 1
  %lftr.wideiv813 = trunc i64 %indvars.iv.next812 to i32
  %exitcond814 = icmp eq i32 %lftr.wideiv813, %g.0.lcssa831
  br i1 %exitcond814, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv809 = phi i64 [ %indvars.iv.next810, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2760 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv809, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2760
  %indvars.iv.next810 = add nuw nsw i64 %indvars.iv809, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next810 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond585 = and i1 %tobool75, %cmp76
  br i1 %or.cond585, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75757, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond593595823829, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond593595823829 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19597821830, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19597821830 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30825828, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30825828 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19597821830, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19597821830, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2600 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162619 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140605607617 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129601603609615 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151611613 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183726 = icmp sgt i32 %12, 0
  br i1 %cmp183726, label %for.body184.lr.ph, label %for.end989

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast525 = ptrtoint i32* %cond140605607617 to i64
  %sub.ptr.rhs.cast562 = ptrtoint i32* %cond162619 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast576 = ptrtoint i32* %cond151611613 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30825828 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129601603609615 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc987, %for.body184.lr.ph
  %exclChecksum.0746 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc987 ]
  %i.1729 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc988, %for.inc987 ]
  %pairlistindex.0728 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc987 ]
  %pairCount.0727 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc987 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %288, %for.inc987 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %289, %for.inc987 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %290, %for.inc987 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %291, %for.inc987 ]
  %idxprom185 = sext i32 %i.1729 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %65 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %65, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i621 = zext i32 %bf.clear188 to i64
  %66 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i621, i32 0
  %67 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i621, i32 1
  %68 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i621, i32 2
  %69 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %67 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %70 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %71 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %72 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %73 = and i32 %bf.load187, 62914560
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0727
  %cmp218 = icmp sge i32 %pairCount.0727, %div
  %cmp220 = icmp slt i32 %pairCount.0727, %div181
  %or.cond587 = and i1 %cmp218, %cmp220
  br i1 %or.cond587, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1729, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc987

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0727, %if.then205 ], [ %add217, %if.then211 ]
  %75 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %75, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %76 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %76, i32* %cond19597821830, i32* %cond593595823829
  %cond243 = select i1 %76, i32 %fixg.2600, i32 %g.0.lcssa831
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %77 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %77 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %78 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %79 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %80 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_y.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_x.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %j2.0.ph = phi i32 [ %77, %if.then245 ], [ %83, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30825828, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %81 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %81, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %82 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %82, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %83 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %70, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %83 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %84 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %71, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %85 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %72, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %86 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div582 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div582 to i32
  %cmp289627 = icmp sgt i32 %conv287, 0
  br i1 %cmp289627, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %87 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %88 = lshr i64 %87, 2
  %89 = trunc i64 %88 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv777 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next778, %cond.end310 ]
  %pli.0629 = phi i32* [ %cond129601603609615, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30825828, i64 %indvars.iv777
  %90 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %90 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %91 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %91, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp583584 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp583584, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %90, i32* %pli.0629, align 4, !tbaa !11
  %add313 = add nsw i32 %90, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0629, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %90, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0629, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %90, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0629, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0629, i64 %cond311
  %indvars.iv.next778 = add nuw nsw i64 %indvars.iv777, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next778 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129601603609615, %land.end ], [ %cond129601603609615, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328579 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328579 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext580 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext580, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129601603609615, i64 %idxprom333
  %92 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129601603609615, i64 %idxprom335
  store i32 %92, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %65, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1729
  br label %for.inc987

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0727, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0728, %for.body184 ]
  %93 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %93, 0
  %bf.load364.pre = load i32* %65, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load364.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %94 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %95 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr365 = lshr i32 %bf.load364.pre, 28
  %mul366 = mul nsw i32 %bf.lshr365, 6
  %idx.ext367536 = zext i32 %mul366 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %96 = load float* %charge, align 4, !tbaa !63
  %conv369 = fpext float %96 to double
  %mul370 = fmul double %conv369, 3.320636e+02
  %mul371 = fmul double %8, %mul370
  %mul372 = fmul double %4, %mul371
  %cmp383654 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %94, label %for.cond382.preheader, label %if.else444

for.cond382.preheader:                            ; preds = %land.end362
  br i1 %cmp383654, label %for.body384, label %if.end523

for.body384:                                      ; preds = %for.inc441, %for.cond382.preheader
  %indvars.iv788 = phi i64 [ %indvars.iv.next789, %for.inc441 ], [ 0, %for.cond382.preheader ]
  %exclChecksum.1658 = phi i32 [ %exclChecksum.3, %for.inc441 ], [ %exclChecksum.0746, %for.cond382.preheader ]
  %pli379.0657 = phi i32* [ %pli379.1, %for.inc441 ], [ %cond140605607617, %for.cond382.preheader ]
  %plin.0656 = phi i32* [ %plin.1, %for.inc441 ], [ %cond151611613, %for.cond382.preheader ]
  %arrayidx386 = getelementptr inbounds i32* %cond129601603609615, i64 %indvars.iv788
  %97 = load i32* %arrayidx386, align 4, !tbaa !11
  %idxprom388 = sext i32 %97 to i64
  %x391 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 0
  %98 = load double* %x391, align 8, !tbaa !59
  %sub393 = fsub double %70, %98
  %mul394 = fmul double %sub393, %sub393
  %y399 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 1
  %99 = load double* %y399, align 8, !tbaa !61
  %sub401 = fsub double %71, %99
  %mul402 = fmul double %sub401, %sub401
  %add403 = fadd double %mul394, %mul402
  %z408 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 0, i32 2
  %100 = load double* %z408, align 8, !tbaa !62
  %sub409 = fsub double %72, %100
  %mul410 = fmul double %sub409, %sub409
  %add411 = fadd double %add403, %mul410
  %atomFixed414 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom388, i32 2
  %101 = bitcast [4 x i8]* %atomFixed414 to i32*
  %bf.load415 = load i32* %101, align 4
  %bf.clear417 = and i32 %bf.load415, 67108864
  %tobool418 = icmp ne i32 %bf.clear417, 0
  %cmp420 = fcmp ugt double %add411, %2
  %or.cond588 = or i1 %tobool418, %cmp420
  br i1 %or.cond588, label %for.inc441, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %for.body384
  %cmp422 = fcmp ugt double %add411, %10
  br i1 %cmp422, label %if.then426, label %land.lhs.true423

land.lhs.true423:                                 ; preds = %land.lhs.true421
  %inc424 = add nsw i32 %exclChecksum.1658, 1
  %tobool425 = icmp eq i32 %inc424, 0
  br i1 %tobool425, label %if.then426, label %for.inc441

if.then426:                                       ; preds = %land.lhs.true423, %land.lhs.true421
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true423 ], [ %exclChecksum.1658, %land.lhs.true421 ]
  %bf.clear431 = and i32 %bf.load415, 4194303
  %cmp432 = icmp slt i32 %bf.clear431, %67
  %cmp434 = icmp sgt i32 %bf.clear431, %68
  %or.cond589 = or i1 %cmp432, %cmp434
  br i1 %or.cond589, label %if.else437, label %if.then435

if.then435:                                       ; preds = %if.then426
  %incdec.ptr436 = getelementptr inbounds i32* %pli379.0657, i64 1
  store i32 %97, i32* %pli379.0657, align 4, !tbaa !11
  br label %for.inc441

if.else437:                                       ; preds = %if.then426
  %incdec.ptr438 = getelementptr inbounds i32* %plin.0656, i64 1
  store i32 %97, i32* %plin.0656, align 4, !tbaa !11
  br label %for.inc441

for.inc441:                                       ; preds = %if.else437, %if.then435, %land.lhs.true423, %for.body384
  %plin.1 = phi i32* [ %plin.0656, %for.body384 ], [ %plin.0656, %land.lhs.true423 ], [ %plin.0656, %if.then435 ], [ %incdec.ptr438, %if.else437 ]
  %pli379.1 = phi i32* [ %pli379.0657, %for.body384 ], [ %pli379.0657, %land.lhs.true423 ], [ %incdec.ptr436, %if.then435 ], [ %pli379.0657, %if.else437 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1658, %for.body384 ], [ %inc424, %land.lhs.true423 ], [ %exclChecksum.2, %if.then435 ], [ %exclChecksum.2, %if.else437 ]
  %indvars.iv.next789 = add nuw nsw i64 %indvars.iv788, 1
  %lftr.wideiv790 = trunc i64 %indvars.iv.next789 to i32
  %exitcond791 = icmp eq i32 %lftr.wideiv790, %pairlistindex.1
  br i1 %exitcond791, label %if.end523, label %for.body384

if.else444:                                       ; preds = %land.end362
  br i1 %cmp383654, label %if.then447, label %if.end523

if.then447:                                       ; preds = %if.else444
  %102 = load i32* %cond129601603609615, align 4, !tbaa !11
  %idxprom452 = sext i32 %102 to i64
  %x455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 0
  %103 = load double* %x455, align 8, !tbaa !59
  %y460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 1
  %104 = load double* %y460, align 8, !tbaa !61
  %z465 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452, i32 0, i32 2
  %105 = load double* %z465, align 8, !tbaa !62
  br label %while.cond472.outer

while.cond472.outer:                              ; preds = %if.else512, %if.then447
  %idxprom452.pn.ph = phi i64 [ %idxprom452, %if.then447 ], [ %idxprom481, %if.else512 ]
  %p_j_z461.0.ph = phi double [ %105, %if.then447 ], [ %111, %if.else512 ]
  %p_j_y456.0.ph = phi double [ %104, %if.then447 ], [ %110, %if.else512 ]
  %p_j_x451.0.ph = phi double [ %103, %if.then447 ], [ %109, %if.else512 ]
  %j2448.0.ph = phi i32 [ %102, %if.then447 ], [ %108, %if.else512 ]
  %k445.0.ph = phi i32 [ 0, %if.then447 ], [ %inc475, %if.else512 ]
  %plin.2.ph = phi i32* [ %cond151611613, %if.then447 ], [ %incdec.ptr513, %if.else512 ]
  %pli379.2.ph = phi i32* [ %cond140605607617, %if.then447 ], [ %pli379.2.ph637, %if.else512 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0746, %if.then447 ], [ %exclChecksum.5, %if.else512 ]
  br label %while.cond472.outer630

while.cond472.outer630:                           ; preds = %if.then510, %while.cond472.outer
  %idxprom452.pn.ph631 = phi i64 [ %idxprom481, %if.then510 ], [ %idxprom452.pn.ph, %while.cond472.outer ]
  %p_j_z461.0.ph632 = phi double [ %111, %if.then510 ], [ %p_j_z461.0.ph, %while.cond472.outer ]
  %p_j_y456.0.ph633 = phi double [ %110, %if.then510 ], [ %p_j_y456.0.ph, %while.cond472.outer ]
  %p_j_x451.0.ph634 = phi double [ %109, %if.then510 ], [ %p_j_x451.0.ph, %while.cond472.outer ]
  %j2448.0.ph635 = phi i32 [ %108, %if.then510 ], [ %j2448.0.ph, %while.cond472.outer ]
  %k445.0.ph636 = phi i32 [ %inc475, %if.then510 ], [ %k445.0.ph, %while.cond472.outer ]
  %pli379.2.ph637 = phi i32* [ %incdec.ptr511, %if.then510 ], [ %pli379.2.ph, %while.cond472.outer ]
  %exclChecksum.4.ph638 = phi i32 [ %exclChecksum.5, %if.then510 ], [ %exclChecksum.4.ph, %while.cond472.outer ]
  br label %while.cond472.outer639

while.cond472.outer639:                           ; preds = %land.lhs.true503, %while.cond472.outer630
  %idxprom452.pn.ph640 = phi i64 [ %idxprom481, %land.lhs.true503 ], [ %idxprom452.pn.ph631, %while.cond472.outer630 ]
  %p_j_z461.0.ph641 = phi double [ %111, %land.lhs.true503 ], [ %p_j_z461.0.ph632, %while.cond472.outer630 ]
  %p_j_y456.0.ph642 = phi double [ %110, %land.lhs.true503 ], [ %p_j_y456.0.ph633, %while.cond472.outer630 ]
  %p_j_x451.0.ph643 = phi double [ %109, %land.lhs.true503 ], [ %p_j_x451.0.ph634, %while.cond472.outer630 ]
  %j2448.0.ph644 = phi i32 [ %108, %land.lhs.true503 ], [ %j2448.0.ph635, %while.cond472.outer630 ]
  %k445.0.ph645 = phi i32 [ %inc475, %land.lhs.true503 ], [ %k445.0.ph636, %while.cond472.outer630 ]
  %exclChecksum.4.ph646 = phi i32 [ %inc504, %land.lhs.true503 ], [ %exclChecksum.4.ph638, %while.cond472.outer630 ]
  %106 = sext i32 %k445.0.ph645 to i64
  br label %while.cond472

while.cond472:                                    ; preds = %while.body474, %while.cond472.outer639
  %indvars.iv784 = phi i64 [ %106, %while.cond472.outer639 ], [ %indvars.iv.next785, %while.body474 ]
  %idxprom452.pn = phi i64 [ %idxprom452.pn.ph640, %while.cond472.outer639 ], [ %idxprom481, %while.body474 ]
  %p_j_z461.0 = phi double [ %p_j_z461.0.ph641, %while.cond472.outer639 ], [ %111, %while.body474 ]
  %p_j_y456.0 = phi double [ %p_j_y456.0.ph642, %while.cond472.outer639 ], [ %110, %while.body474 ]
  %p_j_x451.0 = phi double [ %p_j_x451.0.ph643, %while.cond472.outer639 ], [ %109, %while.body474 ]
  %j2448.0 = phi i32 [ %j2448.0.ph644, %while.cond472.outer639 ], [ %108, %while.body474 ]
  %k445.0 = phi i32 [ %k445.0.ph645, %while.cond472.outer639 ], [ %inc475, %while.body474 ]
  %107 = trunc i64 %indvars.iv784 to i32
  %cmp473 = icmp slt i32 %107, %pairlistindex.1
  br i1 %cmp473, label %while.body474, label %if.end523

while.body474:                                    ; preds = %while.cond472
  %atom2466.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom452.pn, i32 2
  %atom2466.0.in.in = bitcast [4 x i8]* %atom2466.0.in.in.in to i32*
  %atom2466.0.in = load i32* %atom2466.0.in.in, align 4
  %atom2466.0 = and i32 %atom2466.0.in, 4194303
  %indvars.iv.next785 = add nsw i64 %indvars.iv784, 1
  %inc475 = add nsw i32 %k445.0, 1
  %arrayidx477 = getelementptr inbounds i32* %cond129601603609615, i64 %indvars.iv.next785
  %108 = load i32* %arrayidx477, align 4, !tbaa !11
  %sub479 = fsub double %70, %p_j_x451.0
  %mul480 = fmul double %sub479, %sub479
  %idxprom481 = sext i32 %108 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 0
  %109 = load double* %x484, align 8, !tbaa !59
  %sub486 = fsub double %71, %p_j_y456.0
  %mul487 = fmul double %sub486, %sub486
  %add488 = fadd double %mul487, %mul480
  %y492 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 1
  %110 = load double* %y492, align 8, !tbaa !61
  %sub493 = fsub double %72, %p_j_z461.0
  %mul494 = fmul double %sub493, %sub493
  %add495 = fadd double %mul494, %add488
  %z499 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom481, i32 0, i32 2
  %111 = load double* %z499, align 8, !tbaa !62
  %cmp500 = fcmp ugt double %add495, %2
  br i1 %cmp500, label %while.cond472, label %land.lhs.true501

land.lhs.true501:                                 ; preds = %while.body474
  %cmp502 = fcmp ugt double %add495, %10
  br i1 %cmp502, label %if.then506, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true501
  %inc504 = add nsw i32 %exclChecksum.4.ph646, 1
  %tobool505 = icmp eq i32 %inc504, 0
  br i1 %tobool505, label %if.then506, label %while.cond472.outer639

if.then506:                                       ; preds = %land.lhs.true503, %land.lhs.true501
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true503 ], [ %exclChecksum.4.ph646, %land.lhs.true501 ]
  %cmp507 = icmp slt i32 %atom2466.0, %67
  %cmp509 = icmp sgt i32 %atom2466.0, %68
  %or.cond590 = or i1 %cmp507, %cmp509
  br i1 %or.cond590, label %if.else512, label %if.then510

if.then510:                                       ; preds = %if.then506
  %incdec.ptr511 = getelementptr inbounds i32* %pli379.2.ph637, i64 1
  store i32 %j2448.0, i32* %pli379.2.ph637, align 4, !tbaa !11
  br label %while.cond472.outer630

if.else512:                                       ; preds = %if.then506
  %incdec.ptr513 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2448.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond472.outer

if.end523:                                        ; preds = %while.cond472, %if.else444, %for.inc441, %for.cond382.preheader
  %plin.4 = phi i32* [ %cond151611613, %if.else444 ], [ %cond151611613, %for.cond382.preheader ], [ %plin.2.ph, %while.cond472 ], [ %plin.1, %for.inc441 ]
  %pli379.4 = phi i32* [ %cond140605607617, %if.else444 ], [ %cond140605607617, %for.cond382.preheader ], [ %pli379.2.ph637, %while.cond472 ], [ %pli379.1, %for.inc441 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0746, %if.else444 ], [ %exclChecksum.0746, %for.cond382.preheader ], [ %exclChecksum.4.ph646, %while.cond472 ], [ %exclChecksum.3, %for.inc441 ]
  %sub.ptr.lhs.cast524 = ptrtoint i32* %pli379.4 to i64
  %sub.ptr.sub526 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %sub.ptr.div527537 = lshr exact i64 %sub.ptr.sub526, 2
  %conv528 = trunc i64 %sub.ptr.div527537 to i32
  %tobool529 = icmp eq i32 %conv528, 0
  br i1 %tobool529, label %for.end560, label %for.cond538.preheader

for.cond538.preheader:                            ; preds = %if.end523
  %sub531 = shl i64 %sub.ptr.sub526, 30
  %sext577 = add i64 %sub531, -4294967296
  %idxprom532 = ashr exact i64 %sext577, 32
  %arrayidx533 = getelementptr inbounds i32* %cond140605607617, i64 %idxprom532
  %112 = load i32* %arrayidx533, align 4, !tbaa !11
  %idxprom534 = ashr exact i64 %sub531, 32
  %arrayidx535 = getelementptr inbounds i32* %cond140605607617, i64 %idxprom534
  store i32 %112, i32* %arrayidx535, align 4, !tbaa !11
  %cmp539662 = icmp sgt i32 %conv528, 0
  br i1 %cmp539662, label %for.body540.lr.ph, label %for.end560

for.body540.lr.ph:                                ; preds = %for.cond538.preheader
  %113 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %114 = lshr i64 %113, 2
  %115 = trunc i64 %114 to i32
  br label %for.body540

for.body540:                                      ; preds = %for.inc558, %for.body540.lr.ph
  %indvars.iv792 = phi i64 [ 0, %for.body540.lr.ph ], [ %indvars.iv.next793, %for.inc558 ]
  %plin.5666 = phi i32* [ %plin.4, %for.body540.lr.ph ], [ %plin.6, %for.inc558 ]
  %plix.0665 = phi i32* [ %cond162619, %for.body540.lr.ph ], [ %plix.1, %for.inc558 ]
  %plim.0664 = phi i32* [ %cond173, %for.body540.lr.ph ], [ %plim.1, %for.inc558 ]
  %arrayidx543 = getelementptr inbounds i32* %cond140605607617, i64 %indvars.iv792
  %116 = load i32* %arrayidx543, align 4, !tbaa !11
  %idxprom545 = sext i32 %116 to i64
  %id547 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom545, i32 2
  %117 = bitcast [4 x i8]* %id547 to i32*
  %bf.load548 = load i32* %117, align 4
  %bf.clear549 = and i32 %bf.load548, 4194303
  %idxprom550576 = zext i32 %bf.clear549 to i64
  %add.ptr.sum = sub i64 %idxprom550576, %idx.ext
  %arrayidx551 = getelementptr inbounds i8* %69, i64 %add.ptr.sum
  %118 = load i8* %arrayidx551, align 1, !tbaa !68
  %conv552 = sext i8 %118 to i32
  switch i32 %conv552, label %for.inc558 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb554
    i32 2, label %sw.bb556
  ]

sw.bb:                                            ; preds = %for.body540
  %incdec.ptr553 = getelementptr inbounds i32* %plin.5666, i64 1
  store i32 %116, i32* %plin.5666, align 4, !tbaa !11
  br label %for.inc558

sw.bb554:                                         ; preds = %for.body540
  %incdec.ptr555 = getelementptr inbounds i32* %plix.0665, i64 1
  store i32 %116, i32* %plix.0665, align 4, !tbaa !11
  br label %for.inc558

sw.bb556:                                         ; preds = %for.body540
  %incdec.ptr557 = getelementptr inbounds i32* %plim.0664, i64 1
  store i32 %116, i32* %plim.0664, align 4, !tbaa !11
  br label %for.inc558

for.inc558:                                       ; preds = %sw.bb556, %sw.bb554, %sw.bb, %for.body540
  %plim.1 = phi i32* [ %plim.0664, %for.body540 ], [ %incdec.ptr557, %sw.bb556 ], [ %plim.0664, %sw.bb554 ], [ %plim.0664, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0665, %for.body540 ], [ %plix.0665, %sw.bb556 ], [ %incdec.ptr555, %sw.bb554 ], [ %plix.0665, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5666, %for.body540 ], [ %plin.5666, %sw.bb556 ], [ %plin.5666, %sw.bb554 ], [ %incdec.ptr553, %sw.bb ]
  %indvars.iv.next793 = add nuw nsw i64 %indvars.iv792, 1
  %lftr.wideiv794 = trunc i64 %indvars.iv.next793 to i32
  %exitcond795 = icmp eq i32 %lftr.wideiv794, %115
  br i1 %exitcond795, label %for.end560, label %for.body540

for.end560:                                       ; preds = %for.inc558, %for.cond538.preheader, %if.end523
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond538.preheader ], [ %plin.4, %if.end523 ], [ %plin.6, %for.inc558 ]
  %plix.0.lcssa = phi i32* [ %cond162619, %for.cond538.preheader ], [ %cond162619, %if.end523 ], [ %plix.1, %for.inc558 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond538.preheader ], [ %cond173, %if.end523 ], [ %plim.1, %for.inc558 ]
  %sub.ptr.lhs.cast561 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub563 = sub i64 %sub.ptr.lhs.cast561, %sub.ptr.rhs.cast562
  %sub.ptr.div564 = ashr exact i64 %sub.ptr.sub563, 2
  %conv565538 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast568 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %sub.ptr.div571 = ashr exact i64 %sub.ptr.sub570, 2
  %add566 = add i64 %sub.ptr.div571, %conv565538
  %add573 = add i64 %add566, %sub.ptr.div564
  %conv574 = trunc i64 %add573 to i32
  %sub.ptr.lhs.cast575 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %sub.ptr.div578540 = lshr exact i64 %sub.ptr.sub577, 2
  %conv579 = trunc i64 %sub.ptr.div578540 to i32
  %cmp581670 = icmp sgt i32 %conv579, 0
  br i1 %cmp581670, label %for.body582.lr.ph, label %for.end685

for.body582.lr.ph:                                ; preds = %for.end560
  %x663 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y672 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z679 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %119 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %120 = lshr i64 %119, 2
  %121 = trunc i64 %120 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.body582, %for.body582.lr.ph
  %indvars.iv796 = phi i64 [ 0, %for.body582.lr.ph ], [ %indvars.iv.next797, %for.body582 ]
  %122 = phi <2 x double> [ %61, %for.body582.lr.ph ], [ %151, %for.body582 ]
  %123 = phi <2 x double> [ %62, %for.body582.lr.ph ], [ %158, %for.body582 ]
  %124 = phi <2 x double> [ %63, %for.body582.lr.ph ], [ %145, %for.body582 ]
  %125 = phi <2 x double> [ %64, %for.body582.lr.ph ], [ %169, %for.body582 ]
  %arrayidx585 = getelementptr inbounds i32* %cond151611613, i64 %indvars.iv796
  %126 = load i32* %arrayidx585, align 4, !tbaa !11
  %idx.ext586 = sext i32 %126 to i64
  %x589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 0
  %127 = load double* %x589, align 8, !tbaa !59
  %sub590 = fsub double %70, %127
  %mul592 = fmul double %sub590, %sub590
  %y594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 1
  %128 = load double* %y594, align 8, !tbaa !61
  %sub595 = fsub double %71, %128
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %mul592, %mul596
  %z599 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 0, i32 2
  %129 = load double* %z599, align 8, !tbaa !62
  %sub600 = fsub double %72, %129
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %add597, %mul601
  %conv603 = fptrunc double %add602 to float
  %130 = bitcast float %conv603 to i32
  %shr = ashr i32 %130, 17
  %add605 = add nsw i32 %shr, %mul
  %mul606 = shl nsw i32 %add605, 4
  %idx.ext607 = sext i32 %mul606 to i64
  %add.ptr609.sum567 = or i64 %idx.ext607, 12
  %add.ptr610 = getelementptr inbounds double* %6, i64 %add.ptr609.sum567
  %131 = load double* %add.ptr610, align 8, !tbaa !17
  %and = and i32 %130, -131072
  %charge613 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 1
  %132 = load float* %charge613, align 4, !tbaa !63
  %conv614 = fpext float %132 to double
  %mul615 = fmul double %mul372, %conv614
  %133 = bitcast i32 %and to float
  %conv617 = fpext float %133 to double
  %sub618 = fsub double %add602, %conv617
  %partition619 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext586, i32 2
  %134 = bitcast [4 x i8]* %partition619 to i32*
  %bf.load620 = load i32* %134, align 4
  %bf.lshr621 = lshr i32 %bf.load620, 28
  %mul622 = shl nuw nsw i32 %bf.lshr621, 1
  %idxprom623568 = zext i32 %mul622 to i64
  %add.ptr368.sum569 = add i64 %idxprom623568, %idx.ext367536
  %arrayidx624 = getelementptr inbounds double* %95, i64 %add.ptr368.sum569
  %135 = load double* %arrayidx624, align 8, !tbaa !17
  %add626570 = or i32 %mul622, 1
  %idxprom627571 = zext i32 %add626570 to i64
  %add.ptr368.sum572 = add i64 %idxprom627571, %idx.ext367536
  %arrayidx628 = getelementptr inbounds double* %95, i64 %add.ptr368.sum572
  %136 = load double* %arrayidx628, align 8, !tbaa !17
  %add.ptr610.sum573 = or i64 %idx.ext607, 13
  %arrayidx629 = getelementptr inbounds double* %6, i64 %add.ptr610.sum573
  %137 = load double* %arrayidx629, align 8, !tbaa !17
  %add.ptr610.sum574 = or i64 %idx.ext607, 14
  %arrayidx630 = getelementptr inbounds double* %6, i64 %add.ptr610.sum574
  %138 = load double* %arrayidx630, align 8, !tbaa !17
  %add.ptr610.sum575 = or i64 %idx.ext607, 15
  %arrayidx631 = getelementptr inbounds double* %6, i64 %add.ptr610.sum575
  %139 = load double* %arrayidx631, align 8, !tbaa !17
  %mul632 = fmul double %mul615, %139
  %mul633 = fmul double %mul615, %138
  %mul634 = fmul double %mul615, %137
  %mul635 = fmul double %131, %mul615
  %mul636 = fmul double %sub618, %mul632
  %add637 = fadd double %mul633, %mul636
  %mul638 = fmul double %sub618, %add637
  %add639 = fadd double %mul634, %mul638
  %mul640 = fmul double %sub618, %add639
  %add641 = fadd double %mul635, %mul640
  %140 = insertelement <2 x double> undef, double %add641, i32 0
  %141 = insertelement <2 x double> %140, double %add641, i32 1
  %142 = insertelement <2 x double> undef, double %135, i32 0
  %143 = insertelement <2 x double> %142, double %136, i32 1
  %144 = fmul <2 x double> %141, %143
  %145 = fadd <2 x double> %124, %144
  %mul646 = fmul double %sub618, 3.000000e+00
  %mul647 = fmul double %mul632, %mul646
  %mul648 = fmul double %mul633, 2.000000e+00
  %add649 = fadd double %mul648, %mul647
  %mul650 = fmul double %sub618, %add649
  %add651 = fadd double %mul634, %mul650
  %mul652 = fmul double %add651, -2.000000e+00
  %mul653 = fmul double %135, %mul652
  %mul656 = fmul double %sub590, %mul653
  %146 = insertelement <2 x double> undef, double %sub590, i32 0
  %147 = insertelement <2 x double> %146, double %sub595, i32 1
  %148 = insertelement <2 x double> undef, double %mul656, i32 0
  %149 = insertelement <2 x double> %148, double %mul656, i32 1
  %150 = fmul <2 x double> %147, %149
  %151 = fadd <2 x double> %122, %150
  %152 = load double* %x663, align 8, !tbaa !72
  %add664 = fadd double %152, %mul656
  store double %add664, double* %x663, align 8, !tbaa !72
  %x665 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 0
  %mul667 = fmul double %sub595, %mul653
  %153 = insertelement <2 x double> undef, double %sub595, i32 0
  %154 = insertelement <2 x double> %153, double %sub600, i32 1
  %155 = insertelement <2 x double> undef, double %mul667, i32 0
  %156 = insertelement <2 x double> %155, double %mul667, i32 1
  %157 = fmul <2 x double> %154, %156
  %158 = fadd <2 x double> %123, %157
  %159 = load double* %y672, align 8, !tbaa !73
  %add673 = fadd double %159, %mul667
  store double %add673, double* %y672, align 8, !tbaa !73
  %160 = bitcast double* %x665 to <2 x double>*
  %161 = load <2 x double>* %160, align 8, !tbaa !17
  %162 = insertelement <2 x double> %148, double %mul667, i32 1
  %163 = fsub <2 x double> %161, %162
  %164 = bitcast double* %x665 to <2 x double>*
  store <2 x double> %163, <2 x double>* %164, align 8, !tbaa !17
  %mul676 = fmul double %sub600, %mul653
  %165 = insertelement <2 x double> undef, double %sub600, i32 0
  %166 = insertelement <2 x double> %165, double %sub600, i32 1
  %167 = insertelement <2 x double> %148, double %mul676, i32 1
  %168 = fmul <2 x double> %166, %167
  %169 = fadd <2 x double> %125, %168
  %170 = load double* %z679, align 8, !tbaa !74
  %add680 = fadd double %170, %mul676
  store double %add680, double* %z679, align 8, !tbaa !74
  %z681 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext586, i32 2
  %171 = load double* %z681, align 8, !tbaa !74
  %sub682 = fsub double %171, %mul676
  store double %sub682, double* %z681, align 8, !tbaa !74
  %indvars.iv.next797 = add nuw nsw i64 %indvars.iv796, 1
  %lftr.wideiv798 = trunc i64 %indvars.iv.next797 to i32
  %exitcond799 = icmp eq i32 %lftr.wideiv798, %121
  br i1 %exitcond799, label %for.end685, label %for.body582

for.end685:                                       ; preds = %for.body582, %for.end560
  %172 = phi <2 x double> [ %61, %for.end560 ], [ %151, %for.body582 ]
  %173 = phi <2 x double> [ %62, %for.end560 ], [ %158, %for.body582 ]
  %174 = phi <2 x double> [ %63, %for.end560 ], [ %145, %for.body582 ]
  %175 = phi <2 x double> [ %64, %for.end560 ], [ %169, %for.body582 ]
  %conv690 = trunc i64 %sub.ptr.div571 to i32
  %cmp692688 = icmp sgt i32 %conv690, 0
  br i1 %cmp692688, label %for.body693.lr.ph, label %for.end837

for.body693.lr.ph:                                ; preds = %for.end685
  %x813 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y823 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z831 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body693

for.body693:                                      ; preds = %for.body693, %for.body693.lr.ph
  %indvars.iv800 = phi i64 [ 0, %for.body693.lr.ph ], [ %indvars.iv.next801, %for.body693 ]
  %176 = phi <2 x double> [ %172, %for.body693.lr.ph ], [ %209, %for.body693 ]
  %177 = phi <2 x double> [ %173, %for.body693.lr.ph ], [ %216, %for.body693 ]
  %178 = phi <2 x double> [ %174, %for.body693.lr.ph ], [ %203, %for.body693 ]
  %179 = phi <2 x double> [ %175, %for.body693.lr.ph ], [ %227, %for.body693 ]
  %arrayidx696 = getelementptr inbounds i32* %cond173, i64 %indvars.iv800
  %180 = load i32* %arrayidx696, align 4, !tbaa !11
  %idx.ext698 = sext i32 %180 to i64
  %x702 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext698, i32 0, i32 0
  %181 = load double* %x702, align 8, !tbaa !59
  %sub703 = fsub double %70, %181
  %mul705 = fmul double %sub703, %sub703
  %y708 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext698, i32 0, i32 1
  %182 = load double* %y708, align 8, !tbaa !61
  %sub709 = fsub double %71, %182
  %mul710 = fmul double %sub709, %sub709
  %add711 = fadd double %mul705, %mul710
  %z714 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext698, i32 0, i32 2
  %183 = load double* %z714, align 8, !tbaa !62
  %sub715 = fsub double %72, %183
  %mul716 = fmul double %sub715, %sub715
  %add717 = fadd double %add711, %mul716
  %conv719 = fptrunc double %add717 to float
  %184 = bitcast float %conv719 to i32
  %shr723 = ashr i32 %184, 17
  %add724 = add nsw i32 %shr723, %mul
  %mul726 = shl nsw i32 %add724, 4
  %idx.ext727 = sext i32 %mul726 to i64
  %add.ptr729.sum554 = or i64 %idx.ext727, 12
  %add.ptr730 = getelementptr inbounds double* %6, i64 %add.ptr729.sum554
  %185 = load double* %add.ptr730, align 8, !tbaa !17
  %and734 = and i32 %184, -131072
  %charge736 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext698, i32 1
  %186 = load float* %charge736, align 4, !tbaa !63
  %conv737 = fpext float %186 to double
  %mul738 = fmul double %mul372, %conv737
  %187 = bitcast i32 %and734 to float
  %conv741 = fpext float %187 to double
  %sub742 = fsub double %add717, %conv741
  %partition744 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext698, i32 2
  %188 = bitcast [4 x i8]* %partition744 to i32*
  %bf.load745 = load i32* %188, align 4
  %bf.lshr746 = lshr i32 %bf.load745, 28
  %mul748 = shl nuw nsw i32 %bf.lshr746, 1
  %idxprom749555 = zext i32 %mul748 to i64
  %add.ptr368.sum556 = add i64 %idxprom749555, %idx.ext367536
  %arrayidx750 = getelementptr inbounds double* %95, i64 %add.ptr368.sum556
  %189 = load double* %arrayidx750, align 8, !tbaa !17
  %add753557 = or i32 %mul748, 1
  %idxprom754558 = zext i32 %add753557 to i64
  %add.ptr368.sum559 = add i64 %idxprom754558, %idx.ext367536
  %arrayidx755 = getelementptr inbounds double* %95, i64 %add.ptr368.sum559
  %190 = load double* %arrayidx755, align 8, !tbaa !17
  %add.ptr730.sum560 = or i64 %idx.ext727, 13
  %arrayidx757 = getelementptr inbounds double* %6, i64 %add.ptr730.sum560
  %191 = load double* %arrayidx757, align 8, !tbaa !17
  %add.ptr730.sum561 = or i64 %idx.ext727, 14
  %arrayidx759 = getelementptr inbounds double* %6, i64 %add.ptr730.sum561
  %192 = load double* %arrayidx759, align 8, !tbaa !17
  %add.ptr730.sum562 = or i64 %idx.ext727, 15
  %arrayidx761 = getelementptr inbounds double* %6, i64 %add.ptr730.sum562
  %193 = load double* %arrayidx761, align 8, !tbaa !17
  %mul762 = shl nsw i32 %add724, 2
  %idx.ext763 = sext i32 %mul762 to i64
  %add.ptr764 = getelementptr inbounds double* %7, i64 %idx.ext763
  %194 = load double* %add.ptr764, align 8, !tbaa !17
  %mul766 = fmul double %sub, %194
  %sub767 = fsub double %185, %mul766
  %add.ptr764.sum563 = or i64 %idx.ext763, 1
  %arrayidx768 = getelementptr inbounds double* %7, i64 %add.ptr764.sum563
  %195 = load double* %arrayidx768, align 8, !tbaa !17
  %mul769 = fmul double %sub, %195
  %sub770 = fsub double %191, %mul769
  %add.ptr764.sum564 = or i64 %idx.ext763, 2
  %arrayidx771 = getelementptr inbounds double* %7, i64 %add.ptr764.sum564
  %196 = load double* %arrayidx771, align 8, !tbaa !17
  %mul772 = fmul double %sub, %196
  %sub773 = fsub double %192, %mul772
  %add.ptr764.sum565 = or i64 %idx.ext763, 3
  %arrayidx774 = getelementptr inbounds double* %7, i64 %add.ptr764.sum565
  %197 = load double* %arrayidx774, align 8, !tbaa !17
  %mul775 = fmul double %sub, %197
  %sub776 = fsub double %193, %mul775
  %mul777 = fmul double %mul738, %sub776
  %mul778 = fmul double %mul738, %sub773
  %mul779 = fmul double %mul738, %sub770
  %mul780 = fmul double %mul738, %sub767
  %mul782 = fmul double %sub742, %mul777
  %add783 = fadd double %mul778, %mul782
  %mul784 = fmul double %sub742, %add783
  %add785 = fadd double %mul779, %mul784
  %mul786 = fmul double %sub742, %add785
  %add787 = fadd double %mul780, %mul786
  %198 = insertelement <2 x double> undef, double %add787, i32 0
  %199 = insertelement <2 x double> %198, double %add787, i32 1
  %200 = insertelement <2 x double> undef, double %189, i32 0
  %201 = insertelement <2 x double> %200, double %190, i32 1
  %202 = fmul <2 x double> %199, %201
  %203 = fadd <2 x double> %178, %202
  %mul793 = fmul double %sub742, 3.000000e+00
  %mul794 = fmul double %mul793, %mul777
  %mul795 = fmul double %mul778, 2.000000e+00
  %add796 = fadd double %mul795, %mul794
  %mul797 = fmul double %sub742, %add796
  %add798 = fadd double %mul779, %mul797
  %mul800 = fmul double %add798, -2.000000e+00
  %mul801 = fmul double %189, %mul800
  %mul806 = fmul double %sub703, %mul801
  %204 = insertelement <2 x double> undef, double %sub703, i32 0
  %205 = insertelement <2 x double> %204, double %sub709, i32 1
  %206 = insertelement <2 x double> undef, double %mul806, i32 0
  %207 = insertelement <2 x double> %206, double %mul806, i32 1
  %208 = fmul <2 x double> %205, %207
  %209 = fadd <2 x double> %176, %208
  %210 = load double* %x813, align 8, !tbaa !72
  %add814 = fadd double %210, %mul806
  store double %add814, double* %x813, align 8, !tbaa !72
  %x815 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext698, i32 0
  %mul818 = fmul double %sub709, %mul801
  %211 = insertelement <2 x double> undef, double %sub709, i32 0
  %212 = insertelement <2 x double> %211, double %sub715, i32 1
  %213 = insertelement <2 x double> undef, double %mul818, i32 0
  %214 = insertelement <2 x double> %213, double %mul818, i32 1
  %215 = fmul <2 x double> %212, %214
  %216 = fadd <2 x double> %177, %215
  %217 = load double* %y823, align 8, !tbaa !73
  %add824 = fadd double %217, %mul818
  store double %add824, double* %y823, align 8, !tbaa !73
  %218 = bitcast double* %x815 to <2 x double>*
  %219 = load <2 x double>* %218, align 8, !tbaa !17
  %220 = insertelement <2 x double> %206, double %mul818, i32 1
  %221 = fsub <2 x double> %219, %220
  %222 = bitcast double* %x815 to <2 x double>*
  store <2 x double> %221, <2 x double>* %222, align 8, !tbaa !17
  %mul828 = fmul double %sub715, %mul801
  %223 = insertelement <2 x double> undef, double %sub715, i32 0
  %224 = insertelement <2 x double> %223, double %sub715, i32 1
  %225 = insertelement <2 x double> %206, double %mul828, i32 1
  %226 = fmul <2 x double> %224, %225
  %227 = fadd <2 x double> %179, %226
  %228 = load double* %z831, align 8, !tbaa !74
  %add832 = fadd double %228, %mul828
  store double %add832, double* %z831, align 8, !tbaa !74
  %z833 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext698, i32 2
  %229 = load double* %z833, align 8, !tbaa !74
  %sub834 = fsub double %229, %mul828
  store double %sub834, double* %z833, align 8, !tbaa !74
  %indvars.iv.next801 = add nuw nsw i64 %indvars.iv800, 1
  %lftr.wideiv802 = trunc i64 %indvars.iv.next801 to i32
  %exitcond803 = icmp eq i32 %lftr.wideiv802, %conv690
  br i1 %exitcond803, label %for.end837, label %for.body693

for.end837:                                       ; preds = %for.body693, %for.end685
  %230 = phi <2 x double> [ %172, %for.end685 ], [ %209, %for.body693 ]
  %231 = phi <2 x double> [ %173, %for.end685 ], [ %216, %for.body693 ]
  %232 = phi <2 x double> [ %174, %for.end685 ], [ %203, %for.body693 ]
  %233 = phi <2 x double> [ %175, %for.end685 ], [ %227, %for.body693 ]
  %conv842 = trunc i64 %sub.ptr.div564 to i32
  %cmp844706 = icmp sgt i32 %conv842, 0
  br i1 %cmp844706, label %for.body845.lr.ph, label %for.inc987

for.body845.lr.ph:                                ; preds = %for.end837
  %x962 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y972 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z980 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body845

for.body845:                                      ; preds = %for.body845, %for.body845.lr.ph
  %indvars.iv804 = phi i64 [ 0, %for.body845.lr.ph ], [ %indvars.iv.next805, %for.body845 ]
  %234 = phi <2 x double> [ %230, %for.body845.lr.ph ], [ %267, %for.body845 ]
  %235 = phi <2 x double> [ %231, %for.body845.lr.ph ], [ %274, %for.body845 ]
  %236 = phi <2 x double> [ %232, %for.body845.lr.ph ], [ %261, %for.body845 ]
  %237 = phi <2 x double> [ %233, %for.body845.lr.ph ], [ %285, %for.body845 ]
  %arrayidx848 = getelementptr inbounds i32* %cond162619, i64 %indvars.iv804
  %238 = load i32* %arrayidx848, align 4, !tbaa !11
  %idx.ext850 = sext i32 %238 to i64
  %x854 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext850, i32 0, i32 0
  %239 = load double* %x854, align 8, !tbaa !59
  %sub855 = fsub double %70, %239
  %mul857 = fmul double %sub855, %sub855
  %y860 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext850, i32 0, i32 1
  %240 = load double* %y860, align 8, !tbaa !61
  %sub861 = fsub double %71, %240
  %mul862 = fmul double %sub861, %sub861
  %add863 = fadd double %mul857, %mul862
  %z866 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext850, i32 0, i32 2
  %241 = load double* %z866, align 8, !tbaa !62
  %sub867 = fsub double %72, %241
  %mul868 = fmul double %sub867, %sub867
  %add869 = fadd double %add863, %mul868
  %conv871 = fptrunc double %add869 to float
  %242 = bitcast float %conv871 to i32
  %shr875 = ashr i32 %242, 17
  %add876 = add nsw i32 %shr875, %mul
  %mul878 = shl nsw i32 %add876, 4
  %idx.ext879 = sext i32 %mul878 to i64
  %add.ptr881.sum542 = or i64 %idx.ext879, 12
  %add.ptr882 = getelementptr inbounds double* %6, i64 %add.ptr881.sum542
  %243 = load double* %add.ptr882, align 8, !tbaa !17
  %and886 = and i32 %242, -131072
  %charge888 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext850, i32 1
  %244 = load float* %charge888, align 4, !tbaa !63
  %conv889 = fpext float %244 to double
  %mul890 = fmul double %mul372, %conv889
  %245 = bitcast i32 %and886 to float
  %conv893 = fpext float %245 to double
  %sub894 = fsub double %add869, %conv893
  %partition896 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext850, i32 2
  %246 = bitcast [4 x i8]* %partition896 to i32*
  %bf.load897 = load i32* %246, align 4
  %bf.lshr898 = lshr i32 %bf.load897, 28
  %mul900 = shl nuw nsw i32 %bf.lshr898, 1
  %idxprom901543 = zext i32 %mul900 to i64
  %add.ptr368.sum = add i64 %idxprom901543, %idx.ext367536
  %arrayidx902 = getelementptr inbounds double* %95, i64 %add.ptr368.sum
  %247 = load double* %arrayidx902, align 8, !tbaa !17
  %add905544 = or i32 %mul900, 1
  %idxprom906545 = zext i32 %add905544 to i64
  %add.ptr368.sum546 = add i64 %idxprom906545, %idx.ext367536
  %arrayidx907 = getelementptr inbounds double* %95, i64 %add.ptr368.sum546
  %248 = load double* %arrayidx907, align 8, !tbaa !17
  %add.ptr882.sum547 = or i64 %idx.ext879, 13
  %arrayidx909 = getelementptr inbounds double* %6, i64 %add.ptr882.sum547
  %249 = load double* %arrayidx909, align 8, !tbaa !17
  %add.ptr882.sum548 = or i64 %idx.ext879, 14
  %arrayidx911 = getelementptr inbounds double* %6, i64 %add.ptr882.sum548
  %250 = load double* %arrayidx911, align 8, !tbaa !17
  %add.ptr882.sum549 = or i64 %idx.ext879, 15
  %arrayidx913 = getelementptr inbounds double* %6, i64 %add.ptr882.sum549
  %251 = load double* %arrayidx913, align 8, !tbaa !17
  %mul915 = shl nsw i32 %add876, 2
  %idx.ext916 = sext i32 %mul915 to i64
  %add.ptr917 = getelementptr inbounds double* %7, i64 %idx.ext916
  %252 = load double* %add.ptr917, align 8, !tbaa !17
  %sub919 = fsub double %243, %252
  %add.ptr917.sum550 = or i64 %idx.ext916, 1
  %arrayidx920 = getelementptr inbounds double* %7, i64 %add.ptr917.sum550
  %253 = load double* %arrayidx920, align 8, !tbaa !17
  %sub921 = fsub double %249, %253
  %add.ptr917.sum551 = or i64 %idx.ext916, 2
  %arrayidx922 = getelementptr inbounds double* %7, i64 %add.ptr917.sum551
  %254 = load double* %arrayidx922, align 8, !tbaa !17
  %sub923 = fsub double %250, %254
  %add.ptr917.sum552 = or i64 %idx.ext916, 3
  %arrayidx924 = getelementptr inbounds double* %7, i64 %add.ptr917.sum552
  %255 = load double* %arrayidx924, align 8, !tbaa !17
  %sub925 = fsub double %251, %255
  %mul926 = fmul double %mul890, %sub925
  %mul927 = fmul double %mul890, %sub923
  %mul928 = fmul double %mul890, %sub921
  %mul929 = fmul double %mul890, %sub919
  %mul931 = fmul double %sub894, %mul926
  %add932 = fadd double %mul927, %mul931
  %mul933 = fmul double %sub894, %add932
  %add934 = fadd double %mul928, %mul933
  %mul935 = fmul double %sub894, %add934
  %add936 = fadd double %mul929, %mul935
  %256 = insertelement <2 x double> undef, double %add936, i32 0
  %257 = insertelement <2 x double> %256, double %add936, i32 1
  %258 = insertelement <2 x double> undef, double %247, i32 0
  %259 = insertelement <2 x double> %258, double %248, i32 1
  %260 = fmul <2 x double> %257, %259
  %261 = fadd <2 x double> %236, %260
  %mul942 = fmul double %sub894, 3.000000e+00
  %mul943 = fmul double %mul942, %mul926
  %mul944 = fmul double %mul927, 2.000000e+00
  %add945 = fadd double %mul944, %mul943
  %mul946 = fmul double %sub894, %add945
  %add947 = fadd double %mul928, %mul946
  %mul949 = fmul double %add947, -2.000000e+00
  %mul950 = fmul double %247, %mul949
  %mul955 = fmul double %sub855, %mul950
  %262 = insertelement <2 x double> undef, double %sub855, i32 0
  %263 = insertelement <2 x double> %262, double %sub861, i32 1
  %264 = insertelement <2 x double> undef, double %mul955, i32 0
  %265 = insertelement <2 x double> %264, double %mul955, i32 1
  %266 = fmul <2 x double> %263, %265
  %267 = fadd <2 x double> %234, %266
  %268 = load double* %x962, align 8, !tbaa !72
  %add963 = fadd double %268, %mul955
  store double %add963, double* %x962, align 8, !tbaa !72
  %x964 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext850, i32 0
  %mul967 = fmul double %sub861, %mul950
  %269 = insertelement <2 x double> undef, double %sub861, i32 0
  %270 = insertelement <2 x double> %269, double %sub867, i32 1
  %271 = insertelement <2 x double> undef, double %mul967, i32 0
  %272 = insertelement <2 x double> %271, double %mul967, i32 1
  %273 = fmul <2 x double> %270, %272
  %274 = fadd <2 x double> %235, %273
  %275 = load double* %y972, align 8, !tbaa !73
  %add973 = fadd double %275, %mul967
  store double %add973, double* %y972, align 8, !tbaa !73
  %276 = bitcast double* %x964 to <2 x double>*
  %277 = load <2 x double>* %276, align 8, !tbaa !17
  %278 = insertelement <2 x double> %264, double %mul967, i32 1
  %279 = fsub <2 x double> %277, %278
  %280 = bitcast double* %x964 to <2 x double>*
  store <2 x double> %279, <2 x double>* %280, align 8, !tbaa !17
  %mul977 = fmul double %sub867, %mul950
  %281 = insertelement <2 x double> undef, double %sub867, i32 0
  %282 = insertelement <2 x double> %281, double %sub867, i32 1
  %283 = insertelement <2 x double> %264, double %mul977, i32 1
  %284 = fmul <2 x double> %282, %283
  %285 = fadd <2 x double> %237, %284
  %286 = load double* %z980, align 8, !tbaa !74
  %add981 = fadd double %286, %mul977
  store double %add981, double* %z980, align 8, !tbaa !74
  %z982 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext850, i32 2
  %287 = load double* %z982, align 8, !tbaa !74
  %sub983 = fsub double %287, %mul977
  store double %sub983, double* %z982, align 8, !tbaa !74
  %indvars.iv.next805 = add nuw nsw i64 %indvars.iv804, 1
  %lftr.wideiv806 = trunc i64 %indvars.iv.next805 to i32
  %exitcond807 = icmp eq i32 %lftr.wideiv806, %conv842
  br i1 %exitcond807, label %for.inc987, label %for.body845

for.inc987:                                       ; preds = %for.body845, %for.end837, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end837 ], [ %pairCount.2, %for.body845 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0728, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end837 ], [ %pairlistindex.1, %for.body845 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1729, %for.end837 ], [ %i.1729, %for.body845 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0746, %if.then221 ], [ %exclChecksum.0746, %cond.end349 ], [ %conv574, %for.end837 ], [ %conv574, %for.body845 ]
  %288 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %230, %for.end837 ], [ %267, %for.body845 ]
  %289 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %231, %for.end837 ], [ %274, %for.body845 ]
  %290 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %232, %for.end837 ], [ %261, %for.body845 ]
  %291 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %233, %for.end837 ], [ %285, %for.body845 ]
  %inc988 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc988, %12
  br i1 %cmp183, label %for.body184, label %for.end989

for.end989:                                       ; preds = %for.inc987, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc987 ]
  %292 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %288, %for.inc987 ]
  %293 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %289, %for.inc987 ]
  %294 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %290, %for.inc987 ]
  %295 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %291, %for.inc987 ]
  %296 = extractelement <2 x double> %295, i32 1
  %297 = extractelement <2 x double> %294, i32 1
  %298 = extractelement <2 x double> %294, i32 0
  %arraydecay990 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp991 = icmp eq i32* %cond593595823829, %arraydecay990
  br i1 %cmp991, label %if.end996, label %delete.notnull994

delete.notnull994:                                ; preds = %for.end989
  %299 = bitcast i32* %cond593595823829 to i8*
  call void @_ZdaPv(i8* %299) #7
  br label %if.end996

if.end996:                                        ; preds = %delete.notnull994, %for.end989
  %arraydecay997 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp998 = icmp eq i32* %cond19597821830, %arraydecay997
  br i1 %cmp998, label %if.end1003, label %delete.notnull1001

delete.notnull1001:                               ; preds = %if.end996
  %300 = bitcast i32* %cond19597821830 to i8*
  call void @_ZdaPv(i8* %300) #7
  br label %if.end1003

if.end1003:                                       ; preds = %delete.notnull1001, %if.end996
  %arraydecay1004 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1005 = icmp eq i32* %cond30825828, %arraydecay1004
  br i1 %cmp1005, label %if.end1010, label %delete.notnull1008

delete.notnull1008:                               ; preds = %if.end1003
  %301 = bitcast i32* %cond30825828 to i8*
  call void @_ZdaPv(i8* %301) #7
  br label %if.end1010

if.end1010:                                       ; preds = %delete.notnull1008, %if.end1003
  %arraydecay1011 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1012 = icmp eq i32* %cond129601603609615, %arraydecay1011
  br i1 %cmp1012, label %if.end1017, label %delete.notnull1015

delete.notnull1015:                               ; preds = %if.end1010
  %302 = bitcast i32* %cond129601603609615 to i8*
  call void @_ZdaPv(i8* %302) #7
  br label %if.end1017

if.end1017:                                       ; preds = %delete.notnull1015, %if.end1010
  %arraydecay1018 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1019 = icmp eq i32* %cond140605607617, %arraydecay1018
  br i1 %cmp1019, label %if.end1024, label %delete.notnull1022

delete.notnull1022:                               ; preds = %if.end1017
  %303 = bitcast i32* %cond140605607617 to i8*
  call void @_ZdaPv(i8* %303) #7
  br label %if.end1024

if.end1024:                                       ; preds = %delete.notnull1022, %if.end1017
  %arraydecay1025 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1026 = icmp eq i32* %cond151611613, %arraydecay1025
  br i1 %cmp1026, label %if.end1031, label %delete.notnull1029

delete.notnull1029:                               ; preds = %if.end1024
  %304 = bitcast i32* %cond151611613 to i8*
  call void @_ZdaPv(i8* %304) #7
  br label %if.end1031

if.end1031:                                       ; preds = %delete.notnull1029, %if.end1024
  %arraydecay1032 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1033 = icmp eq i32* %cond162619, %arraydecay1032
  br i1 %cmp1033, label %if.end1038, label %delete.notnull1036

delete.notnull1036:                               ; preds = %if.end1031
  %305 = bitcast i32* %cond162619 to i8*
  call void @_ZdaPv(i8* %305) #7
  br label %if.end1038

if.end1038:                                       ; preds = %delete.notnull1036, %if.end1031
  %arraydecay1039 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1040 = icmp eq i32* %cond173, %arraydecay1039
  br i1 %cmp1040, label %if.end1045, label %delete.notnull1043

delete.notnull1043:                               ; preds = %if.end1038
  %306 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %306) #7
  br label %if.end1045

if.end1045:                                       ; preds = %delete.notnull1043, %if.end1038
  %conv1046 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1047 = getelementptr inbounds double* %1, i64 22
  %307 = load double* %arrayidx1047, align 8, !tbaa !17
  %add1048 = fadd double %conv1046, %307
  store double %add1048, double* %arrayidx1047, align 8, !tbaa !17
  %arrayidx1049 = getelementptr inbounds double* %1, i64 1
  %308 = load double* %arrayidx1049, align 8, !tbaa !17
  %add1050 = fadd double %298, %308
  store double %add1050, double* %arrayidx1049, align 8, !tbaa !17
  %arrayidx1051 = getelementptr inbounds double* %1, i64 24
  %309 = load double* %arrayidx1051, align 8, !tbaa !17
  %add1052 = fadd double %297, %309
  store double %add1052, double* %arrayidx1051, align 8, !tbaa !17
  %arrayidx1053 = getelementptr inbounds double* %1, i64 12
  %310 = bitcast double* %arrayidx1053 to <2 x double>*
  %311 = load <2 x double>* %310, align 8, !tbaa !17
  %312 = fadd <2 x double> %292, %311
  %313 = bitcast double* %arrayidx1053 to <2 x double>*
  store <2 x double> %312, <2 x double>* %313, align 8, !tbaa !17
  %arrayidx1057 = getelementptr inbounds double* %1, i64 14
  %314 = bitcast double* %arrayidx1057 to <2 x double>*
  %315 = load <2 x double>* %314, align 8, !tbaa !17
  %316 = shufflevector <2 x double> %295, <2 x double> %292, <2 x i32> <i32 0, i32 3>
  %317 = fadd <2 x double> %316, %315
  %318 = bitcast double* %arrayidx1057 to <2 x double>*
  store <2 x double> %317, <2 x double>* %318, align 8, !tbaa !17
  %arrayidx1061 = getelementptr inbounds double* %1, i64 16
  %319 = bitcast double* %arrayidx1061 to <2 x double>*
  %320 = load <2 x double>* %319, align 8, !tbaa !17
  %321 = fadd <2 x double> %293, %320
  %322 = bitcast double* %arrayidx1061 to <2 x double>*
  store <2 x double> %321, <2 x double>* %322, align 8, !tbaa !17
  %arrayidx1065 = getelementptr inbounds double* %1, i64 18
  %323 = bitcast double* %arrayidx1065 to <2 x double>*
  %324 = load <2 x double>* %323, align 8, !tbaa !17
  %325 = shufflevector <2 x double> %295, <2 x double> %293, <2 x i32> <i32 0, i32 3>
  %326 = fadd <2 x double> %325, %324
  %327 = bitcast double* %arrayidx1065 to <2 x double>*
  store <2 x double> %326, <2 x double>* %327, align 8, !tbaa !17
  %arrayidx1069 = getelementptr inbounds double* %1, i64 20
  %328 = load double* %arrayidx1069, align 8, !tbaa !17
  %add1070 = fadd double %296, %328
  store double %add1070, double* %arrayidx1069, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1045, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil35calc_self_energy_slow_fullelect_fepEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31818 = icmp sgt i32 %13, 0
  br i1 %cmp31818, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30893 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond628630891 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19632889 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv881 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next882, %for.inc ]
  %g.0819 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv881, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0819, 1
  %idxprom41 = sext i32 %g.0819 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond628630891, i64 %idxprom41
  %30 = trunc i64 %indvars.iv881 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0819, %for.body ]
  %indvars.iv.next882 = add nuw nsw i64 %indvars.iv881, 1
  %lftr.wideiv883 = trunc i64 %indvars.iv.next882 to i32
  %exitcond884 = icmp eq i32 %lftr.wideiv883, %13
  br i1 %exitcond884, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond628630891, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond628630891, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa898 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19632888897 = phi i32* [ %cond19632889, %for.end ], [ %cond19632889, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond628630890896 = phi i32* [ %cond628630891, %for.end ], [ %cond628630891, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30892895 = phi i32* [ %cond30893, %for.end ], [ %cond30893, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56812 = icmp sgt i32 %g.0.lcssa898, 0
  br i1 %cmp56812, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv877 = phi i64 [ %indvars.iv.next878, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0814 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0813 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond628630890896, i64 %indvars.iv877
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0814, 1
  %idxprom68 = sext i32 %fixg.0814 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19632888897, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0813, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0814, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next878 = add nuw nsw i64 %indvars.iv877, 1
  %lftr.wideiv879 = trunc i64 %indvars.iv.next878 to i32
  %exitcond880 = icmp eq i32 %lftr.wideiv879, %g.0.lcssa898
  br i1 %exitcond880, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond628630890896, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond628630890896 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19632888897, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19632888897 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30892895, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30892895 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19632888897, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19632888897, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2635 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147654 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125640642652 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114636638644650 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136646648 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171786 = icmp sgt i32 %sub162, 0
  br i1 %cmp171786, label %for.body172.lr.ph, label %for.end1036

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast549 = ptrtoint i32* %cond125640642652 to i64
  %sub.ptr.rhs.cast609 = ptrtoint i32* %cond147654 to i64
  %sub.ptr.rhs.cast616 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30892895 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114636638644650 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1034, %for.body172.lr.ph
  %exclChecksum.0802 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1034 ]
  %i.0793 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1035, %for.inc1034 ]
  %j_hgroup.0792 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1034 ]
  %g_lower.0791 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1034 ]
  %fixg_lower.0790 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1034 ]
  %pairlistindex.0789 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1034 ]
  %pairlistoffset.0788 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1034 ]
  %pairCount.0787 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1034 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %306, %for.inc1034 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %307, %for.inc1034 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %308, %for.inc1034 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %309, %for.inc1034 ]
  %idxprom173 = sext i32 %i.0793 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %63 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %63, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i656 = zext i32 %bf.clear176 to i64
  %64 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i656, i32 0
  %65 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i656, i32 1
  %66 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i656, i32 2
  %67 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %65 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %68 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %69 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %70 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %71 = and i32 %bf.load175, 62914560
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0793
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0787
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0787, %div165
  %cmp214 = icmp slt i32 %pairCount.0787, %div168
  %or.cond622 = and i1 %cmp212, %cmp214
  br i1 %or.cond622, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0793
  br label %for.inc1034

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0787, %if.then193 ], [ %sub211, %if.then199 ]
  %73 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %73, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %74 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0793
  %cmp237658 = icmp slt i32 %g_lower.0791, %g.0.lcssa898
  br i1 %cmp237658, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %75 = sext i32 %g_lower.0791 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %76, %g.0.lcssa898
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %75, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1659 = phi i32 [ %g_lower.0791, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond628630890896, i64 %indvars.iv
  %77 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %77, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1659, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0791, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1659, %land.rhs238 ]
  %cmp245660 = icmp slt i32 %fixg_lower.0790, %fixg.2635
  br i1 %cmp245660, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %78 = sext i32 %fixg_lower.0790 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %79 = trunc i64 %indvars.iv.next827 to i32
  %cmp245 = icmp slt i32 %79, %fixg.2635
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv826 = phi i64 [ %78, %land.rhs246.lr.ph ], [ %indvars.iv.next827, %while.cond244 ]
  %fixg_lower.1661 = phi i32 [ %fixg_lower.0790, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19632888897, i64 %indvars.iv826
  %80 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %80, %add236
  %indvars.iv.next827 = add nsw i64 %indvars.iv826, 1
  %inc252 = add nsw i32 %fixg_lower.1661, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0790, %land.end ], [ %fixg_lower.0790, %while.cond244.loopexit ], [ %fixg_lower.1661, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0791, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0792, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1663 = add nsw i32 %i.0793, 1
  %cmp257664 = icmp slt i32 %j.1663, %j_hgroup.1
  br i1 %cmp257664, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %81 = add i32 %j_hgroup.1, -1
  %82 = sub i32 %81, %i.0793
  %83 = add i32 %j_hgroup.1, -2
  %84 = sub i32 %83, %i.0793
  %85 = zext i32 %84 to i64
  %86 = add i64 %85, 1
  %end.idx = add i64 %85, 1
  %n.vec = and i64 %86, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1663
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %87 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1663, %87
  %broadcast.splatinsert930 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat931 = shufflevector <4 x i32> %broadcast.splatinsert930, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction932 = add <4 x i32> %broadcast.splat931, <i32 0, i32 1, i32 2, i32 3>
  %induction933 = add <4 x i32> %broadcast.splat931, <i32 4, i32 5, i32 6, i32 7>
  %88 = getelementptr inbounds i32* %cond114636638644650, i64 %index
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %induction932, <4 x i32>* %89, align 4
  %.sum936 = or i64 %index, 4
  %90 = getelementptr i32* %cond114636638644650, i64 %.sum936
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %induction933, <4 x i32>* %91, align 4
  %index.next = add i64 %index, 8
  %92 = icmp eq i64 %index.next, %n.vec
  br i1 %92, label %middle.block, label %vector.body, !llvm.loop !81

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val928 = phi i32 [ %j.1663, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv828 = phi i64 [ %indvars.iv.next829, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1666 = phi i32 [ %j.1, %for.body258 ], [ %resume.val928, %middle.block ]
  %indvars.iv.next829 = add nuw nsw i64 %indvars.iv828, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114636638644650, i64 %indvars.iv828
  store i32 %j.1666, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1666, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next829 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %82
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !82

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %82 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114636638644650, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %74, i32* %cond19632888897, i32* %cond628630890896
  %cond276 = select i1 %74, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %74, i32 %fixg.2635, i32 %g.0.lcssa898
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %93 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %93 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %94 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %95 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %96 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_y.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_x.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %j2.0.ph = phi i32 [ %93, %if.then283 ], [ %99, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30892895, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %97 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv834 = phi i64 [ %97, %while.cond298.outer ], [ %indvars.iv.next835, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %98 = trunc i64 %indvars.iv834 to i32
  %cmp299 = icmp slt i32 %98, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next835 = add nsw i64 %indvars.iv834, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next835
  %99 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %68, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %99 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %100 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %69, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %101 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %70, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %102 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div619 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div619 to i32
  %cmp330672 = icmp sgt i32 %conv328, 0
  br i1 %cmp330672, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %103 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %104 = lshr i64 %103, 2
  %105 = trunc i64 %104 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv836 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next837, %cond.end351 ]
  %pli.0674 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30892895, i64 %indvars.iv836
  %106 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %106 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %107 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %107, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp620 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp620, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %106, i32* %pli.0674, align 4, !tbaa !11
  %add354 = add nsw i32 %106, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0674, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %106, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0674, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %106, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0674, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0674, i64 %cond352
  %indvars.iv.next837 = add nuw nsw i64 %indvars.iv836, 1
  %lftr.wideiv838 = trunc i64 %indvars.iv.next837 to i32
  %exitcond839 = icmp eq i32 %lftr.wideiv838, %105
  br i1 %exitcond839, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369615 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369615 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext616 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext616, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114636638644650, i64 %idxprom374
  %108 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114636638644650, i64 %idxprom376
  store i32 %108, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0788, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0787, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0789, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0790, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0791, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0792, %if.else ]
  %109 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %109, 0
  %bf.load389.pre = load i32* %63, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load389.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %110 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %111 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %bf.lshr390 = lshr i32 %bf.load389.pre, 28
  %mul391 = mul nsw i32 %bf.lshr390, 6
  %idx.ext392572 = zext i32 %mul391 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %112 = load float* %charge, align 4, !tbaa !63
  %conv394 = fpext float %112 to double
  %mul395 = fmul double %conv394, 3.320636e+02
  %mul396 = fmul double %8, %mul395
  %mul397 = fmul double %4, %mul396
  %cmp408700 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %110, label %for.cond407.preheader, label %if.else468

for.cond407.preheader:                            ; preds = %land.end387
  br i1 %cmp408700, label %for.body409.lr.ph, label %if.end547

for.body409.lr.ph:                                ; preds = %for.cond407.preheader
  %113 = sext i32 %pairlistoffset.1 to i64
  br label %for.body409

for.body409:                                      ; preds = %for.inc465, %for.body409.lr.ph
  %indvars.iv849 = phi i64 [ %113, %for.body409.lr.ph ], [ %indvars.iv.next850, %for.inc465 ]
  %exclChecksum.1704 = phi i32 [ %exclChecksum.0802, %for.body409.lr.ph ], [ %exclChecksum.3, %for.inc465 ]
  %pli404.0703 = phi i32* [ %cond125640642652, %for.body409.lr.ph ], [ %pli404.1, %for.inc465 ]
  %plin.0702 = phi i32* [ %cond136646648, %for.body409.lr.ph ], [ %plin.1, %for.inc465 ]
  %arrayidx411 = getelementptr inbounds i32* %cond114636638644650, i64 %indvars.iv849
  %114 = load i32* %arrayidx411, align 4, !tbaa !11
  %idxprom413 = sext i32 %114 to i64
  %x416 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 0
  %115 = load double* %x416, align 8, !tbaa !59
  %sub418 = fsub double %68, %115
  %mul419 = fmul double %sub418, %sub418
  %y424 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 1
  %116 = load double* %y424, align 8, !tbaa !61
  %sub426 = fsub double %69, %116
  %mul427 = fmul double %sub426, %sub426
  %add428 = fadd double %mul419, %mul427
  %z433 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 0, i32 2
  %117 = load double* %z433, align 8, !tbaa !62
  %sub434 = fsub double %70, %117
  %mul435 = fmul double %sub434, %sub434
  %add436 = fadd double %add428, %mul435
  %atomFixed439 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom413, i32 2
  %118 = bitcast [4 x i8]* %atomFixed439 to i32*
  %bf.load440 = load i32* %118, align 4
  %bf.clear442 = and i32 %bf.load440, 67108864
  %tobool443 = icmp ne i32 %bf.clear442, 0
  %cmp444 = fcmp ugt double %add436, %2
  %or.cond623 = or i1 %tobool443, %cmp444
  br i1 %or.cond623, label %for.inc465, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %for.body409
  %cmp446 = fcmp ugt double %add436, %10
  br i1 %cmp446, label %if.then450, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %land.lhs.true445
  %inc448 = add nsw i32 %exclChecksum.1704, 1
  %tobool449 = icmp eq i32 %inc448, 0
  br i1 %tobool449, label %if.then450, label %for.inc465

if.then450:                                       ; preds = %land.lhs.true447, %land.lhs.true445
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true447 ], [ %exclChecksum.1704, %land.lhs.true445 ]
  %bf.clear455 = and i32 %bf.load440, 4194303
  %cmp456 = icmp slt i32 %bf.clear455, %65
  %cmp458 = icmp sgt i32 %bf.clear455, %66
  %or.cond624 = or i1 %cmp456, %cmp458
  br i1 %or.cond624, label %if.else461, label %if.then459

if.then459:                                       ; preds = %if.then450
  %incdec.ptr460 = getelementptr inbounds i32* %pli404.0703, i64 1
  store i32 %114, i32* %pli404.0703, align 4, !tbaa !11
  br label %for.inc465

if.else461:                                       ; preds = %if.then450
  %incdec.ptr462 = getelementptr inbounds i32* %plin.0702, i64 1
  store i32 %114, i32* %plin.0702, align 4, !tbaa !11
  br label %for.inc465

for.inc465:                                       ; preds = %if.else461, %if.then459, %land.lhs.true447, %for.body409
  %plin.1 = phi i32* [ %plin.0702, %for.body409 ], [ %plin.0702, %land.lhs.true447 ], [ %plin.0702, %if.then459 ], [ %incdec.ptr462, %if.else461 ]
  %pli404.1 = phi i32* [ %pli404.0703, %for.body409 ], [ %pli404.0703, %land.lhs.true447 ], [ %incdec.ptr460, %if.then459 ], [ %pli404.0703, %if.else461 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1704, %for.body409 ], [ %inc448, %land.lhs.true447 ], [ %exclChecksum.2, %if.then459 ], [ %exclChecksum.2, %if.else461 ]
  %indvars.iv.next850 = add nsw i64 %indvars.iv849, 1
  %lftr.wideiv851 = trunc i64 %indvars.iv.next850 to i32
  %exitcond852 = icmp eq i32 %lftr.wideiv851, %pairlistindex.2
  br i1 %exitcond852, label %if.end547, label %for.body409

if.else468:                                       ; preds = %land.end387
  br i1 %cmp408700, label %if.then471, label %if.end547

if.then471:                                       ; preds = %if.else468
  %idxprom473 = sext i32 %pairlistoffset.1 to i64
  %arrayidx474 = getelementptr inbounds i32* %cond114636638644650, i64 %idxprom473
  %119 = load i32* %arrayidx474, align 4, !tbaa !11
  %idxprom476 = sext i32 %119 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %120 = load double* %x479, align 8, !tbaa !59
  %y484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %121 = load double* %y484, align 8, !tbaa !61
  %z489 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %122 = load double* %z489, align 8, !tbaa !62
  br label %while.cond496.outer

while.cond496.outer:                              ; preds = %if.else536, %if.then471
  %idxprom476.pn.ph = phi i64 [ %idxprom476, %if.then471 ], [ %idxprom505, %if.else536 ]
  %p_j_z485.0.ph = phi double [ %122, %if.then471 ], [ %128, %if.else536 ]
  %p_j_y480.0.ph = phi double [ %121, %if.then471 ], [ %127, %if.else536 ]
  %p_j_x475.0.ph = phi double [ %120, %if.then471 ], [ %126, %if.else536 ]
  %j2472.0.ph = phi i32 [ %119, %if.then471 ], [ %125, %if.else536 ]
  %k469.0.ph = phi i32 [ %pairlistoffset.1, %if.then471 ], [ %inc499, %if.else536 ]
  %plin.2.ph = phi i32* [ %cond136646648, %if.then471 ], [ %incdec.ptr537, %if.else536 ]
  %pli404.2.ph = phi i32* [ %cond125640642652, %if.then471 ], [ %pli404.2.ph683, %if.else536 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0802, %if.then471 ], [ %exclChecksum.5, %if.else536 ]
  br label %while.cond496.outer676

while.cond496.outer676:                           ; preds = %if.then534, %while.cond496.outer
  %idxprom476.pn.ph677 = phi i64 [ %idxprom505, %if.then534 ], [ %idxprom476.pn.ph, %while.cond496.outer ]
  %p_j_z485.0.ph678 = phi double [ %128, %if.then534 ], [ %p_j_z485.0.ph, %while.cond496.outer ]
  %p_j_y480.0.ph679 = phi double [ %127, %if.then534 ], [ %p_j_y480.0.ph, %while.cond496.outer ]
  %p_j_x475.0.ph680 = phi double [ %126, %if.then534 ], [ %p_j_x475.0.ph, %while.cond496.outer ]
  %j2472.0.ph681 = phi i32 [ %125, %if.then534 ], [ %j2472.0.ph, %while.cond496.outer ]
  %k469.0.ph682 = phi i32 [ %inc499, %if.then534 ], [ %k469.0.ph, %while.cond496.outer ]
  %pli404.2.ph683 = phi i32* [ %incdec.ptr535, %if.then534 ], [ %pli404.2.ph, %while.cond496.outer ]
  %exclChecksum.4.ph684 = phi i32 [ %exclChecksum.5, %if.then534 ], [ %exclChecksum.4.ph, %while.cond496.outer ]
  br label %while.cond496.outer685

while.cond496.outer685:                           ; preds = %land.lhs.true527, %while.cond496.outer676
  %idxprom476.pn.ph686 = phi i64 [ %idxprom505, %land.lhs.true527 ], [ %idxprom476.pn.ph677, %while.cond496.outer676 ]
  %p_j_z485.0.ph687 = phi double [ %128, %land.lhs.true527 ], [ %p_j_z485.0.ph678, %while.cond496.outer676 ]
  %p_j_y480.0.ph688 = phi double [ %127, %land.lhs.true527 ], [ %p_j_y480.0.ph679, %while.cond496.outer676 ]
  %p_j_x475.0.ph689 = phi double [ %126, %land.lhs.true527 ], [ %p_j_x475.0.ph680, %while.cond496.outer676 ]
  %j2472.0.ph690 = phi i32 [ %125, %land.lhs.true527 ], [ %j2472.0.ph681, %while.cond496.outer676 ]
  %k469.0.ph691 = phi i32 [ %inc499, %land.lhs.true527 ], [ %k469.0.ph682, %while.cond496.outer676 ]
  %exclChecksum.4.ph692 = phi i32 [ %inc528, %land.lhs.true527 ], [ %exclChecksum.4.ph684, %while.cond496.outer676 ]
  %123 = sext i32 %k469.0.ph691 to i64
  br label %while.cond496

while.cond496:                                    ; preds = %while.body498, %while.cond496.outer685
  %indvars.iv845 = phi i64 [ %123, %while.cond496.outer685 ], [ %indvars.iv.next846, %while.body498 ]
  %idxprom476.pn = phi i64 [ %idxprom476.pn.ph686, %while.cond496.outer685 ], [ %idxprom505, %while.body498 ]
  %p_j_z485.0 = phi double [ %p_j_z485.0.ph687, %while.cond496.outer685 ], [ %128, %while.body498 ]
  %p_j_y480.0 = phi double [ %p_j_y480.0.ph688, %while.cond496.outer685 ], [ %127, %while.body498 ]
  %p_j_x475.0 = phi double [ %p_j_x475.0.ph689, %while.cond496.outer685 ], [ %126, %while.body498 ]
  %j2472.0 = phi i32 [ %j2472.0.ph690, %while.cond496.outer685 ], [ %125, %while.body498 ]
  %k469.0 = phi i32 [ %k469.0.ph691, %while.cond496.outer685 ], [ %inc499, %while.body498 ]
  %124 = trunc i64 %indvars.iv845 to i32
  %cmp497 = icmp slt i32 %124, %pairlistindex.2
  br i1 %cmp497, label %while.body498, label %if.end547

while.body498:                                    ; preds = %while.cond496
  %atom2490.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476.pn, i32 2
  %atom2490.0.in.in = bitcast [4 x i8]* %atom2490.0.in.in.in to i32*
  %atom2490.0.in = load i32* %atom2490.0.in.in, align 4
  %atom2490.0 = and i32 %atom2490.0.in, 4194303
  %indvars.iv.next846 = add nsw i64 %indvars.iv845, 1
  %inc499 = add nsw i32 %k469.0, 1
  %arrayidx501 = getelementptr inbounds i32* %cond114636638644650, i64 %indvars.iv.next846
  %125 = load i32* %arrayidx501, align 4, !tbaa !11
  %sub503 = fsub double %68, %p_j_x475.0
  %mul504 = fmul double %sub503, %sub503
  %idxprom505 = sext i32 %125 to i64
  %x508 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 0
  %126 = load double* %x508, align 8, !tbaa !59
  %sub510 = fsub double %69, %p_j_y480.0
  %mul511 = fmul double %sub510, %sub510
  %add512 = fadd double %mul511, %mul504
  %y516 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 1
  %127 = load double* %y516, align 8, !tbaa !61
  %sub517 = fsub double %70, %p_j_z485.0
  %mul518 = fmul double %sub517, %sub517
  %add519 = fadd double %mul518, %add512
  %z523 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom505, i32 0, i32 2
  %128 = load double* %z523, align 8, !tbaa !62
  %cmp524 = fcmp ugt double %add519, %2
  br i1 %cmp524, label %while.cond496, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %while.body498
  %cmp526 = fcmp ugt double %add519, %10
  br i1 %cmp526, label %if.then530, label %land.lhs.true527

land.lhs.true527:                                 ; preds = %land.lhs.true525
  %inc528 = add nsw i32 %exclChecksum.4.ph692, 1
  %tobool529 = icmp eq i32 %inc528, 0
  br i1 %tobool529, label %if.then530, label %while.cond496.outer685

if.then530:                                       ; preds = %land.lhs.true527, %land.lhs.true525
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true527 ], [ %exclChecksum.4.ph692, %land.lhs.true525 ]
  %cmp531 = icmp slt i32 %atom2490.0, %65
  %cmp533 = icmp sgt i32 %atom2490.0, %66
  %or.cond625 = or i1 %cmp531, %cmp533
  br i1 %or.cond625, label %if.else536, label %if.then534

if.then534:                                       ; preds = %if.then530
  %incdec.ptr535 = getelementptr inbounds i32* %pli404.2.ph683, i64 1
  store i32 %j2472.0, i32* %pli404.2.ph683, align 4, !tbaa !11
  br label %while.cond496.outer676

if.else536:                                       ; preds = %if.then530
  %incdec.ptr537 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2472.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond496.outer

if.end547:                                        ; preds = %while.cond496, %if.else468, %for.inc465, %for.cond407.preheader
  %plin.4 = phi i32* [ %cond136646648, %if.else468 ], [ %cond136646648, %for.cond407.preheader ], [ %plin.2.ph, %while.cond496 ], [ %plin.1, %for.inc465 ]
  %pli404.4 = phi i32* [ %cond125640642652, %if.else468 ], [ %cond125640642652, %for.cond407.preheader ], [ %pli404.2.ph683, %while.cond496 ], [ %pli404.1, %for.inc465 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0802, %if.else468 ], [ %exclChecksum.0802, %for.cond407.preheader ], [ %exclChecksum.4.ph692, %while.cond496 ], [ %exclChecksum.3, %for.inc465 ]
  %sub.ptr.lhs.cast548 = ptrtoint i32* %pli404.4 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %sub.ptr.div551573 = lshr exact i64 %sub.ptr.sub550, 2
  %conv552 = trunc i64 %sub.ptr.div551573 to i32
  %tobool553 = icmp eq i32 %conv552, 0
  br i1 %tobool553, label %for.cond562.preheader, label %if.then554

if.then554:                                       ; preds = %if.end547
  %sub555 = shl i64 %sub.ptr.sub550, 30
  %sext613 = add i64 %sub555, -4294967296
  %idxprom556 = ashr exact i64 %sext613, 32
  %arrayidx557 = getelementptr inbounds i32* %cond125640642652, i64 %idxprom556
  %129 = load i32* %arrayidx557, align 4, !tbaa !11
  %idxprom558 = ashr exact i64 %sub555, 32
  %arrayidx559 = getelementptr inbounds i32* %cond125640642652, i64 %idxprom558
  store i32 %129, i32* %arrayidx559, align 4, !tbaa !11
  br label %for.cond562.preheader

for.cond562.preheader:                            ; preds = %if.then554, %if.end547
  %cmp563708 = icmp ult i32* %cond136646648, %plin.4
  br i1 %cmp563708, label %land.lhs.true564, label %for.cond571.loopexit

land.lhs.true564:                                 ; preds = %for.body566, %for.cond562.preheader
  %exclChecksum.8711 = phi i32 [ %dec, %for.body566 ], [ %exclChecksum.7, %for.cond562.preheader ]
  %plix.0710 = phi i32* [ %incdec.ptr567, %for.body566 ], [ %cond147654, %for.cond562.preheader ]
  %pln.0709 = phi i32* [ %incdec.ptr569, %for.body566 ], [ %cond136646648, %for.cond562.preheader ]
  %130 = load i32* %pln.0709, align 4, !tbaa !11
  %cmp565 = icmp slt i32 %130, %j_hgroup.2
  br i1 %cmp565, label %for.body566, label %for.cond571.loopexit

for.body566:                                      ; preds = %land.lhs.true564
  %incdec.ptr567 = getelementptr inbounds i32* %plix.0710, i64 1
  store i32 %130, i32* %plix.0710, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8711, -1
  %incdec.ptr569 = getelementptr inbounds i32* %pln.0709, i64 1
  %cmp563 = icmp ult i32* %incdec.ptr569, %plin.4
  br i1 %cmp563, label %land.lhs.true564, label %for.cond571.loopexit

for.cond571.loopexit:                             ; preds = %for.body566, %land.lhs.true564, %for.cond562.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond562.preheader ], [ %dec, %for.body566 ], [ %exclChecksum.8711, %land.lhs.true564 ]
  %plix.0.lcssa = phi i32* [ %cond147654, %for.cond562.preheader ], [ %incdec.ptr567, %for.body566 ], [ %plix.0710, %land.lhs.true564 ]
  %pln.0.lcssa = phi i32* [ %cond136646648, %for.cond562.preheader ], [ %incdec.ptr569, %for.body566 ], [ %pln.0709, %land.lhs.true564 ]
  %cmp572715 = icmp sgt i32 %conv552, 0
  br i1 %cmp572715, label %land.lhs.true573, label %for.cond585.loopexit

land.lhs.true573:                                 ; preds = %for.body577, %for.cond571.loopexit
  %indvars.iv859 = phi i64 [ %indvars.iv.next860, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %exclChecksum.9718 = phi i32 [ %dec581, %for.body577 ], [ %exclChecksum.8.lcssa, %for.cond571.loopexit ]
  %plix.1717 = phi i32* [ %incdec.ptr580, %for.body577 ], [ %plix.0.lcssa, %for.cond571.loopexit ]
  %k561.0716 = phi i32 [ %inc583, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %arrayidx575 = getelementptr inbounds i32* %cond125640642652, i64 %indvars.iv859
  %131 = load i32* %arrayidx575, align 4, !tbaa !11
  %cmp576 = icmp slt i32 %131, %j_hgroup.2
  br i1 %cmp576, label %for.body577, label %for.cond585.loopexit

for.body577:                                      ; preds = %land.lhs.true573
  %incdec.ptr580 = getelementptr inbounds i32* %plix.1717, i64 1
  store i32 %131, i32* %plix.1717, align 4, !tbaa !11
  %dec581 = add nsw i32 %exclChecksum.9718, -1
  %indvars.iv.next860 = add nuw nsw i64 %indvars.iv859, 1
  %inc583 = add nsw i32 %k561.0716, 1
  %132 = trunc i64 %indvars.iv.next860 to i32
  %cmp572 = icmp slt i32 %132, %conv552
  br i1 %cmp572, label %land.lhs.true573, label %for.cond585.loopexit

for.cond585.loopexit:                             ; preds = %for.body577, %land.lhs.true573, %for.cond571.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond571.loopexit ], [ %dec581, %for.body577 ], [ %exclChecksum.9718, %land.lhs.true573 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond571.loopexit ], [ %incdec.ptr580, %for.body577 ], [ %plix.1717, %land.lhs.true573 ]
  %k561.0.lcssa = phi i32 [ 0, %for.cond571.loopexit ], [ %inc583, %for.body577 ], [ %k561.0716, %land.lhs.true573 ]
  %cmp586722 = icmp slt i32 %k561.0.lcssa, %conv552
  br i1 %cmp586722, label %for.body587.lr.ph, label %for.end607

for.body587.lr.ph:                                ; preds = %for.cond585.loopexit
  %133 = sext i32 %k561.0.lcssa to i64
  %134 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %135 = lshr i64 %134, 2
  %136 = trunc i64 %135 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.inc605, %for.body587.lr.ph
  %indvars.iv861 = phi i64 [ %133, %for.body587.lr.ph ], [ %indvars.iv.next862, %for.inc605 ]
  %plin.5726 = phi i32* [ %plin.4, %for.body587.lr.ph ], [ %plin.6, %for.inc605 ]
  %plix.2725 = phi i32* [ %plix.1.lcssa, %for.body587.lr.ph ], [ %plix.3, %for.inc605 ]
  %plim.0724 = phi i32* [ %cond158, %for.body587.lr.ph ], [ %plim.1, %for.inc605 ]
  %arrayidx590 = getelementptr inbounds i32* %cond125640642652, i64 %indvars.iv861
  %137 = load i32* %arrayidx590, align 4, !tbaa !11
  %idxprom592 = sext i32 %137 to i64
  %id594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom592, i32 2
  %138 = bitcast [4 x i8]* %id594 to i32*
  %bf.load595 = load i32* %138, align 4
  %bf.clear596 = and i32 %bf.load595, 4194303
  %idxprom597612 = zext i32 %bf.clear596 to i64
  %add.ptr.sum = sub i64 %idxprom597612, %idx.ext
  %arrayidx598 = getelementptr inbounds i8* %67, i64 %add.ptr.sum
  %139 = load i8* %arrayidx598, align 1, !tbaa !68
  %conv599 = sext i8 %139 to i32
  switch i32 %conv599, label %for.inc605 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb601
    i32 2, label %sw.bb603
  ]

sw.bb:                                            ; preds = %for.body587
  %incdec.ptr600 = getelementptr inbounds i32* %plin.5726, i64 1
  store i32 %137, i32* %plin.5726, align 4, !tbaa !11
  br label %for.inc605

sw.bb601:                                         ; preds = %for.body587
  %incdec.ptr602 = getelementptr inbounds i32* %plix.2725, i64 1
  store i32 %137, i32* %plix.2725, align 4, !tbaa !11
  br label %for.inc605

sw.bb603:                                         ; preds = %for.body587
  %incdec.ptr604 = getelementptr inbounds i32* %plim.0724, i64 1
  store i32 %137, i32* %plim.0724, align 4, !tbaa !11
  br label %for.inc605

for.inc605:                                       ; preds = %sw.bb603, %sw.bb601, %sw.bb, %for.body587
  %plim.1 = phi i32* [ %plim.0724, %for.body587 ], [ %incdec.ptr604, %sw.bb603 ], [ %plim.0724, %sw.bb601 ], [ %plim.0724, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2725, %for.body587 ], [ %plix.2725, %sw.bb603 ], [ %incdec.ptr602, %sw.bb601 ], [ %plix.2725, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5726, %for.body587 ], [ %plin.5726, %sw.bb603 ], [ %plin.5726, %sw.bb601 ], [ %incdec.ptr600, %sw.bb ]
  %indvars.iv.next862 = add nsw i64 %indvars.iv861, 1
  %lftr.wideiv863 = trunc i64 %indvars.iv.next862 to i32
  %exitcond864 = icmp eq i32 %lftr.wideiv863, %136
  br i1 %exitcond864, label %for.end607, label %for.body587

for.end607:                                       ; preds = %for.inc605, %for.cond585.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond585.loopexit ], [ %plin.6, %for.inc605 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond585.loopexit ], [ %plix.3, %for.inc605 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond585.loopexit ], [ %plim.1, %for.inc605 ]
  %sub.ptr.lhs.cast608 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub610 = sub i64 %sub.ptr.lhs.cast608, %sub.ptr.rhs.cast609
  %sub.ptr.div611 = ashr exact i64 %sub.ptr.sub610, 2
  %conv612574 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast615 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub617 = sub i64 %sub.ptr.lhs.cast615, %sub.ptr.rhs.cast616
  %sub.ptr.div618 = ashr exact i64 %sub.ptr.sub617, 2
  %add613 = add i64 %sub.ptr.div618, %conv612574
  %add620 = add i64 %add613, %sub.ptr.div611
  %conv621 = trunc i64 %add620 to i32
  %sub.ptr.lhs.cast622 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast623 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub624 = sub i64 %sub.ptr.lhs.cast622, %sub.ptr.rhs.cast623
  %sub.ptr.div625576 = lshr exact i64 %sub.ptr.sub624, 2
  %conv626 = trunc i64 %sub.ptr.div625576 to i32
  %cmp628730 = icmp sgt i32 %conv626, 0
  br i1 %cmp628730, label %for.body629.lr.ph, label %for.end732

for.body629.lr.ph:                                ; preds = %for.end607
  %x710 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y719 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z726 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body629

for.body629:                                      ; preds = %for.body629, %for.body629.lr.ph
  %indvars.iv865 = phi i64 [ 0, %for.body629.lr.ph ], [ %indvars.iv.next866, %for.body629 ]
  %140 = phi <2 x double> [ %59, %for.body629.lr.ph ], [ %169, %for.body629 ]
  %141 = phi <2 x double> [ %60, %for.body629.lr.ph ], [ %176, %for.body629 ]
  %142 = phi <2 x double> [ %61, %for.body629.lr.ph ], [ %163, %for.body629 ]
  %143 = phi <2 x double> [ %62, %for.body629.lr.ph ], [ %187, %for.body629 ]
  %arrayidx632 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv865
  %144 = load i32* %arrayidx632, align 4, !tbaa !11
  %idx.ext633 = sext i32 %144 to i64
  %x636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 0
  %145 = load double* %x636, align 8, !tbaa !59
  %sub637 = fsub double %68, %145
  %mul639 = fmul double %sub637, %sub637
  %y641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 1
  %146 = load double* %y641, align 8, !tbaa !61
  %sub642 = fsub double %69, %146
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %mul639, %mul643
  %z646 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 0, i32 2
  %147 = load double* %z646, align 8, !tbaa !62
  %sub647 = fsub double %70, %147
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %add644, %mul648
  %conv650 = fptrunc double %add649 to float
  %148 = bitcast float %conv650 to i32
  %shr = ashr i32 %148, 17
  %add652 = add nsw i32 %shr, %mul
  %mul653 = shl nsw i32 %add652, 4
  %idx.ext654 = sext i32 %mul653 to i64
  %add.ptr656.sum603 = or i64 %idx.ext654, 12
  %add.ptr657 = getelementptr inbounds double* %6, i64 %add.ptr656.sum603
  %149 = load double* %add.ptr657, align 8, !tbaa !17
  %and = and i32 %148, -131072
  %charge660 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 1
  %150 = load float* %charge660, align 4, !tbaa !63
  %conv661 = fpext float %150 to double
  %mul662 = fmul double %mul397, %conv661
  %151 = bitcast i32 %and to float
  %conv664 = fpext float %151 to double
  %sub665 = fsub double %add649, %conv664
  %partition666 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext633, i32 2
  %152 = bitcast [4 x i8]* %partition666 to i32*
  %bf.load667 = load i32* %152, align 4
  %bf.lshr668 = lshr i32 %bf.load667, 28
  %mul669 = shl nuw nsw i32 %bf.lshr668, 1
  %idxprom670604 = zext i32 %mul669 to i64
  %add.ptr393.sum605 = add i64 %idxprom670604, %idx.ext392572
  %arrayidx671 = getelementptr inbounds double* %111, i64 %add.ptr393.sum605
  %153 = load double* %arrayidx671, align 8, !tbaa !17
  %add673606 = or i32 %mul669, 1
  %idxprom674607 = zext i32 %add673606 to i64
  %add.ptr393.sum608 = add i64 %idxprom674607, %idx.ext392572
  %arrayidx675 = getelementptr inbounds double* %111, i64 %add.ptr393.sum608
  %154 = load double* %arrayidx675, align 8, !tbaa !17
  %add.ptr657.sum609 = or i64 %idx.ext654, 13
  %arrayidx676 = getelementptr inbounds double* %6, i64 %add.ptr657.sum609
  %155 = load double* %arrayidx676, align 8, !tbaa !17
  %add.ptr657.sum610 = or i64 %idx.ext654, 14
  %arrayidx677 = getelementptr inbounds double* %6, i64 %add.ptr657.sum610
  %156 = load double* %arrayidx677, align 8, !tbaa !17
  %add.ptr657.sum611 = or i64 %idx.ext654, 15
  %arrayidx678 = getelementptr inbounds double* %6, i64 %add.ptr657.sum611
  %157 = load double* %arrayidx678, align 8, !tbaa !17
  %mul679 = fmul double %mul662, %157
  %mul680 = fmul double %mul662, %156
  %mul681 = fmul double %mul662, %155
  %mul682 = fmul double %149, %mul662
  %mul683 = fmul double %sub665, %mul679
  %add684 = fadd double %mul680, %mul683
  %mul685 = fmul double %sub665, %add684
  %add686 = fadd double %mul681, %mul685
  %mul687 = fmul double %sub665, %add686
  %add688 = fadd double %mul682, %mul687
  %158 = insertelement <2 x double> undef, double %add688, i32 0
  %159 = insertelement <2 x double> %158, double %add688, i32 1
  %160 = insertelement <2 x double> undef, double %153, i32 0
  %161 = insertelement <2 x double> %160, double %154, i32 1
  %162 = fmul <2 x double> %159, %161
  %163 = fadd <2 x double> %142, %162
  %mul693 = fmul double %sub665, 3.000000e+00
  %mul694 = fmul double %mul679, %mul693
  %mul695 = fmul double %mul680, 2.000000e+00
  %add696 = fadd double %mul695, %mul694
  %mul697 = fmul double %sub665, %add696
  %add698 = fadd double %mul681, %mul697
  %mul699 = fmul double %add698, -2.000000e+00
  %mul700 = fmul double %153, %mul699
  %mul703 = fmul double %sub637, %mul700
  %164 = insertelement <2 x double> undef, double %sub637, i32 0
  %165 = insertelement <2 x double> %164, double %sub642, i32 1
  %166 = insertelement <2 x double> undef, double %mul703, i32 0
  %167 = insertelement <2 x double> %166, double %mul703, i32 1
  %168 = fmul <2 x double> %165, %167
  %169 = fadd <2 x double> %140, %168
  %170 = load double* %x710, align 8, !tbaa !72
  %add711 = fadd double %170, %mul703
  store double %add711, double* %x710, align 8, !tbaa !72
  %x712 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 0
  %mul714 = fmul double %sub642, %mul700
  %171 = insertelement <2 x double> undef, double %sub642, i32 0
  %172 = insertelement <2 x double> %171, double %sub647, i32 1
  %173 = insertelement <2 x double> undef, double %mul714, i32 0
  %174 = insertelement <2 x double> %173, double %mul714, i32 1
  %175 = fmul <2 x double> %172, %174
  %176 = fadd <2 x double> %141, %175
  %177 = load double* %y719, align 8, !tbaa !73
  %add720 = fadd double %177, %mul714
  store double %add720, double* %y719, align 8, !tbaa !73
  %178 = bitcast double* %x712 to <2 x double>*
  %179 = load <2 x double>* %178, align 8, !tbaa !17
  %180 = insertelement <2 x double> %166, double %mul714, i32 1
  %181 = fsub <2 x double> %179, %180
  %182 = bitcast double* %x712 to <2 x double>*
  store <2 x double> %181, <2 x double>* %182, align 8, !tbaa !17
  %mul723 = fmul double %sub647, %mul700
  %183 = insertelement <2 x double> undef, double %sub647, i32 0
  %184 = insertelement <2 x double> %183, double %sub647, i32 1
  %185 = insertelement <2 x double> %166, double %mul723, i32 1
  %186 = fmul <2 x double> %184, %185
  %187 = fadd <2 x double> %143, %186
  %188 = load double* %z726, align 8, !tbaa !74
  %add727 = fadd double %188, %mul723
  store double %add727, double* %z726, align 8, !tbaa !74
  %z728 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext633, i32 2
  %189 = load double* %z728, align 8, !tbaa !74
  %sub729 = fsub double %189, %mul723
  store double %sub729, double* %z728, align 8, !tbaa !74
  %indvars.iv.next866 = add nuw nsw i64 %indvars.iv865, 1
  %lftr.wideiv867 = trunc i64 %indvars.iv.next866 to i32
  %exitcond868 = icmp eq i32 %lftr.wideiv867, %conv626
  br i1 %exitcond868, label %for.end732, label %for.body629

for.end732:                                       ; preds = %for.body629, %for.end607
  %190 = phi <2 x double> [ %59, %for.end607 ], [ %169, %for.body629 ]
  %191 = phi <2 x double> [ %60, %for.end607 ], [ %176, %for.body629 ]
  %192 = phi <2 x double> [ %61, %for.end607 ], [ %163, %for.body629 ]
  %193 = phi <2 x double> [ %62, %for.end607 ], [ %187, %for.body629 ]
  %conv737 = trunc i64 %sub.ptr.div618 to i32
  %cmp739748 = icmp sgt i32 %conv737, 0
  br i1 %cmp739748, label %for.body740.lr.ph, label %for.end884

for.body740.lr.ph:                                ; preds = %for.end732
  %x860 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y870 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z878 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body740

for.body740:                                      ; preds = %for.body740, %for.body740.lr.ph
  %indvars.iv869 = phi i64 [ 0, %for.body740.lr.ph ], [ %indvars.iv.next870, %for.body740 ]
  %194 = phi <2 x double> [ %190, %for.body740.lr.ph ], [ %227, %for.body740 ]
  %195 = phi <2 x double> [ %191, %for.body740.lr.ph ], [ %234, %for.body740 ]
  %196 = phi <2 x double> [ %192, %for.body740.lr.ph ], [ %221, %for.body740 ]
  %197 = phi <2 x double> [ %193, %for.body740.lr.ph ], [ %245, %for.body740 ]
  %arrayidx743 = getelementptr inbounds i32* %cond158, i64 %indvars.iv869
  %198 = load i32* %arrayidx743, align 4, !tbaa !11
  %idx.ext745 = sext i32 %198 to i64
  %x749 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext745, i32 0, i32 0
  %199 = load double* %x749, align 8, !tbaa !59
  %sub750 = fsub double %68, %199
  %mul752 = fmul double %sub750, %sub750
  %y755 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext745, i32 0, i32 1
  %200 = load double* %y755, align 8, !tbaa !61
  %sub756 = fsub double %69, %200
  %mul757 = fmul double %sub756, %sub756
  %add758 = fadd double %mul752, %mul757
  %z761 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext745, i32 0, i32 2
  %201 = load double* %z761, align 8, !tbaa !62
  %sub762 = fsub double %70, %201
  %mul763 = fmul double %sub762, %sub762
  %add764 = fadd double %add758, %mul763
  %conv766 = fptrunc double %add764 to float
  %202 = bitcast float %conv766 to i32
  %shr770 = ashr i32 %202, 17
  %add771 = add nsw i32 %shr770, %mul
  %mul773 = shl nsw i32 %add771, 4
  %idx.ext774 = sext i32 %mul773 to i64
  %add.ptr776.sum590 = or i64 %idx.ext774, 12
  %add.ptr777 = getelementptr inbounds double* %6, i64 %add.ptr776.sum590
  %203 = load double* %add.ptr777, align 8, !tbaa !17
  %and781 = and i32 %202, -131072
  %charge783 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext745, i32 1
  %204 = load float* %charge783, align 4, !tbaa !63
  %conv784 = fpext float %204 to double
  %mul785 = fmul double %mul397, %conv784
  %205 = bitcast i32 %and781 to float
  %conv788 = fpext float %205 to double
  %sub789 = fsub double %add764, %conv788
  %partition791 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext745, i32 2
  %206 = bitcast [4 x i8]* %partition791 to i32*
  %bf.load792 = load i32* %206, align 4
  %bf.lshr793 = lshr i32 %bf.load792, 28
  %mul795 = shl nuw nsw i32 %bf.lshr793, 1
  %idxprom796591 = zext i32 %mul795 to i64
  %add.ptr393.sum592 = add i64 %idxprom796591, %idx.ext392572
  %arrayidx797 = getelementptr inbounds double* %111, i64 %add.ptr393.sum592
  %207 = load double* %arrayidx797, align 8, !tbaa !17
  %add800593 = or i32 %mul795, 1
  %idxprom801594 = zext i32 %add800593 to i64
  %add.ptr393.sum595 = add i64 %idxprom801594, %idx.ext392572
  %arrayidx802 = getelementptr inbounds double* %111, i64 %add.ptr393.sum595
  %208 = load double* %arrayidx802, align 8, !tbaa !17
  %add.ptr777.sum596 = or i64 %idx.ext774, 13
  %arrayidx804 = getelementptr inbounds double* %6, i64 %add.ptr777.sum596
  %209 = load double* %arrayidx804, align 8, !tbaa !17
  %add.ptr777.sum597 = or i64 %idx.ext774, 14
  %arrayidx806 = getelementptr inbounds double* %6, i64 %add.ptr777.sum597
  %210 = load double* %arrayidx806, align 8, !tbaa !17
  %add.ptr777.sum598 = or i64 %idx.ext774, 15
  %arrayidx808 = getelementptr inbounds double* %6, i64 %add.ptr777.sum598
  %211 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = shl nsw i32 %add771, 2
  %idx.ext810 = sext i32 %mul809 to i64
  %add.ptr811 = getelementptr inbounds double* %7, i64 %idx.ext810
  %212 = load double* %add.ptr811, align 8, !tbaa !17
  %mul813 = fmul double %sub, %212
  %sub814 = fsub double %203, %mul813
  %add.ptr811.sum599 = or i64 %idx.ext810, 1
  %arrayidx815 = getelementptr inbounds double* %7, i64 %add.ptr811.sum599
  %213 = load double* %arrayidx815, align 8, !tbaa !17
  %mul816 = fmul double %sub, %213
  %sub817 = fsub double %209, %mul816
  %add.ptr811.sum600 = or i64 %idx.ext810, 2
  %arrayidx818 = getelementptr inbounds double* %7, i64 %add.ptr811.sum600
  %214 = load double* %arrayidx818, align 8, !tbaa !17
  %mul819 = fmul double %sub, %214
  %sub820 = fsub double %210, %mul819
  %add.ptr811.sum601 = or i64 %idx.ext810, 3
  %arrayidx821 = getelementptr inbounds double* %7, i64 %add.ptr811.sum601
  %215 = load double* %arrayidx821, align 8, !tbaa !17
  %mul822 = fmul double %sub, %215
  %sub823 = fsub double %211, %mul822
  %mul824 = fmul double %mul785, %sub823
  %mul825 = fmul double %mul785, %sub820
  %mul826 = fmul double %mul785, %sub817
  %mul827 = fmul double %mul785, %sub814
  %mul829 = fmul double %sub789, %mul824
  %add830 = fadd double %mul825, %mul829
  %mul831 = fmul double %sub789, %add830
  %add832 = fadd double %mul826, %mul831
  %mul833 = fmul double %sub789, %add832
  %add834 = fadd double %mul827, %mul833
  %216 = insertelement <2 x double> undef, double %add834, i32 0
  %217 = insertelement <2 x double> %216, double %add834, i32 1
  %218 = insertelement <2 x double> undef, double %207, i32 0
  %219 = insertelement <2 x double> %218, double %208, i32 1
  %220 = fmul <2 x double> %217, %219
  %221 = fadd <2 x double> %196, %220
  %mul840 = fmul double %sub789, 3.000000e+00
  %mul841 = fmul double %mul840, %mul824
  %mul842 = fmul double %mul825, 2.000000e+00
  %add843 = fadd double %mul842, %mul841
  %mul844 = fmul double %sub789, %add843
  %add845 = fadd double %mul826, %mul844
  %mul847 = fmul double %add845, -2.000000e+00
  %mul848 = fmul double %207, %mul847
  %mul853 = fmul double %sub750, %mul848
  %222 = insertelement <2 x double> undef, double %sub750, i32 0
  %223 = insertelement <2 x double> %222, double %sub756, i32 1
  %224 = insertelement <2 x double> undef, double %mul853, i32 0
  %225 = insertelement <2 x double> %224, double %mul853, i32 1
  %226 = fmul <2 x double> %223, %225
  %227 = fadd <2 x double> %194, %226
  %228 = load double* %x860, align 8, !tbaa !72
  %add861 = fadd double %228, %mul853
  store double %add861, double* %x860, align 8, !tbaa !72
  %x862 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext745, i32 0
  %mul865 = fmul double %sub756, %mul848
  %229 = insertelement <2 x double> undef, double %sub756, i32 0
  %230 = insertelement <2 x double> %229, double %sub762, i32 1
  %231 = insertelement <2 x double> undef, double %mul865, i32 0
  %232 = insertelement <2 x double> %231, double %mul865, i32 1
  %233 = fmul <2 x double> %230, %232
  %234 = fadd <2 x double> %195, %233
  %235 = load double* %y870, align 8, !tbaa !73
  %add871 = fadd double %235, %mul865
  store double %add871, double* %y870, align 8, !tbaa !73
  %236 = bitcast double* %x862 to <2 x double>*
  %237 = load <2 x double>* %236, align 8, !tbaa !17
  %238 = insertelement <2 x double> %224, double %mul865, i32 1
  %239 = fsub <2 x double> %237, %238
  %240 = bitcast double* %x862 to <2 x double>*
  store <2 x double> %239, <2 x double>* %240, align 8, !tbaa !17
  %mul875 = fmul double %sub762, %mul848
  %241 = insertelement <2 x double> undef, double %sub762, i32 0
  %242 = insertelement <2 x double> %241, double %sub762, i32 1
  %243 = insertelement <2 x double> %224, double %mul875, i32 1
  %244 = fmul <2 x double> %242, %243
  %245 = fadd <2 x double> %197, %244
  %246 = load double* %z878, align 8, !tbaa !74
  %add879 = fadd double %246, %mul875
  store double %add879, double* %z878, align 8, !tbaa !74
  %z880 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext745, i32 2
  %247 = load double* %z880, align 8, !tbaa !74
  %sub881 = fsub double %247, %mul875
  store double %sub881, double* %z880, align 8, !tbaa !74
  %indvars.iv.next870 = add nuw nsw i64 %indvars.iv869, 1
  %lftr.wideiv871 = trunc i64 %indvars.iv.next870 to i32
  %exitcond872 = icmp eq i32 %lftr.wideiv871, %conv737
  br i1 %exitcond872, label %for.end884, label %for.body740

for.end884:                                       ; preds = %for.body740, %for.end732
  %248 = phi <2 x double> [ %190, %for.end732 ], [ %227, %for.body740 ]
  %249 = phi <2 x double> [ %191, %for.end732 ], [ %234, %for.body740 ]
  %250 = phi <2 x double> [ %192, %for.end732 ], [ %221, %for.body740 ]
  %251 = phi <2 x double> [ %193, %for.end732 ], [ %245, %for.body740 ]
  %conv889 = trunc i64 %sub.ptr.div611 to i32
  %cmp891766 = icmp sgt i32 %conv889, 0
  br i1 %cmp891766, label %for.body892.lr.ph, label %for.inc1034

for.body892.lr.ph:                                ; preds = %for.end884
  %x1009 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1019 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1027 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body892

for.body892:                                      ; preds = %for.body892, %for.body892.lr.ph
  %indvars.iv873 = phi i64 [ 0, %for.body892.lr.ph ], [ %indvars.iv.next874, %for.body892 ]
  %252 = phi <2 x double> [ %248, %for.body892.lr.ph ], [ %285, %for.body892 ]
  %253 = phi <2 x double> [ %249, %for.body892.lr.ph ], [ %292, %for.body892 ]
  %254 = phi <2 x double> [ %250, %for.body892.lr.ph ], [ %279, %for.body892 ]
  %255 = phi <2 x double> [ %251, %for.body892.lr.ph ], [ %303, %for.body892 ]
  %arrayidx895 = getelementptr inbounds i32* %cond147654, i64 %indvars.iv873
  %256 = load i32* %arrayidx895, align 4, !tbaa !11
  %idx.ext897 = sext i32 %256 to i64
  %x901 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext897, i32 0, i32 0
  %257 = load double* %x901, align 8, !tbaa !59
  %sub902 = fsub double %68, %257
  %mul904 = fmul double %sub902, %sub902
  %y907 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext897, i32 0, i32 1
  %258 = load double* %y907, align 8, !tbaa !61
  %sub908 = fsub double %69, %258
  %mul909 = fmul double %sub908, %sub908
  %add910 = fadd double %mul904, %mul909
  %z913 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext897, i32 0, i32 2
  %259 = load double* %z913, align 8, !tbaa !62
  %sub914 = fsub double %70, %259
  %mul915 = fmul double %sub914, %sub914
  %add916 = fadd double %add910, %mul915
  %conv918 = fptrunc double %add916 to float
  %260 = bitcast float %conv918 to i32
  %shr922 = ashr i32 %260, 17
  %add923 = add nsw i32 %shr922, %mul
  %mul925 = shl nsw i32 %add923, 4
  %idx.ext926 = sext i32 %mul925 to i64
  %add.ptr928.sum578 = or i64 %idx.ext926, 12
  %add.ptr929 = getelementptr inbounds double* %6, i64 %add.ptr928.sum578
  %261 = load double* %add.ptr929, align 8, !tbaa !17
  %and933 = and i32 %260, -131072
  %charge935 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext897, i32 1
  %262 = load float* %charge935, align 4, !tbaa !63
  %conv936 = fpext float %262 to double
  %mul937 = fmul double %mul397, %conv936
  %263 = bitcast i32 %and933 to float
  %conv940 = fpext float %263 to double
  %sub941 = fsub double %add916, %conv940
  %partition943 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext897, i32 2
  %264 = bitcast [4 x i8]* %partition943 to i32*
  %bf.load944 = load i32* %264, align 4
  %bf.lshr945 = lshr i32 %bf.load944, 28
  %mul947 = shl nuw nsw i32 %bf.lshr945, 1
  %idxprom948579 = zext i32 %mul947 to i64
  %add.ptr393.sum = add i64 %idxprom948579, %idx.ext392572
  %arrayidx949 = getelementptr inbounds double* %111, i64 %add.ptr393.sum
  %265 = load double* %arrayidx949, align 8, !tbaa !17
  %add952580 = or i32 %mul947, 1
  %idxprom953581 = zext i32 %add952580 to i64
  %add.ptr393.sum582 = add i64 %idxprom953581, %idx.ext392572
  %arrayidx954 = getelementptr inbounds double* %111, i64 %add.ptr393.sum582
  %266 = load double* %arrayidx954, align 8, !tbaa !17
  %add.ptr929.sum583 = or i64 %idx.ext926, 13
  %arrayidx956 = getelementptr inbounds double* %6, i64 %add.ptr929.sum583
  %267 = load double* %arrayidx956, align 8, !tbaa !17
  %add.ptr929.sum584 = or i64 %idx.ext926, 14
  %arrayidx958 = getelementptr inbounds double* %6, i64 %add.ptr929.sum584
  %268 = load double* %arrayidx958, align 8, !tbaa !17
  %add.ptr929.sum585 = or i64 %idx.ext926, 15
  %arrayidx960 = getelementptr inbounds double* %6, i64 %add.ptr929.sum585
  %269 = load double* %arrayidx960, align 8, !tbaa !17
  %mul962 = shl nsw i32 %add923, 2
  %idx.ext963 = sext i32 %mul962 to i64
  %add.ptr964 = getelementptr inbounds double* %7, i64 %idx.ext963
  %270 = load double* %add.ptr964, align 8, !tbaa !17
  %sub966 = fsub double %261, %270
  %add.ptr964.sum586 = or i64 %idx.ext963, 1
  %arrayidx967 = getelementptr inbounds double* %7, i64 %add.ptr964.sum586
  %271 = load double* %arrayidx967, align 8, !tbaa !17
  %sub968 = fsub double %267, %271
  %add.ptr964.sum587 = or i64 %idx.ext963, 2
  %arrayidx969 = getelementptr inbounds double* %7, i64 %add.ptr964.sum587
  %272 = load double* %arrayidx969, align 8, !tbaa !17
  %sub970 = fsub double %268, %272
  %add.ptr964.sum588 = or i64 %idx.ext963, 3
  %arrayidx971 = getelementptr inbounds double* %7, i64 %add.ptr964.sum588
  %273 = load double* %arrayidx971, align 8, !tbaa !17
  %sub972 = fsub double %269, %273
  %mul973 = fmul double %mul937, %sub972
  %mul974 = fmul double %mul937, %sub970
  %mul975 = fmul double %mul937, %sub968
  %mul976 = fmul double %mul937, %sub966
  %mul978 = fmul double %sub941, %mul973
  %add979 = fadd double %mul974, %mul978
  %mul980 = fmul double %sub941, %add979
  %add981 = fadd double %mul975, %mul980
  %mul982 = fmul double %sub941, %add981
  %add983 = fadd double %mul976, %mul982
  %274 = insertelement <2 x double> undef, double %add983, i32 0
  %275 = insertelement <2 x double> %274, double %add983, i32 1
  %276 = insertelement <2 x double> undef, double %265, i32 0
  %277 = insertelement <2 x double> %276, double %266, i32 1
  %278 = fmul <2 x double> %275, %277
  %279 = fadd <2 x double> %254, %278
  %mul989 = fmul double %sub941, 3.000000e+00
  %mul990 = fmul double %mul989, %mul973
  %mul991 = fmul double %mul974, 2.000000e+00
  %add992 = fadd double %mul991, %mul990
  %mul993 = fmul double %sub941, %add992
  %add994 = fadd double %mul975, %mul993
  %mul996 = fmul double %add994, -2.000000e+00
  %mul997 = fmul double %265, %mul996
  %mul1002 = fmul double %sub902, %mul997
  %280 = insertelement <2 x double> undef, double %sub902, i32 0
  %281 = insertelement <2 x double> %280, double %sub908, i32 1
  %282 = insertelement <2 x double> undef, double %mul1002, i32 0
  %283 = insertelement <2 x double> %282, double %mul1002, i32 1
  %284 = fmul <2 x double> %281, %283
  %285 = fadd <2 x double> %252, %284
  %286 = load double* %x1009, align 8, !tbaa !72
  %add1010 = fadd double %286, %mul1002
  store double %add1010, double* %x1009, align 8, !tbaa !72
  %x1011 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext897, i32 0
  %mul1014 = fmul double %sub908, %mul997
  %287 = insertelement <2 x double> undef, double %sub908, i32 0
  %288 = insertelement <2 x double> %287, double %sub914, i32 1
  %289 = insertelement <2 x double> undef, double %mul1014, i32 0
  %290 = insertelement <2 x double> %289, double %mul1014, i32 1
  %291 = fmul <2 x double> %288, %290
  %292 = fadd <2 x double> %253, %291
  %293 = load double* %y1019, align 8, !tbaa !73
  %add1020 = fadd double %293, %mul1014
  store double %add1020, double* %y1019, align 8, !tbaa !73
  %294 = bitcast double* %x1011 to <2 x double>*
  %295 = load <2 x double>* %294, align 8, !tbaa !17
  %296 = insertelement <2 x double> %282, double %mul1014, i32 1
  %297 = fsub <2 x double> %295, %296
  %298 = bitcast double* %x1011 to <2 x double>*
  store <2 x double> %297, <2 x double>* %298, align 8, !tbaa !17
  %mul1024 = fmul double %sub914, %mul997
  %299 = insertelement <2 x double> undef, double %sub914, i32 0
  %300 = insertelement <2 x double> %299, double %sub914, i32 1
  %301 = insertelement <2 x double> %282, double %mul1024, i32 1
  %302 = fmul <2 x double> %300, %301
  %303 = fadd <2 x double> %255, %302
  %304 = load double* %z1027, align 8, !tbaa !74
  %add1028 = fadd double %304, %mul1024
  store double %add1028, double* %z1027, align 8, !tbaa !74
  %z1029 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext897, i32 2
  %305 = load double* %z1029, align 8, !tbaa !74
  %sub1030 = fsub double %305, %mul1024
  store double %sub1030, double* %z1029, align 8, !tbaa !74
  %indvars.iv.next874 = add nuw nsw i64 %indvars.iv873, 1
  %lftr.wideiv875 = trunc i64 %indvars.iv.next874 to i32
  %exitcond876 = icmp eq i32 %lftr.wideiv875, %conv889
  br i1 %exitcond876, label %for.inc1034, label %for.body892

for.inc1034:                                      ; preds = %for.body892, %for.end884, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end884 ], [ %pairCount.2, %for.body892 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0788, %if.then215 ], [ %pairlistoffset.1, %for.end884 ], [ %pairlistoffset.1, %for.body892 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0789, %if.then215 ], [ %pairlistindex.2, %for.end884 ], [ %pairlistindex.2, %for.body892 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0790, %if.then215 ], [ %fixg_lower.3, %for.end884 ], [ %fixg_lower.3, %for.body892 ]
  %g_lower.4 = phi i32 [ %g_lower.0791, %if.then215 ], [ %g_lower.3, %for.end884 ], [ %g_lower.3, %for.body892 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0792, %if.then215 ], [ %j_hgroup.2, %for.end884 ], [ %j_hgroup.2, %for.body892 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0793, %for.end884 ], [ %i.0793, %for.body892 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0802, %if.then215 ], [ %conv621, %for.end884 ], [ %conv621, %for.body892 ]
  %306 = phi <2 x double> [ %59, %if.then215 ], [ %248, %for.end884 ], [ %285, %for.body892 ]
  %307 = phi <2 x double> [ %60, %if.then215 ], [ %249, %for.end884 ], [ %292, %for.body892 ]
  %308 = phi <2 x double> [ %61, %if.then215 ], [ %250, %for.end884 ], [ %279, %for.body892 ]
  %309 = phi <2 x double> [ %62, %if.then215 ], [ %251, %for.end884 ], [ %303, %for.body892 ]
  %inc1035 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1035
  br i1 %cmp171, label %for.body172, label %for.end1036

for.end1036:                                      ; preds = %for.inc1034, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1034 ]
  %310 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %306, %for.inc1034 ]
  %311 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %307, %for.inc1034 ]
  %312 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %308, %for.inc1034 ]
  %313 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %309, %for.inc1034 ]
  %314 = extractelement <2 x double> %313, i32 1
  %315 = extractelement <2 x double> %312, i32 1
  %316 = extractelement <2 x double> %312, i32 0
  %arraydecay1037 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1038 = icmp eq i32* %cond628630890896, %arraydecay1037
  br i1 %cmp1038, label %if.end1043, label %delete.notnull1041

delete.notnull1041:                               ; preds = %for.end1036
  %317 = bitcast i32* %cond628630890896 to i8*
  call void @_ZdaPv(i8* %317) #7
  br label %if.end1043

if.end1043:                                       ; preds = %delete.notnull1041, %for.end1036
  %arraydecay1044 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1045 = icmp eq i32* %cond19632888897, %arraydecay1044
  br i1 %cmp1045, label %if.end1050, label %delete.notnull1048

delete.notnull1048:                               ; preds = %if.end1043
  %318 = bitcast i32* %cond19632888897 to i8*
  call void @_ZdaPv(i8* %318) #7
  br label %if.end1050

if.end1050:                                       ; preds = %delete.notnull1048, %if.end1043
  %arraydecay1051 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1052 = icmp eq i32* %cond30892895, %arraydecay1051
  br i1 %cmp1052, label %if.end1057, label %delete.notnull1055

delete.notnull1055:                               ; preds = %if.end1050
  %319 = bitcast i32* %cond30892895 to i8*
  call void @_ZdaPv(i8* %319) #7
  br label %if.end1057

if.end1057:                                       ; preds = %delete.notnull1055, %if.end1050
  %arraydecay1058 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1059 = icmp eq i32* %cond114636638644650, %arraydecay1058
  br i1 %cmp1059, label %if.end1064, label %delete.notnull1062

delete.notnull1062:                               ; preds = %if.end1057
  %320 = bitcast i32* %cond114636638644650 to i8*
  call void @_ZdaPv(i8* %320) #7
  br label %if.end1064

if.end1064:                                       ; preds = %delete.notnull1062, %if.end1057
  %arraydecay1065 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1066 = icmp eq i32* %cond125640642652, %arraydecay1065
  br i1 %cmp1066, label %if.end1071, label %delete.notnull1069

delete.notnull1069:                               ; preds = %if.end1064
  %321 = bitcast i32* %cond125640642652 to i8*
  call void @_ZdaPv(i8* %321) #7
  br label %if.end1071

if.end1071:                                       ; preds = %delete.notnull1069, %if.end1064
  %arraydecay1072 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1073 = icmp eq i32* %cond136646648, %arraydecay1072
  br i1 %cmp1073, label %if.end1078, label %delete.notnull1076

delete.notnull1076:                               ; preds = %if.end1071
  %322 = bitcast i32* %cond136646648 to i8*
  call void @_ZdaPv(i8* %322) #7
  br label %if.end1078

if.end1078:                                       ; preds = %delete.notnull1076, %if.end1071
  %arraydecay1079 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1080 = icmp eq i32* %cond147654, %arraydecay1079
  br i1 %cmp1080, label %if.end1085, label %delete.notnull1083

delete.notnull1083:                               ; preds = %if.end1078
  %323 = bitcast i32* %cond147654 to i8*
  call void @_ZdaPv(i8* %323) #7
  br label %if.end1085

if.end1085:                                       ; preds = %delete.notnull1083, %if.end1078
  %arraydecay1086 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1087 = icmp eq i32* %cond158, %arraydecay1086
  br i1 %cmp1087, label %if.end1092, label %delete.notnull1090

delete.notnull1090:                               ; preds = %if.end1085
  %324 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %324) #7
  br label %if.end1092

if.end1092:                                       ; preds = %delete.notnull1090, %if.end1085
  %conv1093 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1094 = getelementptr inbounds double* %1, i64 22
  %325 = load double* %arrayidx1094, align 8, !tbaa !17
  %add1095 = fadd double %conv1093, %325
  store double %add1095, double* %arrayidx1094, align 8, !tbaa !17
  %arrayidx1096 = getelementptr inbounds double* %1, i64 1
  %326 = load double* %arrayidx1096, align 8, !tbaa !17
  %add1097 = fadd double %316, %326
  store double %add1097, double* %arrayidx1096, align 8, !tbaa !17
  %arrayidx1098 = getelementptr inbounds double* %1, i64 24
  %327 = load double* %arrayidx1098, align 8, !tbaa !17
  %add1099 = fadd double %315, %327
  store double %add1099, double* %arrayidx1098, align 8, !tbaa !17
  %arrayidx1100 = getelementptr inbounds double* %1, i64 12
  %328 = bitcast double* %arrayidx1100 to <2 x double>*
  %329 = load <2 x double>* %328, align 8, !tbaa !17
  %330 = fadd <2 x double> %310, %329
  %331 = bitcast double* %arrayidx1100 to <2 x double>*
  store <2 x double> %330, <2 x double>* %331, align 8, !tbaa !17
  %arrayidx1104 = getelementptr inbounds double* %1, i64 14
  %332 = bitcast double* %arrayidx1104 to <2 x double>*
  %333 = load <2 x double>* %332, align 8, !tbaa !17
  %334 = shufflevector <2 x double> %313, <2 x double> %310, <2 x i32> <i32 0, i32 3>
  %335 = fadd <2 x double> %334, %333
  %336 = bitcast double* %arrayidx1104 to <2 x double>*
  store <2 x double> %335, <2 x double>* %336, align 8, !tbaa !17
  %arrayidx1108 = getelementptr inbounds double* %1, i64 16
  %337 = bitcast double* %arrayidx1108 to <2 x double>*
  %338 = load <2 x double>* %337, align 8, !tbaa !17
  %339 = fadd <2 x double> %311, %338
  %340 = bitcast double* %arrayidx1108 to <2 x double>*
  store <2 x double> %339, <2 x double>* %340, align 8, !tbaa !17
  %arrayidx1112 = getelementptr inbounds double* %1, i64 18
  %341 = bitcast double* %arrayidx1112 to <2 x double>*
  %342 = load <2 x double>* %341, align 8, !tbaa !17
  %343 = shufflevector <2 x double> %313, <2 x double> %311, <2 x i32> <i32 0, i32 3>
  %344 = fadd <2 x double> %343, %342
  %345 = bitcast double* %arrayidx1112 to <2 x double>*
  store <2 x double> %344, <2 x double>* %345, align 8, !tbaa !17
  %arrayidx1116 = getelementptr inbounds double* %1, i64 20
  %346 = load double* %arrayidx1116, align 8, !tbaa !17
  %add1117 = fadd double %314, %346
  store double %add1117, double* %arrayidx1116, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1092, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil13calc_pair_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31654 = icmp sgt i32 %13, 0
  br i1 %cmp31654, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30707 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond505507705 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19509703 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv696 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next697, %for.inc ]
  %g.0655 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv696, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0655, 1
  %idxprom41 = sext i32 %g.0655 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond505507705, i64 %idxprom41
  %30 = trunc i64 %indvars.iv696 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0655, %for.body ]
  %indvars.iv.next697 = add nuw nsw i64 %indvars.iv696, 1
  %lftr.wideiv698 = trunc i64 %indvars.iv.next697 to i32
  %exitcond699 = icmp eq i32 %lftr.wideiv698, %13
  br i1 %exitcond699, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond505507705, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond505507705, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa712 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19509702711 = phi i32* [ %cond19509703, %for.end ], [ %cond19509703, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond505507704710 = phi i32* [ %cond505507705, %for.end ], [ %cond505507705, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30706709 = phi i32* [ %cond30707, %for.end ], [ %cond30707, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56648 = icmp sgt i32 %g.0.lcssa712, 0
  br i1 %cmp56648, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75642 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76643 = icmp sgt i32 %12, 0
  %or.cond489644 = and i1 %tobool75642, %cmp76643
  br i1 %or.cond489644, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv692 = phi i64 [ %indvars.iv.next693, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0650 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0649 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond505507704710, i64 %indvars.iv692
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0650, 1
  %idxprom68 = sext i32 %fixg.0650 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19509702711, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0649, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0650, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next693 = add nuw nsw i64 %indvars.iv692, 1
  %lftr.wideiv694 = trunc i64 %indvars.iv.next693 to i32
  %exitcond695 = icmp eq i32 %lftr.wideiv694, %g.0.lcssa712
  br i1 %exitcond695, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv690 = phi i64 [ %indvars.iv.next691, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2645 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv690, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2645
  %indvars.iv.next691 = add nuw nsw i64 %indvars.iv690, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next691 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond489 = and i1 %tobool75, %cmp76
  br i1 %or.cond489, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75642, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond505507704710, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond505507704710 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19509702711, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19509702711 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30706709, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30706709 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19509702711, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19509702711, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2512 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162531 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140517519529 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129513515521527 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151523525 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183617 = icmp sgt i32 %12, 0
  br i1 %cmp183617, label %for.body184.lr.ph, label %for.end893

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i502 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140517519529 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162531 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151523525 to i64
  %sub829 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30706709 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129513515521527 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc891, %for.body184.lr.ph
  %exclChecksum.0633 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc891 ]
  %i.1620 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc892, %for.inc891 ]
  %pairlistindex.0619 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc891 ]
  %pairCount.0618 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc891 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %231, %for.inc891 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %232, %for.inc891 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %233, %for.inc891 ]
  %idxprom185 = sext i32 %i.1620 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i533 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i533, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i533, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i533, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0618
  %cmp218 = icmp sge i32 %pairCount.0618, %div
  %cmp220 = icmp slt i32 %pairCount.0618, %div181
  %or.cond491 = and i1 %cmp218, %cmp220
  br i1 %or.cond491, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1620, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc891

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0618, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19509702711, i32* %cond505507704710
  %cond243 = select i1 %75, i32 %fixg.2512, i32 %g.0.lcssa712
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30706709, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div486 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div486 to i32
  %cmp289544 = icmp sgt i32 %conv287, 0
  br i1 %cmp289544, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv662 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next663, %cond.end310 ]
  %pli.0546 = phi i32* [ %cond129513515521527, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30706709, i64 %indvars.iv662
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp487488 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp487488, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0546, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0546, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0546, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0546, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0546, i64 %cond311
  %indvars.iv.next663 = add nuw nsw i64 %indvars.iv662, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next663 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129513515521527, %land.end ], [ %cond129513515521527, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328483 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328483 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext484 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext484, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129513515521527, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129513515521527, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1620
  br label %for.inc891

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0618, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0619, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load365.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %94 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %95 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %95, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %96 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %96 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %bf.clear376 = and i32 %bf.load365.pre, 4194303
  %idxprom.i501534 = zext i32 %bf.clear376 to i64
  %97 = load i32** %atomVdwType.i502, align 8, !tbaa !64
  %arrayidx.i503 = getelementptr inbounds i32* %97, i64 %idxprom.i501534
  %98 = load i32* %arrayidx.i503, align 4, !tbaa !11
  %99 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %100 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv378 = shl i32 %98, 1
  %mul.i = and i32 %conv378, 131070
  %mul2.i = mul i32 %mul.i, %100
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp384571 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384571, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv673 = phi i64 [ %indvars.iv.next674, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1575 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0633, %for.cond383.preheader ]
  %pli380.0574 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140517519529, %for.cond383.preheader ]
  %plin.0573 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151523525, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129513515521527, i64 %indvars.iv673
  %101 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %101 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %102 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %69, %102
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %103 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %70, %103
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %104 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %71, %104
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %105 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %105, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond492 = or i1 %tobool419, %cmp421
  br i1 %or.cond492, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1575, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1575, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %66
  %cmp435 = icmp sgt i32 %bf.clear432, %67
  %or.cond493 = or i1 %cmp433, %cmp435
  br i1 %or.cond493, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0574, i64 1
  store i32 %101, i32* %pli380.0574, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0573, i64 1
  store i32 %101, i32* %plin.0573, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0573, %for.body385 ], [ %plin.0573, %land.lhs.true424 ], [ %plin.0573, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0574, %for.body385 ], [ %pli380.0574, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0574, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1575, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next674 = add nuw nsw i64 %indvars.iv673, 1
  %lftr.wideiv675 = trunc i64 %indvars.iv.next674 to i32
  %exitcond676 = icmp eq i32 %lftr.wideiv675, %pairlistindex.1
  br i1 %exitcond676, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384571, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %106 = load i32* %cond129513515521527, align 4, !tbaa !11
  %idxprom453 = sext i32 %106 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %107 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %108 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %109 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %109, %if.then448 ], [ %115, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %108, %if.then448 ], [ %114, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %107, %if.then448 ], [ %113, %if.else513 ]
  %j2449.0.ph = phi i32 [ %106, %if.then448 ], [ %112, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151523525, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140517519529, %if.then448 ], [ %pli380.2.ph554, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0633, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer547

while.cond473.outer547:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph548 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph549 = phi double [ %115, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph550 = phi double [ %114, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph551 = phi double [ %113, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph552 = phi i32 [ %112, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph553 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph554 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph555 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer556

while.cond473.outer556:                           ; preds = %land.lhs.true504, %while.cond473.outer547
  %idxprom453.pn.ph557 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph548, %while.cond473.outer547 ]
  %p_j_z462.0.ph558 = phi double [ %115, %land.lhs.true504 ], [ %p_j_z462.0.ph549, %while.cond473.outer547 ]
  %p_j_y457.0.ph559 = phi double [ %114, %land.lhs.true504 ], [ %p_j_y457.0.ph550, %while.cond473.outer547 ]
  %p_j_x452.0.ph560 = phi double [ %113, %land.lhs.true504 ], [ %p_j_x452.0.ph551, %while.cond473.outer547 ]
  %j2449.0.ph561 = phi i32 [ %112, %land.lhs.true504 ], [ %j2449.0.ph552, %while.cond473.outer547 ]
  %k446.0.ph562 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph553, %while.cond473.outer547 ]
  %exclChecksum.4.ph563 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph555, %while.cond473.outer547 ]
  %110 = sext i32 %k446.0.ph562 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer556
  %indvars.iv669 = phi i64 [ %110, %while.cond473.outer556 ], [ %indvars.iv.next670, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph557, %while.cond473.outer556 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph558, %while.cond473.outer556 ], [ %115, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph559, %while.cond473.outer556 ], [ %114, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph560, %while.cond473.outer556 ], [ %113, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph561, %while.cond473.outer556 ], [ %112, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph562, %while.cond473.outer556 ], [ %inc476, %while.body475 ]
  %111 = trunc i64 %indvars.iv669 to i32
  %cmp474 = icmp slt i32 %111, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next670 = add nsw i64 %indvars.iv669, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129513515521527, i64 %indvars.iv.next670
  %112 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %69, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %112 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %113 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %70, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %114 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %71, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %115 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph563, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer556

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph563, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %66
  %cmp510 = icmp sgt i32 %atom2467.0, %67
  %or.cond494 = or i1 %cmp508, %cmp510
  br i1 %or.cond494, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph554, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph554, align 4, !tbaa !11
  br label %while.cond473.outer547

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151523525, %if.else445 ], [ %cond151523525, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140517519529, %if.else445 ], [ %cond140517519529, %for.cond383.preheader ], [ %pli380.2.ph554, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0633, %if.else445 ], [ %exclChecksum.0633, %for.cond383.preheader ], [ %exclChecksum.4.ph563, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528449 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528449 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext481 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext481, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140517519529, i64 %idxprom533
  %116 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140517519529, i64 %idxprom535
  store i32 %116, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540579 = icmp sgt i32 %conv529, 0
  br i1 %cmp540579, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %117 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %118 = lshr i64 %117, 2
  %119 = trunc i64 %118 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv677 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next678, %for.inc559 ]
  %plin.5583 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0582 = phi i32* [ %cond162531, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0581 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140517519529, i64 %indvars.iv677
  %120 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %120 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %121 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %121, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551480 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551480, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %122 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %122 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5583, i64 1
  store i32 %120, i32* %plin.5583, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0582, i64 1
  store i32 %120, i32* %plix.0582, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0581, i64 1
  store i32 %120, i32* %plim.0581, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0581, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0581, %sw.bb555 ], [ %plim.0581, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0582, %for.body541 ], [ %plix.0582, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0582, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5583, %for.body541 ], [ %plin.5583, %sw.bb557 ], [ %plin.5583, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next678 = add nuw nsw i64 %indvars.iv677, 1
  %lftr.wideiv679 = trunc i64 %indvars.iv.next678 to i32
  %exitcond680 = icmp eq i32 %lftr.wideiv679, %119
  br i1 %exitcond680, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162531, %for.cond539.preheader ], [ %cond162531, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565451 = lshr exact i64 %sub.ptr.sub564, 2
  %conv566450 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566450
  %add574 = add i64 %add567, %sub.ptr.div565451
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579453 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579453 to i32
  %cmp582587 = icmp sgt i32 %conv580, 0
  br i1 %cmp582587, label %for.body583.lr.ph, label %for.end715

for.body583.lr.ph:                                ; preds = %for.end561
  %x693 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y702 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z709 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %123 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %124 = lshr i64 %123, 2
  %125 = trunc i64 %124 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583.for.body583_crit_edge, %for.body583.lr.ph
  %126 = phi i32* [ %97, %for.body583.lr.ph ], [ %.pre, %for.body583.for.body583_crit_edge ]
  %indvars.iv681 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next682, %for.body583.for.body583_crit_edge ]
  %127 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %156, %for.body583.for.body583_crit_edge ]
  %128 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %163, %for.body583.for.body583_crit_edge ]
  %129 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %174, %for.body583.for.body583_crit_edge ]
  %arrayidx586 = getelementptr inbounds i32* %cond151523525, i64 %indvars.iv681
  %130 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %130 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %131 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %69, %131
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %132 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %70, %132
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %133 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %71, %133
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %134 = bitcast float %conv604 to i32
  %shr = ashr i32 %134, 17
  %add606 = add nsw i32 %shr, %mul
  %id607 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %135 = bitcast [4 x i8]* %id607 to i32*
  %bf.load608 = load i32* %135, align 4
  %bf.clear609 = and i32 %bf.load608, 4194303
  %idxprom.i497537 = zext i32 %bf.clear609 to i64
  %arrayidx.i499 = getelementptr inbounds i32* %126, i64 %idxprom.i497537
  %136 = load i32* %arrayidx.i499, align 4, !tbaa !11
  %conv.i500 = zext i32 %136 to i64
  %conv611 = shl nuw nsw i64 %conv.i500, 1
  %mul612 = and i64 %conv611, 131070
  %mul615 = shl nsw i32 %add606, 4
  %idx.ext616 = sext i32 %mul615 to i64
  %and = and i32 %134, -131072
  %charge630 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %137 = load float* %charge630, align 4, !tbaa !63
  %conv631 = fpext float %137 to double
  %mul632 = fmul double %mul373, %conv631
  %138 = bitcast i32 %and to float
  %conv634 = fpext float %138 to double
  %sub635 = fsub double %add603, %conv634
  %bf.lshr638 = lshr i32 %bf.load608, 28
  %idxprom639 = zext i32 %bf.lshr638 to i64
  %add.ptr369.sum470 = add i64 %idxprom639, %idx.ext368
  %arrayidx640 = getelementptr inbounds double* %94, i64 %add.ptr369.sum470
  %139 = load double* %arrayidx640, align 8, !tbaa !17
  %add.ptr.i.sum538 = add i64 %mul612, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum538, i32 0
  %140 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %8, %140
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum538, i32 1
  %141 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %8, %141
  %add.ptr617.sum471 = or i64 %idx.ext616, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr617.sum471
  %142 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %142
  %add.ptr622.sum472 = or i64 %idx.ext616, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr622.sum472
  %143 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %143
  %sub654 = fsub double %mul651, %mul653
  %add.ptr617.sum473 = or i64 %idx.ext616, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr617.sum473
  %144 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %144
  %add.ptr622.sum474 = or i64 %idx.ext616, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr622.sum474
  %145 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %145
  %sub659 = fsub double %mul656, %mul658
  %add.ptr617.sum475 = or i64 %idx.ext616, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr617.sum475
  %146 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %146
  %add.ptr622.sum476 = or i64 %idx.ext616, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr622.sum476
  %147 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %147
  %sub664 = fsub double %mul661, %mul663
  %add.ptr627.sum477 = or i64 %idx.ext616, 11
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr627.sum477
  %148 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul632, %148
  %add.ptr627.sum478 = or i64 %idx.ext616, 10
  %arrayidx668 = getelementptr inbounds double* %7, i64 %add.ptr627.sum478
  %149 = load double* %arrayidx668, align 8, !tbaa !17
  %mul669 = fmul double %mul632, %149
  %add.ptr627.sum479 = or i64 %idx.ext616, 9
  %arrayidx670 = getelementptr inbounds double* %7, i64 %add.ptr627.sum479
  %150 = load double* %arrayidx670, align 8, !tbaa !17
  %mul671 = fmul double %mul632, %150
  %add672 = fadd double %sub654, %mul667
  %add673 = fadd double %sub659, %mul669
  %add674 = fadd double %sub664, %mul671
  %mul676 = fmul double %sub635, 3.000000e+00
  %mul677 = fmul double %mul676, %add672
  %mul678 = fmul double %add673, 2.000000e+00
  %add679 = fadd double %mul677, %mul678
  %mul680 = fmul double %sub635, %add679
  %add681 = fadd double %add674, %mul680
  %mul682 = fmul double %139, -2.000000e+00
  %mul683 = fmul double %mul682, %add681
  %mul686 = fmul double %sub591, %mul683
  %151 = insertelement <2 x double> undef, double %sub591, i32 0
  %152 = insertelement <2 x double> %151, double %sub596, i32 1
  %153 = insertelement <2 x double> undef, double %mul686, i32 0
  %154 = insertelement <2 x double> %153, double %mul686, i32 1
  %155 = fmul <2 x double> %152, %154
  %156 = fadd <2 x double> %127, %155
  %157 = load double* %x693, align 8, !tbaa !72
  %add694 = fadd double %157, %mul686
  store double %add694, double* %x693, align 8, !tbaa !72
  %x695 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul697 = fmul double %sub596, %mul683
  %158 = insertelement <2 x double> undef, double %sub596, i32 0
  %159 = insertelement <2 x double> %158, double %sub601, i32 1
  %160 = insertelement <2 x double> undef, double %mul697, i32 0
  %161 = insertelement <2 x double> %160, double %mul697, i32 1
  %162 = fmul <2 x double> %159, %161
  %163 = fadd <2 x double> %128, %162
  %164 = load double* %y702, align 8, !tbaa !73
  %add703 = fadd double %164, %mul697
  store double %add703, double* %y702, align 8, !tbaa !73
  %165 = bitcast double* %x695 to <2 x double>*
  %166 = load <2 x double>* %165, align 8, !tbaa !17
  %167 = insertelement <2 x double> %153, double %mul697, i32 1
  %168 = fsub <2 x double> %166, %167
  %169 = bitcast double* %x695 to <2 x double>*
  store <2 x double> %168, <2 x double>* %169, align 8, !tbaa !17
  %mul706 = fmul double %sub601, %mul683
  %170 = insertelement <2 x double> undef, double %sub601, i32 0
  %171 = insertelement <2 x double> %170, double %sub601, i32 1
  %172 = insertelement <2 x double> %153, double %mul706, i32 1
  %173 = fmul <2 x double> %171, %172
  %174 = fadd <2 x double> %129, %173
  %175 = load double* %z709, align 8, !tbaa !74
  %add710 = fadd double %175, %mul706
  store double %add710, double* %z709, align 8, !tbaa !74
  %z711 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %176 = load double* %z711, align 8, !tbaa !74
  %sub712 = fsub double %176, %mul706
  store double %sub712, double* %z711, align 8, !tbaa !74
  %indvars.iv.next682 = add nuw nsw i64 %indvars.iv681, 1
  %lftr.wideiv683 = trunc i64 %indvars.iv.next682 to i32
  %exitcond684 = icmp eq i32 %lftr.wideiv683, %125
  br i1 %exitcond684, label %for.end715, label %for.body583.for.body583_crit_edge

for.body583.for.body583_crit_edge:                ; preds = %for.body583
  %.pre = load i32** %atomVdwType.i502, align 8, !tbaa !64
  br label %for.body583

for.end715:                                       ; preds = %for.body583, %for.end561
  %177 = phi <2 x double> [ %61, %for.end561 ], [ %156, %for.body583 ]
  %178 = phi <2 x double> [ %62, %for.end561 ], [ %163, %for.body583 ]
  %179 = phi <2 x double> [ %63, %for.end561 ], [ %174, %for.body583 ]
  %conv720 = trunc i64 %sub.ptr.div572 to i32
  %cmp722601 = icmp sgt i32 %conv720, 0
  br i1 %cmp722601, label %for.body723.lr.ph, label %for.inc891

for.body723.lr.ph:                                ; preds = %for.end715
  %x866 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y876 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z884 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body723

for.body723:                                      ; preds = %for.body723, %for.body723.lr.ph
  %indvars.iv685 = phi i64 [ 0, %for.body723.lr.ph ], [ %indvars.iv.next686, %for.body723 ]
  %180 = phi <2 x double> [ %177, %for.body723.lr.ph ], [ %210, %for.body723 ]
  %181 = phi <2 x double> [ %178, %for.body723.lr.ph ], [ %217, %for.body723 ]
  %182 = phi <2 x double> [ %179, %for.body723.lr.ph ], [ %228, %for.body723 ]
  %arrayidx726 = getelementptr inbounds i32* %cond173, i64 %indvars.iv685
  %183 = load i32* %arrayidx726, align 4, !tbaa !11
  %idx.ext728 = sext i32 %183 to i64
  %x732 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 0
  %184 = load double* %x732, align 8, !tbaa !59
  %sub733 = fsub double %69, %184
  %mul735 = fmul double %sub733, %sub733
  %y738 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 1
  %185 = load double* %y738, align 8, !tbaa !61
  %sub739 = fsub double %70, %185
  %mul740 = fmul double %sub739, %sub739
  %add741 = fadd double %mul735, %mul740
  %z744 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 2
  %186 = load double* %z744, align 8, !tbaa !62
  %sub745 = fsub double %71, %186
  %mul746 = fmul double %sub745, %sub745
  %add747 = fadd double %add741, %mul746
  %conv749 = fptrunc double %add747 to float
  %187 = bitcast float %conv749 to i32
  %shr753 = ashr i32 %187, 17
  %add754 = add nsw i32 %shr753, %mul
  %id756 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 2
  %188 = bitcast [4 x i8]* %id756 to i32*
  %bf.load757 = load i32* %188, align 4
  %bf.clear758 = and i32 %bf.load757, 4194303
  %idxprom.i495535 = zext i32 %bf.clear758 to i64
  %189 = load i32** %atomVdwType.i502, align 8, !tbaa !64
  %arrayidx.i496 = getelementptr inbounds i32* %189, i64 %idxprom.i495535
  %190 = load i32* %arrayidx.i496, align 4, !tbaa !11
  %conv.i = zext i32 %190 to i64
  %conv760 = shl nuw nsw i64 %conv.i, 1
  %mul761 = and i64 %conv760, 131070
  %add.ptr763.sum455 = or i64 %mul761, 1
  %mul766 = shl nsw i32 %add754, 4
  %idx.ext767 = sext i32 %mul766 to i64
  %and786 = and i32 %187, -131072
  %charge788 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 1
  %191 = load float* %charge788, align 4, !tbaa !63
  %conv789 = fpext float %191 to double
  %mul790 = fmul double %mul373, %conv789
  %192 = bitcast i32 %and786 to float
  %conv793 = fpext float %192 to double
  %sub794 = fsub double %add747, %conv793
  %bf.lshr798 = lshr i32 %bf.load757, 28
  %idxprom799 = zext i32 %bf.lshr798 to i64
  %add.ptr369.sum = add i64 %idxprom799, %idx.ext368
  %arrayidx800 = getelementptr inbounds double* %94, i64 %add.ptr369.sum
  %193 = load double* %arrayidx800, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr763.sum455, %idx.ext.i
  %A802 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum, i32 0
  %194 = load double* %A802, align 8, !tbaa !69
  %mul803 = fmul double %8, %194
  %B805 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum, i32 1
  %195 = load double* %B805, align 8, !tbaa !71
  %mul806 = fmul double %8, %195
  %add.ptr768.sum458 = or i64 %idx.ext767, 3
  %arrayidx812 = getelementptr inbounds double* %7, i64 %add.ptr768.sum458
  %196 = load double* %arrayidx812, align 8, !tbaa !17
  %mul813 = fmul double %mul803, %196
  %add.ptr775.sum459 = or i64 %idx.ext767, 7
  %arrayidx814 = getelementptr inbounds double* %7, i64 %add.ptr775.sum459
  %197 = load double* %arrayidx814, align 8, !tbaa !17
  %mul815 = fmul double %mul806, %197
  %sub816 = fsub double %mul813, %mul815
  %add.ptr768.sum460 = or i64 %idx.ext767, 2
  %arrayidx818 = getelementptr inbounds double* %7, i64 %add.ptr768.sum460
  %198 = load double* %arrayidx818, align 8, !tbaa !17
  %mul819 = fmul double %mul803, %198
  %add.ptr775.sum461 = or i64 %idx.ext767, 6
  %arrayidx820 = getelementptr inbounds double* %7, i64 %add.ptr775.sum461
  %199 = load double* %arrayidx820, align 8, !tbaa !17
  %mul821 = fmul double %mul806, %199
  %sub822 = fsub double %mul819, %mul821
  %add.ptr768.sum462 = or i64 %idx.ext767, 1
  %arrayidx824 = getelementptr inbounds double* %7, i64 %add.ptr768.sum462
  %200 = load double* %arrayidx824, align 8, !tbaa !17
  %mul825 = fmul double %mul803, %200
  %add.ptr775.sum463 = or i64 %idx.ext767, 5
  %arrayidx826 = getelementptr inbounds double* %7, i64 %add.ptr775.sum463
  %201 = load double* %arrayidx826, align 8, !tbaa !17
  %mul827 = fmul double %mul806, %201
  %sub828 = fsub double %mul825, %mul827
  %mul830 = fmul double %sub829, %mul790
  %add.ptr782.sum464 = or i64 %idx.ext767, 11
  %arrayidx833 = getelementptr inbounds double* %7, i64 %add.ptr782.sum464
  %202 = load double* %arrayidx833, align 8, !tbaa !17
  %mul834 = fmul double %mul830, %202
  %add.ptr782.sum465 = or i64 %idx.ext767, 10
  %arrayidx836 = getelementptr inbounds double* %7, i64 %add.ptr782.sum465
  %203 = load double* %arrayidx836, align 8, !tbaa !17
  %mul837 = fmul double %mul830, %203
  %add.ptr782.sum466 = or i64 %idx.ext767, 9
  %arrayidx839 = getelementptr inbounds double* %7, i64 %add.ptr782.sum466
  %204 = load double* %arrayidx839, align 8, !tbaa !17
  %mul840 = fmul double %mul830, %204
  %add841 = fadd double %sub816, %mul834
  %add842 = fadd double %sub822, %mul837
  %add843 = fadd double %sub828, %mul840
  %mul846 = fmul double %sub794, 3.000000e+00
  %mul847 = fmul double %mul846, %add841
  %mul848 = fmul double %add842, 2.000000e+00
  %add849 = fadd double %mul847, %mul848
  %mul850 = fmul double %sub794, %add849
  %add851 = fadd double %add843, %mul850
  %mul853 = fmul double %193, -2.000000e+00
  %mul854 = fmul double %mul853, %add851
  %mul859 = fmul double %sub733, %mul854
  %205 = insertelement <2 x double> undef, double %sub733, i32 0
  %206 = insertelement <2 x double> %205, double %sub739, i32 1
  %207 = insertelement <2 x double> undef, double %mul859, i32 0
  %208 = insertelement <2 x double> %207, double %mul859, i32 1
  %209 = fmul <2 x double> %206, %208
  %210 = fadd <2 x double> %180, %209
  %211 = load double* %x866, align 8, !tbaa !72
  %add867 = fadd double %211, %mul859
  store double %add867, double* %x866, align 8, !tbaa !72
  %x868 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext728, i32 0
  %mul871 = fmul double %sub739, %mul854
  %212 = insertelement <2 x double> undef, double %sub739, i32 0
  %213 = insertelement <2 x double> %212, double %sub745, i32 1
  %214 = insertelement <2 x double> undef, double %mul871, i32 0
  %215 = insertelement <2 x double> %214, double %mul871, i32 1
  %216 = fmul <2 x double> %213, %215
  %217 = fadd <2 x double> %181, %216
  %218 = load double* %y876, align 8, !tbaa !73
  %add877 = fadd double %218, %mul871
  store double %add877, double* %y876, align 8, !tbaa !73
  %219 = bitcast double* %x868 to <2 x double>*
  %220 = load <2 x double>* %219, align 8, !tbaa !17
  %221 = insertelement <2 x double> %207, double %mul871, i32 1
  %222 = fsub <2 x double> %220, %221
  %223 = bitcast double* %x868 to <2 x double>*
  store <2 x double> %222, <2 x double>* %223, align 8, !tbaa !17
  %mul881 = fmul double %sub745, %mul854
  %224 = insertelement <2 x double> undef, double %sub745, i32 0
  %225 = insertelement <2 x double> %224, double %sub745, i32 1
  %226 = insertelement <2 x double> %207, double %mul881, i32 1
  %227 = fmul <2 x double> %225, %226
  %228 = fadd <2 x double> %182, %227
  %229 = load double* %z884, align 8, !tbaa !74
  %add885 = fadd double %229, %mul881
  store double %add885, double* %z884, align 8, !tbaa !74
  %z886 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext728, i32 2
  %230 = load double* %z886, align 8, !tbaa !74
  %sub887 = fsub double %230, %mul881
  store double %sub887, double* %z886, align 8, !tbaa !74
  %indvars.iv.next686 = add nuw nsw i64 %indvars.iv685, 1
  %lftr.wideiv687 = trunc i64 %indvars.iv.next686 to i32
  %exitcond688 = icmp eq i32 %lftr.wideiv687, %conv720
  br i1 %exitcond688, label %for.inc891, label %for.body723

for.inc891:                                       ; preds = %for.body723, %for.end715, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end715 ], [ %pairCount.2, %for.body723 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0619, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end715 ], [ %pairlistindex.1, %for.body723 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1620, %for.end715 ], [ %i.1620, %for.body723 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0633, %if.then221 ], [ %exclChecksum.0633, %cond.end349 ], [ %conv575, %for.end715 ], [ %conv575, %for.body723 ]
  %231 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %177, %for.end715 ], [ %210, %for.body723 ]
  %232 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %178, %for.end715 ], [ %217, %for.body723 ]
  %233 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %179, %for.end715 ], [ %228, %for.body723 ]
  %inc892 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc892, %12
  br i1 %cmp183, label %for.body184, label %for.end893

for.end893:                                       ; preds = %for.inc891, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc891 ]
  %234 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %231, %for.inc891 ]
  %235 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %232, %for.inc891 ]
  %236 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %233, %for.inc891 ]
  %237 = extractelement <2 x double> %236, i32 1
  %arraydecay894 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp895 = icmp eq i32* %cond505507704710, %arraydecay894
  br i1 %cmp895, label %if.end900, label %delete.notnull898

delete.notnull898:                                ; preds = %for.end893
  %238 = bitcast i32* %cond505507704710 to i8*
  call void @_ZdaPv(i8* %238) #7
  br label %if.end900

if.end900:                                        ; preds = %delete.notnull898, %for.end893
  %arraydecay901 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp902 = icmp eq i32* %cond19509702711, %arraydecay901
  br i1 %cmp902, label %if.end907, label %delete.notnull905

delete.notnull905:                                ; preds = %if.end900
  %239 = bitcast i32* %cond19509702711 to i8*
  call void @_ZdaPv(i8* %239) #7
  br label %if.end907

if.end907:                                        ; preds = %delete.notnull905, %if.end900
  %arraydecay908 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp909 = icmp eq i32* %cond30706709, %arraydecay908
  br i1 %cmp909, label %if.end914, label %delete.notnull912

delete.notnull912:                                ; preds = %if.end907
  %240 = bitcast i32* %cond30706709 to i8*
  call void @_ZdaPv(i8* %240) #7
  br label %if.end914

if.end914:                                        ; preds = %delete.notnull912, %if.end907
  %arraydecay915 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp916 = icmp eq i32* %cond129513515521527, %arraydecay915
  br i1 %cmp916, label %if.end921, label %delete.notnull919

delete.notnull919:                                ; preds = %if.end914
  %241 = bitcast i32* %cond129513515521527 to i8*
  call void @_ZdaPv(i8* %241) #7
  br label %if.end921

if.end921:                                        ; preds = %delete.notnull919, %if.end914
  %arraydecay922 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp923 = icmp eq i32* %cond140517519529, %arraydecay922
  br i1 %cmp923, label %if.end928, label %delete.notnull926

delete.notnull926:                                ; preds = %if.end921
  %242 = bitcast i32* %cond140517519529 to i8*
  call void @_ZdaPv(i8* %242) #7
  br label %if.end928

if.end928:                                        ; preds = %delete.notnull926, %if.end921
  %arraydecay929 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp930 = icmp eq i32* %cond151523525, %arraydecay929
  br i1 %cmp930, label %if.end935, label %delete.notnull933

delete.notnull933:                                ; preds = %if.end928
  %243 = bitcast i32* %cond151523525 to i8*
  call void @_ZdaPv(i8* %243) #7
  br label %if.end935

if.end935:                                        ; preds = %delete.notnull933, %if.end928
  %arraydecay936 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp937 = icmp eq i32* %cond162531, %arraydecay936
  br i1 %cmp937, label %if.end942, label %delete.notnull940

delete.notnull940:                                ; preds = %if.end935
  %244 = bitcast i32* %cond162531 to i8*
  call void @_ZdaPv(i8* %244) #7
  br label %if.end942

if.end942:                                        ; preds = %delete.notnull940, %if.end935
  %arraydecay943 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp944 = icmp eq i32* %cond173, %arraydecay943
  br i1 %cmp944, label %if.end949, label %delete.notnull947

delete.notnull947:                                ; preds = %if.end942
  %245 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %245) #7
  br label %if.end949

if.end949:                                        ; preds = %delete.notnull947, %if.end942
  %conv950 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx951 = getelementptr inbounds double* %1, i64 22
  %246 = load double* %arrayidx951, align 8, !tbaa !17
  %add952 = fadd double %conv950, %246
  store double %add952, double* %arrayidx951, align 8, !tbaa !17
  %arrayidx953 = getelementptr inbounds double* %1, i64 3
  %247 = bitcast double* %arrayidx953 to <2 x double>*
  %248 = load <2 x double>* %247, align 8, !tbaa !17
  %249 = fadd <2 x double> %234, %248
  %250 = bitcast double* %arrayidx953 to <2 x double>*
  store <2 x double> %249, <2 x double>* %250, align 8, !tbaa !17
  %arrayidx957 = getelementptr inbounds double* %1, i64 5
  %251 = bitcast double* %arrayidx957 to <2 x double>*
  %252 = load <2 x double>* %251, align 8, !tbaa !17
  %253 = shufflevector <2 x double> %236, <2 x double> %234, <2 x i32> <i32 0, i32 3>
  %254 = fadd <2 x double> %253, %252
  %255 = bitcast double* %arrayidx957 to <2 x double>*
  store <2 x double> %254, <2 x double>* %255, align 8, !tbaa !17
  %arrayidx961 = getelementptr inbounds double* %1, i64 7
  %256 = bitcast double* %arrayidx961 to <2 x double>*
  %257 = load <2 x double>* %256, align 8, !tbaa !17
  %258 = fadd <2 x double> %235, %257
  %259 = bitcast double* %arrayidx961 to <2 x double>*
  store <2 x double> %258, <2 x double>* %259, align 8, !tbaa !17
  %arrayidx965 = getelementptr inbounds double* %1, i64 9
  %260 = bitcast double* %arrayidx965 to <2 x double>*
  %261 = load <2 x double>* %260, align 8, !tbaa !17
  %262 = shufflevector <2 x double> %236, <2 x double> %235, <2 x i32> <i32 0, i32 3>
  %263 = fadd <2 x double> %262, %261
  %264 = bitcast double* %arrayidx965 to <2 x double>*
  store <2 x double> %263, <2 x double>* %264, align 8, !tbaa !17
  %arrayidx969 = getelementptr inbounds double* %1, i64 11
  %265 = load double* %arrayidx969, align 8, !tbaa !17
  %add970 = fadd double %237, %265
  store double %add970, double* %arrayidx969, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end949, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil20calc_pair_energy_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31706 = icmp sgt i32 %13, 0
  br i1 %cmp31706, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30759 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond543545757 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19547755 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv748 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next749, %for.inc ]
  %g.0707 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv748, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0707, 1
  %idxprom41 = sext i32 %g.0707 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond543545757, i64 %idxprom41
  %30 = trunc i64 %indvars.iv748 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0707, %for.body ]
  %indvars.iv.next749 = add nuw nsw i64 %indvars.iv748, 1
  %lftr.wideiv750 = trunc i64 %indvars.iv.next749 to i32
  %exitcond751 = icmp eq i32 %lftr.wideiv750, %13
  br i1 %exitcond751, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond543545757, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond543545757, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa764 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19547754763 = phi i32* [ %cond19547755, %for.end ], [ %cond19547755, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond543545756762 = phi i32* [ %cond543545757, %for.end ], [ %cond543545757, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30758761 = phi i32* [ %cond30759, %for.end ], [ %cond30759, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56700 = icmp sgt i32 %g.0.lcssa764, 0
  br i1 %cmp56700, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75694 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76695 = icmp sgt i32 %12, 0
  %or.cond527696 = and i1 %tobool75694, %cmp76695
  br i1 %or.cond527696, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv744 = phi i64 [ %indvars.iv.next745, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0702 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0701 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond543545756762, i64 %indvars.iv744
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0702, 1
  %idxprom68 = sext i32 %fixg.0702 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19547754763, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0701, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0702, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next745 = add nuw nsw i64 %indvars.iv744, 1
  %lftr.wideiv746 = trunc i64 %indvars.iv.next745 to i32
  %exitcond747 = icmp eq i32 %lftr.wideiv746, %g.0.lcssa764
  br i1 %exitcond747, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv742 = phi i64 [ %indvars.iv.next743, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2697 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv742, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2697
  %indvars.iv.next743 = add nuw nsw i64 %indvars.iv742, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next743 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond527 = and i1 %tobool75, %cmp76
  br i1 %or.cond527, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75694, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond543545756762, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond543545756762 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19547754763, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19547754763 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30758761, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30758761 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19547754763, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19547754763, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2550 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162569 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140555557567 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129551553559565 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151561563 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183663 = icmp sgt i32 %12, 0
  br i1 %cmp183663, label %for.body184.lr.ph, label %for.end927

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i540 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140555557567 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162569 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151561563 to i64
  %sub854 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30758761 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129551553559565 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc925, %for.body184.lr.ph
  %exclChecksum.0683 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc925 ]
  %i.1666 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc926, %for.inc925 ]
  %pairlistindex.0665 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc925 ]
  %pairCount.0664 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc925 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %253, %for.inc925 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %254, %for.inc925 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %255, %for.inc925 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %256, %for.inc925 ]
  %idxprom185 = sext i32 %i.1666 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %65 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %65, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i571 = zext i32 %bf.clear188 to i64
  %66 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i571, i32 0
  %67 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i571, i32 1
  %68 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i571, i32 2
  %69 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %67 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %70 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %71 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %72 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %73 = and i32 %bf.load187, 62914560
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0664
  %cmp218 = icmp sge i32 %pairCount.0664, %div
  %cmp220 = icmp slt i32 %pairCount.0664, %div181
  %or.cond529 = and i1 %cmp218, %cmp220
  br i1 %or.cond529, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1666, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc925

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0664, %if.then205 ], [ %add217, %if.then211 ]
  %75 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %75, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %76 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %76, i32* %cond19547754763, i32* %cond543545756762
  %cond243 = select i1 %76, i32 %fixg.2550, i32 %g.0.lcssa764
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %77 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %77 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %78 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %79 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %80 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_y.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_x.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %j2.0.ph = phi i32 [ %77, %if.then245 ], [ %83, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30758761, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %81 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %81, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %82 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %82, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %83 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %70, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %83 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %84 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %71, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %85 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %72, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %86 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div524 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div524 to i32
  %cmp289582 = icmp sgt i32 %conv287, 0
  br i1 %cmp289582, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %87 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %88 = lshr i64 %87, 2
  %89 = trunc i64 %88 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv714 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next715, %cond.end310 ]
  %pli.0584 = phi i32* [ %cond129551553559565, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30758761, i64 %indvars.iv714
  %90 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %90 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %91 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %91, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp525526 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp525526, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %90, i32* %pli.0584, align 4, !tbaa !11
  %add313 = add nsw i32 %90, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0584, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %90, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0584, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %90, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0584, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0584, i64 %cond311
  %indvars.iv.next715 = add nuw nsw i64 %indvars.iv714, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next715 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129551553559565, %land.end ], [ %cond129551553559565, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328521 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328521 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext522 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext522, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129551553559565, i64 %idxprom333
  %92 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129551553559565, i64 %idxprom335
  store i32 %92, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %65, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1666
  br label %for.inc925

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0664, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0665, %for.body184 ]
  %93 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %93, 0
  %bf.load365.pre = load i32* %65, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %94 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %95 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %96 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %96, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %97 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %97 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %bf.clear376 = and i32 %bf.load365.pre, 4194303
  %idxprom.i539572 = zext i32 %bf.clear376 to i64
  %98 = load i32** %atomVdwType.i540, align 8, !tbaa !64
  %arrayidx.i541 = getelementptr inbounds i32* %98, i64 %idxprom.i539572
  %99 = load i32* %arrayidx.i541, align 4, !tbaa !11
  %100 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %101 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv378 = shl i32 %99, 1
  %mul.i = and i32 %conv378, 131070
  %mul2.i = mul i32 %mul.i, %101
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp384609 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %94, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384609, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv725 = phi i64 [ %indvars.iv.next726, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1613 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0683, %for.cond383.preheader ]
  %pli380.0612 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140555557567, %for.cond383.preheader ]
  %plin.0611 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151561563, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129551553559565, i64 %indvars.iv725
  %102 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %102 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %103 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %70, %103
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %104 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %71, %104
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %105 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %72, %105
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %106 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %106, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond530 = or i1 %tobool419, %cmp421
  br i1 %or.cond530, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1613, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1613, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %67
  %cmp435 = icmp sgt i32 %bf.clear432, %68
  %or.cond531 = or i1 %cmp433, %cmp435
  br i1 %or.cond531, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0612, i64 1
  store i32 %102, i32* %pli380.0612, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0611, i64 1
  store i32 %102, i32* %plin.0611, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0611, %for.body385 ], [ %plin.0611, %land.lhs.true424 ], [ %plin.0611, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0612, %for.body385 ], [ %pli380.0612, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0612, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1613, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next726 = add nuw nsw i64 %indvars.iv725, 1
  %lftr.wideiv727 = trunc i64 %indvars.iv.next726 to i32
  %exitcond728 = icmp eq i32 %lftr.wideiv727, %pairlistindex.1
  br i1 %exitcond728, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384609, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %107 = load i32* %cond129551553559565, align 4, !tbaa !11
  %idxprom453 = sext i32 %107 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %108 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %109 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %110 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %110, %if.then448 ], [ %116, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %109, %if.then448 ], [ %115, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %108, %if.then448 ], [ %114, %if.else513 ]
  %j2449.0.ph = phi i32 [ %107, %if.then448 ], [ %113, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151561563, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140555557567, %if.then448 ], [ %pli380.2.ph592, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0683, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer585

while.cond473.outer585:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph586 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph587 = phi double [ %116, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph588 = phi double [ %115, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph589 = phi double [ %114, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph590 = phi i32 [ %113, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph591 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph592 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph593 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer594

while.cond473.outer594:                           ; preds = %land.lhs.true504, %while.cond473.outer585
  %idxprom453.pn.ph595 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph586, %while.cond473.outer585 ]
  %p_j_z462.0.ph596 = phi double [ %116, %land.lhs.true504 ], [ %p_j_z462.0.ph587, %while.cond473.outer585 ]
  %p_j_y457.0.ph597 = phi double [ %115, %land.lhs.true504 ], [ %p_j_y457.0.ph588, %while.cond473.outer585 ]
  %p_j_x452.0.ph598 = phi double [ %114, %land.lhs.true504 ], [ %p_j_x452.0.ph589, %while.cond473.outer585 ]
  %j2449.0.ph599 = phi i32 [ %113, %land.lhs.true504 ], [ %j2449.0.ph590, %while.cond473.outer585 ]
  %k446.0.ph600 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph591, %while.cond473.outer585 ]
  %exclChecksum.4.ph601 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph593, %while.cond473.outer585 ]
  %111 = sext i32 %k446.0.ph600 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer594
  %indvars.iv721 = phi i64 [ %111, %while.cond473.outer594 ], [ %indvars.iv.next722, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph595, %while.cond473.outer594 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph596, %while.cond473.outer594 ], [ %116, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph597, %while.cond473.outer594 ], [ %115, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph598, %while.cond473.outer594 ], [ %114, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph599, %while.cond473.outer594 ], [ %113, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph600, %while.cond473.outer594 ], [ %inc476, %while.body475 ]
  %112 = trunc i64 %indvars.iv721 to i32
  %cmp474 = icmp slt i32 %112, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next722 = add nsw i64 %indvars.iv721, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129551553559565, i64 %indvars.iv.next722
  %113 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %70, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %113 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %114 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %71, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %115 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %72, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %116 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph601, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer594

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph601, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %67
  %cmp510 = icmp sgt i32 %atom2467.0, %68
  %or.cond532 = or i1 %cmp508, %cmp510
  br i1 %or.cond532, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph592, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph592, align 4, !tbaa !11
  br label %while.cond473.outer585

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151561563, %if.else445 ], [ %cond151561563, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140555557567, %if.else445 ], [ %cond140555557567, %for.cond383.preheader ], [ %pli380.2.ph592, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0683, %if.else445 ], [ %exclChecksum.0683, %for.cond383.preheader ], [ %exclChecksum.4.ph601, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528487 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528487 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext519 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext519, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140555557567, i64 %idxprom533
  %117 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140555557567, i64 %idxprom535
  store i32 %117, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540617 = icmp sgt i32 %conv529, 0
  br i1 %cmp540617, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %118 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %119 = lshr i64 %118, 2
  %120 = trunc i64 %119 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv729 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next730, %for.inc559 ]
  %plin.5621 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0620 = phi i32* [ %cond162569, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0619 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140555557567, i64 %indvars.iv729
  %121 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %121 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %122 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %122, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551518 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551518, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %69, i64 %add.ptr.sum
  %123 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %123 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5621, i64 1
  store i32 %121, i32* %plin.5621, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0620, i64 1
  store i32 %121, i32* %plix.0620, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0619, i64 1
  store i32 %121, i32* %plim.0619, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0619, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0619, %sw.bb555 ], [ %plim.0619, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0620, %for.body541 ], [ %plix.0620, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0620, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5621, %for.body541 ], [ %plin.5621, %sw.bb557 ], [ %plin.5621, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next730 = add nuw nsw i64 %indvars.iv729, 1
  %lftr.wideiv731 = trunc i64 %indvars.iv.next730 to i32
  %exitcond732 = icmp eq i32 %lftr.wideiv731, %120
  br i1 %exitcond732, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162569, %for.cond539.preheader ], [ %cond162569, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565489 = lshr exact i64 %sub.ptr.sub564, 2
  %conv566488 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566488
  %add574 = add i64 %add567, %sub.ptr.div565489
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579491 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579491 to i32
  %cmp582625 = icmp sgt i32 %conv580, 0
  br i1 %cmp582625, label %for.body583.lr.ph, label %for.end731

for.body583.lr.ph:                                ; preds = %for.end561
  %x709 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y718 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z725 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %124 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %125 = lshr i64 %124, 2
  %126 = trunc i64 %125 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583.for.body583_crit_edge, %for.body583.lr.ph
  %127 = phi i32* [ %98, %for.body583.lr.ph ], [ %.pre, %for.body583.for.body583_crit_edge ]
  %indvars.iv733 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next734, %for.body583.for.body583_crit_edge ]
  %128 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %161, %for.body583.for.body583_crit_edge ]
  %129 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %167, %for.body583.for.body583_crit_edge ]
  %130 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %185, %for.body583.for.body583_crit_edge ]
  %131 = phi <2 x double> [ %64, %for.body583.lr.ph ], [ %173, %for.body583.for.body583_crit_edge ]
  %arrayidx586 = getelementptr inbounds i32* %cond151561563, i64 %indvars.iv733
  %132 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %132 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %133 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %70, %133
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %134 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %71, %134
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %135 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %72, %135
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %136 = bitcast float %conv604 to i32
  %shr = ashr i32 %136, 17
  %add606 = add nsw i32 %shr, %mul
  %id607 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %137 = bitcast [4 x i8]* %id607 to i32*
  %bf.load608 = load i32* %137, align 4
  %bf.clear609 = and i32 %bf.load608, 4194303
  %idxprom.i535575 = zext i32 %bf.clear609 to i64
  %arrayidx.i537 = getelementptr inbounds i32* %127, i64 %idxprom.i535575
  %138 = load i32* %arrayidx.i537, align 4, !tbaa !11
  %conv.i538 = zext i32 %138 to i64
  %conv611 = shl nuw nsw i64 %conv.i538, 1
  %mul612 = and i64 %conv611, 131070
  %mul615 = shl nsw i32 %add606, 4
  %idx.ext616 = sext i32 %mul615 to i64
  %add.ptr617 = getelementptr inbounds double* %7, i64 %idx.ext616
  %139 = load double* %add.ptr617, align 8, !tbaa !17
  %add.ptr617.sum506 = or i64 %idx.ext616, 4
  %add.ptr622 = getelementptr inbounds double* %7, i64 %add.ptr617.sum506
  %140 = load double* %add.ptr622, align 8, !tbaa !17
  %add.ptr617.sum507 = or i64 %idx.ext616, 8
  %add.ptr627 = getelementptr inbounds double* %7, i64 %add.ptr617.sum507
  %141 = load double* %add.ptr627, align 8, !tbaa !17
  %and = and i32 %136, -131072
  %charge630 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %142 = load float* %charge630, align 4, !tbaa !63
  %conv631 = fpext float %142 to double
  %mul632 = fmul double %mul373, %conv631
  %143 = bitcast i32 %and to float
  %conv634 = fpext float %143 to double
  %sub635 = fsub double %add603, %conv634
  %bf.lshr638 = lshr i32 %bf.load608, 28
  %idxprom639 = zext i32 %bf.lshr638 to i64
  %add.ptr369.sum508 = add i64 %idxprom639, %idx.ext368
  %arrayidx640 = getelementptr inbounds double* %95, i64 %add.ptr369.sum508
  %144 = load double* %arrayidx640, align 8, !tbaa !17
  %add.ptr.i.sum576 = add i64 %mul612, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum576, i32 0
  %145 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %8, %145
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum576, i32 1
  %146 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %8, %146
  %mul647 = fmul double %139, %mul643
  %mul648 = fmul double %140, %mul646
  %sub649 = fsub double %mul647, %mul648
  %add.ptr617.sum509 = or i64 %idx.ext616, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr617.sum509
  %147 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %147
  %add.ptr622.sum510 = or i64 %idx.ext616, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr622.sum510
  %148 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %148
  %sub654 = fsub double %mul651, %mul653
  %add.ptr617.sum511 = or i64 %idx.ext616, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr617.sum511
  %149 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %149
  %add.ptr622.sum512 = or i64 %idx.ext616, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr622.sum512
  %150 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %150
  %sub659 = fsub double %mul656, %mul658
  %add.ptr617.sum513 = or i64 %idx.ext616, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr617.sum513
  %151 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %151
  %add.ptr622.sum514 = or i64 %idx.ext616, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr622.sum514
  %152 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %152
  %sub664 = fsub double %mul661, %mul663
  %mul665 = fmul double %sub635, %sub654
  %add666 = fadd double %mul665, %sub659
  %mul667 = fmul double %sub635, %add666
  %add668 = fadd double %mul667, %sub664
  %mul669 = fmul double %sub635, %add668
  %add670 = fadd double %sub649, %mul669
  %mul673 = fmul double %141, %mul632
  %add.ptr627.sum515 = or i64 %idx.ext616, 11
  %arrayidx674 = getelementptr inbounds double* %7, i64 %add.ptr627.sum515
  %153 = load double* %arrayidx674, align 8, !tbaa !17
  %mul675 = fmul double %mul632, %153
  %add.ptr627.sum516 = or i64 %idx.ext616, 10
  %arrayidx676 = getelementptr inbounds double* %7, i64 %add.ptr627.sum516
  %154 = load double* %arrayidx676, align 8, !tbaa !17
  %mul677 = fmul double %mul632, %154
  %add.ptr627.sum517 = or i64 %idx.ext616, 9
  %arrayidx678 = getelementptr inbounds double* %7, i64 %add.ptr627.sum517
  %155 = load double* %arrayidx678, align 8, !tbaa !17
  %mul679 = fmul double %mul632, %155
  %mul680 = fmul double %sub635, %mul675
  %add681 = fadd double %mul680, %mul677
  %mul682 = fmul double %sub635, %add681
  %add683 = fadd double %mul679, %mul682
  %mul684 = fmul double %sub635, %add683
  %add685 = fadd double %mul673, %mul684
  %add688 = fadd double %sub654, %mul675
  %add689 = fadd double %sub659, %mul677
  %add690 = fadd double %sub664, %mul679
  %mul692 = fmul double %sub635, 3.000000e+00
  %mul693 = fmul double %mul692, %add688
  %mul694 = fmul double %add689, 2.000000e+00
  %add695 = fadd double %mul693, %mul694
  %mul696 = fmul double %sub635, %add695
  %add697 = fadd double %add690, %mul696
  %mul698 = fmul double %144, -2.000000e+00
  %mul699 = fmul double %mul698, %add697
  %mul702 = fmul double %sub591, %mul699
  %156 = insertelement <2 x double> undef, double %add670, i32 0
  %157 = insertelement <2 x double> %156, double %sub591, i32 1
  %158 = insertelement <2 x double> undef, double %144, i32 0
  %159 = insertelement <2 x double> %158, double %mul702, i32 1
  %160 = fmul <2 x double> %157, %159
  %161 = fadd <2 x double> %128, %160
  %162 = insertelement <2 x double> undef, double %sub596, i32 0
  %163 = insertelement <2 x double> %162, double %sub601, i32 1
  %164 = insertelement <2 x double> undef, double %mul702, i32 0
  %165 = insertelement <2 x double> %164, double %mul702, i32 1
  %166 = fmul <2 x double> %163, %165
  %167 = fadd <2 x double> %129, %166
  %168 = load double* %x709, align 8, !tbaa !72
  %add710 = fadd double %168, %mul702
  store double %add710, double* %x709, align 8, !tbaa !72
  %x711 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul713 = fmul double %sub596, %mul699
  %169 = insertelement <2 x double> undef, double %add685, i32 0
  %170 = insertelement <2 x double> %169, double %sub596, i32 1
  %171 = insertelement <2 x double> %158, double %mul713, i32 1
  %172 = fmul <2 x double> %170, %171
  %173 = fadd <2 x double> %131, %172
  %174 = load double* %y718, align 8, !tbaa !73
  %add719 = fadd double %174, %mul713
  store double %add719, double* %y718, align 8, !tbaa !73
  %175 = bitcast double* %x711 to <2 x double>*
  %176 = load <2 x double>* %175, align 8, !tbaa !17
  %177 = insertelement <2 x double> %164, double %mul713, i32 1
  %178 = fsub <2 x double> %176, %177
  %179 = bitcast double* %x711 to <2 x double>*
  store <2 x double> %178, <2 x double>* %179, align 8, !tbaa !17
  %mul722 = fmul double %sub601, %mul699
  %180 = insertelement <2 x double> undef, double %sub601, i32 0
  %181 = insertelement <2 x double> %180, double %sub601, i32 1
  %182 = insertelement <2 x double> undef, double %mul713, i32 0
  %183 = insertelement <2 x double> %182, double %mul722, i32 1
  %184 = fmul <2 x double> %181, %183
  %185 = fadd <2 x double> %130, %184
  %186 = load double* %z725, align 8, !tbaa !74
  %add726 = fadd double %186, %mul722
  store double %add726, double* %z725, align 8, !tbaa !74
  %z727 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %187 = load double* %z727, align 8, !tbaa !74
  %sub728 = fsub double %187, %mul722
  store double %sub728, double* %z727, align 8, !tbaa !74
  %indvars.iv.next734 = add nuw nsw i64 %indvars.iv733, 1
  %lftr.wideiv735 = trunc i64 %indvars.iv.next734 to i32
  %exitcond736 = icmp eq i32 %lftr.wideiv735, %126
  br i1 %exitcond736, label %for.end731, label %for.body583.for.body583_crit_edge

for.body583.for.body583_crit_edge:                ; preds = %for.body583
  %.pre = load i32** %atomVdwType.i540, align 8, !tbaa !64
  br label %for.body583

for.end731:                                       ; preds = %for.body583, %for.end561
  %188 = phi <2 x double> [ %61, %for.end561 ], [ %161, %for.body583 ]
  %189 = phi <2 x double> [ %62, %for.end561 ], [ %167, %for.body583 ]
  %190 = phi <2 x double> [ %63, %for.end561 ], [ %185, %for.body583 ]
  %191 = phi <2 x double> [ %64, %for.end561 ], [ %173, %for.body583 ]
  %conv736 = trunc i64 %sub.ptr.div572 to i32
  %cmp738643 = icmp sgt i32 %conv736, 0
  br i1 %cmp738643, label %for.body739.lr.ph, label %for.inc925

for.body739.lr.ph:                                ; preds = %for.end731
  %x900 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y910 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z918 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body739

for.body739:                                      ; preds = %for.body739, %for.body739.lr.ph
  %indvars.iv737 = phi i64 [ 0, %for.body739.lr.ph ], [ %indvars.iv.next738, %for.body739 ]
  %192 = phi <2 x double> [ %188, %for.body739.lr.ph ], [ %226, %for.body739 ]
  %193 = phi <2 x double> [ %189, %for.body739.lr.ph ], [ %232, %for.body739 ]
  %194 = phi <2 x double> [ %190, %for.body739.lr.ph ], [ %250, %for.body739 ]
  %195 = phi <2 x double> [ %191, %for.body739.lr.ph ], [ %238, %for.body739 ]
  %arrayidx742 = getelementptr inbounds i32* %cond173, i64 %indvars.iv737
  %196 = load i32* %arrayidx742, align 4, !tbaa !11
  %idx.ext744 = sext i32 %196 to i64
  %x748 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 0
  %197 = load double* %x748, align 8, !tbaa !59
  %sub749 = fsub double %70, %197
  %mul751 = fmul double %sub749, %sub749
  %y754 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 1
  %198 = load double* %y754, align 8, !tbaa !61
  %sub755 = fsub double %71, %198
  %mul756 = fmul double %sub755, %sub755
  %add757 = fadd double %mul751, %mul756
  %z760 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 2
  %199 = load double* %z760, align 8, !tbaa !62
  %sub761 = fsub double %72, %199
  %mul762 = fmul double %sub761, %sub761
  %add763 = fadd double %add757, %mul762
  %conv765 = fptrunc double %add763 to float
  %200 = bitcast float %conv765 to i32
  %shr769 = ashr i32 %200, 17
  %add770 = add nsw i32 %shr769, %mul
  %id772 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 2
  %201 = bitcast [4 x i8]* %id772 to i32*
  %bf.load773 = load i32* %201, align 4
  %bf.clear774 = and i32 %bf.load773, 4194303
  %idxprom.i533573 = zext i32 %bf.clear774 to i64
  %202 = load i32** %atomVdwType.i540, align 8, !tbaa !64
  %arrayidx.i534 = getelementptr inbounds i32* %202, i64 %idxprom.i533573
  %203 = load i32* %arrayidx.i534, align 4, !tbaa !11
  %conv.i = zext i32 %203 to i64
  %conv776 = shl nuw nsw i64 %conv.i, 1
  %mul777 = and i64 %conv776, 131070
  %add.ptr779.sum493 = or i64 %mul777, 1
  %mul782 = shl nsw i32 %add770, 4
  %idx.ext783 = sext i32 %mul782 to i64
  %add.ptr784 = getelementptr inbounds double* %7, i64 %idx.ext783
  %204 = load double* %add.ptr784, align 8, !tbaa !17
  %add.ptr784.sum494 = or i64 %idx.ext783, 4
  %add.ptr791 = getelementptr inbounds double* %7, i64 %add.ptr784.sum494
  %205 = load double* %add.ptr791, align 8, !tbaa !17
  %add.ptr784.sum495 = or i64 %idx.ext783, 8
  %add.ptr798 = getelementptr inbounds double* %7, i64 %add.ptr784.sum495
  %206 = load double* %add.ptr798, align 8, !tbaa !17
  %and802 = and i32 %200, -131072
  %charge804 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 1
  %207 = load float* %charge804, align 4, !tbaa !63
  %conv805 = fpext float %207 to double
  %mul806 = fmul double %mul373, %conv805
  %208 = bitcast i32 %and802 to float
  %conv809 = fpext float %208 to double
  %sub810 = fsub double %add763, %conv809
  %bf.lshr814 = lshr i32 %bf.load773, 28
  %idxprom815 = zext i32 %bf.lshr814 to i64
  %add.ptr369.sum = add i64 %idxprom815, %idx.ext368
  %arrayidx816 = getelementptr inbounds double* %95, i64 %add.ptr369.sum
  %209 = load double* %arrayidx816, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr779.sum493, %idx.ext.i
  %A818 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 0
  %210 = load double* %A818, align 8, !tbaa !69
  %mul819 = fmul double %8, %210
  %B821 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 1
  %211 = load double* %B821, align 8, !tbaa !71
  %mul822 = fmul double %8, %211
  %mul824 = fmul double %204, %mul819
  %mul825 = fmul double %205, %mul822
  %sub826 = fsub double %mul824, %mul825
  %add.ptr784.sum496 = or i64 %idx.ext783, 3
  %arrayidx828 = getelementptr inbounds double* %7, i64 %add.ptr784.sum496
  %212 = load double* %arrayidx828, align 8, !tbaa !17
  %mul829 = fmul double %mul819, %212
  %add.ptr791.sum497 = or i64 %idx.ext783, 7
  %arrayidx830 = getelementptr inbounds double* %7, i64 %add.ptr791.sum497
  %213 = load double* %arrayidx830, align 8, !tbaa !17
  %mul831 = fmul double %mul822, %213
  %sub832 = fsub double %mul829, %mul831
  %add.ptr784.sum498 = or i64 %idx.ext783, 2
  %arrayidx834 = getelementptr inbounds double* %7, i64 %add.ptr784.sum498
  %214 = load double* %arrayidx834, align 8, !tbaa !17
  %mul835 = fmul double %mul819, %214
  %add.ptr791.sum499 = or i64 %idx.ext783, 6
  %arrayidx836 = getelementptr inbounds double* %7, i64 %add.ptr791.sum499
  %215 = load double* %arrayidx836, align 8, !tbaa !17
  %mul837 = fmul double %mul822, %215
  %sub838 = fsub double %mul835, %mul837
  %add.ptr784.sum500 = or i64 %idx.ext783, 1
  %arrayidx840 = getelementptr inbounds double* %7, i64 %add.ptr784.sum500
  %216 = load double* %arrayidx840, align 8, !tbaa !17
  %mul841 = fmul double %mul819, %216
  %add.ptr791.sum501 = or i64 %idx.ext783, 5
  %arrayidx842 = getelementptr inbounds double* %7, i64 %add.ptr791.sum501
  %217 = load double* %arrayidx842, align 8, !tbaa !17
  %mul843 = fmul double %mul822, %217
  %sub844 = fsub double %mul841, %mul843
  %mul846 = fmul double %sub810, %sub832
  %add847 = fadd double %mul846, %sub838
  %mul848 = fmul double %sub810, %add847
  %add849 = fadd double %mul848, %sub844
  %mul850 = fmul double %sub810, %add849
  %add851 = fadd double %sub826, %mul850
  %mul855 = fmul double %sub854, %mul806
  %mul856 = fmul double %206, %mul855
  %add.ptr798.sum502 = or i64 %idx.ext783, 11
  %arrayidx858 = getelementptr inbounds double* %7, i64 %add.ptr798.sum502
  %218 = load double* %arrayidx858, align 8, !tbaa !17
  %mul859 = fmul double %mul855, %218
  %add.ptr798.sum503 = or i64 %idx.ext783, 10
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr798.sum503
  %219 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul855, %219
  %add.ptr798.sum504 = or i64 %idx.ext783, 9
  %arrayidx864 = getelementptr inbounds double* %7, i64 %add.ptr798.sum504
  %220 = load double* %arrayidx864, align 8, !tbaa !17
  %mul865 = fmul double %mul855, %220
  %mul867 = fmul double %sub810, %mul859
  %add868 = fadd double %mul867, %mul862
  %mul869 = fmul double %sub810, %add868
  %add870 = fadd double %mul865, %mul869
  %mul871 = fmul double %sub810, %add870
  %add872 = fadd double %mul856, %mul871
  %add875 = fadd double %sub832, %mul859
  %add876 = fadd double %sub838, %mul862
  %add877 = fadd double %sub844, %mul865
  %mul880 = fmul double %sub810, 3.000000e+00
  %mul881 = fmul double %mul880, %add875
  %mul882 = fmul double %add876, 2.000000e+00
  %add883 = fadd double %mul881, %mul882
  %mul884 = fmul double %sub810, %add883
  %add885 = fadd double %add877, %mul884
  %mul887 = fmul double %209, -2.000000e+00
  %mul888 = fmul double %mul887, %add885
  %mul893 = fmul double %sub749, %mul888
  %221 = insertelement <2 x double> undef, double %add851, i32 0
  %222 = insertelement <2 x double> %221, double %sub749, i32 1
  %223 = insertelement <2 x double> undef, double %209, i32 0
  %224 = insertelement <2 x double> %223, double %mul893, i32 1
  %225 = fmul <2 x double> %222, %224
  %226 = fadd <2 x double> %192, %225
  %227 = insertelement <2 x double> undef, double %sub755, i32 0
  %228 = insertelement <2 x double> %227, double %sub761, i32 1
  %229 = insertelement <2 x double> undef, double %mul893, i32 0
  %230 = insertelement <2 x double> %229, double %mul893, i32 1
  %231 = fmul <2 x double> %228, %230
  %232 = fadd <2 x double> %193, %231
  %233 = load double* %x900, align 8, !tbaa !72
  %add901 = fadd double %233, %mul893
  store double %add901, double* %x900, align 8, !tbaa !72
  %x902 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext744, i32 0
  %mul905 = fmul double %sub755, %mul888
  %234 = insertelement <2 x double> undef, double %add872, i32 0
  %235 = insertelement <2 x double> %234, double %sub755, i32 1
  %236 = insertelement <2 x double> %223, double %mul905, i32 1
  %237 = fmul <2 x double> %235, %236
  %238 = fadd <2 x double> %195, %237
  %239 = load double* %y910, align 8, !tbaa !73
  %add911 = fadd double %239, %mul905
  store double %add911, double* %y910, align 8, !tbaa !73
  %240 = bitcast double* %x902 to <2 x double>*
  %241 = load <2 x double>* %240, align 8, !tbaa !17
  %242 = insertelement <2 x double> %229, double %mul905, i32 1
  %243 = fsub <2 x double> %241, %242
  %244 = bitcast double* %x902 to <2 x double>*
  store <2 x double> %243, <2 x double>* %244, align 8, !tbaa !17
  %mul915 = fmul double %sub761, %mul888
  %245 = insertelement <2 x double> undef, double %sub761, i32 0
  %246 = insertelement <2 x double> %245, double %sub761, i32 1
  %247 = insertelement <2 x double> undef, double %mul905, i32 0
  %248 = insertelement <2 x double> %247, double %mul915, i32 1
  %249 = fmul <2 x double> %246, %248
  %250 = fadd <2 x double> %194, %249
  %251 = load double* %z918, align 8, !tbaa !74
  %add919 = fadd double %251, %mul915
  store double %add919, double* %z918, align 8, !tbaa !74
  %z920 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext744, i32 2
  %252 = load double* %z920, align 8, !tbaa !74
  %sub921 = fsub double %252, %mul915
  store double %sub921, double* %z920, align 8, !tbaa !74
  %indvars.iv.next738 = add nuw nsw i64 %indvars.iv737, 1
  %lftr.wideiv739 = trunc i64 %indvars.iv.next738 to i32
  %exitcond740 = icmp eq i32 %lftr.wideiv739, %conv736
  br i1 %exitcond740, label %for.inc925, label %for.body739

for.inc925:                                       ; preds = %for.body739, %for.end731, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end731 ], [ %pairCount.2, %for.body739 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0665, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end731 ], [ %pairlistindex.1, %for.body739 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1666, %for.end731 ], [ %i.1666, %for.body739 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0683, %if.then221 ], [ %exclChecksum.0683, %cond.end349 ], [ %conv575, %for.end731 ], [ %conv575, %for.body739 ]
  %253 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %188, %for.end731 ], [ %226, %for.body739 ]
  %254 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %189, %for.end731 ], [ %232, %for.body739 ]
  %255 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %190, %for.end731 ], [ %250, %for.body739 ]
  %256 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %191, %for.end731 ], [ %238, %for.body739 ]
  %inc926 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc926, %12
  br i1 %cmp183, label %for.body184, label %for.end927

for.end927:                                       ; preds = %for.inc925, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc925 ]
  %257 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %253, %for.inc925 ]
  %258 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %254, %for.inc925 ]
  %259 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %255, %for.inc925 ]
  %260 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %256, %for.inc925 ]
  %261 = extractelement <2 x double> %260, i32 0
  %arraydecay928 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp929 = icmp eq i32* %cond543545756762, %arraydecay928
  br i1 %cmp929, label %if.end934, label %delete.notnull932

delete.notnull932:                                ; preds = %for.end927
  %262 = bitcast i32* %cond543545756762 to i8*
  call void @_ZdaPv(i8* %262) #7
  br label %if.end934

if.end934:                                        ; preds = %delete.notnull932, %for.end927
  %arraydecay935 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp936 = icmp eq i32* %cond19547754763, %arraydecay935
  br i1 %cmp936, label %if.end941, label %delete.notnull939

delete.notnull939:                                ; preds = %if.end934
  %263 = bitcast i32* %cond19547754763 to i8*
  call void @_ZdaPv(i8* %263) #7
  br label %if.end941

if.end941:                                        ; preds = %delete.notnull939, %if.end934
  %arraydecay942 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp943 = icmp eq i32* %cond30758761, %arraydecay942
  br i1 %cmp943, label %if.end948, label %delete.notnull946

delete.notnull946:                                ; preds = %if.end941
  %264 = bitcast i32* %cond30758761 to i8*
  call void @_ZdaPv(i8* %264) #7
  br label %if.end948

if.end948:                                        ; preds = %delete.notnull946, %if.end941
  %arraydecay949 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp950 = icmp eq i32* %cond129551553559565, %arraydecay949
  br i1 %cmp950, label %if.end955, label %delete.notnull953

delete.notnull953:                                ; preds = %if.end948
  %265 = bitcast i32* %cond129551553559565 to i8*
  call void @_ZdaPv(i8* %265) #7
  br label %if.end955

if.end955:                                        ; preds = %delete.notnull953, %if.end948
  %arraydecay956 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp957 = icmp eq i32* %cond140555557567, %arraydecay956
  br i1 %cmp957, label %if.end962, label %delete.notnull960

delete.notnull960:                                ; preds = %if.end955
  %266 = bitcast i32* %cond140555557567 to i8*
  call void @_ZdaPv(i8* %266) #7
  br label %if.end962

if.end962:                                        ; preds = %delete.notnull960, %if.end955
  %arraydecay963 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp964 = icmp eq i32* %cond151561563, %arraydecay963
  br i1 %cmp964, label %if.end969, label %delete.notnull967

delete.notnull967:                                ; preds = %if.end962
  %267 = bitcast i32* %cond151561563 to i8*
  call void @_ZdaPv(i8* %267) #7
  br label %if.end969

if.end969:                                        ; preds = %delete.notnull967, %if.end962
  %arraydecay970 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp971 = icmp eq i32* %cond162569, %arraydecay970
  br i1 %cmp971, label %if.end976, label %delete.notnull974

delete.notnull974:                                ; preds = %if.end969
  %268 = bitcast i32* %cond162569 to i8*
  call void @_ZdaPv(i8* %268) #7
  br label %if.end976

if.end976:                                        ; preds = %delete.notnull974, %if.end969
  %arraydecay977 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp978 = icmp eq i32* %cond173, %arraydecay977
  br i1 %cmp978, label %if.end983, label %delete.notnull981

delete.notnull981:                                ; preds = %if.end976
  %269 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %269) #7
  br label %if.end983

if.end983:                                        ; preds = %delete.notnull981, %if.end976
  %conv984 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx985 = getelementptr inbounds double* %1, i64 22
  %270 = load double* %arrayidx985, align 8, !tbaa !17
  %add986 = fadd double %conv984, %270
  store double %add986, double* %arrayidx985, align 8, !tbaa !17
  %arrayidx987 = getelementptr inbounds double* %1, i64 2
  %271 = load double* %1, align 8, !tbaa !17
  %add990 = fadd double %261, %271
  store double %add990, double* %1, align 8, !tbaa !17
  %272 = bitcast double* %arrayidx987 to <2 x double>*
  %273 = load <2 x double>* %272, align 8, !tbaa !17
  %274 = fadd <2 x double> %257, %273
  %275 = bitcast double* %arrayidx987 to <2 x double>*
  store <2 x double> %274, <2 x double>* %275, align 8, !tbaa !17
  %arrayidx993 = getelementptr inbounds double* %1, i64 4
  %276 = bitcast double* %arrayidx993 to <2 x double>*
  %277 = load <2 x double>* %276, align 8, !tbaa !17
  %278 = fadd <2 x double> %258, %277
  %279 = bitcast double* %arrayidx993 to <2 x double>*
  store <2 x double> %278, <2 x double>* %279, align 8, !tbaa !17
  %arrayidx997 = getelementptr inbounds double* %1, i64 6
  %280 = bitcast double* %arrayidx997 to <2 x double>*
  %281 = load <2 x double>* %280, align 8, !tbaa !17
  %282 = shufflevector <2 x double> %258, <2 x double> %260, <2 x i32> <i32 0, i32 3>
  %283 = fadd <2 x double> %282, %281
  %284 = bitcast double* %arrayidx997 to <2 x double>*
  store <2 x double> %283, <2 x double>* %284, align 8, !tbaa !17
  %arrayidx1001 = getelementptr inbounds double* %1, i64 8
  %285 = bitcast double* %arrayidx1001 to <2 x double>*
  %286 = load <2 x double>* %285, align 8, !tbaa !17
  %287 = shufflevector <2 x double> %259, <2 x double> %258, <2 x i32> <i32 0, i32 3>
  %288 = fadd <2 x double> %287, %286
  %289 = bitcast double* %arrayidx1001 to <2 x double>*
  store <2 x double> %288, <2 x double>* %289, align 8, !tbaa !17
  %arrayidx1005 = getelementptr inbounds double* %1, i64 10
  %290 = bitcast double* %arrayidx1005 to <2 x double>*
  %291 = load <2 x double>* %290, align 8, !tbaa !17
  %292 = fadd <2 x double> %259, %291
  %293 = bitcast double* %arrayidx1005 to <2 x double>*
  store <2 x double> %292, <2 x double>* %293, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end983, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil13calc_self_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31704 = icmp sgt i32 %13, 0
  br i1 %cmp31704, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30775 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond539541773 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19543771 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv763 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next764, %for.inc ]
  %g.0705 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv763, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0705, 1
  %idxprom41 = sext i32 %g.0705 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond539541773, i64 %idxprom41
  %30 = trunc i64 %indvars.iv763 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0705, %for.body ]
  %indvars.iv.next764 = add nuw nsw i64 %indvars.iv763, 1
  %lftr.wideiv765 = trunc i64 %indvars.iv.next764 to i32
  %exitcond766 = icmp eq i32 %lftr.wideiv765, %13
  br i1 %exitcond766, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond539541773, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond539541773, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa780 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19543770779 = phi i32* [ %cond19543771, %for.end ], [ %cond19543771, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond539541772778 = phi i32* [ %cond539541773, %for.end ], [ %cond539541773, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30774777 = phi i32* [ %cond30775, %for.end ], [ %cond30775, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56698 = icmp sgt i32 %g.0.lcssa780, 0
  br i1 %cmp56698, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv759 = phi i64 [ %indvars.iv.next760, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0700 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0699 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond539541772778, i64 %indvars.iv759
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0700, 1
  %idxprom68 = sext i32 %fixg.0700 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19543770779, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0699, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0700, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next760 = add nuw nsw i64 %indvars.iv759, 1
  %lftr.wideiv761 = trunc i64 %indvars.iv.next760 to i32
  %exitcond762 = icmp eq i32 %lftr.wideiv761, %g.0.lcssa780
  br i1 %exitcond762, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond539541772778, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond539541772778 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19543770779, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19543770779 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30774777, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30774777 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19543770779, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19543770779, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2546 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147565 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125551553563 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114547549555561 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136557559 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171676 = icmp sgt i32 %sub162, 0
  br i1 %cmp171676, label %for.body172.lr.ph, label %for.end940

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i536 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125551553563 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147565 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub876 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30774777 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114547549555561 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc938, %for.body172.lr.ph
  %exclChecksum.0690 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc938 ]
  %i.0683 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc939, %for.inc938 ]
  %j_hgroup.0682 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc938 ]
  %g_lower.0681 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc938 ]
  %fixg_lower.0680 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc938 ]
  %pairlistindex.0679 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc938 ]
  %pairlistoffset.0678 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc938 ]
  %pairCount.0677 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc938 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %249, %for.inc938 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %250, %for.inc938 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %251, %for.inc938 ]
  %idxprom173 = sext i32 %i.0683 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i567 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i567, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i567, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i567, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0683
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0677
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0677, %div165
  %cmp214 = icmp slt i32 %pairCount.0677, %div168
  %or.cond525 = and i1 %cmp212, %cmp214
  br i1 %or.cond525, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0683
  br label %for.inc938

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0677, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0683
  %cmp237574 = icmp slt i32 %g_lower.0681, %g.0.lcssa780
  br i1 %cmp237574, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0681 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa780
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1575 = phi i32 [ %g_lower.0681, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond539541772778, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1575, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0681, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1575, %land.rhs238 ]
  %cmp245576 = icmp slt i32 %fixg_lower.0680, %fixg.2546
  br i1 %cmp245576, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0680 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next713 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2546
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv712 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next713, %while.cond244 ]
  %fixg_lower.1577 = phi i32 [ %fixg_lower.0680, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19543770779, i64 %indvars.iv712
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next713 = add nsw i64 %indvars.iv712, 1
  %inc252 = add nsw i32 %fixg_lower.1577, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0680, %land.end ], [ %fixg_lower.0680, %while.cond244.loopexit ], [ %fixg_lower.1577, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0681, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0682, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1579 = add nsw i32 %i.0683, 1
  %cmp257580 = icmp slt i32 %j.1579, %j_hgroup.1
  br i1 %cmp257580, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0683
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0683
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1579
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1579, %86
  %broadcast.splatinsert805 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat806 = shufflevector <4 x i32> %broadcast.splatinsert805, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction807 = add <4 x i32> %broadcast.splat806, <i32 0, i32 1, i32 2, i32 3>
  %induction808 = add <4 x i32> %broadcast.splat806, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114547549555561, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction807, <4 x i32>* %88, align 4
  %.sum811 = or i64 %index, 4
  %89 = getelementptr i32* %cond114547549555561, i64 %.sum811
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction808, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !83

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val803 = phi i32 [ %j.1579, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv714 = phi i64 [ %indvars.iv.next715, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1582 = phi i32 [ %j.1, %for.body258 ], [ %resume.val803, %middle.block ]
  %indvars.iv.next715 = add nuw nsw i64 %indvars.iv714, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114547549555561, i64 %indvars.iv714
  store i32 %j.1582, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1582, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next715 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !84

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114547549555561, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19543770779, i32* %cond539541772778
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2546, i32 %g.0.lcssa780
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30774777, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv720 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next721, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv720 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next721 = add nsw i64 %indvars.iv720, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next721
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div522 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div522 to i32
  %cmp330588 = icmp sgt i32 %conv328, 0
  br i1 %cmp330588, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv722 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next723, %cond.end351 ]
  %pli.0590 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30774777, i64 %indvars.iv722
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp523 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp523, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0590, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0590, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0590, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0590, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0590, i64 %cond352
  %indvars.iv.next723 = add nuw nsw i64 %indvars.iv722, 1
  %lftr.wideiv724 = trunc i64 %indvars.iv.next723 to i32
  %exitcond725 = icmp eq i32 %lftr.wideiv724, %104
  br i1 %exitcond725, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369519 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369519 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext520 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext520, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114547549555561, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114547549555561, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0678, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0677, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0679, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0680, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0681, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0682, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load390.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %110 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %111 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %111, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %112 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %112 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %bf.clear401 = and i32 %bf.load390.pre, 4194303
  %idxprom.i535568 = zext i32 %bf.clear401 to i64
  %113 = load i32** %atomVdwType.i536, align 8, !tbaa !64
  %arrayidx.i537 = getelementptr inbounds i32* %113, i64 %idxprom.i535568
  %114 = load i32* %arrayidx.i537, align 4, !tbaa !11
  %115 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %116 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv403 = shl i32 %114, 1
  %mul.i = and i32 %conv403, 131070
  %mul2.i = mul i32 %mul.i, %116
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp409616 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409616, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %117 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv735 = phi i64 [ %117, %for.body410.lr.ph ], [ %indvars.iv.next736, %for.inc466 ]
  %exclChecksum.1620 = phi i32 [ %exclChecksum.0690, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0619 = phi i32* [ %cond125551553563, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0618 = phi i32* [ %cond136557559, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114547549555561, i64 %indvars.iv735
  %118 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %118 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %119 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %67, %119
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %120 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %68, %120
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %121 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %69, %121
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %122 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %122, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond526 = or i1 %tobool444, %cmp445
  br i1 %or.cond526, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1620, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1620, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %64
  %cmp459 = icmp sgt i32 %bf.clear456, %65
  %or.cond527 = or i1 %cmp457, %cmp459
  br i1 %or.cond527, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0619, i64 1
  store i32 %118, i32* %pli405.0619, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0618, i64 1
  store i32 %118, i32* %plin.0618, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0618, %for.body410 ], [ %plin.0618, %land.lhs.true448 ], [ %plin.0618, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0619, %for.body410 ], [ %pli405.0619, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0619, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1620, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next736 = add nsw i64 %indvars.iv735, 1
  %lftr.wideiv737 = trunc i64 %indvars.iv.next736 to i32
  %exitcond738 = icmp eq i32 %lftr.wideiv737, %pairlistindex.2
  br i1 %exitcond738, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409616, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114547549555561, i64 %idxprom474
  %123 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %123 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %124 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %125 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %126 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %126, %if.then472 ], [ %132, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %125, %if.then472 ], [ %131, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %124, %if.then472 ], [ %130, %if.else537 ]
  %j2473.0.ph = phi i32 [ %123, %if.then472 ], [ %129, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136557559, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125551553563, %if.then472 ], [ %pli405.2.ph599, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0690, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer592

while.cond497.outer592:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph593 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph594 = phi double [ %132, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph595 = phi double [ %131, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph596 = phi double [ %130, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph597 = phi i32 [ %129, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph598 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph599 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph600 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer601

while.cond497.outer601:                           ; preds = %land.lhs.true528, %while.cond497.outer592
  %idxprom477.pn.ph602 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph593, %while.cond497.outer592 ]
  %p_j_z486.0.ph603 = phi double [ %132, %land.lhs.true528 ], [ %p_j_z486.0.ph594, %while.cond497.outer592 ]
  %p_j_y481.0.ph604 = phi double [ %131, %land.lhs.true528 ], [ %p_j_y481.0.ph595, %while.cond497.outer592 ]
  %p_j_x476.0.ph605 = phi double [ %130, %land.lhs.true528 ], [ %p_j_x476.0.ph596, %while.cond497.outer592 ]
  %j2473.0.ph606 = phi i32 [ %129, %land.lhs.true528 ], [ %j2473.0.ph597, %while.cond497.outer592 ]
  %k470.0.ph607 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph598, %while.cond497.outer592 ]
  %exclChecksum.4.ph608 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph600, %while.cond497.outer592 ]
  %127 = sext i32 %k470.0.ph607 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer601
  %indvars.iv731 = phi i64 [ %127, %while.cond497.outer601 ], [ %indvars.iv.next732, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph602, %while.cond497.outer601 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph603, %while.cond497.outer601 ], [ %132, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph604, %while.cond497.outer601 ], [ %131, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph605, %while.cond497.outer601 ], [ %130, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph606, %while.cond497.outer601 ], [ %129, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph607, %while.cond497.outer601 ], [ %inc500, %while.body499 ]
  %128 = trunc i64 %indvars.iv731 to i32
  %cmp498 = icmp slt i32 %128, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next732 = add nsw i64 %indvars.iv731, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114547549555561, i64 %indvars.iv.next732
  %129 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %67, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %129 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %130 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %68, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %131 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %69, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %132 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph608, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer601

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph608, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %64
  %cmp534 = icmp sgt i32 %atom2491.0, %65
  %or.cond528 = or i1 %cmp532, %cmp534
  br i1 %or.cond528, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph599, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph599, align 4, !tbaa !11
  br label %while.cond497.outer592

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136557559, %if.else469 ], [ %cond136557559, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125551553563, %if.else469 ], [ %cond125551553563, %for.cond408.preheader ], [ %pli405.2.ph599, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0690, %if.else469 ], [ %exclChecksum.0690, %for.cond408.preheader ], [ %exclChecksum.4.ph608, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552485 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552485 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext517 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext517, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125551553563, i64 %idxprom557
  %133 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125551553563, i64 %idxprom559
  store i32 %133, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564624 = icmp ult i32* %cond136557559, %plin.4
  br i1 %cmp564624, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8627 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0626 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147565, %for.cond563.preheader ]
  %pln.0625 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136557559, %for.cond563.preheader ]
  %134 = load i32* %pln.0625, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %134, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0626, i64 1
  store i32 %134, i32* %plix.0626, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8627, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0625, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8627, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147565, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0626, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136557559, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0625, %land.lhs.true565 ]
  %cmp573631 = icmp sgt i32 %conv553, 0
  br i1 %cmp573631, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv745 = phi i64 [ %indvars.iv.next746, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9634 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1633 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0632 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125551553563, i64 %indvars.iv745
  %135 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1633, i64 1
  store i32 %135, i32* %plix.1633, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9634, -1
  %indvars.iv.next746 = add nuw nsw i64 %indvars.iv745, 1
  %inc584 = add nsw i32 %k562.0632, 1
  %136 = trunc i64 %indvars.iv.next746 to i32
  %cmp573 = icmp slt i32 %136, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9634, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1633, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0632, %land.lhs.true574 ]
  %cmp587638 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587638, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %137 = sext i32 %k562.0.lcssa to i64
  %138 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %139 = lshr i64 %138, 2
  %140 = trunc i64 %139 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv747 = phi i64 [ %137, %for.body588.lr.ph ], [ %indvars.iv.next748, %for.inc606 ]
  %plin.5642 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2641 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0640 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125551553563, i64 %indvars.iv747
  %141 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %141 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %142 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %142, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598516 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598516, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %143 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %143 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5642, i64 1
  store i32 %141, i32* %plin.5642, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2641, i64 1
  store i32 %141, i32* %plix.2641, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0640, i64 1
  store i32 %141, i32* %plim.0640, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0640, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0640, %sw.bb602 ], [ %plim.0640, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2641, %for.body588 ], [ %plix.2641, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2641, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5642, %for.body588 ], [ %plin.5642, %sw.bb604 ], [ %plin.5642, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next748 = add nsw i64 %indvars.iv747, 1
  %lftr.wideiv749 = trunc i64 %indvars.iv.next748 to i32
  %exitcond750 = icmp eq i32 %lftr.wideiv749, %140
  br i1 %exitcond750, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612487 = lshr exact i64 %sub.ptr.sub611, 2
  %conv613486 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613486
  %add621 = add i64 %add614, %sub.ptr.div612487
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626489 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626489 to i32
  %cmp629646 = icmp sgt i32 %conv627, 0
  br i1 %cmp629646, label %for.body630.lr.ph, label %for.end762

for.body630.lr.ph:                                ; preds = %for.end608
  %x740 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y749 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z756 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630.for.body630_crit_edge, %for.body630.lr.ph
  %144 = phi i32* [ %113, %for.body630.lr.ph ], [ %.pre, %for.body630.for.body630_crit_edge ]
  %indvars.iv751 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next752, %for.body630.for.body630_crit_edge ]
  %145 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %174, %for.body630.for.body630_crit_edge ]
  %146 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %181, %for.body630.for.body630_crit_edge ]
  %147 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %192, %for.body630.for.body630_crit_edge ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv751
  %148 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %148 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %149 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %67, %149
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %150 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %68, %150
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %151 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %69, %151
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %152 = bitcast float %conv651 to i32
  %shr = ashr i32 %152, 17
  %add653 = add nsw i32 %shr, %mul
  %id654 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %153 = bitcast [4 x i8]* %id654 to i32*
  %bf.load655 = load i32* %153, align 4
  %bf.clear656 = and i32 %bf.load655, 4194303
  %idxprom.i531571 = zext i32 %bf.clear656 to i64
  %arrayidx.i533 = getelementptr inbounds i32* %144, i64 %idxprom.i531571
  %154 = load i32* %arrayidx.i533, align 4, !tbaa !11
  %conv.i534 = zext i32 %154 to i64
  %conv658 = shl nuw nsw i64 %conv.i534, 1
  %mul659 = and i64 %conv658, 131070
  %mul662 = shl nsw i32 %add653, 4
  %idx.ext663 = sext i32 %mul662 to i64
  %and = and i32 %152, -131072
  %charge677 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %155 = load float* %charge677, align 4, !tbaa !63
  %conv678 = fpext float %155 to double
  %mul679 = fmul double %mul398, %conv678
  %156 = bitcast i32 %and to float
  %conv681 = fpext float %156 to double
  %sub682 = fsub double %add650, %conv681
  %bf.lshr685 = lshr i32 %bf.load655, 28
  %idxprom686 = zext i32 %bf.lshr685 to i64
  %add.ptr394.sum506 = add i64 %idxprom686, %idx.ext393
  %arrayidx687 = getelementptr inbounds double* %110, i64 %add.ptr394.sum506
  %157 = load double* %arrayidx687, align 8, !tbaa !17
  %add.ptr.i.sum572 = add i64 %mul659, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum572, i32 0
  %158 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %8, %158
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum572, i32 1
  %159 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %8, %159
  %add.ptr664.sum507 = or i64 %idx.ext663, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr664.sum507
  %160 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %160
  %add.ptr669.sum508 = or i64 %idx.ext663, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr669.sum508
  %161 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %161
  %sub701 = fsub double %mul698, %mul700
  %add.ptr664.sum509 = or i64 %idx.ext663, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr664.sum509
  %162 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %162
  %add.ptr669.sum510 = or i64 %idx.ext663, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr669.sum510
  %163 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %163
  %sub706 = fsub double %mul703, %mul705
  %add.ptr664.sum511 = or i64 %idx.ext663, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr664.sum511
  %164 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %164
  %add.ptr669.sum512 = or i64 %idx.ext663, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr669.sum512
  %165 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %165
  %sub711 = fsub double %mul708, %mul710
  %add.ptr674.sum513 = or i64 %idx.ext663, 11
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr674.sum513
  %166 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul679, %166
  %add.ptr674.sum514 = or i64 %idx.ext663, 10
  %arrayidx715 = getelementptr inbounds double* %7, i64 %add.ptr674.sum514
  %167 = load double* %arrayidx715, align 8, !tbaa !17
  %mul716 = fmul double %mul679, %167
  %add.ptr674.sum515 = or i64 %idx.ext663, 9
  %arrayidx717 = getelementptr inbounds double* %7, i64 %add.ptr674.sum515
  %168 = load double* %arrayidx717, align 8, !tbaa !17
  %mul718 = fmul double %mul679, %168
  %add719 = fadd double %sub701, %mul714
  %add720 = fadd double %sub706, %mul716
  %add721 = fadd double %sub711, %mul718
  %mul723 = fmul double %sub682, 3.000000e+00
  %mul724 = fmul double %mul723, %add719
  %mul725 = fmul double %add720, 2.000000e+00
  %add726 = fadd double %mul724, %mul725
  %mul727 = fmul double %sub682, %add726
  %add728 = fadd double %add721, %mul727
  %mul729 = fmul double %157, -2.000000e+00
  %mul730 = fmul double %mul729, %add728
  %mul733 = fmul double %sub638, %mul730
  %169 = insertelement <2 x double> undef, double %sub638, i32 0
  %170 = insertelement <2 x double> %169, double %sub643, i32 1
  %171 = insertelement <2 x double> undef, double %mul733, i32 0
  %172 = insertelement <2 x double> %171, double %mul733, i32 1
  %173 = fmul <2 x double> %170, %172
  %174 = fadd <2 x double> %145, %173
  %175 = load double* %x740, align 8, !tbaa !72
  %add741 = fadd double %175, %mul733
  store double %add741, double* %x740, align 8, !tbaa !72
  %x742 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul744 = fmul double %sub643, %mul730
  %176 = insertelement <2 x double> undef, double %sub643, i32 0
  %177 = insertelement <2 x double> %176, double %sub648, i32 1
  %178 = insertelement <2 x double> undef, double %mul744, i32 0
  %179 = insertelement <2 x double> %178, double %mul744, i32 1
  %180 = fmul <2 x double> %177, %179
  %181 = fadd <2 x double> %146, %180
  %182 = load double* %y749, align 8, !tbaa !73
  %add750 = fadd double %182, %mul744
  store double %add750, double* %y749, align 8, !tbaa !73
  %183 = bitcast double* %x742 to <2 x double>*
  %184 = load <2 x double>* %183, align 8, !tbaa !17
  %185 = insertelement <2 x double> %171, double %mul744, i32 1
  %186 = fsub <2 x double> %184, %185
  %187 = bitcast double* %x742 to <2 x double>*
  store <2 x double> %186, <2 x double>* %187, align 8, !tbaa !17
  %mul753 = fmul double %sub648, %mul730
  %188 = insertelement <2 x double> undef, double %sub648, i32 0
  %189 = insertelement <2 x double> %188, double %sub648, i32 1
  %190 = insertelement <2 x double> %171, double %mul753, i32 1
  %191 = fmul <2 x double> %189, %190
  %192 = fadd <2 x double> %147, %191
  %193 = load double* %z756, align 8, !tbaa !74
  %add757 = fadd double %193, %mul753
  store double %add757, double* %z756, align 8, !tbaa !74
  %z758 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %194 = load double* %z758, align 8, !tbaa !74
  %sub759 = fsub double %194, %mul753
  store double %sub759, double* %z758, align 8, !tbaa !74
  %indvars.iv.next752 = add nuw nsw i64 %indvars.iv751, 1
  %lftr.wideiv753 = trunc i64 %indvars.iv.next752 to i32
  %exitcond754 = icmp eq i32 %lftr.wideiv753, %conv627
  br i1 %exitcond754, label %for.end762, label %for.body630.for.body630_crit_edge

for.body630.for.body630_crit_edge:                ; preds = %for.body630
  %.pre = load i32** %atomVdwType.i536, align 8, !tbaa !64
  br label %for.body630

for.end762:                                       ; preds = %for.body630, %for.end608
  %195 = phi <2 x double> [ %59, %for.end608 ], [ %174, %for.body630 ]
  %196 = phi <2 x double> [ %60, %for.end608 ], [ %181, %for.body630 ]
  %197 = phi <2 x double> [ %61, %for.end608 ], [ %192, %for.body630 ]
  %conv767 = trunc i64 %sub.ptr.div619 to i32
  %cmp769660 = icmp sgt i32 %conv767, 0
  br i1 %cmp769660, label %for.body770.lr.ph, label %for.inc938

for.body770.lr.ph:                                ; preds = %for.end762
  %x913 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y923 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z931 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body770

for.body770:                                      ; preds = %for.body770, %for.body770.lr.ph
  %indvars.iv755 = phi i64 [ 0, %for.body770.lr.ph ], [ %indvars.iv.next756, %for.body770 ]
  %198 = phi <2 x double> [ %195, %for.body770.lr.ph ], [ %228, %for.body770 ]
  %199 = phi <2 x double> [ %196, %for.body770.lr.ph ], [ %235, %for.body770 ]
  %200 = phi <2 x double> [ %197, %for.body770.lr.ph ], [ %246, %for.body770 ]
  %arrayidx773 = getelementptr inbounds i32* %cond158, i64 %indvars.iv755
  %201 = load i32* %arrayidx773, align 4, !tbaa !11
  %idx.ext775 = sext i32 %201 to i64
  %x779 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 0
  %202 = load double* %x779, align 8, !tbaa !59
  %sub780 = fsub double %67, %202
  %mul782 = fmul double %sub780, %sub780
  %y785 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 1
  %203 = load double* %y785, align 8, !tbaa !61
  %sub786 = fsub double %68, %203
  %mul787 = fmul double %sub786, %sub786
  %add788 = fadd double %mul782, %mul787
  %z791 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 2
  %204 = load double* %z791, align 8, !tbaa !62
  %sub792 = fsub double %69, %204
  %mul793 = fmul double %sub792, %sub792
  %add794 = fadd double %add788, %mul793
  %conv796 = fptrunc double %add794 to float
  %205 = bitcast float %conv796 to i32
  %shr800 = ashr i32 %205, 17
  %add801 = add nsw i32 %shr800, %mul
  %id803 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 2
  %206 = bitcast [4 x i8]* %id803 to i32*
  %bf.load804 = load i32* %206, align 4
  %bf.clear805 = and i32 %bf.load804, 4194303
  %idxprom.i529569 = zext i32 %bf.clear805 to i64
  %207 = load i32** %atomVdwType.i536, align 8, !tbaa !64
  %arrayidx.i530 = getelementptr inbounds i32* %207, i64 %idxprom.i529569
  %208 = load i32* %arrayidx.i530, align 4, !tbaa !11
  %conv.i = zext i32 %208 to i64
  %conv807 = shl nuw nsw i64 %conv.i, 1
  %mul808 = and i64 %conv807, 131070
  %add.ptr810.sum491 = or i64 %mul808, 1
  %mul813 = shl nsw i32 %add801, 4
  %idx.ext814 = sext i32 %mul813 to i64
  %and833 = and i32 %205, -131072
  %charge835 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 1
  %209 = load float* %charge835, align 4, !tbaa !63
  %conv836 = fpext float %209 to double
  %mul837 = fmul double %mul398, %conv836
  %210 = bitcast i32 %and833 to float
  %conv840 = fpext float %210 to double
  %sub841 = fsub double %add794, %conv840
  %bf.lshr845 = lshr i32 %bf.load804, 28
  %idxprom846 = zext i32 %bf.lshr845 to i64
  %add.ptr394.sum = add i64 %idxprom846, %idx.ext393
  %arrayidx847 = getelementptr inbounds double* %110, i64 %add.ptr394.sum
  %211 = load double* %arrayidx847, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr810.sum491, %idx.ext.i
  %A849 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum, i32 0
  %212 = load double* %A849, align 8, !tbaa !69
  %mul850 = fmul double %8, %212
  %B852 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum, i32 1
  %213 = load double* %B852, align 8, !tbaa !71
  %mul853 = fmul double %8, %213
  %add.ptr815.sum494 = or i64 %idx.ext814, 3
  %arrayidx859 = getelementptr inbounds double* %7, i64 %add.ptr815.sum494
  %214 = load double* %arrayidx859, align 8, !tbaa !17
  %mul860 = fmul double %mul850, %214
  %add.ptr822.sum495 = or i64 %idx.ext814, 7
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr822.sum495
  %215 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul853, %215
  %sub863 = fsub double %mul860, %mul862
  %add.ptr815.sum496 = or i64 %idx.ext814, 2
  %arrayidx865 = getelementptr inbounds double* %7, i64 %add.ptr815.sum496
  %216 = load double* %arrayidx865, align 8, !tbaa !17
  %mul866 = fmul double %mul850, %216
  %add.ptr822.sum497 = or i64 %idx.ext814, 6
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr822.sum497
  %217 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %mul853, %217
  %sub869 = fsub double %mul866, %mul868
  %add.ptr815.sum498 = or i64 %idx.ext814, 1
  %arrayidx871 = getelementptr inbounds double* %7, i64 %add.ptr815.sum498
  %218 = load double* %arrayidx871, align 8, !tbaa !17
  %mul872 = fmul double %mul850, %218
  %add.ptr822.sum499 = or i64 %idx.ext814, 5
  %arrayidx873 = getelementptr inbounds double* %7, i64 %add.ptr822.sum499
  %219 = load double* %arrayidx873, align 8, !tbaa !17
  %mul874 = fmul double %mul853, %219
  %sub875 = fsub double %mul872, %mul874
  %mul877 = fmul double %sub876, %mul837
  %add.ptr829.sum500 = or i64 %idx.ext814, 11
  %arrayidx880 = getelementptr inbounds double* %7, i64 %add.ptr829.sum500
  %220 = load double* %arrayidx880, align 8, !tbaa !17
  %mul881 = fmul double %mul877, %220
  %add.ptr829.sum501 = or i64 %idx.ext814, 10
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr829.sum501
  %221 = load double* %arrayidx883, align 8, !tbaa !17
  %mul884 = fmul double %mul877, %221
  %add.ptr829.sum502 = or i64 %idx.ext814, 9
  %arrayidx886 = getelementptr inbounds double* %7, i64 %add.ptr829.sum502
  %222 = load double* %arrayidx886, align 8, !tbaa !17
  %mul887 = fmul double %mul877, %222
  %add888 = fadd double %sub863, %mul881
  %add889 = fadd double %sub869, %mul884
  %add890 = fadd double %sub875, %mul887
  %mul893 = fmul double %sub841, 3.000000e+00
  %mul894 = fmul double %mul893, %add888
  %mul895 = fmul double %add889, 2.000000e+00
  %add896 = fadd double %mul894, %mul895
  %mul897 = fmul double %sub841, %add896
  %add898 = fadd double %add890, %mul897
  %mul900 = fmul double %211, -2.000000e+00
  %mul901 = fmul double %mul900, %add898
  %mul906 = fmul double %sub780, %mul901
  %223 = insertelement <2 x double> undef, double %sub780, i32 0
  %224 = insertelement <2 x double> %223, double %sub786, i32 1
  %225 = insertelement <2 x double> undef, double %mul906, i32 0
  %226 = insertelement <2 x double> %225, double %mul906, i32 1
  %227 = fmul <2 x double> %224, %226
  %228 = fadd <2 x double> %198, %227
  %229 = load double* %x913, align 8, !tbaa !72
  %add914 = fadd double %229, %mul906
  store double %add914, double* %x913, align 8, !tbaa !72
  %x915 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext775, i32 0
  %mul918 = fmul double %sub786, %mul901
  %230 = insertelement <2 x double> undef, double %sub786, i32 0
  %231 = insertelement <2 x double> %230, double %sub792, i32 1
  %232 = insertelement <2 x double> undef, double %mul918, i32 0
  %233 = insertelement <2 x double> %232, double %mul918, i32 1
  %234 = fmul <2 x double> %231, %233
  %235 = fadd <2 x double> %199, %234
  %236 = load double* %y923, align 8, !tbaa !73
  %add924 = fadd double %236, %mul918
  store double %add924, double* %y923, align 8, !tbaa !73
  %237 = bitcast double* %x915 to <2 x double>*
  %238 = load <2 x double>* %237, align 8, !tbaa !17
  %239 = insertelement <2 x double> %225, double %mul918, i32 1
  %240 = fsub <2 x double> %238, %239
  %241 = bitcast double* %x915 to <2 x double>*
  store <2 x double> %240, <2 x double>* %241, align 8, !tbaa !17
  %mul928 = fmul double %sub792, %mul901
  %242 = insertelement <2 x double> undef, double %sub792, i32 0
  %243 = insertelement <2 x double> %242, double %sub792, i32 1
  %244 = insertelement <2 x double> %225, double %mul928, i32 1
  %245 = fmul <2 x double> %243, %244
  %246 = fadd <2 x double> %200, %245
  %247 = load double* %z931, align 8, !tbaa !74
  %add932 = fadd double %247, %mul928
  store double %add932, double* %z931, align 8, !tbaa !74
  %z933 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext775, i32 2
  %248 = load double* %z933, align 8, !tbaa !74
  %sub934 = fsub double %248, %mul928
  store double %sub934, double* %z933, align 8, !tbaa !74
  %indvars.iv.next756 = add nuw nsw i64 %indvars.iv755, 1
  %lftr.wideiv757 = trunc i64 %indvars.iv.next756 to i32
  %exitcond758 = icmp eq i32 %lftr.wideiv757, %conv767
  br i1 %exitcond758, label %for.inc938, label %for.body770

for.inc938:                                       ; preds = %for.body770, %for.end762, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end762 ], [ %pairCount.2, %for.body770 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0678, %if.then215 ], [ %pairlistoffset.1, %for.end762 ], [ %pairlistoffset.1, %for.body770 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0679, %if.then215 ], [ %pairlistindex.2, %for.end762 ], [ %pairlistindex.2, %for.body770 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0680, %if.then215 ], [ %fixg_lower.3, %for.end762 ], [ %fixg_lower.3, %for.body770 ]
  %g_lower.4 = phi i32 [ %g_lower.0681, %if.then215 ], [ %g_lower.3, %for.end762 ], [ %g_lower.3, %for.body770 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0682, %if.then215 ], [ %j_hgroup.2, %for.end762 ], [ %j_hgroup.2, %for.body770 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0683, %for.end762 ], [ %i.0683, %for.body770 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0690, %if.then215 ], [ %conv622, %for.end762 ], [ %conv622, %for.body770 ]
  %249 = phi <2 x double> [ %59, %if.then215 ], [ %195, %for.end762 ], [ %228, %for.body770 ]
  %250 = phi <2 x double> [ %60, %if.then215 ], [ %196, %for.end762 ], [ %235, %for.body770 ]
  %251 = phi <2 x double> [ %61, %if.then215 ], [ %197, %for.end762 ], [ %246, %for.body770 ]
  %inc939 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc939
  br i1 %cmp171, label %for.body172, label %for.end940

for.end940:                                       ; preds = %for.inc938, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc938 ]
  %252 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %249, %for.inc938 ]
  %253 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %250, %for.inc938 ]
  %254 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %251, %for.inc938 ]
  %255 = extractelement <2 x double> %254, i32 1
  %arraydecay941 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp942 = icmp eq i32* %cond539541772778, %arraydecay941
  br i1 %cmp942, label %if.end947, label %delete.notnull945

delete.notnull945:                                ; preds = %for.end940
  %256 = bitcast i32* %cond539541772778 to i8*
  call void @_ZdaPv(i8* %256) #7
  br label %if.end947

if.end947:                                        ; preds = %delete.notnull945, %for.end940
  %arraydecay948 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp949 = icmp eq i32* %cond19543770779, %arraydecay948
  br i1 %cmp949, label %if.end954, label %delete.notnull952

delete.notnull952:                                ; preds = %if.end947
  %257 = bitcast i32* %cond19543770779 to i8*
  call void @_ZdaPv(i8* %257) #7
  br label %if.end954

if.end954:                                        ; preds = %delete.notnull952, %if.end947
  %arraydecay955 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp956 = icmp eq i32* %cond30774777, %arraydecay955
  br i1 %cmp956, label %if.end961, label %delete.notnull959

delete.notnull959:                                ; preds = %if.end954
  %258 = bitcast i32* %cond30774777 to i8*
  call void @_ZdaPv(i8* %258) #7
  br label %if.end961

if.end961:                                        ; preds = %delete.notnull959, %if.end954
  %arraydecay962 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp963 = icmp eq i32* %cond114547549555561, %arraydecay962
  br i1 %cmp963, label %if.end968, label %delete.notnull966

delete.notnull966:                                ; preds = %if.end961
  %259 = bitcast i32* %cond114547549555561 to i8*
  call void @_ZdaPv(i8* %259) #7
  br label %if.end968

if.end968:                                        ; preds = %delete.notnull966, %if.end961
  %arraydecay969 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp970 = icmp eq i32* %cond125551553563, %arraydecay969
  br i1 %cmp970, label %if.end975, label %delete.notnull973

delete.notnull973:                                ; preds = %if.end968
  %260 = bitcast i32* %cond125551553563 to i8*
  call void @_ZdaPv(i8* %260) #7
  br label %if.end975

if.end975:                                        ; preds = %delete.notnull973, %if.end968
  %arraydecay976 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp977 = icmp eq i32* %cond136557559, %arraydecay976
  br i1 %cmp977, label %if.end982, label %delete.notnull980

delete.notnull980:                                ; preds = %if.end975
  %261 = bitcast i32* %cond136557559 to i8*
  call void @_ZdaPv(i8* %261) #7
  br label %if.end982

if.end982:                                        ; preds = %delete.notnull980, %if.end975
  %arraydecay983 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp984 = icmp eq i32* %cond147565, %arraydecay983
  br i1 %cmp984, label %if.end989, label %delete.notnull987

delete.notnull987:                                ; preds = %if.end982
  %262 = bitcast i32* %cond147565 to i8*
  call void @_ZdaPv(i8* %262) #7
  br label %if.end989

if.end989:                                        ; preds = %delete.notnull987, %if.end982
  %arraydecay990 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp991 = icmp eq i32* %cond158, %arraydecay990
  br i1 %cmp991, label %if.end996, label %delete.notnull994

delete.notnull994:                                ; preds = %if.end989
  %263 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %263) #7
  br label %if.end996

if.end996:                                        ; preds = %delete.notnull994, %if.end989
  %conv997 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx998 = getelementptr inbounds double* %1, i64 22
  %264 = load double* %arrayidx998, align 8, !tbaa !17
  %add999 = fadd double %conv997, %264
  store double %add999, double* %arrayidx998, align 8, !tbaa !17
  %arrayidx1000 = getelementptr inbounds double* %1, i64 3
  %265 = bitcast double* %arrayidx1000 to <2 x double>*
  %266 = load <2 x double>* %265, align 8, !tbaa !17
  %267 = fadd <2 x double> %252, %266
  %268 = bitcast double* %arrayidx1000 to <2 x double>*
  store <2 x double> %267, <2 x double>* %268, align 8, !tbaa !17
  %arrayidx1004 = getelementptr inbounds double* %1, i64 5
  %269 = bitcast double* %arrayidx1004 to <2 x double>*
  %270 = load <2 x double>* %269, align 8, !tbaa !17
  %271 = shufflevector <2 x double> %254, <2 x double> %252, <2 x i32> <i32 0, i32 3>
  %272 = fadd <2 x double> %271, %270
  %273 = bitcast double* %arrayidx1004 to <2 x double>*
  store <2 x double> %272, <2 x double>* %273, align 8, !tbaa !17
  %arrayidx1008 = getelementptr inbounds double* %1, i64 7
  %274 = bitcast double* %arrayidx1008 to <2 x double>*
  %275 = load <2 x double>* %274, align 8, !tbaa !17
  %276 = fadd <2 x double> %253, %275
  %277 = bitcast double* %arrayidx1008 to <2 x double>*
  store <2 x double> %276, <2 x double>* %277, align 8, !tbaa !17
  %arrayidx1012 = getelementptr inbounds double* %1, i64 9
  %278 = bitcast double* %arrayidx1012 to <2 x double>*
  %279 = load <2 x double>* %278, align 8, !tbaa !17
  %280 = shufflevector <2 x double> %254, <2 x double> %253, <2 x i32> <i32 0, i32 3>
  %281 = fadd <2 x double> %280, %279
  %282 = bitcast double* %arrayidx1012 to <2 x double>*
  store <2 x double> %281, <2 x double>* %282, align 8, !tbaa !17
  %arrayidx1016 = getelementptr inbounds double* %1, i64 11
  %283 = load double* %arrayidx1016, align 8, !tbaa !17
  %add1017 = fadd double %255, %283
  store double %add1017, double* %arrayidx1016, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end996, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil20calc_self_energy_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31754 = icmp sgt i32 %13, 0
  br i1 %cmp31754, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30825 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond577579823 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19581821 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv813 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next814, %for.inc ]
  %g.0755 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv813, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0755, 1
  %idxprom41 = sext i32 %g.0755 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond577579823, i64 %idxprom41
  %30 = trunc i64 %indvars.iv813 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0755, %for.body ]
  %indvars.iv.next814 = add nuw nsw i64 %indvars.iv813, 1
  %lftr.wideiv815 = trunc i64 %indvars.iv.next814 to i32
  %exitcond816 = icmp eq i32 %lftr.wideiv815, %13
  br i1 %exitcond816, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond577579823, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond577579823, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa830 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19581820829 = phi i32* [ %cond19581821, %for.end ], [ %cond19581821, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond577579822828 = phi i32* [ %cond577579823, %for.end ], [ %cond577579823, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30824827 = phi i32* [ %cond30825, %for.end ], [ %cond30825, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56748 = icmp sgt i32 %g.0.lcssa830, 0
  br i1 %cmp56748, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv809 = phi i64 [ %indvars.iv.next810, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0750 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0749 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond577579822828, i64 %indvars.iv809
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0750, 1
  %idxprom68 = sext i32 %fixg.0750 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19581820829, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0749, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0750, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next810 = add nuw nsw i64 %indvars.iv809, 1
  %lftr.wideiv811 = trunc i64 %indvars.iv.next810 to i32
  %exitcond812 = icmp eq i32 %lftr.wideiv811, %g.0.lcssa830
  br i1 %exitcond812, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond577579822828, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond577579822828 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19581820829, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19581820829 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30824827, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30824827 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19581820829, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19581820829, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2584 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147603 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125589591601 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114585587593599 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136595597 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171722 = icmp sgt i32 %sub162, 0
  br i1 %cmp171722, label %for.body172.lr.ph, label %for.end974

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i574 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125589591601 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147603 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub901 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30824827 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114585587593599 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc972, %for.body172.lr.ph
  %exclChecksum.0738 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc972 ]
  %i.0729 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc973, %for.inc972 ]
  %j_hgroup.0728 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc972 ]
  %g_lower.0727 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc972 ]
  %fixg_lower.0726 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc972 ]
  %pairlistindex.0725 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc972 ]
  %pairlistoffset.0724 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc972 ]
  %pairCount.0723 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc972 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %271, %for.inc972 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %272, %for.inc972 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %273, %for.inc972 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %274, %for.inc972 ]
  %idxprom173 = sext i32 %i.0729 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %63 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %63, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i605 = zext i32 %bf.clear176 to i64
  %64 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i605, i32 0
  %65 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i605, i32 1
  %66 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i605, i32 2
  %67 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %65 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %68 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %69 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %70 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %71 = and i32 %bf.load175, 62914560
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0729
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0723
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0723, %div165
  %cmp214 = icmp slt i32 %pairCount.0723, %div168
  %or.cond563 = and i1 %cmp212, %cmp214
  br i1 %or.cond563, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0729
  br label %for.inc972

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0723, %if.then193 ], [ %sub211, %if.then199 ]
  %73 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %73, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %74 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0729
  %cmp237612 = icmp slt i32 %g_lower.0727, %g.0.lcssa830
  br i1 %cmp237612, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %75 = sext i32 %g_lower.0727 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %76, %g.0.lcssa830
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %75, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1613 = phi i32 [ %g_lower.0727, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond577579822828, i64 %indvars.iv
  %77 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %77, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1613, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0727, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1613, %land.rhs238 ]
  %cmp245614 = icmp slt i32 %fixg_lower.0726, %fixg.2584
  br i1 %cmp245614, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %78 = sext i32 %fixg_lower.0726 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %79 = trunc i64 %indvars.iv.next763 to i32
  %cmp245 = icmp slt i32 %79, %fixg.2584
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv762 = phi i64 [ %78, %land.rhs246.lr.ph ], [ %indvars.iv.next763, %while.cond244 ]
  %fixg_lower.1615 = phi i32 [ %fixg_lower.0726, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19581820829, i64 %indvars.iv762
  %80 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %80, %add236
  %indvars.iv.next763 = add nsw i64 %indvars.iv762, 1
  %inc252 = add nsw i32 %fixg_lower.1615, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0726, %land.end ], [ %fixg_lower.0726, %while.cond244.loopexit ], [ %fixg_lower.1615, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0727, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0728, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1617 = add nsw i32 %i.0729, 1
  %cmp257618 = icmp slt i32 %j.1617, %j_hgroup.1
  br i1 %cmp257618, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %81 = add i32 %j_hgroup.1, -1
  %82 = sub i32 %81, %i.0729
  %83 = add i32 %j_hgroup.1, -2
  %84 = sub i32 %83, %i.0729
  %85 = zext i32 %84 to i64
  %86 = add i64 %85, 1
  %end.idx = add i64 %85, 1
  %n.vec = and i64 %86, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1617
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %87 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1617, %87
  %broadcast.splatinsert858 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat859 = shufflevector <4 x i32> %broadcast.splatinsert858, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction860 = add <4 x i32> %broadcast.splat859, <i32 0, i32 1, i32 2, i32 3>
  %induction861 = add <4 x i32> %broadcast.splat859, <i32 4, i32 5, i32 6, i32 7>
  %88 = getelementptr inbounds i32* %cond114585587593599, i64 %index
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %induction860, <4 x i32>* %89, align 4
  %.sum864 = or i64 %index, 4
  %90 = getelementptr i32* %cond114585587593599, i64 %.sum864
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %induction861, <4 x i32>* %91, align 4
  %index.next = add i64 %index, 8
  %92 = icmp eq i64 %index.next, %n.vec
  br i1 %92, label %middle.block, label %vector.body, !llvm.loop !85

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val856 = phi i32 [ %j.1617, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv764 = phi i64 [ %indvars.iv.next765, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1620 = phi i32 [ %j.1, %for.body258 ], [ %resume.val856, %middle.block ]
  %indvars.iv.next765 = add nuw nsw i64 %indvars.iv764, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114585587593599, i64 %indvars.iv764
  store i32 %j.1620, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1620, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next765 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %82
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !86

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %82 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114585587593599, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %74, i32* %cond19581820829, i32* %cond577579822828
  %cond276 = select i1 %74, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %74, i32 %fixg.2584, i32 %g.0.lcssa830
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %93 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %93 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %94 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %95 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %96 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_y.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_x.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %j2.0.ph = phi i32 [ %93, %if.then283 ], [ %99, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30824827, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %97 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv770 = phi i64 [ %97, %while.cond298.outer ], [ %indvars.iv.next771, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %98 = trunc i64 %indvars.iv770 to i32
  %cmp299 = icmp slt i32 %98, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next771 = add nsw i64 %indvars.iv770, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next771
  %99 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %68, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %99 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %100 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %69, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %101 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %70, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %102 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div560 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div560 to i32
  %cmp330626 = icmp sgt i32 %conv328, 0
  br i1 %cmp330626, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %103 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %104 = lshr i64 %103, 2
  %105 = trunc i64 %104 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv772 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next773, %cond.end351 ]
  %pli.0628 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30824827, i64 %indvars.iv772
  %106 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %106 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %107 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %107, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp561 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp561, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %106, i32* %pli.0628, align 4, !tbaa !11
  %add354 = add nsw i32 %106, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0628, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %106, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0628, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %106, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0628, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0628, i64 %cond352
  %indvars.iv.next773 = add nuw nsw i64 %indvars.iv772, 1
  %lftr.wideiv774 = trunc i64 %indvars.iv.next773 to i32
  %exitcond775 = icmp eq i32 %lftr.wideiv774, %105
  br i1 %exitcond775, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369557 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369557 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext558 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext558, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114585587593599, i64 %idxprom374
  %108 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114585587593599, i64 %idxprom376
  store i32 %108, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0724, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0723, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0725, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0726, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0727, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0728, %if.else ]
  %109 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %109, 0
  %bf.load390.pre = load i32* %63, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %110 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %111 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %112 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %112, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %113 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %113 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %bf.clear401 = and i32 %bf.load390.pre, 4194303
  %idxprom.i573606 = zext i32 %bf.clear401 to i64
  %114 = load i32** %atomVdwType.i574, align 8, !tbaa !64
  %arrayidx.i575 = getelementptr inbounds i32* %114, i64 %idxprom.i573606
  %115 = load i32* %arrayidx.i575, align 4, !tbaa !11
  %116 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %117 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv403 = shl i32 %115, 1
  %mul.i = and i32 %conv403, 131070
  %mul2.i = mul i32 %mul.i, %117
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp409654 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %110, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409654, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %118 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv785 = phi i64 [ %118, %for.body410.lr.ph ], [ %indvars.iv.next786, %for.inc466 ]
  %exclChecksum.1658 = phi i32 [ %exclChecksum.0738, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0657 = phi i32* [ %cond125589591601, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0656 = phi i32* [ %cond136595597, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114585587593599, i64 %indvars.iv785
  %119 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %119 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %120 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %68, %120
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %121 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %69, %121
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %122 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %70, %122
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %123 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %123, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond564 = or i1 %tobool444, %cmp445
  br i1 %or.cond564, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1658, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1658, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %65
  %cmp459 = icmp sgt i32 %bf.clear456, %66
  %or.cond565 = or i1 %cmp457, %cmp459
  br i1 %or.cond565, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0657, i64 1
  store i32 %119, i32* %pli405.0657, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0656, i64 1
  store i32 %119, i32* %plin.0656, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0656, %for.body410 ], [ %plin.0656, %land.lhs.true448 ], [ %plin.0656, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0657, %for.body410 ], [ %pli405.0657, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0657, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1658, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next786 = add nsw i64 %indvars.iv785, 1
  %lftr.wideiv787 = trunc i64 %indvars.iv.next786 to i32
  %exitcond788 = icmp eq i32 %lftr.wideiv787, %pairlistindex.2
  br i1 %exitcond788, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409654, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114585587593599, i64 %idxprom474
  %124 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %124 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %125 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %126 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %127 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %127, %if.then472 ], [ %133, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %126, %if.then472 ], [ %132, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %125, %if.then472 ], [ %131, %if.else537 ]
  %j2473.0.ph = phi i32 [ %124, %if.then472 ], [ %130, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136595597, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125589591601, %if.then472 ], [ %pli405.2.ph637, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0738, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer630

while.cond497.outer630:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph631 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph632 = phi double [ %133, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph633 = phi double [ %132, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph634 = phi double [ %131, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph635 = phi i32 [ %130, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph636 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph637 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph638 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer639

while.cond497.outer639:                           ; preds = %land.lhs.true528, %while.cond497.outer630
  %idxprom477.pn.ph640 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph631, %while.cond497.outer630 ]
  %p_j_z486.0.ph641 = phi double [ %133, %land.lhs.true528 ], [ %p_j_z486.0.ph632, %while.cond497.outer630 ]
  %p_j_y481.0.ph642 = phi double [ %132, %land.lhs.true528 ], [ %p_j_y481.0.ph633, %while.cond497.outer630 ]
  %p_j_x476.0.ph643 = phi double [ %131, %land.lhs.true528 ], [ %p_j_x476.0.ph634, %while.cond497.outer630 ]
  %j2473.0.ph644 = phi i32 [ %130, %land.lhs.true528 ], [ %j2473.0.ph635, %while.cond497.outer630 ]
  %k470.0.ph645 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph636, %while.cond497.outer630 ]
  %exclChecksum.4.ph646 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph638, %while.cond497.outer630 ]
  %128 = sext i32 %k470.0.ph645 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer639
  %indvars.iv781 = phi i64 [ %128, %while.cond497.outer639 ], [ %indvars.iv.next782, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph640, %while.cond497.outer639 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph641, %while.cond497.outer639 ], [ %133, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph642, %while.cond497.outer639 ], [ %132, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph643, %while.cond497.outer639 ], [ %131, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph644, %while.cond497.outer639 ], [ %130, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph645, %while.cond497.outer639 ], [ %inc500, %while.body499 ]
  %129 = trunc i64 %indvars.iv781 to i32
  %cmp498 = icmp slt i32 %129, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next782 = add nsw i64 %indvars.iv781, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114585587593599, i64 %indvars.iv.next782
  %130 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %68, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %130 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %131 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %69, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %132 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %70, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %133 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph646, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer639

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph646, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %65
  %cmp534 = icmp sgt i32 %atom2491.0, %66
  %or.cond566 = or i1 %cmp532, %cmp534
  br i1 %or.cond566, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph637, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph637, align 4, !tbaa !11
  br label %while.cond497.outer630

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136595597, %if.else469 ], [ %cond136595597, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125589591601, %if.else469 ], [ %cond125589591601, %for.cond408.preheader ], [ %pli405.2.ph637, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0738, %if.else469 ], [ %exclChecksum.0738, %for.cond408.preheader ], [ %exclChecksum.4.ph646, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552523 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552523 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext555 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext555, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125589591601, i64 %idxprom557
  %134 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125589591601, i64 %idxprom559
  store i32 %134, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564662 = icmp ult i32* %cond136595597, %plin.4
  br i1 %cmp564662, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8665 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0664 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147603, %for.cond563.preheader ]
  %pln.0663 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136595597, %for.cond563.preheader ]
  %135 = load i32* %pln.0663, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0664, i64 1
  store i32 %135, i32* %plix.0664, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8665, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0663, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8665, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147603, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0664, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136595597, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0663, %land.lhs.true565 ]
  %cmp573669 = icmp sgt i32 %conv553, 0
  br i1 %cmp573669, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv795 = phi i64 [ %indvars.iv.next796, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9672 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1671 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0670 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125589591601, i64 %indvars.iv795
  %136 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %136, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1671, i64 1
  store i32 %136, i32* %plix.1671, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9672, -1
  %indvars.iv.next796 = add nuw nsw i64 %indvars.iv795, 1
  %inc584 = add nsw i32 %k562.0670, 1
  %137 = trunc i64 %indvars.iv.next796 to i32
  %cmp573 = icmp slt i32 %137, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9672, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1671, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0670, %land.lhs.true574 ]
  %cmp587676 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587676, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %138 = sext i32 %k562.0.lcssa to i64
  %139 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %140 = lshr i64 %139, 2
  %141 = trunc i64 %140 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv797 = phi i64 [ %138, %for.body588.lr.ph ], [ %indvars.iv.next798, %for.inc606 ]
  %plin.5680 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2679 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0678 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125589591601, i64 %indvars.iv797
  %142 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %142 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %143 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %143, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598554 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598554, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %67, i64 %add.ptr.sum
  %144 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %144 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5680, i64 1
  store i32 %142, i32* %plin.5680, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2679, i64 1
  store i32 %142, i32* %plix.2679, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0678, i64 1
  store i32 %142, i32* %plim.0678, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0678, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0678, %sw.bb602 ], [ %plim.0678, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2679, %for.body588 ], [ %plix.2679, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2679, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5680, %for.body588 ], [ %plin.5680, %sw.bb604 ], [ %plin.5680, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next798 = add nsw i64 %indvars.iv797, 1
  %lftr.wideiv799 = trunc i64 %indvars.iv.next798 to i32
  %exitcond800 = icmp eq i32 %lftr.wideiv799, %141
  br i1 %exitcond800, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612525 = lshr exact i64 %sub.ptr.sub611, 2
  %conv613524 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613524
  %add621 = add i64 %add614, %sub.ptr.div612525
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626527 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626527 to i32
  %cmp629684 = icmp sgt i32 %conv627, 0
  br i1 %cmp629684, label %for.body630.lr.ph, label %for.end778

for.body630.lr.ph:                                ; preds = %for.end608
  %x756 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y765 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z772 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630.for.body630_crit_edge, %for.body630.lr.ph
  %145 = phi i32* [ %114, %for.body630.lr.ph ], [ %.pre, %for.body630.for.body630_crit_edge ]
  %indvars.iv801 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next802, %for.body630.for.body630_crit_edge ]
  %146 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %179, %for.body630.for.body630_crit_edge ]
  %147 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %185, %for.body630.for.body630_crit_edge ]
  %148 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %203, %for.body630.for.body630_crit_edge ]
  %149 = phi <2 x double> [ %62, %for.body630.lr.ph ], [ %191, %for.body630.for.body630_crit_edge ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv801
  %150 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %150 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %151 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %68, %151
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %152 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %69, %152
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %153 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %70, %153
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %154 = bitcast float %conv651 to i32
  %shr = ashr i32 %154, 17
  %add653 = add nsw i32 %shr, %mul
  %id654 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %155 = bitcast [4 x i8]* %id654 to i32*
  %bf.load655 = load i32* %155, align 4
  %bf.clear656 = and i32 %bf.load655, 4194303
  %idxprom.i569609 = zext i32 %bf.clear656 to i64
  %arrayidx.i571 = getelementptr inbounds i32* %145, i64 %idxprom.i569609
  %156 = load i32* %arrayidx.i571, align 4, !tbaa !11
  %conv.i572 = zext i32 %156 to i64
  %conv658 = shl nuw nsw i64 %conv.i572, 1
  %mul659 = and i64 %conv658, 131070
  %mul662 = shl nsw i32 %add653, 4
  %idx.ext663 = sext i32 %mul662 to i64
  %add.ptr664 = getelementptr inbounds double* %7, i64 %idx.ext663
  %157 = load double* %add.ptr664, align 8, !tbaa !17
  %add.ptr664.sum542 = or i64 %idx.ext663, 4
  %add.ptr669 = getelementptr inbounds double* %7, i64 %add.ptr664.sum542
  %158 = load double* %add.ptr669, align 8, !tbaa !17
  %add.ptr664.sum543 = or i64 %idx.ext663, 8
  %add.ptr674 = getelementptr inbounds double* %7, i64 %add.ptr664.sum543
  %159 = load double* %add.ptr674, align 8, !tbaa !17
  %and = and i32 %154, -131072
  %charge677 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %160 = load float* %charge677, align 4, !tbaa !63
  %conv678 = fpext float %160 to double
  %mul679 = fmul double %mul398, %conv678
  %161 = bitcast i32 %and to float
  %conv681 = fpext float %161 to double
  %sub682 = fsub double %add650, %conv681
  %bf.lshr685 = lshr i32 %bf.load655, 28
  %idxprom686 = zext i32 %bf.lshr685 to i64
  %add.ptr394.sum544 = add i64 %idxprom686, %idx.ext393
  %arrayidx687 = getelementptr inbounds double* %111, i64 %add.ptr394.sum544
  %162 = load double* %arrayidx687, align 8, !tbaa !17
  %add.ptr.i.sum610 = add i64 %mul659, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum610, i32 0
  %163 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %8, %163
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum610, i32 1
  %164 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %8, %164
  %mul694 = fmul double %157, %mul690
  %mul695 = fmul double %158, %mul693
  %sub696 = fsub double %mul694, %mul695
  %add.ptr664.sum545 = or i64 %idx.ext663, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr664.sum545
  %165 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %165
  %add.ptr669.sum546 = or i64 %idx.ext663, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr669.sum546
  %166 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %166
  %sub701 = fsub double %mul698, %mul700
  %add.ptr664.sum547 = or i64 %idx.ext663, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr664.sum547
  %167 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %167
  %add.ptr669.sum548 = or i64 %idx.ext663, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr669.sum548
  %168 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %168
  %sub706 = fsub double %mul703, %mul705
  %add.ptr664.sum549 = or i64 %idx.ext663, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr664.sum549
  %169 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %169
  %add.ptr669.sum550 = or i64 %idx.ext663, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr669.sum550
  %170 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %170
  %sub711 = fsub double %mul708, %mul710
  %mul712 = fmul double %sub682, %sub701
  %add713 = fadd double %mul712, %sub706
  %mul714 = fmul double %sub682, %add713
  %add715 = fadd double %mul714, %sub711
  %mul716 = fmul double %sub682, %add715
  %add717 = fadd double %sub696, %mul716
  %mul720 = fmul double %159, %mul679
  %add.ptr674.sum551 = or i64 %idx.ext663, 11
  %arrayidx721 = getelementptr inbounds double* %7, i64 %add.ptr674.sum551
  %171 = load double* %arrayidx721, align 8, !tbaa !17
  %mul722 = fmul double %mul679, %171
  %add.ptr674.sum552 = or i64 %idx.ext663, 10
  %arrayidx723 = getelementptr inbounds double* %7, i64 %add.ptr674.sum552
  %172 = load double* %arrayidx723, align 8, !tbaa !17
  %mul724 = fmul double %mul679, %172
  %add.ptr674.sum553 = or i64 %idx.ext663, 9
  %arrayidx725 = getelementptr inbounds double* %7, i64 %add.ptr674.sum553
  %173 = load double* %arrayidx725, align 8, !tbaa !17
  %mul726 = fmul double %mul679, %173
  %mul727 = fmul double %sub682, %mul722
  %add728 = fadd double %mul727, %mul724
  %mul729 = fmul double %sub682, %add728
  %add730 = fadd double %mul726, %mul729
  %mul731 = fmul double %sub682, %add730
  %add732 = fadd double %mul720, %mul731
  %add735 = fadd double %sub701, %mul722
  %add736 = fadd double %sub706, %mul724
  %add737 = fadd double %sub711, %mul726
  %mul739 = fmul double %sub682, 3.000000e+00
  %mul740 = fmul double %mul739, %add735
  %mul741 = fmul double %add736, 2.000000e+00
  %add742 = fadd double %mul740, %mul741
  %mul743 = fmul double %sub682, %add742
  %add744 = fadd double %add737, %mul743
  %mul745 = fmul double %162, -2.000000e+00
  %mul746 = fmul double %mul745, %add744
  %mul749 = fmul double %sub638, %mul746
  %174 = insertelement <2 x double> undef, double %add717, i32 0
  %175 = insertelement <2 x double> %174, double %sub638, i32 1
  %176 = insertelement <2 x double> undef, double %162, i32 0
  %177 = insertelement <2 x double> %176, double %mul749, i32 1
  %178 = fmul <2 x double> %175, %177
  %179 = fadd <2 x double> %146, %178
  %180 = insertelement <2 x double> undef, double %sub643, i32 0
  %181 = insertelement <2 x double> %180, double %sub648, i32 1
  %182 = insertelement <2 x double> undef, double %mul749, i32 0
  %183 = insertelement <2 x double> %182, double %mul749, i32 1
  %184 = fmul <2 x double> %181, %183
  %185 = fadd <2 x double> %147, %184
  %186 = load double* %x756, align 8, !tbaa !72
  %add757 = fadd double %186, %mul749
  store double %add757, double* %x756, align 8, !tbaa !72
  %x758 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul760 = fmul double %sub643, %mul746
  %187 = insertelement <2 x double> undef, double %add732, i32 0
  %188 = insertelement <2 x double> %187, double %sub643, i32 1
  %189 = insertelement <2 x double> %176, double %mul760, i32 1
  %190 = fmul <2 x double> %188, %189
  %191 = fadd <2 x double> %149, %190
  %192 = load double* %y765, align 8, !tbaa !73
  %add766 = fadd double %192, %mul760
  store double %add766, double* %y765, align 8, !tbaa !73
  %193 = bitcast double* %x758 to <2 x double>*
  %194 = load <2 x double>* %193, align 8, !tbaa !17
  %195 = insertelement <2 x double> %182, double %mul760, i32 1
  %196 = fsub <2 x double> %194, %195
  %197 = bitcast double* %x758 to <2 x double>*
  store <2 x double> %196, <2 x double>* %197, align 8, !tbaa !17
  %mul769 = fmul double %sub648, %mul746
  %198 = insertelement <2 x double> undef, double %sub648, i32 0
  %199 = insertelement <2 x double> %198, double %sub648, i32 1
  %200 = insertelement <2 x double> undef, double %mul760, i32 0
  %201 = insertelement <2 x double> %200, double %mul769, i32 1
  %202 = fmul <2 x double> %199, %201
  %203 = fadd <2 x double> %148, %202
  %204 = load double* %z772, align 8, !tbaa !74
  %add773 = fadd double %204, %mul769
  store double %add773, double* %z772, align 8, !tbaa !74
  %z774 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %205 = load double* %z774, align 8, !tbaa !74
  %sub775 = fsub double %205, %mul769
  store double %sub775, double* %z774, align 8, !tbaa !74
  %indvars.iv.next802 = add nuw nsw i64 %indvars.iv801, 1
  %lftr.wideiv803 = trunc i64 %indvars.iv.next802 to i32
  %exitcond804 = icmp eq i32 %lftr.wideiv803, %conv627
  br i1 %exitcond804, label %for.end778, label %for.body630.for.body630_crit_edge

for.body630.for.body630_crit_edge:                ; preds = %for.body630
  %.pre = load i32** %atomVdwType.i574, align 8, !tbaa !64
  br label %for.body630

for.end778:                                       ; preds = %for.body630, %for.end608
  %206 = phi <2 x double> [ %59, %for.end608 ], [ %179, %for.body630 ]
  %207 = phi <2 x double> [ %60, %for.end608 ], [ %185, %for.body630 ]
  %208 = phi <2 x double> [ %61, %for.end608 ], [ %203, %for.body630 ]
  %209 = phi <2 x double> [ %62, %for.end608 ], [ %191, %for.body630 ]
  %conv783 = trunc i64 %sub.ptr.div619 to i32
  %cmp785702 = icmp sgt i32 %conv783, 0
  br i1 %cmp785702, label %for.body786.lr.ph, label %for.inc972

for.body786.lr.ph:                                ; preds = %for.end778
  %x947 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y957 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z965 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body786

for.body786:                                      ; preds = %for.body786, %for.body786.lr.ph
  %indvars.iv805 = phi i64 [ 0, %for.body786.lr.ph ], [ %indvars.iv.next806, %for.body786 ]
  %210 = phi <2 x double> [ %206, %for.body786.lr.ph ], [ %244, %for.body786 ]
  %211 = phi <2 x double> [ %207, %for.body786.lr.ph ], [ %250, %for.body786 ]
  %212 = phi <2 x double> [ %208, %for.body786.lr.ph ], [ %268, %for.body786 ]
  %213 = phi <2 x double> [ %209, %for.body786.lr.ph ], [ %256, %for.body786 ]
  %arrayidx789 = getelementptr inbounds i32* %cond158, i64 %indvars.iv805
  %214 = load i32* %arrayidx789, align 4, !tbaa !11
  %idx.ext791 = sext i32 %214 to i64
  %x795 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 0
  %215 = load double* %x795, align 8, !tbaa !59
  %sub796 = fsub double %68, %215
  %mul798 = fmul double %sub796, %sub796
  %y801 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 1
  %216 = load double* %y801, align 8, !tbaa !61
  %sub802 = fsub double %69, %216
  %mul803 = fmul double %sub802, %sub802
  %add804 = fadd double %mul798, %mul803
  %z807 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 2
  %217 = load double* %z807, align 8, !tbaa !62
  %sub808 = fsub double %70, %217
  %mul809 = fmul double %sub808, %sub808
  %add810 = fadd double %add804, %mul809
  %conv812 = fptrunc double %add810 to float
  %218 = bitcast float %conv812 to i32
  %shr816 = ashr i32 %218, 17
  %add817 = add nsw i32 %shr816, %mul
  %id819 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 2
  %219 = bitcast [4 x i8]* %id819 to i32*
  %bf.load820 = load i32* %219, align 4
  %bf.clear821 = and i32 %bf.load820, 4194303
  %idxprom.i567607 = zext i32 %bf.clear821 to i64
  %220 = load i32** %atomVdwType.i574, align 8, !tbaa !64
  %arrayidx.i568 = getelementptr inbounds i32* %220, i64 %idxprom.i567607
  %221 = load i32* %arrayidx.i568, align 4, !tbaa !11
  %conv.i = zext i32 %221 to i64
  %conv823 = shl nuw nsw i64 %conv.i, 1
  %mul824 = and i64 %conv823, 131070
  %add.ptr826.sum529 = or i64 %mul824, 1
  %mul829 = shl nsw i32 %add817, 4
  %idx.ext830 = sext i32 %mul829 to i64
  %add.ptr831 = getelementptr inbounds double* %7, i64 %idx.ext830
  %222 = load double* %add.ptr831, align 8, !tbaa !17
  %add.ptr831.sum530 = or i64 %idx.ext830, 4
  %add.ptr838 = getelementptr inbounds double* %7, i64 %add.ptr831.sum530
  %223 = load double* %add.ptr838, align 8, !tbaa !17
  %add.ptr831.sum531 = or i64 %idx.ext830, 8
  %add.ptr845 = getelementptr inbounds double* %7, i64 %add.ptr831.sum531
  %224 = load double* %add.ptr845, align 8, !tbaa !17
  %and849 = and i32 %218, -131072
  %charge851 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 1
  %225 = load float* %charge851, align 4, !tbaa !63
  %conv852 = fpext float %225 to double
  %mul853 = fmul double %mul398, %conv852
  %226 = bitcast i32 %and849 to float
  %conv856 = fpext float %226 to double
  %sub857 = fsub double %add810, %conv856
  %bf.lshr861 = lshr i32 %bf.load820, 28
  %idxprom862 = zext i32 %bf.lshr861 to i64
  %add.ptr394.sum = add i64 %idxprom862, %idx.ext393
  %arrayidx863 = getelementptr inbounds double* %111, i64 %add.ptr394.sum
  %227 = load double* %arrayidx863, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr826.sum529, %idx.ext.i
  %A865 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 0
  %228 = load double* %A865, align 8, !tbaa !69
  %mul866 = fmul double %8, %228
  %B868 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 1
  %229 = load double* %B868, align 8, !tbaa !71
  %mul869 = fmul double %8, %229
  %mul871 = fmul double %222, %mul866
  %mul872 = fmul double %223, %mul869
  %sub873 = fsub double %mul871, %mul872
  %add.ptr831.sum532 = or i64 %idx.ext830, 3
  %arrayidx875 = getelementptr inbounds double* %7, i64 %add.ptr831.sum532
  %230 = load double* %arrayidx875, align 8, !tbaa !17
  %mul876 = fmul double %mul866, %230
  %add.ptr838.sum533 = or i64 %idx.ext830, 7
  %arrayidx877 = getelementptr inbounds double* %7, i64 %add.ptr838.sum533
  %231 = load double* %arrayidx877, align 8, !tbaa !17
  %mul878 = fmul double %mul869, %231
  %sub879 = fsub double %mul876, %mul878
  %add.ptr831.sum534 = or i64 %idx.ext830, 2
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr831.sum534
  %232 = load double* %arrayidx881, align 8, !tbaa !17
  %mul882 = fmul double %mul866, %232
  %add.ptr838.sum535 = or i64 %idx.ext830, 6
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr838.sum535
  %233 = load double* %arrayidx883, align 8, !tbaa !17
  %mul884 = fmul double %mul869, %233
  %sub885 = fsub double %mul882, %mul884
  %add.ptr831.sum536 = or i64 %idx.ext830, 1
  %arrayidx887 = getelementptr inbounds double* %7, i64 %add.ptr831.sum536
  %234 = load double* %arrayidx887, align 8, !tbaa !17
  %mul888 = fmul double %mul866, %234
  %add.ptr838.sum537 = or i64 %idx.ext830, 5
  %arrayidx889 = getelementptr inbounds double* %7, i64 %add.ptr838.sum537
  %235 = load double* %arrayidx889, align 8, !tbaa !17
  %mul890 = fmul double %mul869, %235
  %sub891 = fsub double %mul888, %mul890
  %mul893 = fmul double %sub857, %sub879
  %add894 = fadd double %mul893, %sub885
  %mul895 = fmul double %sub857, %add894
  %add896 = fadd double %mul895, %sub891
  %mul897 = fmul double %sub857, %add896
  %add898 = fadd double %sub873, %mul897
  %mul902 = fmul double %sub901, %mul853
  %mul903 = fmul double %224, %mul902
  %add.ptr845.sum538 = or i64 %idx.ext830, 11
  %arrayidx905 = getelementptr inbounds double* %7, i64 %add.ptr845.sum538
  %236 = load double* %arrayidx905, align 8, !tbaa !17
  %mul906 = fmul double %mul902, %236
  %add.ptr845.sum539 = or i64 %idx.ext830, 10
  %arrayidx908 = getelementptr inbounds double* %7, i64 %add.ptr845.sum539
  %237 = load double* %arrayidx908, align 8, !tbaa !17
  %mul909 = fmul double %mul902, %237
  %add.ptr845.sum540 = or i64 %idx.ext830, 9
  %arrayidx911 = getelementptr inbounds double* %7, i64 %add.ptr845.sum540
  %238 = load double* %arrayidx911, align 8, !tbaa !17
  %mul912 = fmul double %mul902, %238
  %mul914 = fmul double %sub857, %mul906
  %add915 = fadd double %mul914, %mul909
  %mul916 = fmul double %sub857, %add915
  %add917 = fadd double %mul912, %mul916
  %mul918 = fmul double %sub857, %add917
  %add919 = fadd double %mul903, %mul918
  %add922 = fadd double %sub879, %mul906
  %add923 = fadd double %sub885, %mul909
  %add924 = fadd double %sub891, %mul912
  %mul927 = fmul double %sub857, 3.000000e+00
  %mul928 = fmul double %mul927, %add922
  %mul929 = fmul double %add923, 2.000000e+00
  %add930 = fadd double %mul928, %mul929
  %mul931 = fmul double %sub857, %add930
  %add932 = fadd double %add924, %mul931
  %mul934 = fmul double %227, -2.000000e+00
  %mul935 = fmul double %mul934, %add932
  %mul940 = fmul double %sub796, %mul935
  %239 = insertelement <2 x double> undef, double %add898, i32 0
  %240 = insertelement <2 x double> %239, double %sub796, i32 1
  %241 = insertelement <2 x double> undef, double %227, i32 0
  %242 = insertelement <2 x double> %241, double %mul940, i32 1
  %243 = fmul <2 x double> %240, %242
  %244 = fadd <2 x double> %210, %243
  %245 = insertelement <2 x double> undef, double %sub802, i32 0
  %246 = insertelement <2 x double> %245, double %sub808, i32 1
  %247 = insertelement <2 x double> undef, double %mul940, i32 0
  %248 = insertelement <2 x double> %247, double %mul940, i32 1
  %249 = fmul <2 x double> %246, %248
  %250 = fadd <2 x double> %211, %249
  %251 = load double* %x947, align 8, !tbaa !72
  %add948 = fadd double %251, %mul940
  store double %add948, double* %x947, align 8, !tbaa !72
  %x949 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext791, i32 0
  %mul952 = fmul double %sub802, %mul935
  %252 = insertelement <2 x double> undef, double %add919, i32 0
  %253 = insertelement <2 x double> %252, double %sub802, i32 1
  %254 = insertelement <2 x double> %241, double %mul952, i32 1
  %255 = fmul <2 x double> %253, %254
  %256 = fadd <2 x double> %213, %255
  %257 = load double* %y957, align 8, !tbaa !73
  %add958 = fadd double %257, %mul952
  store double %add958, double* %y957, align 8, !tbaa !73
  %258 = bitcast double* %x949 to <2 x double>*
  %259 = load <2 x double>* %258, align 8, !tbaa !17
  %260 = insertelement <2 x double> %247, double %mul952, i32 1
  %261 = fsub <2 x double> %259, %260
  %262 = bitcast double* %x949 to <2 x double>*
  store <2 x double> %261, <2 x double>* %262, align 8, !tbaa !17
  %mul962 = fmul double %sub808, %mul935
  %263 = insertelement <2 x double> undef, double %sub808, i32 0
  %264 = insertelement <2 x double> %263, double %sub808, i32 1
  %265 = insertelement <2 x double> undef, double %mul952, i32 0
  %266 = insertelement <2 x double> %265, double %mul962, i32 1
  %267 = fmul <2 x double> %264, %266
  %268 = fadd <2 x double> %212, %267
  %269 = load double* %z965, align 8, !tbaa !74
  %add966 = fadd double %269, %mul962
  store double %add966, double* %z965, align 8, !tbaa !74
  %z967 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext791, i32 2
  %270 = load double* %z967, align 8, !tbaa !74
  %sub968 = fsub double %270, %mul962
  store double %sub968, double* %z967, align 8, !tbaa !74
  %indvars.iv.next806 = add nuw nsw i64 %indvars.iv805, 1
  %lftr.wideiv807 = trunc i64 %indvars.iv.next806 to i32
  %exitcond808 = icmp eq i32 %lftr.wideiv807, %conv783
  br i1 %exitcond808, label %for.inc972, label %for.body786

for.inc972:                                       ; preds = %for.body786, %for.end778, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end778 ], [ %pairCount.2, %for.body786 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0724, %if.then215 ], [ %pairlistoffset.1, %for.end778 ], [ %pairlistoffset.1, %for.body786 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0725, %if.then215 ], [ %pairlistindex.2, %for.end778 ], [ %pairlistindex.2, %for.body786 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0726, %if.then215 ], [ %fixg_lower.3, %for.end778 ], [ %fixg_lower.3, %for.body786 ]
  %g_lower.4 = phi i32 [ %g_lower.0727, %if.then215 ], [ %g_lower.3, %for.end778 ], [ %g_lower.3, %for.body786 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0728, %if.then215 ], [ %j_hgroup.2, %for.end778 ], [ %j_hgroup.2, %for.body786 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0729, %for.end778 ], [ %i.0729, %for.body786 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0738, %if.then215 ], [ %conv622, %for.end778 ], [ %conv622, %for.body786 ]
  %271 = phi <2 x double> [ %59, %if.then215 ], [ %206, %for.end778 ], [ %244, %for.body786 ]
  %272 = phi <2 x double> [ %60, %if.then215 ], [ %207, %for.end778 ], [ %250, %for.body786 ]
  %273 = phi <2 x double> [ %61, %if.then215 ], [ %208, %for.end778 ], [ %268, %for.body786 ]
  %274 = phi <2 x double> [ %62, %if.then215 ], [ %209, %for.end778 ], [ %256, %for.body786 ]
  %inc973 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc973
  br i1 %cmp171, label %for.body172, label %for.end974

for.end974:                                       ; preds = %for.inc972, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc972 ]
  %275 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %271, %for.inc972 ]
  %276 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %272, %for.inc972 ]
  %277 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %273, %for.inc972 ]
  %278 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %274, %for.inc972 ]
  %279 = extractelement <2 x double> %278, i32 0
  %arraydecay975 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp976 = icmp eq i32* %cond577579822828, %arraydecay975
  br i1 %cmp976, label %if.end981, label %delete.notnull979

delete.notnull979:                                ; preds = %for.end974
  %280 = bitcast i32* %cond577579822828 to i8*
  call void @_ZdaPv(i8* %280) #7
  br label %if.end981

if.end981:                                        ; preds = %delete.notnull979, %for.end974
  %arraydecay982 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp983 = icmp eq i32* %cond19581820829, %arraydecay982
  br i1 %cmp983, label %if.end988, label %delete.notnull986

delete.notnull986:                                ; preds = %if.end981
  %281 = bitcast i32* %cond19581820829 to i8*
  call void @_ZdaPv(i8* %281) #7
  br label %if.end988

if.end988:                                        ; preds = %delete.notnull986, %if.end981
  %arraydecay989 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp990 = icmp eq i32* %cond30824827, %arraydecay989
  br i1 %cmp990, label %if.end995, label %delete.notnull993

delete.notnull993:                                ; preds = %if.end988
  %282 = bitcast i32* %cond30824827 to i8*
  call void @_ZdaPv(i8* %282) #7
  br label %if.end995

if.end995:                                        ; preds = %delete.notnull993, %if.end988
  %arraydecay996 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp997 = icmp eq i32* %cond114585587593599, %arraydecay996
  br i1 %cmp997, label %if.end1002, label %delete.notnull1000

delete.notnull1000:                               ; preds = %if.end995
  %283 = bitcast i32* %cond114585587593599 to i8*
  call void @_ZdaPv(i8* %283) #7
  br label %if.end1002

if.end1002:                                       ; preds = %delete.notnull1000, %if.end995
  %arraydecay1003 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1004 = icmp eq i32* %cond125589591601, %arraydecay1003
  br i1 %cmp1004, label %if.end1009, label %delete.notnull1007

delete.notnull1007:                               ; preds = %if.end1002
  %284 = bitcast i32* %cond125589591601 to i8*
  call void @_ZdaPv(i8* %284) #7
  br label %if.end1009

if.end1009:                                       ; preds = %delete.notnull1007, %if.end1002
  %arraydecay1010 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1011 = icmp eq i32* %cond136595597, %arraydecay1010
  br i1 %cmp1011, label %if.end1016, label %delete.notnull1014

delete.notnull1014:                               ; preds = %if.end1009
  %285 = bitcast i32* %cond136595597 to i8*
  call void @_ZdaPv(i8* %285) #7
  br label %if.end1016

if.end1016:                                       ; preds = %delete.notnull1014, %if.end1009
  %arraydecay1017 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1018 = icmp eq i32* %cond147603, %arraydecay1017
  br i1 %cmp1018, label %if.end1023, label %delete.notnull1021

delete.notnull1021:                               ; preds = %if.end1016
  %286 = bitcast i32* %cond147603 to i8*
  call void @_ZdaPv(i8* %286) #7
  br label %if.end1023

if.end1023:                                       ; preds = %delete.notnull1021, %if.end1016
  %arraydecay1024 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1025 = icmp eq i32* %cond158, %arraydecay1024
  br i1 %cmp1025, label %if.end1030, label %delete.notnull1028

delete.notnull1028:                               ; preds = %if.end1023
  %287 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %287) #7
  br label %if.end1030

if.end1030:                                       ; preds = %delete.notnull1028, %if.end1023
  %conv1031 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1032 = getelementptr inbounds double* %1, i64 22
  %288 = load double* %arrayidx1032, align 8, !tbaa !17
  %add1033 = fadd double %conv1031, %288
  store double %add1033, double* %arrayidx1032, align 8, !tbaa !17
  %arrayidx1034 = getelementptr inbounds double* %1, i64 2
  %289 = load double* %1, align 8, !tbaa !17
  %add1037 = fadd double %279, %289
  store double %add1037, double* %1, align 8, !tbaa !17
  %290 = bitcast double* %arrayidx1034 to <2 x double>*
  %291 = load <2 x double>* %290, align 8, !tbaa !17
  %292 = fadd <2 x double> %275, %291
  %293 = bitcast double* %arrayidx1034 to <2 x double>*
  store <2 x double> %292, <2 x double>* %293, align 8, !tbaa !17
  %arrayidx1040 = getelementptr inbounds double* %1, i64 4
  %294 = bitcast double* %arrayidx1040 to <2 x double>*
  %295 = load <2 x double>* %294, align 8, !tbaa !17
  %296 = fadd <2 x double> %276, %295
  %297 = bitcast double* %arrayidx1040 to <2 x double>*
  store <2 x double> %296, <2 x double>* %297, align 8, !tbaa !17
  %arrayidx1044 = getelementptr inbounds double* %1, i64 6
  %298 = bitcast double* %arrayidx1044 to <2 x double>*
  %299 = load <2 x double>* %298, align 8, !tbaa !17
  %300 = shufflevector <2 x double> %276, <2 x double> %278, <2 x i32> <i32 0, i32 3>
  %301 = fadd <2 x double> %300, %299
  %302 = bitcast double* %arrayidx1044 to <2 x double>*
  store <2 x double> %301, <2 x double>* %302, align 8, !tbaa !17
  %arrayidx1048 = getelementptr inbounds double* %1, i64 8
  %303 = bitcast double* %arrayidx1048 to <2 x double>*
  %304 = load <2 x double>* %303, align 8, !tbaa !17
  %305 = shufflevector <2 x double> %277, <2 x double> %276, <2 x i32> <i32 0, i32 3>
  %306 = fadd <2 x double> %305, %304
  %307 = bitcast double* %arrayidx1048 to <2 x double>*
  store <2 x double> %306, <2 x double>* %307, align 8, !tbaa !17
  %arrayidx1052 = getelementptr inbounds double* %1, i64 10
  %308 = bitcast double* %arrayidx1052 to <2 x double>*
  %309 = load <2 x double>* %308, align 8, !tbaa !17
  %310 = fadd <2 x double> %277, %309
  %311 = bitcast double* %arrayidx1052 to <2 x double>*
  store <2 x double> %310, <2 x double>* %311, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1030, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil23calc_pair_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31930 = icmp sgt i32 %14, 0
  br i1 %cmp31930, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30987 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond725727985 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19729983 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv976 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next977, %for.inc ]
  %g.0931 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv976, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0931, 1
  %idxprom41 = sext i32 %g.0931 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond725727985, i64 %idxprom41
  %31 = trunc i64 %indvars.iv976 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0931, %for.body ]
  %indvars.iv.next977 = add nuw nsw i64 %indvars.iv976, 1
  %lftr.wideiv978 = trunc i64 %indvars.iv.next977 to i32
  %exitcond979 = icmp eq i32 %lftr.wideiv978, %14
  br i1 %exitcond979, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond725727985, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond725727985, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa992 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19729982991 = phi i32* [ %cond19729983, %for.end ], [ %cond19729983, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond725727984990 = phi i32* [ %cond725727985, %for.end ], [ %cond725727985, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30986989 = phi i32* [ %cond30987, %for.end ], [ %cond30987, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56924 = icmp sgt i32 %g.0.lcssa992, 0
  br i1 %cmp56924, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75918 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76919 = icmp sgt i32 %13, 0
  %or.cond709920 = and i1 %tobool75918, %cmp76919
  br i1 %or.cond709920, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv972 = phi i64 [ %indvars.iv.next973, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0926 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0925 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond725727984990, i64 %indvars.iv972
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0926, 1
  %idxprom68 = sext i32 %fixg.0926 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19729982991, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0925, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0926, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next973 = add nuw nsw i64 %indvars.iv972, 1
  %lftr.wideiv974 = trunc i64 %indvars.iv.next973 to i32
  %exitcond975 = icmp eq i32 %lftr.wideiv974, %g.0.lcssa992
  br i1 %exitcond975, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv970 = phi i64 [ %indvars.iv.next971, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2921 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv970, i32 2
  %36 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %36, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2921
  %indvars.iv.next971 = add nuw nsw i64 %indvars.iv970, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %37 = trunc i64 %indvars.iv.next971 to i32
  %cmp76 = icmp slt i32 %37, %13
  %or.cond709 = and i1 %tobool75, %cmp76
  br i1 %or.cond709, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75918, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond725727984990, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %38 = bitcast i32* %cond725727984990 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19729982991, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %39 = bitcast i32* %cond19729982991 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30986989, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %40 = bitcast i32* %cond30986989 to i8*
  call void @_ZdaPv(i8* %40) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19729982991, i64 %idxprom114
  %41 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19729982991, i64 %idxprom116
  store i32 %41, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2732 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %42 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  %46 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %46) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %14, 5
  %47 = sext i32 %add123 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call124 = call noalias i8* @_Znam(i64 %51) #8
  %52 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %51) #8
  %53 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %51) #8
  %54 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %51) #8
  %55 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %51) #8
  %56 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162751 = phi i32* [ %arraydecay154, %cond.true164 ], [ %55, %cond.false166 ]
  %cond140737739749 = phi i32* [ %arraydecay132, %cond.true164 ], [ %53, %cond.false166 ]
  %cond129733735741747 = phi i32* [ %arraydecay121, %cond.true164 ], [ %52, %cond.false166 ]
  %cond151743745 = phi i32* [ %arraydecay143, %cond.true164 ], [ %54, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %56, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %57 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %58 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %59 = load %class.Vector** %arrayidx177, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %60 = load %class.Vector** %arrayidx179, align 8, !tbaa !1
  %mul180 = mul nsw i32 %14, %13
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %61 = load i32* %minPart, align 4, !tbaa !50
  %mul181 = mul nsw i32 %61, %mul180
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %62 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul181, %62
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %63 = load i32* %maxPart, align 4, !tbaa !52
  %mul182 = mul nsw i32 %63, %mul180
  %div184 = sdiv i32 %mul182, %62
  %cmp186875 = icmp sgt i32 %13, 0
  br i1 %cmp186875, label %for.body187.lr.ph, label %for.end1158

for.body187.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i722 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast531 = ptrtoint i32* %cond140737739749 to i64
  %sub.ptr.rhs.cast568 = ptrtoint i32* %cond162751 to i64
  %sub.ptr.rhs.cast575 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast582 = ptrtoint i32* %cond151743745 to i64
  %sub895 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30986989 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i32* %cond129733735741747 to i64
  br label %for.body187

for.body187:                                      ; preds = %for.inc1156, %for.body187.lr.ph
  %exclChecksum.0903 = phi i32 [ 0, %for.body187.lr.ph ], [ %exclChecksum.8, %for.inc1156 ]
  %i.1878 = phi i32 [ 0, %for.body187.lr.ph ], [ %inc1157, %for.inc1156 ]
  %pairlistindex.0877 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairlistindex.2, %for.inc1156 ]
  %pairCount.0876 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairCount.3, %for.inc1156 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %353, %for.inc1156 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %354, %for.inc1156 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %355, %for.inc1156 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %356, %for.inc1156 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %357, %for.inc1156 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %358, %for.inc1156 ]
  %idxprom188 = sext i32 %i.1878 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 2
  %70 = bitcast [4 x i8]* %id to i32*
  %bf.load190 = load i32* %70, align 4
  %bf.clear191 = and i32 %bf.load190, 4194303
  %idxprom.i753 = zext i32 %bf.clear191 to i64
  %71 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i753, i32 0
  %72 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i753, i32 1
  %73 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i753, i32 2
  %74 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %72 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 0
  %75 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 1
  %76 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 2
  %77 = load double* %z, align 8, !tbaa !62
  %arrayidx196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188
  %arrayidx198 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188
  %78 = and i32 %bf.load190, 62914560
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %if.end359, label %if.then210

if.then210:                                       ; preds = %for.body187
  %bf.lshr213 = lshr i32 %bf.load190, 22
  %bf.clear214 = and i32 %bf.lshr213, 7
  %tobool215 = icmp eq i32 %bf.clear214, 0
  br i1 %tobool215, label %if.end230, label %if.then216

if.then216:                                       ; preds = %if.then210
  %mul221 = mul nsw i32 %bf.clear214, %14
  %add222 = add nsw i32 %mul221, %pairCount.0876
  %cmp223 = icmp sge i32 %pairCount.0876, %div
  %cmp225 = icmp slt i32 %pairCount.0876, %div184
  %or.cond711 = and i1 %cmp223, %cmp225
  br i1 %or.cond711, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then216
  %sub227 = add i32 %i.1878, -1
  %add228 = add i32 %sub227, %bf.clear214
  br label %for.inc1156

if.end230:                                        ; preds = %if.then216, %if.then210
  %pairCount.1 = phi i32 [ %pairCount.0876, %if.then210 ], [ %add222, %if.then216 ]
  %80 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool231 = icmp eq i32 %80, 0
  br i1 %tobool231, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end230
  %bf.clear235 = and i32 %bf.load190, 134217728
  %tobool236 = icmp ne i32 %bf.clear235, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end230
  %81 = phi i1 [ false, %if.end230 ], [ %tobool236, %land.rhs ]
  %cond243 = select i1 %81, i32* %cond19729982991, i32* %cond725727984990
  %cond248 = select i1 %81, i32 %fixg.2732, i32 %g.0.lcssa992
  %cmp249 = icmp sgt i32 %cond248, 0
  br i1 %cmp249, label %if.then250, label %if.end329

if.then250:                                       ; preds = %land.end
  %82 = load i32* %cond243, align 4, !tbaa !11
  %idxprom253 = sext i32 %82 to i64
  %x256 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 0
  %83 = load double* %x256, align 8, !tbaa !59
  %y260 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 1
  %84 = load double* %y260, align 8, !tbaa !61
  %z264 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 2
  %85 = load double* %z264, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then290, %if.then250
  %p_j_z.0.ph = phi double [ %85, %if.then250 ], [ %91, %if.then290 ]
  %p_j_y.0.ph = phi double [ %84, %if.then250 ], [ %90, %if.then290 ]
  %p_j_x.0.ph = phi double [ %83, %if.then250 ], [ %89, %if.then290 ]
  %j2.0.ph = phi i32 [ %82, %if.then250 ], [ %88, %if.then290 ]
  %gli.0.ph = phi i32* [ %cond30986989, %if.then250 ], [ %incdec.ptr, %if.then290 ]
  %g.3.ph = phi i32 [ 0, %if.then250 ], [ %inc266, %if.then290 ]
  %86 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %86, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %91, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %90, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %89, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %88, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc266, %while.body ]
  %87 = trunc i64 %indvars.iv to i32
  %cmp265 = icmp slt i32 %87, %cond248
  br i1 %cmp265, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc266 = add nsw i32 %g.3, 1
  %arrayidx268 = getelementptr inbounds i32* %cond243, i64 %indvars.iv.next
  %88 = load i32* %arrayidx268, align 4, !tbaa !11
  %sub269 = fsub double %75, %p_j_x.0
  %mul270 = fmul double %sub269, %sub269
  %idxprom271 = sext i32 %88 to i64
  %x274 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 0
  %89 = load double* %x274, align 8, !tbaa !59
  %sub275 = fsub double %76, %p_j_y.0
  %mul276 = fmul double %sub275, %sub275
  %add277 = fadd double %mul276, %mul270
  %y281 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 1
  %90 = load double* %y281, align 8, !tbaa !61
  %sub282 = fsub double %77, %p_j_z.0
  %mul283 = fmul double %sub282, %sub282
  %add284 = fadd double %mul283, %add277
  %z288 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 2
  %91 = load double* %z288, align 8, !tbaa !62
  %cmp289 = fcmp ugt double %add284, %3
  br i1 %cmp289, label %while.cond, label %if.then290

if.then290:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div706 = lshr exact i64 %sub.ptr.sub, 2
  %conv292 = trunc i64 %sub.ptr.div706 to i32
  %cmp294764 = icmp sgt i32 %conv292, 0
  br i1 %cmp294764, label %for.body295.lr.ph, label %if.end329

for.body295.lr.ph:                                ; preds = %while.end
  %92 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %93 = lshr i64 %92, 2
  %94 = trunc i64 %93 to i32
  br label %for.body295

for.body295:                                      ; preds = %cond.end315, %for.body295.lr.ph
  %indvars.iv938 = phi i64 [ 0, %for.body295.lr.ph ], [ %indvars.iv.next939, %cond.end315 ]
  %pli.0766 = phi i32* [ %cond129733735741747, %for.body295.lr.ph ], [ %add.ptr325, %cond.end315 ]
  %arrayidx298 = getelementptr inbounds i32* %cond30986989, i64 %indvars.iv938
  %95 = load i32* %arrayidx298, align 4, !tbaa !11
  %idxprom300 = sext i32 %95 to i64
  %nonbondedGroupIsAtom302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom300, i32 2
  %96 = bitcast [4 x i8]* %nonbondedGroupIsAtom302 to i32*
  %bf.load303 = load i32* %96, align 4
  %bf.clear305 = and i32 %bf.load303, 33554432
  %tobool306 = icmp eq i32 %bf.clear305, 0
  br i1 %tobool306, label %cond.false308, label %cond.end315

cond.false308:                                    ; preds = %for.body295
  %bf.lshr313 = lshr i32 %bf.load303, 22
  %bf.clear314 = and i32 %bf.lshr313, 7
  %phitmp707708 = zext i32 %bf.clear314 to i64
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false308, %for.body295
  %cond316 = phi i64 [ %phitmp707708, %cond.false308 ], [ 1, %for.body295 ]
  store i32 %95, i32* %pli.0766, align 4, !tbaa !11
  %add318 = add nsw i32 %95, 1
  %arrayidx319 = getelementptr inbounds i32* %pli.0766, i64 1
  store i32 %add318, i32* %arrayidx319, align 4, !tbaa !11
  %add320 = add nsw i32 %95, 2
  %arrayidx321 = getelementptr inbounds i32* %pli.0766, i64 2
  store i32 %add320, i32* %arrayidx321, align 4, !tbaa !11
  %add322 = add nsw i32 %95, 3
  %arrayidx323 = getelementptr inbounds i32* %pli.0766, i64 3
  store i32 %add322, i32* %arrayidx323, align 4, !tbaa !11
  %add.ptr325 = getelementptr inbounds i32* %pli.0766, i64 %cond316
  %indvars.iv.next939 = add nuw nsw i64 %indvars.iv938, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next939 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %94
  br i1 %exitcond, label %if.end329, label %for.body295

if.end329:                                        ; preds = %cond.end315, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129733735741747, %land.end ], [ %cond129733735741747, %while.end ], [ %add.ptr325, %cond.end315 ]
  %sub.ptr.lhs.cast330 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %sub.ptr.div333703 = lshr exact i64 %sub.ptr.sub332, 2
  %conv334 = trunc i64 %sub.ptr.div333703 to i32
  %tobool335 = icmp eq i32 %conv334, 0
  br i1 %tobool335, label %if.else, label %if.then336

if.then336:                                       ; preds = %if.end329
  %sub337 = shl i64 %sub.ptr.sub332, 30
  %sext704 = add i64 %sub337, -4294967296
  %idxprom338 = ashr exact i64 %sext704, 32
  %arrayidx339 = getelementptr inbounds i32* %cond129733735741747, i64 %idxprom338
  %97 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom340 = ashr exact i64 %sub337, 32
  %arrayidx341 = getelementptr inbounds i32* %cond129733735741747, i64 %idxprom340
  store i32 %97, i32* %arrayidx341, align 4, !tbaa !11
  br label %if.end359

if.else:                                          ; preds = %if.end329
  %bf.load344 = load i32* %70, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end354

cond.false349:                                    ; preds = %if.else
  %bf.lshr352 = lshr i32 %bf.load344, 22
  %bf.clear353 = and i32 %bf.lshr352, 7
  %phitmp = add i32 %bf.clear353, -1
  br label %cond.end354

cond.end354:                                      ; preds = %cond.false349, %if.else
  %cond355 = phi i32 [ %phitmp, %cond.false349 ], [ 0, %if.else ]
  %add357 = add nsw i32 %cond355, %i.1878
  br label %for.inc1156

if.end359:                                        ; preds = %if.then336, %for.body187
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then336 ], [ %pairCount.0876, %for.body187 ]
  %pairlistindex.1 = phi i32 [ %conv334, %if.then336 ], [ %pairlistindex.0877, %for.body187 ]
  %98 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool360 = icmp eq i32 %98, 0
  %bf.load370.pre = load i32* %70, align 4
  br i1 %tobool360, label %land.end367, label %land.rhs361

land.rhs361:                                      ; preds = %if.end359
  %bf.clear365 = and i32 %bf.load370.pre, 67108864
  %tobool366 = icmp ne i32 %bf.clear365, 0
  br label %land.end367

land.end367:                                      ; preds = %land.rhs361, %if.end359
  %99 = phi i1 [ %tobool366, %land.rhs361 ], [ false, %if.end359 ]
  %100 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %101 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add369 = add nsw i32 %101, 1
  %bf.lshr371 = lshr i32 %bf.load370.pre, 28
  %mul372 = mul nsw i32 %bf.lshr371, %add369
  %idx.ext373 = sext i32 %mul372 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 1
  %102 = load float* %charge, align 4, !tbaa !63
  %conv375 = fpext float %102 to double
  %mul376 = fmul double %conv375, 3.320636e+02
  %mul377 = fmul double %9, %mul376
  %mul378 = fmul double %4, %mul377
  %bf.clear381 = and i32 %bf.load370.pre, 4194303
  %idxprom.i721754 = zext i32 %bf.clear381 to i64
  %103 = load i32** %atomVdwType.i722, align 8, !tbaa !64
  %arrayidx.i723 = getelementptr inbounds i32* %103, i64 %idxprom.i721754
  %104 = load i32* %arrayidx.i723, align 4, !tbaa !11
  %105 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %106 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv383 = shl i32 %104, 1
  %mul.i = and i32 %conv383, 131070
  %mul2.i = mul i32 %mul.i, %106
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp389791 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %99, label %for.cond388.preheader, label %if.else450

for.cond388.preheader:                            ; preds = %land.end367
  br i1 %cmp389791, label %for.body390, label %if.end529

for.body390:                                      ; preds = %for.inc447, %for.cond388.preheader
  %indvars.iv949 = phi i64 [ %indvars.iv.next950, %for.inc447 ], [ 0, %for.cond388.preheader ]
  %exclChecksum.1795 = phi i32 [ %exclChecksum.3, %for.inc447 ], [ %exclChecksum.0903, %for.cond388.preheader ]
  %pli385.0794 = phi i32* [ %pli385.1, %for.inc447 ], [ %cond140737739749, %for.cond388.preheader ]
  %plin.0793 = phi i32* [ %plin.1, %for.inc447 ], [ %cond151743745, %for.cond388.preheader ]
  %arrayidx392 = getelementptr inbounds i32* %cond129733735741747, i64 %indvars.iv949
  %107 = load i32* %arrayidx392, align 4, !tbaa !11
  %idxprom394 = sext i32 %107 to i64
  %x397 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 0
  %108 = load double* %x397, align 8, !tbaa !59
  %sub399 = fsub double %75, %108
  %mul400 = fmul double %sub399, %sub399
  %y405 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 1
  %109 = load double* %y405, align 8, !tbaa !61
  %sub407 = fsub double %76, %109
  %mul408 = fmul double %sub407, %sub407
  %add409 = fadd double %mul400, %mul408
  %z414 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 2
  %110 = load double* %z414, align 8, !tbaa !62
  %sub415 = fsub double %77, %110
  %mul416 = fmul double %sub415, %sub415
  %add417 = fadd double %add409, %mul416
  %atomFixed420 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 2
  %111 = bitcast [4 x i8]* %atomFixed420 to i32*
  %bf.load421 = load i32* %111, align 4
  %bf.clear423 = and i32 %bf.load421, 67108864
  %tobool424 = icmp ne i32 %bf.clear423, 0
  %cmp426 = fcmp ugt double %add417, %2
  %or.cond712 = or i1 %tobool424, %cmp426
  br i1 %or.cond712, label %for.inc447, label %land.lhs.true427

land.lhs.true427:                                 ; preds = %for.body390
  %cmp428 = fcmp ugt double %add417, %11
  br i1 %cmp428, label %if.then432, label %land.lhs.true429

land.lhs.true429:                                 ; preds = %land.lhs.true427
  %inc430 = add nsw i32 %exclChecksum.1795, 1
  %tobool431 = icmp eq i32 %inc430, 0
  br i1 %tobool431, label %if.then432, label %for.inc447

if.then432:                                       ; preds = %land.lhs.true429, %land.lhs.true427
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true429 ], [ %exclChecksum.1795, %land.lhs.true427 ]
  %bf.clear437 = and i32 %bf.load421, 4194303
  %cmp438 = icmp slt i32 %bf.clear437, %72
  %cmp440 = icmp sgt i32 %bf.clear437, %73
  %or.cond713 = or i1 %cmp438, %cmp440
  br i1 %or.cond713, label %if.else443, label %if.then441

if.then441:                                       ; preds = %if.then432
  %incdec.ptr442 = getelementptr inbounds i32* %pli385.0794, i64 1
  store i32 %107, i32* %pli385.0794, align 4, !tbaa !11
  br label %for.inc447

if.else443:                                       ; preds = %if.then432
  %incdec.ptr444 = getelementptr inbounds i32* %plin.0793, i64 1
  store i32 %107, i32* %plin.0793, align 4, !tbaa !11
  br label %for.inc447

for.inc447:                                       ; preds = %if.else443, %if.then441, %land.lhs.true429, %for.body390
  %plin.1 = phi i32* [ %plin.0793, %for.body390 ], [ %plin.0793, %land.lhs.true429 ], [ %plin.0793, %if.then441 ], [ %incdec.ptr444, %if.else443 ]
  %pli385.1 = phi i32* [ %pli385.0794, %for.body390 ], [ %pli385.0794, %land.lhs.true429 ], [ %incdec.ptr442, %if.then441 ], [ %pli385.0794, %if.else443 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1795, %for.body390 ], [ %inc430, %land.lhs.true429 ], [ %exclChecksum.2, %if.then441 ], [ %exclChecksum.2, %if.else443 ]
  %indvars.iv.next950 = add nuw nsw i64 %indvars.iv949, 1
  %lftr.wideiv951 = trunc i64 %indvars.iv.next950 to i32
  %exitcond952 = icmp eq i32 %lftr.wideiv951, %pairlistindex.1
  br i1 %exitcond952, label %if.end529, label %for.body390

if.else450:                                       ; preds = %land.end367
  br i1 %cmp389791, label %if.then453, label %if.end529

if.then453:                                       ; preds = %if.else450
  %112 = load i32* %cond129733735741747, align 4, !tbaa !11
  %idxprom458 = sext i32 %112 to i64
  %x461 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 0
  %113 = load double* %x461, align 8, !tbaa !59
  %y466 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 1
  %114 = load double* %y466, align 8, !tbaa !61
  %z471 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 2
  %115 = load double* %z471, align 8, !tbaa !62
  br label %while.cond478.outer

while.cond478.outer:                              ; preds = %if.else518, %if.then453
  %idxprom458.pn.ph = phi i64 [ %idxprom458, %if.then453 ], [ %idxprom487, %if.else518 ]
  %p_j_z467.0.ph = phi double [ %115, %if.then453 ], [ %121, %if.else518 ]
  %p_j_y462.0.ph = phi double [ %114, %if.then453 ], [ %120, %if.else518 ]
  %p_j_x457.0.ph = phi double [ %113, %if.then453 ], [ %119, %if.else518 ]
  %j2454.0.ph = phi i32 [ %112, %if.then453 ], [ %118, %if.else518 ]
  %k451.0.ph = phi i32 [ 0, %if.then453 ], [ %inc481, %if.else518 ]
  %plin.2.ph = phi i32* [ %cond151743745, %if.then453 ], [ %incdec.ptr519, %if.else518 ]
  %pli385.2.ph = phi i32* [ %cond140737739749, %if.then453 ], [ %pli385.2.ph774, %if.else518 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0903, %if.then453 ], [ %exclChecksum.5, %if.else518 ]
  br label %while.cond478.outer767

while.cond478.outer767:                           ; preds = %if.then516, %while.cond478.outer
  %idxprom458.pn.ph768 = phi i64 [ %idxprom487, %if.then516 ], [ %idxprom458.pn.ph, %while.cond478.outer ]
  %p_j_z467.0.ph769 = phi double [ %121, %if.then516 ], [ %p_j_z467.0.ph, %while.cond478.outer ]
  %p_j_y462.0.ph770 = phi double [ %120, %if.then516 ], [ %p_j_y462.0.ph, %while.cond478.outer ]
  %p_j_x457.0.ph771 = phi double [ %119, %if.then516 ], [ %p_j_x457.0.ph, %while.cond478.outer ]
  %j2454.0.ph772 = phi i32 [ %118, %if.then516 ], [ %j2454.0.ph, %while.cond478.outer ]
  %k451.0.ph773 = phi i32 [ %inc481, %if.then516 ], [ %k451.0.ph, %while.cond478.outer ]
  %pli385.2.ph774 = phi i32* [ %incdec.ptr517, %if.then516 ], [ %pli385.2.ph, %while.cond478.outer ]
  %exclChecksum.4.ph775 = phi i32 [ %exclChecksum.5, %if.then516 ], [ %exclChecksum.4.ph, %while.cond478.outer ]
  br label %while.cond478.outer776

while.cond478.outer776:                           ; preds = %land.lhs.true509, %while.cond478.outer767
  %idxprom458.pn.ph777 = phi i64 [ %idxprom487, %land.lhs.true509 ], [ %idxprom458.pn.ph768, %while.cond478.outer767 ]
  %p_j_z467.0.ph778 = phi double [ %121, %land.lhs.true509 ], [ %p_j_z467.0.ph769, %while.cond478.outer767 ]
  %p_j_y462.0.ph779 = phi double [ %120, %land.lhs.true509 ], [ %p_j_y462.0.ph770, %while.cond478.outer767 ]
  %p_j_x457.0.ph780 = phi double [ %119, %land.lhs.true509 ], [ %p_j_x457.0.ph771, %while.cond478.outer767 ]
  %j2454.0.ph781 = phi i32 [ %118, %land.lhs.true509 ], [ %j2454.0.ph772, %while.cond478.outer767 ]
  %k451.0.ph782 = phi i32 [ %inc481, %land.lhs.true509 ], [ %k451.0.ph773, %while.cond478.outer767 ]
  %exclChecksum.4.ph783 = phi i32 [ %inc510, %land.lhs.true509 ], [ %exclChecksum.4.ph775, %while.cond478.outer767 ]
  %116 = sext i32 %k451.0.ph782 to i64
  br label %while.cond478

while.cond478:                                    ; preds = %while.body480, %while.cond478.outer776
  %indvars.iv945 = phi i64 [ %116, %while.cond478.outer776 ], [ %indvars.iv.next946, %while.body480 ]
  %idxprom458.pn = phi i64 [ %idxprom458.pn.ph777, %while.cond478.outer776 ], [ %idxprom487, %while.body480 ]
  %p_j_z467.0 = phi double [ %p_j_z467.0.ph778, %while.cond478.outer776 ], [ %121, %while.body480 ]
  %p_j_y462.0 = phi double [ %p_j_y462.0.ph779, %while.cond478.outer776 ], [ %120, %while.body480 ]
  %p_j_x457.0 = phi double [ %p_j_x457.0.ph780, %while.cond478.outer776 ], [ %119, %while.body480 ]
  %j2454.0 = phi i32 [ %j2454.0.ph781, %while.cond478.outer776 ], [ %118, %while.body480 ]
  %k451.0 = phi i32 [ %k451.0.ph782, %while.cond478.outer776 ], [ %inc481, %while.body480 ]
  %117 = trunc i64 %indvars.iv945 to i32
  %cmp479 = icmp slt i32 %117, %pairlistindex.1
  br i1 %cmp479, label %while.body480, label %if.end529

while.body480:                                    ; preds = %while.cond478
  %atom2472.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458.pn, i32 2
  %atom2472.0.in.in = bitcast [4 x i8]* %atom2472.0.in.in.in to i32*
  %atom2472.0.in = load i32* %atom2472.0.in.in, align 4
  %atom2472.0 = and i32 %atom2472.0.in, 4194303
  %indvars.iv.next946 = add nsw i64 %indvars.iv945, 1
  %inc481 = add nsw i32 %k451.0, 1
  %arrayidx483 = getelementptr inbounds i32* %cond129733735741747, i64 %indvars.iv.next946
  %118 = load i32* %arrayidx483, align 4, !tbaa !11
  %sub485 = fsub double %75, %p_j_x457.0
  %mul486 = fmul double %sub485, %sub485
  %idxprom487 = sext i32 %118 to i64
  %x490 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 0
  %119 = load double* %x490, align 8, !tbaa !59
  %sub492 = fsub double %76, %p_j_y462.0
  %mul493 = fmul double %sub492, %sub492
  %add494 = fadd double %mul493, %mul486
  %y498 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 1
  %120 = load double* %y498, align 8, !tbaa !61
  %sub499 = fsub double %77, %p_j_z467.0
  %mul500 = fmul double %sub499, %sub499
  %add501 = fadd double %mul500, %add494
  %z505 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 2
  %121 = load double* %z505, align 8, !tbaa !62
  %cmp506 = fcmp ugt double %add501, %2
  br i1 %cmp506, label %while.cond478, label %land.lhs.true507

land.lhs.true507:                                 ; preds = %while.body480
  %cmp508 = fcmp ugt double %add501, %11
  br i1 %cmp508, label %if.then512, label %land.lhs.true509

land.lhs.true509:                                 ; preds = %land.lhs.true507
  %inc510 = add nsw i32 %exclChecksum.4.ph783, 1
  %tobool511 = icmp eq i32 %inc510, 0
  br i1 %tobool511, label %if.then512, label %while.cond478.outer776

if.then512:                                       ; preds = %land.lhs.true509, %land.lhs.true507
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true509 ], [ %exclChecksum.4.ph783, %land.lhs.true507 ]
  %cmp513 = icmp slt i32 %atom2472.0, %72
  %cmp515 = icmp sgt i32 %atom2472.0, %73
  %or.cond714 = or i1 %cmp513, %cmp515
  br i1 %or.cond714, label %if.else518, label %if.then516

if.then516:                                       ; preds = %if.then512
  %incdec.ptr517 = getelementptr inbounds i32* %pli385.2.ph774, i64 1
  store i32 %j2454.0, i32* %pli385.2.ph774, align 4, !tbaa !11
  br label %while.cond478.outer767

if.else518:                                       ; preds = %if.then512
  %incdec.ptr519 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2454.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond478.outer

if.end529:                                        ; preds = %while.cond478, %if.else450, %for.inc447, %for.cond388.preheader
  %plin.4 = phi i32* [ %cond151743745, %if.else450 ], [ %cond151743745, %for.cond388.preheader ], [ %plin.2.ph, %while.cond478 ], [ %plin.1, %for.inc447 ]
  %pli385.4 = phi i32* [ %cond140737739749, %if.else450 ], [ %cond140737739749, %for.cond388.preheader ], [ %pli385.2.ph774, %while.cond478 ], [ %pli385.1, %for.inc447 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0903, %if.else450 ], [ %exclChecksum.0903, %for.cond388.preheader ], [ %exclChecksum.4.ph783, %while.cond478 ], [ %exclChecksum.3, %for.inc447 ]
  %sub.ptr.lhs.cast530 = ptrtoint i32* %pli385.4 to i64
  %sub.ptr.sub532 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast531
  %sub.ptr.div533650 = lshr exact i64 %sub.ptr.sub532, 2
  %conv534 = trunc i64 %sub.ptr.div533650 to i32
  %tobool535 = icmp eq i32 %conv534, 0
  br i1 %tobool535, label %for.end566, label %for.cond544.preheader

for.cond544.preheader:                            ; preds = %if.end529
  %sub537 = shl i64 %sub.ptr.sub532, 30
  %sext701 = add i64 %sub537, -4294967296
  %idxprom538 = ashr exact i64 %sext701, 32
  %arrayidx539 = getelementptr inbounds i32* %cond140737739749, i64 %idxprom538
  %122 = load i32* %arrayidx539, align 4, !tbaa !11
  %idxprom540 = ashr exact i64 %sub537, 32
  %arrayidx541 = getelementptr inbounds i32* %cond140737739749, i64 %idxprom540
  store i32 %122, i32* %arrayidx541, align 4, !tbaa !11
  %cmp545799 = icmp sgt i32 %conv534, 0
  br i1 %cmp545799, label %for.body546.lr.ph, label %for.end566

for.body546.lr.ph:                                ; preds = %for.cond544.preheader
  %123 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast531
  %124 = lshr i64 %123, 2
  %125 = trunc i64 %124 to i32
  br label %for.body546

for.body546:                                      ; preds = %for.inc564, %for.body546.lr.ph
  %indvars.iv953 = phi i64 [ 0, %for.body546.lr.ph ], [ %indvars.iv.next954, %for.inc564 ]
  %plin.5803 = phi i32* [ %plin.4, %for.body546.lr.ph ], [ %plin.6, %for.inc564 ]
  %plix.0802 = phi i32* [ %cond162751, %for.body546.lr.ph ], [ %plix.1, %for.inc564 ]
  %plim.0801 = phi i32* [ %cond173, %for.body546.lr.ph ], [ %plim.1, %for.inc564 ]
  %arrayidx549 = getelementptr inbounds i32* %cond140737739749, i64 %indvars.iv953
  %126 = load i32* %arrayidx549, align 4, !tbaa !11
  %idxprom551 = sext i32 %126 to i64
  %id553 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom551, i32 2
  %127 = bitcast [4 x i8]* %id553 to i32*
  %bf.load554 = load i32* %127, align 4
  %bf.clear555 = and i32 %bf.load554, 4194303
  %idxprom556700 = zext i32 %bf.clear555 to i64
  %add.ptr.sum = sub i64 %idxprom556700, %idx.ext
  %arrayidx557 = getelementptr inbounds i8* %74, i64 %add.ptr.sum
  %128 = load i8* %arrayidx557, align 1, !tbaa !68
  %conv558 = sext i8 %128 to i32
  switch i32 %conv558, label %for.inc564 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb560
    i32 2, label %sw.bb562
  ]

sw.bb:                                            ; preds = %for.body546
  %incdec.ptr559 = getelementptr inbounds i32* %plin.5803, i64 1
  store i32 %126, i32* %plin.5803, align 4, !tbaa !11
  br label %for.inc564

sw.bb560:                                         ; preds = %for.body546
  %incdec.ptr561 = getelementptr inbounds i32* %plix.0802, i64 1
  store i32 %126, i32* %plix.0802, align 4, !tbaa !11
  br label %for.inc564

sw.bb562:                                         ; preds = %for.body546
  %incdec.ptr563 = getelementptr inbounds i32* %plim.0801, i64 1
  store i32 %126, i32* %plim.0801, align 4, !tbaa !11
  br label %for.inc564

for.inc564:                                       ; preds = %sw.bb562, %sw.bb560, %sw.bb, %for.body546
  %plim.1 = phi i32* [ %plim.0801, %for.body546 ], [ %incdec.ptr563, %sw.bb562 ], [ %plim.0801, %sw.bb560 ], [ %plim.0801, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0802, %for.body546 ], [ %plix.0802, %sw.bb562 ], [ %incdec.ptr561, %sw.bb560 ], [ %plix.0802, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5803, %for.body546 ], [ %plin.5803, %sw.bb562 ], [ %plin.5803, %sw.bb560 ], [ %incdec.ptr559, %sw.bb ]
  %indvars.iv.next954 = add nuw nsw i64 %indvars.iv953, 1
  %lftr.wideiv955 = trunc i64 %indvars.iv.next954 to i32
  %exitcond956 = icmp eq i32 %lftr.wideiv955, %125
  br i1 %exitcond956, label %for.end566, label %for.body546

for.end566:                                       ; preds = %for.inc564, %for.cond544.preheader, %if.end529
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond544.preheader ], [ %plin.4, %if.end529 ], [ %plin.6, %for.inc564 ]
  %plix.0.lcssa = phi i32* [ %cond162751, %for.cond544.preheader ], [ %cond162751, %if.end529 ], [ %plix.1, %for.inc564 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond544.preheader ], [ %cond173, %if.end529 ], [ %plim.1, %for.inc564 ]
  %sub.ptr.lhs.cast567 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub569 = sub i64 %sub.ptr.lhs.cast567, %sub.ptr.rhs.cast568
  %sub.ptr.div570 = ashr exact i64 %sub.ptr.sub569, 2
  %conv571651 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast574 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub576 = sub i64 %sub.ptr.lhs.cast574, %sub.ptr.rhs.cast575
  %sub.ptr.div577 = ashr exact i64 %sub.ptr.sub576, 2
  %add572 = add i64 %sub.ptr.div577, %conv571651
  %add579 = add i64 %add572, %sub.ptr.div570
  %conv580 = trunc i64 %add579 to i32
  %sub.ptr.lhs.cast581 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub583 = sub i64 %sub.ptr.lhs.cast581, %sub.ptr.rhs.cast582
  %sub.ptr.div584653 = lshr exact i64 %sub.ptr.sub583, 2
  %conv585 = trunc i64 %sub.ptr.div584653 to i32
  %cmp587807 = icmp sgt i32 %conv585, 0
  br i1 %cmp587807, label %for.body588.lr.ph, label %for.end773

for.body588.lr.ph:                                ; preds = %for.end566
  %x704 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y713 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z720 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x749 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y759 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z767 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %129 = sub i64 %sub.ptr.lhs.cast581, %sub.ptr.rhs.cast582
  %130 = lshr i64 %129, 2
  %131 = trunc i64 %130 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.body588.for.body588_crit_edge, %for.body588.lr.ph
  %132 = phi i32* [ %103, %for.body588.lr.ph ], [ %.pre, %for.body588.for.body588_crit_edge ]
  %indvars.iv957 = phi i64 [ 0, %for.body588.lr.ph ], [ %indvars.iv.next958, %for.body588.for.body588_crit_edge ]
  %133 = phi <2 x double> [ %64, %for.body588.lr.ph ], [ %165, %for.body588.for.body588_crit_edge ]
  %134 = phi <2 x double> [ %65, %for.body588.lr.ph ], [ %172, %for.body588.for.body588_crit_edge ]
  %135 = phi <2 x double> [ %66, %for.body588.lr.ph ], [ %189, %for.body588.for.body588_crit_edge ]
  %136 = phi <2 x double> [ %67, %for.body588.lr.ph ], [ %193, %for.body588.for.body588_crit_edge ]
  %137 = phi <2 x double> [ %68, %for.body588.lr.ph ], [ %198, %for.body588.for.body588_crit_edge ]
  %138 = phi <2 x double> [ %69, %for.body588.lr.ph ], [ %209, %for.body588.for.body588_crit_edge ]
  %arrayidx591 = getelementptr inbounds i32* %cond151743745, i64 %indvars.iv957
  %139 = load i32* %arrayidx591, align 4, !tbaa !11
  %idx.ext592 = sext i32 %139 to i64
  %x595 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 0
  %140 = load double* %x595, align 8, !tbaa !59
  %sub596 = fsub double %75, %140
  %mul598 = fmul double %sub596, %sub596
  %y600 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 1
  %141 = load double* %y600, align 8, !tbaa !61
  %sub601 = fsub double %76, %141
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %mul598, %mul602
  %z605 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 2
  %142 = load double* %z605, align 8, !tbaa !62
  %sub606 = fsub double %77, %142
  %mul607 = fmul double %sub606, %sub606
  %add608 = fadd double %add603, %mul607
  %conv609 = fptrunc double %add608 to float
  %143 = bitcast float %conv609 to i32
  %shr = ashr i32 %143, 17
  %add611 = add nsw i32 %shr, %mul
  %id612 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 2
  %144 = bitcast [4 x i8]* %id612 to i32*
  %bf.load613 = load i32* %144, align 4
  %bf.clear614 = and i32 %bf.load613, 4194303
  %idxprom.i717757 = zext i32 %bf.clear614 to i64
  %arrayidx.i719 = getelementptr inbounds i32* %132, i64 %idxprom.i717757
  %145 = load i32* %arrayidx.i719, align 4, !tbaa !11
  %conv.i720 = zext i32 %145 to i64
  %conv616 = shl nuw nsw i64 %conv.i720, 1
  %mul617 = and i64 %conv616, 131070
  %mul620 = shl nsw i32 %add611, 4
  %idx.ext621 = sext i32 %mul620 to i64
  %and = and i32 %143, -131072
  %charge641 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 1
  %146 = load float* %charge641, align 4, !tbaa !63
  %conv642 = fpext float %146 to double
  %mul643 = fmul double %mul378, %conv642
  %147 = bitcast i32 %and to float
  %conv645 = fpext float %147 to double
  %sub646 = fsub double %add608, %conv645
  %bf.lshr649 = lshr i32 %bf.load613, 28
  %idxprom650 = zext i32 %bf.lshr649 to i64
  %add.ptr374.sum687 = add i64 %idxprom650, %idx.ext373
  %arrayidx651 = getelementptr inbounds double* %100, i64 %add.ptr374.sum687
  %148 = load double* %arrayidx651, align 8, !tbaa !17
  %add.ptr.i.sum758 = add i64 %mul617, %idx.ext.i
  %A653 = getelementptr inbounds %"struct.LJTable::TableEntry"* %105, i64 %add.ptr.i.sum758, i32 0
  %149 = load double* %A653, align 8, !tbaa !69
  %mul654 = fmul double %9, %149
  %B656 = getelementptr inbounds %"struct.LJTable::TableEntry"* %105, i64 %add.ptr.i.sum758, i32 1
  %150 = load double* %B656, align 8, !tbaa !71
  %mul657 = fmul double %9, %150
  %add.ptr622.sum688 = or i64 %idx.ext621, 3
  %arrayidx661 = getelementptr inbounds double* %7, i64 %add.ptr622.sum688
  %151 = load double* %arrayidx661, align 8, !tbaa !17
  %mul662 = fmul double %mul654, %151
  %add.ptr627.sum689 = or i64 %idx.ext621, 7
  %arrayidx663 = getelementptr inbounds double* %7, i64 %add.ptr627.sum689
  %152 = load double* %arrayidx663, align 8, !tbaa !17
  %mul664 = fmul double %mul657, %152
  %sub665 = fsub double %mul662, %mul664
  %add.ptr622.sum690 = or i64 %idx.ext621, 2
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr622.sum690
  %153 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul654, %153
  %add.ptr627.sum691 = or i64 %idx.ext621, 6
  %arrayidx668 = getelementptr inbounds double* %7, i64 %add.ptr627.sum691
  %154 = load double* %arrayidx668, align 8, !tbaa !17
  %mul669 = fmul double %mul657, %154
  %sub670 = fsub double %mul667, %mul669
  %add.ptr622.sum692 = or i64 %idx.ext621, 1
  %arrayidx671 = getelementptr inbounds double* %7, i64 %add.ptr622.sum692
  %155 = load double* %arrayidx671, align 8, !tbaa !17
  %mul672 = fmul double %mul654, %155
  %add.ptr627.sum693 = or i64 %idx.ext621, 5
  %arrayidx673 = getelementptr inbounds double* %7, i64 %add.ptr627.sum693
  %156 = load double* %arrayidx673, align 8, !tbaa !17
  %mul674 = fmul double %mul657, %156
  %sub675 = fsub double %mul672, %mul674
  %add.ptr632.sum694 = or i64 %idx.ext621, 11
  %arrayidx677 = getelementptr inbounds double* %7, i64 %add.ptr632.sum694
  %157 = load double* %arrayidx677, align 8, !tbaa !17
  %mul678 = fmul double %mul643, %157
  %add.ptr632.sum695 = or i64 %idx.ext621, 10
  %arrayidx679 = getelementptr inbounds double* %7, i64 %add.ptr632.sum695
  %158 = load double* %arrayidx679, align 8, !tbaa !17
  %mul680 = fmul double %mul643, %158
  %add.ptr632.sum696 = or i64 %idx.ext621, 9
  %arrayidx681 = getelementptr inbounds double* %7, i64 %add.ptr632.sum696
  %159 = load double* %arrayidx681, align 8, !tbaa !17
  %mul682 = fmul double %mul643, %159
  %add683 = fadd double %sub665, %mul678
  %add684 = fadd double %sub670, %mul680
  %add685 = fadd double %sub675, %mul682
  %mul687 = fmul double %sub646, 3.000000e+00
  %mul688 = fmul double %mul687, %add683
  %mul689 = fmul double %add684, 2.000000e+00
  %add690 = fadd double %mul688, %mul689
  %mul691 = fmul double %sub646, %add690
  %add692 = fadd double %add685, %mul691
  %mul693 = fmul double %148, -2.000000e+00
  %mul694 = fmul double %mul693, %add692
  %mul697 = fmul double %sub596, %mul694
  %160 = insertelement <2 x double> undef, double %sub596, i32 0
  %161 = insertelement <2 x double> %160, double %sub601, i32 1
  %162 = insertelement <2 x double> undef, double %mul697, i32 0
  %163 = insertelement <2 x double> %162, double %mul697, i32 1
  %164 = fmul <2 x double> %161, %163
  %165 = fadd <2 x double> %133, %164
  %166 = load double* %x704, align 8, !tbaa !72
  %add705 = fadd double %166, %mul697
  store double %add705, double* %x704, align 8, !tbaa !72
  %x706 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext592, i32 0
  %mul708 = fmul double %sub601, %mul694
  %167 = insertelement <2 x double> undef, double %sub601, i32 0
  %168 = insertelement <2 x double> %167, double %sub606, i32 1
  %169 = insertelement <2 x double> undef, double %mul708, i32 0
  %170 = insertelement <2 x double> %169, double %mul708, i32 1
  %171 = fmul <2 x double> %168, %170
  %172 = fadd <2 x double> %134, %171
  %173 = load double* %y713, align 8, !tbaa !73
  %add714 = fadd double %173, %mul708
  store double %add714, double* %y713, align 8, !tbaa !73
  %174 = bitcast double* %x706 to <2 x double>*
  %175 = load <2 x double>* %174, align 8, !tbaa !17
  %176 = insertelement <2 x double> %162, double %mul708, i32 1
  %177 = fsub <2 x double> %175, %176
  %178 = bitcast double* %x706 to <2 x double>*
  store <2 x double> %177, <2 x double>* %178, align 8, !tbaa !17
  %mul717 = fmul double %sub606, %mul694
  %179 = load double* %z720, align 8, !tbaa !74
  %add721 = fadd double %179, %mul717
  store double %add721, double* %z720, align 8, !tbaa !74
  %z722 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext592, i32 2
  %180 = load double* %z722, align 8, !tbaa !74
  %sub723 = fsub double %180, %mul717
  store double %sub723, double* %z722, align 8, !tbaa !74
  %add.ptr638.sum697 = or i64 %idx.ext621, 13
  %arrayidx724 = getelementptr inbounds double* %7, i64 %add.ptr638.sum697
  %181 = load double* %arrayidx724, align 8, !tbaa !17
  %add.ptr638.sum698 = or i64 %idx.ext621, 14
  %arrayidx725 = getelementptr inbounds double* %7, i64 %add.ptr638.sum698
  %182 = load double* %arrayidx725, align 8, !tbaa !17
  %add.ptr638.sum699 = or i64 %idx.ext621, 15
  %arrayidx726 = getelementptr inbounds double* %7, i64 %add.ptr638.sum699
  %183 = load double* %arrayidx726, align 8, !tbaa !17
  %mul727 = fmul double %mul643, %183
  %mul728 = fmul double %mul643, %182
  %mul729 = fmul double %mul643, %181
  %mul732 = fmul double %mul687, %mul727
  %mul733 = fmul double %mul728, 2.000000e+00
  %add734 = fadd double %mul733, %mul732
  %mul735 = fmul double %sub646, %add734
  %add736 = fadd double %mul729, %mul735
  %mul737 = fmul double %add736, -2.000000e+00
  %mul738 = fmul double %148, %mul737
  %mul742 = fmul double %sub596, %mul738
  %184 = insertelement <2 x double> undef, double %sub606, i32 0
  %185 = insertelement <2 x double> %184, double %sub596, i32 1
  %186 = insertelement <2 x double> undef, double %mul717, i32 0
  %187 = insertelement <2 x double> %186, double %mul742, i32 1
  %188 = fmul <2 x double> %185, %187
  %189 = fadd <2 x double> %135, %188
  %190 = insertelement <2 x double> undef, double %mul742, i32 0
  %191 = insertelement <2 x double> %190, double %mul742, i32 1
  %192 = fmul <2 x double> %168, %191
  %193 = fadd <2 x double> %136, %192
  %194 = load double* %x749, align 8, !tbaa !72
  %add750 = fadd double %194, %mul742
  store double %add750, double* %x749, align 8, !tbaa !72
  %x751 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext592, i32 0
  %mul754 = fmul double %sub601, %mul738
  %195 = insertelement <2 x double> %184, double %sub601, i32 1
  %196 = insertelement <2 x double> %162, double %mul754, i32 1
  %197 = fmul <2 x double> %195, %196
  %198 = fadd <2 x double> %137, %197
  %199 = load double* %y759, align 8, !tbaa !73
  %add760 = fadd double %199, %mul754
  store double %add760, double* %y759, align 8, !tbaa !73
  %200 = bitcast double* %x751 to <2 x double>*
  %201 = load <2 x double>* %200, align 8, !tbaa !17
  %202 = insertelement <2 x double> %190, double %mul754, i32 1
  %203 = fsub <2 x double> %201, %202
  %204 = bitcast double* %x751 to <2 x double>*
  store <2 x double> %203, <2 x double>* %204, align 8, !tbaa !17
  %mul764 = fmul double %sub606, %mul738
  %205 = insertelement <2 x double> %184, double %sub606, i32 1
  %206 = insertelement <2 x double> undef, double %mul754, i32 0
  %207 = insertelement <2 x double> %206, double %mul764, i32 1
  %208 = fmul <2 x double> %205, %207
  %209 = fadd <2 x double> %138, %208
  %210 = load double* %z767, align 8, !tbaa !74
  %add768 = fadd double %210, %mul764
  store double %add768, double* %z767, align 8, !tbaa !74
  %z769 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext592, i32 2
  %211 = load double* %z769, align 8, !tbaa !74
  %sub770 = fsub double %211, %mul764
  store double %sub770, double* %z769, align 8, !tbaa !74
  %indvars.iv.next958 = add nuw nsw i64 %indvars.iv957, 1
  %lftr.wideiv959 = trunc i64 %indvars.iv.next958 to i32
  %exitcond960 = icmp eq i32 %lftr.wideiv959, %131
  br i1 %exitcond960, label %for.end773, label %for.body588.for.body588_crit_edge

for.body588.for.body588_crit_edge:                ; preds = %for.body588
  %.pre = load i32** %atomVdwType.i722, align 8, !tbaa !64
  br label %for.body588

for.end773:                                       ; preds = %for.body588, %for.end566
  %212 = phi <2 x double> [ %64, %for.end566 ], [ %165, %for.body588 ]
  %213 = phi <2 x double> [ %65, %for.end566 ], [ %172, %for.body588 ]
  %214 = phi <2 x double> [ %66, %for.end566 ], [ %189, %for.body588 ]
  %215 = phi <2 x double> [ %67, %for.end566 ], [ %193, %for.body588 ]
  %216 = phi <2 x double> [ %68, %for.end566 ], [ %198, %for.body588 ]
  %217 = phi <2 x double> [ %69, %for.end566 ], [ %209, %for.body588 ]
  %conv778 = trunc i64 %sub.ptr.div577 to i32
  %cmp780833 = icmp sgt i32 %conv778, 0
  br i1 %cmp780833, label %for.body781.lr.ph, label %for.end1024

for.body781.lr.ph:                                ; preds = %for.end773
  %x932 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y942 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z950 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x1000 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1010 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1018 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  br label %for.body781

for.body781:                                      ; preds = %for.body781, %for.body781.lr.ph
  %indvars.iv961 = phi i64 [ 0, %for.body781.lr.ph ], [ %indvars.iv.next962, %for.body781 ]
  %218 = phi <2 x double> [ %212, %for.body781.lr.ph ], [ %251, %for.body781 ]
  %219 = phi <2 x double> [ %213, %for.body781.lr.ph ], [ %258, %for.body781 ]
  %220 = phi <2 x double> [ %214, %for.body781.lr.ph ], [ %278, %for.body781 ]
  %221 = phi <2 x double> [ %215, %for.body781.lr.ph ], [ %282, %for.body781 ]
  %222 = phi <2 x double> [ %216, %for.body781.lr.ph ], [ %287, %for.body781 ]
  %223 = phi <2 x double> [ %217, %for.body781.lr.ph ], [ %298, %for.body781 ]
  %arrayidx784 = getelementptr inbounds i32* %cond173, i64 %indvars.iv961
  %224 = load i32* %arrayidx784, align 4, !tbaa !11
  %idx.ext786 = sext i32 %224 to i64
  %x790 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext786, i32 0, i32 0
  %225 = load double* %x790, align 8, !tbaa !59
  %sub791 = fsub double %75, %225
  %mul793 = fmul double %sub791, %sub791
  %y796 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext786, i32 0, i32 1
  %226 = load double* %y796, align 8, !tbaa !61
  %sub797 = fsub double %76, %226
  %mul798 = fmul double %sub797, %sub797
  %add799 = fadd double %mul793, %mul798
  %z802 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext786, i32 0, i32 2
  %227 = load double* %z802, align 8, !tbaa !62
  %sub803 = fsub double %77, %227
  %mul804 = fmul double %sub803, %sub803
  %add805 = fadd double %add799, %mul804
  %conv807 = fptrunc double %add805 to float
  %228 = bitcast float %conv807 to i32
  %shr811 = ashr i32 %228, 17
  %add812 = add nsw i32 %shr811, %mul
  %id814 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext786, i32 2
  %229 = bitcast [4 x i8]* %id814 to i32*
  %bf.load815 = load i32* %229, align 4
  %bf.clear816 = and i32 %bf.load815, 4194303
  %idxprom.i715755 = zext i32 %bf.clear816 to i64
  %230 = load i32** %atomVdwType.i722, align 8, !tbaa !64
  %arrayidx.i716 = getelementptr inbounds i32* %230, i64 %idxprom.i715755
  %231 = load i32* %arrayidx.i716, align 4, !tbaa !11
  %conv.i = zext i32 %231 to i64
  %conv818 = shl nuw nsw i64 %conv.i, 1
  %mul819 = and i64 %conv818, 131070
  %add.ptr821.sum663 = or i64 %mul819, 1
  %mul824 = shl nsw i32 %add812, 4
  %idx.ext825 = sext i32 %mul824 to i64
  %and852 = and i32 %228, -131072
  %charge854 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext786, i32 1
  %232 = load float* %charge854, align 4, !tbaa !63
  %conv855 = fpext float %232 to double
  %mul856 = fmul double %mul378, %conv855
  %233 = bitcast i32 %and852 to float
  %conv859 = fpext float %233 to double
  %sub860 = fsub double %add805, %conv859
  %bf.lshr864 = lshr i32 %bf.load815, 28
  %idxprom865 = zext i32 %bf.lshr864 to i64
  %add.ptr374.sum667 = add i64 %idxprom865, %idx.ext373
  %arrayidx866 = getelementptr inbounds double* %100, i64 %add.ptr374.sum667
  %234 = load double* %arrayidx866, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr821.sum663, %idx.ext.i
  %A868 = getelementptr inbounds %"struct.LJTable::TableEntry"* %105, i64 %add.ptr.i.sum, i32 0
  %235 = load double* %A868, align 8, !tbaa !69
  %mul869 = fmul double %9, %235
  %B871 = getelementptr inbounds %"struct.LJTable::TableEntry"* %105, i64 %add.ptr.i.sum, i32 1
  %236 = load double* %B871, align 8, !tbaa !71
  %mul872 = fmul double %9, %236
  %add.ptr826.sum668 = or i64 %idx.ext825, 3
  %arrayidx878 = getelementptr inbounds double* %7, i64 %add.ptr826.sum668
  %237 = load double* %arrayidx878, align 8, !tbaa !17
  %mul879 = fmul double %mul869, %237
  %add.ptr833.sum669 = or i64 %idx.ext825, 7
  %arrayidx880 = getelementptr inbounds double* %7, i64 %add.ptr833.sum669
  %238 = load double* %arrayidx880, align 8, !tbaa !17
  %mul881 = fmul double %mul872, %238
  %sub882 = fsub double %mul879, %mul881
  %add.ptr826.sum670 = or i64 %idx.ext825, 2
  %arrayidx884 = getelementptr inbounds double* %7, i64 %add.ptr826.sum670
  %239 = load double* %arrayidx884, align 8, !tbaa !17
  %mul885 = fmul double %mul869, %239
  %add.ptr833.sum671 = or i64 %idx.ext825, 6
  %arrayidx886 = getelementptr inbounds double* %7, i64 %add.ptr833.sum671
  %240 = load double* %arrayidx886, align 8, !tbaa !17
  %mul887 = fmul double %mul872, %240
  %sub888 = fsub double %mul885, %mul887
  %add.ptr826.sum672 = or i64 %idx.ext825, 1
  %arrayidx890 = getelementptr inbounds double* %7, i64 %add.ptr826.sum672
  %241 = load double* %arrayidx890, align 8, !tbaa !17
  %mul891 = fmul double %mul869, %241
  %add.ptr833.sum673 = or i64 %idx.ext825, 5
  %arrayidx892 = getelementptr inbounds double* %7, i64 %add.ptr833.sum673
  %242 = load double* %arrayidx892, align 8, !tbaa !17
  %mul893 = fmul double %mul872, %242
  %sub894 = fsub double %mul891, %mul893
  %mul896 = fmul double %sub895, %mul856
  %add.ptr840.sum674 = or i64 %idx.ext825, 11
  %arrayidx899 = getelementptr inbounds double* %7, i64 %add.ptr840.sum674
  %243 = load double* %arrayidx899, align 8, !tbaa !17
  %mul900 = fmul double %mul896, %243
  %add.ptr840.sum675 = or i64 %idx.ext825, 10
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr840.sum675
  %244 = load double* %arrayidx902, align 8, !tbaa !17
  %mul903 = fmul double %mul896, %244
  %add.ptr840.sum676 = or i64 %idx.ext825, 9
  %arrayidx905 = getelementptr inbounds double* %7, i64 %add.ptr840.sum676
  %245 = load double* %arrayidx905, align 8, !tbaa !17
  %mul906 = fmul double %mul896, %245
  %add907 = fadd double %sub882, %mul900
  %add908 = fadd double %sub888, %mul903
  %add909 = fadd double %sub894, %mul906
  %mul912 = fmul double %sub860, 3.000000e+00
  %mul913 = fmul double %mul912, %add907
  %mul914 = fmul double %add908, 2.000000e+00
  %add915 = fadd double %mul913, %mul914
  %mul916 = fmul double %sub860, %add915
  %add917 = fadd double %add909, %mul916
  %mul919 = fmul double %234, -2.000000e+00
  %mul920 = fmul double %mul919, %add917
  %mul925 = fmul double %sub791, %mul920
  %246 = insertelement <2 x double> undef, double %sub791, i32 0
  %247 = insertelement <2 x double> %246, double %sub797, i32 1
  %248 = insertelement <2 x double> undef, double %mul925, i32 0
  %249 = insertelement <2 x double> %248, double %mul925, i32 1
  %250 = fmul <2 x double> %247, %249
  %251 = fadd <2 x double> %218, %250
  %252 = load double* %x932, align 8, !tbaa !72
  %add933 = fadd double %252, %mul925
  store double %add933, double* %x932, align 8, !tbaa !72
  %x934 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext786, i32 0
  %mul937 = fmul double %sub797, %mul920
  %253 = insertelement <2 x double> undef, double %sub797, i32 0
  %254 = insertelement <2 x double> %253, double %sub803, i32 1
  %255 = insertelement <2 x double> undef, double %mul937, i32 0
  %256 = insertelement <2 x double> %255, double %mul937, i32 1
  %257 = fmul <2 x double> %254, %256
  %258 = fadd <2 x double> %219, %257
  %259 = load double* %y942, align 8, !tbaa !73
  %add943 = fadd double %259, %mul937
  store double %add943, double* %y942, align 8, !tbaa !73
  %260 = bitcast double* %x934 to <2 x double>*
  %261 = load <2 x double>* %260, align 8, !tbaa !17
  %262 = insertelement <2 x double> %248, double %mul937, i32 1
  %263 = fsub <2 x double> %261, %262
  %264 = bitcast double* %x934 to <2 x double>*
  store <2 x double> %263, <2 x double>* %264, align 8, !tbaa !17
  %mul947 = fmul double %sub803, %mul920
  %265 = load double* %z950, align 8, !tbaa !74
  %add951 = fadd double %265, %mul947
  store double %add951, double* %z950, align 8, !tbaa !74
  %z952 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext786, i32 2
  %266 = load double* %z952, align 8, !tbaa !74
  %sub953 = fsub double %266, %mul947
  store double %sub953, double* %z952, align 8, !tbaa !74
  %add.ptr848.sum677 = or i64 %idx.ext825, 13
  %arrayidx955 = getelementptr inbounds double* %7, i64 %add.ptr848.sum677
  %267 = load double* %arrayidx955, align 8, !tbaa !17
  %add.ptr848.sum678 = or i64 %idx.ext825, 14
  %arrayidx957 = getelementptr inbounds double* %7, i64 %add.ptr848.sum678
  %268 = load double* %arrayidx957, align 8, !tbaa !17
  %add.ptr848.sum679 = or i64 %idx.ext825, 15
  %arrayidx959 = getelementptr inbounds double* %7, i64 %add.ptr848.sum679
  %269 = load double* %arrayidx959, align 8, !tbaa !17
  %mul960 = shl nsw i32 %add812, 2
  %idx.ext961 = sext i32 %mul960 to i64
  %add.ptr962.sum680 = or i64 %idx.ext961, 1
  %arrayidx966 = getelementptr inbounds double* %8, i64 %add.ptr962.sum680
  %270 = load double* %arrayidx966, align 8, !tbaa !17
  %mul967 = fmul double %sub, %270
  %sub968 = fsub double %267, %mul967
  %add.ptr962.sum681 = or i64 %idx.ext961, 2
  %arrayidx969 = getelementptr inbounds double* %8, i64 %add.ptr962.sum681
  %271 = load double* %arrayidx969, align 8, !tbaa !17
  %mul970 = fmul double %sub, %271
  %sub971 = fsub double %268, %mul970
  %add.ptr962.sum682 = or i64 %idx.ext961, 3
  %arrayidx972 = getelementptr inbounds double* %8, i64 %add.ptr962.sum682
  %272 = load double* %arrayidx972, align 8, !tbaa !17
  %mul973 = fmul double %sub, %272
  %sub974 = fsub double %269, %mul973
  %mul975 = fmul double %mul856, %sub974
  %mul976 = fmul double %mul856, %sub971
  %mul977 = fmul double %mul856, %sub968
  %mul981 = fmul double %mul912, %mul975
  %mul982 = fmul double %mul976, 2.000000e+00
  %add983 = fadd double %mul982, %mul981
  %mul984 = fmul double %sub860, %add983
  %add985 = fadd double %mul977, %mul984
  %mul987 = fmul double %add985, -2.000000e+00
  %mul988 = fmul double %234, %mul987
  %mul993 = fmul double %sub791, %mul988
  %273 = insertelement <2 x double> undef, double %sub803, i32 0
  %274 = insertelement <2 x double> %273, double %sub791, i32 1
  %275 = insertelement <2 x double> undef, double %mul947, i32 0
  %276 = insertelement <2 x double> %275, double %mul993, i32 1
  %277 = fmul <2 x double> %274, %276
  %278 = fadd <2 x double> %220, %277
  %279 = insertelement <2 x double> undef, double %mul993, i32 0
  %280 = insertelement <2 x double> %279, double %mul993, i32 1
  %281 = fmul <2 x double> %254, %280
  %282 = fadd <2 x double> %221, %281
  %283 = load double* %x1000, align 8, !tbaa !72
  %add1001 = fadd double %283, %mul993
  store double %add1001, double* %x1000, align 8, !tbaa !72
  %x1002 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext786, i32 0
  %mul1005 = fmul double %sub797, %mul988
  %284 = insertelement <2 x double> %273, double %sub797, i32 1
  %285 = insertelement <2 x double> %248, double %mul1005, i32 1
  %286 = fmul <2 x double> %284, %285
  %287 = fadd <2 x double> %222, %286
  %288 = load double* %y1010, align 8, !tbaa !73
  %add1011 = fadd double %288, %mul1005
  store double %add1011, double* %y1010, align 8, !tbaa !73
  %289 = bitcast double* %x1002 to <2 x double>*
  %290 = load <2 x double>* %289, align 8, !tbaa !17
  %291 = insertelement <2 x double> %279, double %mul1005, i32 1
  %292 = fsub <2 x double> %290, %291
  %293 = bitcast double* %x1002 to <2 x double>*
  store <2 x double> %292, <2 x double>* %293, align 8, !tbaa !17
  %mul1015 = fmul double %sub803, %mul988
  %294 = insertelement <2 x double> %273, double %sub803, i32 1
  %295 = insertelement <2 x double> undef, double %mul1005, i32 0
  %296 = insertelement <2 x double> %295, double %mul1015, i32 1
  %297 = fmul <2 x double> %294, %296
  %298 = fadd <2 x double> %223, %297
  %299 = load double* %z1018, align 8, !tbaa !74
  %add1019 = fadd double %299, %mul1015
  store double %add1019, double* %z1018, align 8, !tbaa !74
  %z1020 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext786, i32 2
  %300 = load double* %z1020, align 8, !tbaa !74
  %sub1021 = fsub double %300, %mul1015
  store double %sub1021, double* %z1020, align 8, !tbaa !74
  %indvars.iv.next962 = add nuw nsw i64 %indvars.iv961, 1
  %lftr.wideiv963 = trunc i64 %indvars.iv.next962 to i32
  %exitcond964 = icmp eq i32 %lftr.wideiv963, %conv778
  br i1 %exitcond964, label %for.end1024, label %for.body781

for.end1024:                                      ; preds = %for.body781, %for.end773
  %301 = phi <2 x double> [ %212, %for.end773 ], [ %251, %for.body781 ]
  %302 = phi <2 x double> [ %213, %for.end773 ], [ %258, %for.body781 ]
  %303 = phi <2 x double> [ %214, %for.end773 ], [ %278, %for.body781 ]
  %304 = phi <2 x double> [ %215, %for.end773 ], [ %282, %for.body781 ]
  %305 = phi <2 x double> [ %216, %for.end773 ], [ %287, %for.body781 ]
  %306 = phi <2 x double> [ %217, %for.end773 ], [ %298, %for.body781 ]
  %conv1029 = trunc i64 %sub.ptr.div570 to i32
  %cmp1031859 = icmp sgt i32 %conv1029, 0
  br i1 %cmp1031859, label %for.body1032.lr.ph, label %for.inc1156

for.body1032.lr.ph:                               ; preds = %for.end1024
  %307 = extractelement <2 x double> %303, i32 1
  %308 = extractelement <2 x double> %303, i32 0
  %309 = extractelement <2 x double> %305, i32 1
  %310 = extractelement <2 x double> %305, i32 0
  %x1131 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1141 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1149 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %311 = insertelement <2 x double> undef, double %308, i32 0
  %312 = insertelement <2 x double> undef, double %310, i32 0
  br label %for.body1032

for.body1032:                                     ; preds = %for.body1032, %for.body1032.lr.ph
  %indvars.iv965 = phi i64 [ 0, %for.body1032.lr.ph ], [ %indvars.iv.next966, %for.body1032 ]
  %fullElectVirial_xx.3866 = phi double [ %307, %for.body1032.lr.ph ], [ %add1126, %for.body1032 ]
  %fullElectVirial_yy.3863 = phi double [ %309, %for.body1032.lr.ph ], [ %add1138, %for.body1032 ]
  %313 = phi <2 x double> [ %304, %for.body1032.lr.ph ], [ %335, %for.body1032 ]
  %314 = phi <2 x double> [ %306, %for.body1032.lr.ph ], [ %348, %for.body1032 ]
  %arrayidx1035 = getelementptr inbounds i32* %cond162751, i64 %indvars.iv965
  %315 = load i32* %arrayidx1035, align 4, !tbaa !11
  %idx.ext1037 = sext i32 %315 to i64
  %x1041 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1037, i32 0, i32 0
  %316 = load double* %x1041, align 8, !tbaa !59
  %sub1042 = fsub double %75, %316
  %mul1044 = fmul double %sub1042, %sub1042
  %y1047 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1037, i32 0, i32 1
  %317 = load double* %y1047, align 8, !tbaa !61
  %sub1048 = fsub double %76, %317
  %mul1049 = fmul double %sub1048, %sub1048
  %add1050 = fadd double %mul1044, %mul1049
  %z1053 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1037, i32 0, i32 2
  %318 = load double* %z1053, align 8, !tbaa !62
  %sub1054 = fsub double %77, %318
  %mul1055 = fmul double %sub1054, %sub1054
  %add1056 = fadd double %add1050, %mul1055
  %conv1058 = fptrunc double %add1056 to float
  %319 = bitcast float %conv1058 to i32
  %shr1062 = ashr i32 %319, 17
  %add1063 = add nsw i32 %shr1062, %mul
  %mul1065 = shl nsw i32 %add1063, 4
  %idx.ext1066 = sext i32 %mul1065 to i64
  %and1073 = and i32 %319, -131072
  %charge1075 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1037, i32 1
  %320 = load float* %charge1075, align 4, !tbaa !63
  %conv1076 = fpext float %320 to double
  %mul1077 = fmul double %mul378, %conv1076
  %321 = bitcast i32 %and1073 to float
  %conv1080 = fpext float %321 to double
  %sub1081 = fsub double %add1056, %conv1080
  %partition1083 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1037, i32 2
  %322 = bitcast [4 x i8]* %partition1083 to i32*
  %bf.load1084 = load i32* %322, align 4
  %bf.lshr1085 = lshr i32 %bf.load1084, 28
  %idxprom1086 = zext i32 %bf.lshr1085 to i64
  %add.ptr374.sum = add i64 %idxprom1086, %idx.ext373
  %arrayidx1087 = getelementptr inbounds double* %100, i64 %add.ptr374.sum
  %323 = load double* %arrayidx1087, align 8, !tbaa !17
  %add.ptr1069.sum656 = or i64 %idx.ext1066, 13
  %arrayidx1089 = getelementptr inbounds double* %7, i64 %add.ptr1069.sum656
  %324 = load double* %arrayidx1089, align 8, !tbaa !17
  %add.ptr1069.sum657 = or i64 %idx.ext1066, 14
  %arrayidx1091 = getelementptr inbounds double* %7, i64 %add.ptr1069.sum657
  %325 = load double* %arrayidx1091, align 8, !tbaa !17
  %add.ptr1069.sum658 = or i64 %idx.ext1066, 15
  %arrayidx1093 = getelementptr inbounds double* %7, i64 %add.ptr1069.sum658
  %326 = load double* %arrayidx1093, align 8, !tbaa !17
  %mul1095 = shl nsw i32 %add1063, 2
  %idx.ext1096 = sext i32 %mul1095 to i64
  %add.ptr1097.sum659 = or i64 %idx.ext1096, 1
  %arrayidx1100 = getelementptr inbounds double* %8, i64 %add.ptr1097.sum659
  %327 = load double* %arrayidx1100, align 8, !tbaa !17
  %sub1101 = fsub double %324, %327
  %add.ptr1097.sum660 = or i64 %idx.ext1096, 2
  %arrayidx1102 = getelementptr inbounds double* %8, i64 %add.ptr1097.sum660
  %328 = load double* %arrayidx1102, align 8, !tbaa !17
  %sub1103 = fsub double %325, %328
  %add.ptr1097.sum661 = or i64 %idx.ext1096, 3
  %arrayidx1104 = getelementptr inbounds double* %8, i64 %add.ptr1097.sum661
  %329 = load double* %arrayidx1104, align 8, !tbaa !17
  %sub1105 = fsub double %326, %329
  %mul1106 = fmul double %mul1077, %sub1105
  %mul1107 = fmul double %mul1077, %sub1103
  %mul1108 = fmul double %mul1077, %sub1101
  %mul1111 = fmul double %sub1081, 3.000000e+00
  %mul1112 = fmul double %mul1111, %mul1106
  %mul1113 = fmul double %mul1107, 2.000000e+00
  %add1114 = fadd double %mul1113, %mul1112
  %mul1115 = fmul double %sub1081, %add1114
  %add1116 = fadd double %mul1108, %mul1115
  %mul1118 = fmul double %add1116, -2.000000e+00
  %mul1119 = fmul double %323, %mul1118
  %mul1124 = fmul double %sub1042, %mul1119
  %mul1125 = fmul double %sub1042, %mul1124
  %add1126 = fadd double %fullElectVirial_xx.3866, %mul1125
  %330 = insertelement <2 x double> undef, double %sub1048, i32 0
  %331 = insertelement <2 x double> %330, double %sub1054, i32 1
  %332 = insertelement <2 x double> undef, double %mul1124, i32 0
  %333 = insertelement <2 x double> %332, double %mul1124, i32 1
  %334 = fmul <2 x double> %331, %333
  %335 = fadd <2 x double> %313, %334
  %336 = load double* %x1131, align 8, !tbaa !72
  %add1132 = fadd double %336, %mul1124
  store double %add1132, double* %x1131, align 8, !tbaa !72
  %x1133 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1037, i32 0
  %mul1136 = fmul double %sub1048, %mul1119
  %mul1137 = fmul double %sub1048, %mul1136
  %add1138 = fadd double %fullElectVirial_yy.3863, %mul1137
  %337 = load double* %y1141, align 8, !tbaa !73
  %add1142 = fadd double %337, %mul1136
  store double %add1142, double* %y1141, align 8, !tbaa !73
  %338 = bitcast double* %x1133 to <2 x double>*
  %339 = load <2 x double>* %338, align 8, !tbaa !17
  %340 = insertelement <2 x double> %332, double %mul1136, i32 1
  %341 = fsub <2 x double> %339, %340
  %342 = bitcast double* %x1133 to <2 x double>*
  store <2 x double> %341, <2 x double>* %342, align 8, !tbaa !17
  %mul1146 = fmul double %sub1054, %mul1119
  %343 = insertelement <2 x double> undef, double %sub1054, i32 0
  %344 = insertelement <2 x double> %343, double %sub1054, i32 1
  %345 = insertelement <2 x double> undef, double %mul1136, i32 0
  %346 = insertelement <2 x double> %345, double %mul1146, i32 1
  %347 = fmul <2 x double> %344, %346
  %348 = fadd <2 x double> %314, %347
  %349 = load double* %z1149, align 8, !tbaa !74
  %add1150 = fadd double %349, %mul1146
  store double %add1150, double* %z1149, align 8, !tbaa !74
  %z1151 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1037, i32 2
  %350 = load double* %z1151, align 8, !tbaa !74
  %sub1152 = fsub double %350, %mul1146
  store double %sub1152, double* %z1151, align 8, !tbaa !74
  %indvars.iv.next966 = add nuw nsw i64 %indvars.iv965, 1
  %lftr.wideiv967 = trunc i64 %indvars.iv.next966 to i32
  %exitcond968 = icmp eq i32 %lftr.wideiv967, %conv1029
  br i1 %exitcond968, label %for.inc1156.loopexit, label %for.body1032

for.inc1156.loopexit:                             ; preds = %for.body1032
  %351 = insertelement <2 x double> %311, double %add1126, i32 1
  %352 = insertelement <2 x double> %312, double %add1138, i32 1
  br label %for.inc1156

for.inc1156:                                      ; preds = %for.inc1156.loopexit, %for.end1024, %cond.end354, %if.then226
  %pairCount.3 = phi i32 [ %add222, %if.then226 ], [ %pairCount.1, %cond.end354 ], [ %pairCount.2, %for.end1024 ], [ %pairCount.2, %for.inc1156.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0877, %if.then226 ], [ 0, %cond.end354 ], [ %pairlistindex.1, %for.end1024 ], [ %pairlistindex.1, %for.inc1156.loopexit ]
  %i.2 = phi i32 [ %add228, %if.then226 ], [ %add357, %cond.end354 ], [ %i.1878, %for.end1024 ], [ %i.1878, %for.inc1156.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0903, %if.then226 ], [ %exclChecksum.0903, %cond.end354 ], [ %conv580, %for.end1024 ], [ %conv580, %for.inc1156.loopexit ]
  %353 = phi <2 x double> [ %64, %if.then226 ], [ %64, %cond.end354 ], [ %301, %for.end1024 ], [ %301, %for.inc1156.loopexit ]
  %354 = phi <2 x double> [ %65, %if.then226 ], [ %65, %cond.end354 ], [ %302, %for.end1024 ], [ %302, %for.inc1156.loopexit ]
  %355 = phi <2 x double> [ %66, %if.then226 ], [ %66, %cond.end354 ], [ %303, %for.end1024 ], [ %351, %for.inc1156.loopexit ]
  %356 = phi <2 x double> [ %67, %if.then226 ], [ %67, %cond.end354 ], [ %304, %for.end1024 ], [ %335, %for.inc1156.loopexit ]
  %357 = phi <2 x double> [ %68, %if.then226 ], [ %68, %cond.end354 ], [ %305, %for.end1024 ], [ %352, %for.inc1156.loopexit ]
  %358 = phi <2 x double> [ %69, %if.then226 ], [ %69, %cond.end354 ], [ %306, %for.end1024 ], [ %348, %for.inc1156.loopexit ]
  %inc1157 = add nsw i32 %i.2, 1
  %cmp186 = icmp slt i32 %inc1157, %13
  br i1 %cmp186, label %for.body187, label %for.end1158

for.end1158:                                      ; preds = %for.inc1156, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1156 ]
  %359 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %353, %for.inc1156 ]
  %360 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %354, %for.inc1156 ]
  %361 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %355, %for.inc1156 ]
  %362 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %356, %for.inc1156 ]
  %363 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %357, %for.inc1156 ]
  %364 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %358, %for.inc1156 ]
  %365 = extractelement <2 x double> %364, i32 1
  %366 = extractelement <2 x double> %364, i32 0
  %arraydecay1159 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1160 = icmp eq i32* %cond725727984990, %arraydecay1159
  br i1 %cmp1160, label %if.end1165, label %delete.notnull1163

delete.notnull1163:                               ; preds = %for.end1158
  %367 = bitcast i32* %cond725727984990 to i8*
  call void @_ZdaPv(i8* %367) #7
  br label %if.end1165

if.end1165:                                       ; preds = %delete.notnull1163, %for.end1158
  %arraydecay1166 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1167 = icmp eq i32* %cond19729982991, %arraydecay1166
  br i1 %cmp1167, label %if.end1172, label %delete.notnull1170

delete.notnull1170:                               ; preds = %if.end1165
  %368 = bitcast i32* %cond19729982991 to i8*
  call void @_ZdaPv(i8* %368) #7
  br label %if.end1172

if.end1172:                                       ; preds = %delete.notnull1170, %if.end1165
  %arraydecay1173 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1174 = icmp eq i32* %cond30986989, %arraydecay1173
  br i1 %cmp1174, label %if.end1179, label %delete.notnull1177

delete.notnull1177:                               ; preds = %if.end1172
  %369 = bitcast i32* %cond30986989 to i8*
  call void @_ZdaPv(i8* %369) #7
  br label %if.end1179

if.end1179:                                       ; preds = %delete.notnull1177, %if.end1172
  %arraydecay1180 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1181 = icmp eq i32* %cond129733735741747, %arraydecay1180
  br i1 %cmp1181, label %if.end1186, label %delete.notnull1184

delete.notnull1184:                               ; preds = %if.end1179
  %370 = bitcast i32* %cond129733735741747 to i8*
  call void @_ZdaPv(i8* %370) #7
  br label %if.end1186

if.end1186:                                       ; preds = %delete.notnull1184, %if.end1179
  %arraydecay1187 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1188 = icmp eq i32* %cond140737739749, %arraydecay1187
  br i1 %cmp1188, label %if.end1193, label %delete.notnull1191

delete.notnull1191:                               ; preds = %if.end1186
  %371 = bitcast i32* %cond140737739749 to i8*
  call void @_ZdaPv(i8* %371) #7
  br label %if.end1193

if.end1193:                                       ; preds = %delete.notnull1191, %if.end1186
  %arraydecay1194 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1195 = icmp eq i32* %cond151743745, %arraydecay1194
  br i1 %cmp1195, label %if.end1200, label %delete.notnull1198

delete.notnull1198:                               ; preds = %if.end1193
  %372 = bitcast i32* %cond151743745 to i8*
  call void @_ZdaPv(i8* %372) #7
  br label %if.end1200

if.end1200:                                       ; preds = %delete.notnull1198, %if.end1193
  %arraydecay1201 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1202 = icmp eq i32* %cond162751, %arraydecay1201
  br i1 %cmp1202, label %if.end1207, label %delete.notnull1205

delete.notnull1205:                               ; preds = %if.end1200
  %373 = bitcast i32* %cond162751 to i8*
  call void @_ZdaPv(i8* %373) #7
  br label %if.end1207

if.end1207:                                       ; preds = %delete.notnull1205, %if.end1200
  %arraydecay1208 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1209 = icmp eq i32* %cond173, %arraydecay1208
  br i1 %cmp1209, label %if.end1214, label %delete.notnull1212

delete.notnull1212:                               ; preds = %if.end1207
  %374 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %374) #7
  br label %if.end1214

if.end1214:                                       ; preds = %delete.notnull1212, %if.end1207
  %conv1215 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1216 = getelementptr inbounds double* %1, i64 22
  %375 = load double* %arrayidx1216, align 8, !tbaa !17
  %add1217 = fadd double %conv1215, %375
  store double %add1217, double* %arrayidx1216, align 8, !tbaa !17
  %arrayidx1218 = getelementptr inbounds double* %1, i64 3
  %376 = bitcast double* %arrayidx1218 to <2 x double>*
  %377 = load <2 x double>* %376, align 8, !tbaa !17
  %378 = fadd <2 x double> %359, %377
  %379 = bitcast double* %arrayidx1218 to <2 x double>*
  store <2 x double> %378, <2 x double>* %379, align 8, !tbaa !17
  %arrayidx1222 = getelementptr inbounds double* %1, i64 5
  %380 = bitcast double* %arrayidx1222 to <2 x double>*
  %381 = load <2 x double>* %380, align 8, !tbaa !17
  %382 = shufflevector <2 x double> %363, <2 x double> %359, <2 x i32> <i32 0, i32 3>
  %383 = fadd <2 x double> %382, %381
  %384 = bitcast double* %arrayidx1222 to <2 x double>*
  store <2 x double> %383, <2 x double>* %384, align 8, !tbaa !17
  %arrayidx1226 = getelementptr inbounds double* %1, i64 7
  %385 = bitcast double* %arrayidx1226 to <2 x double>*
  %386 = load <2 x double>* %385, align 8, !tbaa !17
  %387 = fadd <2 x double> %360, %386
  %388 = bitcast double* %arrayidx1226 to <2 x double>*
  store <2 x double> %387, <2 x double>* %388, align 8, !tbaa !17
  %arrayidx1230 = getelementptr inbounds double* %1, i64 9
  %389 = bitcast double* %arrayidx1230 to <2 x double>*
  %390 = load <2 x double>* %389, align 8, !tbaa !17
  %391 = shufflevector <2 x double> %363, <2 x double> %360, <2 x i32> <i32 0, i32 3>
  %392 = fadd <2 x double> %391, %390
  %393 = bitcast double* %arrayidx1230 to <2 x double>*
  store <2 x double> %392, <2 x double>* %393, align 8, !tbaa !17
  %arrayidx1234 = getelementptr inbounds double* %1, i64 11
  %394 = bitcast double* %arrayidx1234 to <2 x double>*
  %395 = load <2 x double>* %394, align 8, !tbaa !17
  %396 = fadd <2 x double> %361, %395
  %397 = bitcast double* %arrayidx1234 to <2 x double>*
  store <2 x double> %396, <2 x double>* %397, align 8, !tbaa !17
  %arrayidx1238 = getelementptr inbounds double* %1, i64 13
  %398 = bitcast double* %arrayidx1238 to <2 x double>*
  %399 = load <2 x double>* %398, align 8, !tbaa !17
  %400 = fadd <2 x double> %362, %399
  %401 = bitcast double* %arrayidx1238 to <2 x double>*
  store <2 x double> %400, <2 x double>* %401, align 8, !tbaa !17
  %arrayidx1242 = getelementptr inbounds double* %1, i64 15
  %402 = bitcast double* %arrayidx1242 to <2 x double>*
  %403 = load <2 x double>* %402, align 8, !tbaa !17
  %404 = shufflevector <2 x double> %362, <2 x double> %363, <2 x i32> <i32 0, i32 3>
  %405 = fadd <2 x double> %404, %403
  %406 = bitcast double* %arrayidx1242 to <2 x double>*
  store <2 x double> %405, <2 x double>* %406, align 8, !tbaa !17
  %arrayidx1246 = getelementptr inbounds double* %1, i64 17
  %407 = load double* %arrayidx1246, align 8, !tbaa !17
  %add1247 = fadd double %366, %407
  store double %add1247, double* %arrayidx1246, align 8, !tbaa !17
  %arrayidx1248 = getelementptr inbounds double* %1, i64 18
  %408 = bitcast double* %arrayidx1248 to <2 x double>*
  %409 = load <2 x double>* %408, align 8, !tbaa !17
  %410 = shufflevector <2 x double> %362, <2 x double> %364, <2 x i32> <i32 1, i32 2>
  %411 = fadd <2 x double> %410, %409
  %412 = bitcast double* %arrayidx1248 to <2 x double>*
  store <2 x double> %411, <2 x double>* %412, align 8, !tbaa !17
  %arrayidx1252 = getelementptr inbounds double* %1, i64 20
  %413 = load double* %arrayidx1252, align 8, !tbaa !17
  %add1253 = fadd double %365, %413
  store double %add1253, double* %arrayidx1252, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %46) #6
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1214, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil30calc_pair_energy_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311019 = icmp sgt i32 %14, 0
  br i1 %cmp311019, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301076 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond7917931074 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond197951072 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1065 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1066, %for.inc ]
  %g.01020 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1065, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01020, 1
  %idxprom41 = sext i32 %g.01020 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond7917931074, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1065 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01020, %for.body ]
  %indvars.iv.next1066 = add nuw nsw i64 %indvars.iv1065, 1
  %lftr.wideiv1067 = trunc i64 %indvars.iv.next1066 to i32
  %exitcond1068 = icmp eq i32 %lftr.wideiv1067, %14
  br i1 %exitcond1068, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond7917931074, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond7917931074, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1081 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1979510711080 = phi i32* [ %cond197951072, %for.end ], [ %cond197951072, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond79179310731079 = phi i32* [ %cond7917931074, %for.end ], [ %cond7917931074, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3010751078 = phi i32* [ %cond301076, %for.end ], [ %cond301076, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp561013 = icmp sgt i32 %g.0.lcssa1081, 0
  br i1 %cmp561013, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool751007 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp761008 = icmp sgt i32 %13, 0
  %or.cond7751009 = and i1 %tobool751007, %cmp761008
  br i1 %or.cond7751009, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1061 = phi i64 [ %indvars.iv.next1062, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.01015 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.01014 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond79179310731079, i64 %indvars.iv1061
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.01015, 1
  %idxprom68 = sext i32 %fixg.01015 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1979510711080, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.01014, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.01015, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1062 = add nuw nsw i64 %indvars.iv1061, 1
  %lftr.wideiv1063 = trunc i64 %indvars.iv.next1062 to i32
  %exitcond1064 = icmp eq i32 %lftr.wideiv1063, %g.0.lcssa1081
  br i1 %exitcond1064, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv1059 = phi i64 [ %indvars.iv.next1060, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.21010 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv1059, i32 2
  %36 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %36, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.21010
  %indvars.iv.next1060 = add nuw nsw i64 %indvars.iv1059, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %37 = trunc i64 %indvars.iv.next1060 to i32
  %cmp76 = icmp slt i32 %37, %13
  %or.cond775 = and i1 %tobool75, %cmp76
  br i1 %or.cond775, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool751007, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond79179310731079, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %38 = bitcast i32* %cond79179310731079 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond1979510711080, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %39 = bitcast i32* %cond1979510711080 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond3010751078, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %40 = bitcast i32* %cond3010751078 to i8*
  call void @_ZdaPv(i8* %40) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond1979510711080, i64 %idxprom114
  %41 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond1979510711080, i64 %idxprom116
  store i32 %41, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2798 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %42 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  %46 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %46) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %14, 5
  %47 = sext i32 %add123 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call124 = call noalias i8* @_Znam(i64 %51) #8
  %52 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %51) #8
  %53 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %51) #8
  %54 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %51) #8
  %55 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %51) #8
  %56 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162817 = phi i32* [ %arraydecay154, %cond.true164 ], [ %55, %cond.false166 ]
  %cond140803805815 = phi i32* [ %arraydecay132, %cond.true164 ], [ %53, %cond.false166 ]
  %cond129799801807813 = phi i32* [ %arraydecay121, %cond.true164 ], [ %52, %cond.false166 ]
  %cond151809811 = phi i32* [ %arraydecay143, %cond.true164 ], [ %54, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %56, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %57 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %58 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %59 = load %class.Vector** %arrayidx177, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %60 = load %class.Vector** %arrayidx179, align 8, !tbaa !1
  %mul180 = mul nsw i32 %14, %13
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %61 = load i32* %minPart, align 4, !tbaa !50
  %mul181 = mul nsw i32 %61, %mul180
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %62 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul181, %62
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %63 = load i32* %maxPart, align 4, !tbaa !52
  %mul182 = mul nsw i32 %63, %mul180
  %div184 = sdiv i32 %mul182, %62
  %cmp186955 = icmp sgt i32 %13, 0
  br i1 %cmp186955, label %for.body187.lr.ph, label %for.end1218

for.body187.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i788 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast531 = ptrtoint i32* %cond140803805815 to i64
  %sub.ptr.rhs.cast568 = ptrtoint i32* %cond162817 to i64
  %sub.ptr.rhs.cast575 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast582 = ptrtoint i32* %cond151809811 to i64
  %sub928 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3010751078 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i32* %cond129799801807813 to i64
  br label %for.body187

for.body187:                                      ; preds = %for.inc1216, %for.body187.lr.ph
  %exclChecksum.0989 = phi i32 [ 0, %for.body187.lr.ph ], [ %exclChecksum.8, %for.inc1216 ]
  %fullElectVirial_zz.0959 = phi double [ 0.000000e+00, %for.body187.lr.ph ], [ %fullElectVirial_zz.4, %for.inc1216 ]
  %i.1958 = phi i32 [ 0, %for.body187.lr.ph ], [ %inc1217, %for.inc1216 ]
  %pairlistindex.0957 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairlistindex.2, %for.inc1216 ]
  %pairCount.0956 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairCount.3, %for.inc1216 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %410, %for.inc1216 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %411, %for.inc1216 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %412, %for.inc1216 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %413, %for.inc1216 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %414, %for.inc1216 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %415, %for.inc1216 ]
  %70 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %416, %for.inc1216 ]
  %idxprom188 = sext i32 %i.1958 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 2
  %71 = bitcast [4 x i8]* %id to i32*
  %bf.load190 = load i32* %71, align 4
  %bf.clear191 = and i32 %bf.load190, 4194303
  %idxprom.i819 = zext i32 %bf.clear191 to i64
  %72 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i819, i32 0
  %73 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i819, i32 1
  %74 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i819, i32 2
  %75 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %73 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 0
  %76 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 1
  %77 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 2
  %78 = load double* %z, align 8, !tbaa !62
  %arrayidx196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188
  %arrayidx198 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188
  %79 = and i32 %bf.load190, 62914560
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %if.end359, label %if.then210

if.then210:                                       ; preds = %for.body187
  %bf.lshr213 = lshr i32 %bf.load190, 22
  %bf.clear214 = and i32 %bf.lshr213, 7
  %tobool215 = icmp eq i32 %bf.clear214, 0
  br i1 %tobool215, label %if.end230, label %if.then216

if.then216:                                       ; preds = %if.then210
  %mul221 = mul nsw i32 %bf.clear214, %14
  %add222 = add nsw i32 %mul221, %pairCount.0956
  %cmp223 = icmp sge i32 %pairCount.0956, %div
  %cmp225 = icmp slt i32 %pairCount.0956, %div184
  %or.cond777 = and i1 %cmp223, %cmp225
  br i1 %or.cond777, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then216
  %sub227 = add i32 %i.1958, -1
  %add228 = add i32 %sub227, %bf.clear214
  br label %for.inc1216

if.end230:                                        ; preds = %if.then216, %if.then210
  %pairCount.1 = phi i32 [ %pairCount.0956, %if.then210 ], [ %add222, %if.then216 ]
  %81 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool231 = icmp eq i32 %81, 0
  br i1 %tobool231, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end230
  %bf.clear235 = and i32 %bf.load190, 134217728
  %tobool236 = icmp ne i32 %bf.clear235, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end230
  %82 = phi i1 [ false, %if.end230 ], [ %tobool236, %land.rhs ]
  %cond243 = select i1 %82, i32* %cond1979510711080, i32* %cond79179310731079
  %cond248 = select i1 %82, i32 %fixg.2798, i32 %g.0.lcssa1081
  %cmp249 = icmp sgt i32 %cond248, 0
  br i1 %cmp249, label %if.then250, label %if.end329

if.then250:                                       ; preds = %land.end
  %83 = load i32* %cond243, align 4, !tbaa !11
  %idxprom253 = sext i32 %83 to i64
  %x256 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 0
  %84 = load double* %x256, align 8, !tbaa !59
  %y260 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 1
  %85 = load double* %y260, align 8, !tbaa !61
  %z264 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 2
  %86 = load double* %z264, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then290, %if.then250
  %p_j_z.0.ph = phi double [ %86, %if.then250 ], [ %92, %if.then290 ]
  %p_j_y.0.ph = phi double [ %85, %if.then250 ], [ %91, %if.then290 ]
  %p_j_x.0.ph = phi double [ %84, %if.then250 ], [ %90, %if.then290 ]
  %j2.0.ph = phi i32 [ %83, %if.then250 ], [ %89, %if.then290 ]
  %gli.0.ph = phi i32* [ %cond3010751078, %if.then250 ], [ %incdec.ptr, %if.then290 ]
  %g.3.ph = phi i32 [ 0, %if.then250 ], [ %inc266, %if.then290 ]
  %87 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %87, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %92, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %91, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %90, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %89, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc266, %while.body ]
  %88 = trunc i64 %indvars.iv to i32
  %cmp265 = icmp slt i32 %88, %cond248
  br i1 %cmp265, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc266 = add nsw i32 %g.3, 1
  %arrayidx268 = getelementptr inbounds i32* %cond243, i64 %indvars.iv.next
  %89 = load i32* %arrayidx268, align 4, !tbaa !11
  %sub269 = fsub double %76, %p_j_x.0
  %mul270 = fmul double %sub269, %sub269
  %idxprom271 = sext i32 %89 to i64
  %x274 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 0
  %90 = load double* %x274, align 8, !tbaa !59
  %sub275 = fsub double %77, %p_j_y.0
  %mul276 = fmul double %sub275, %sub275
  %add277 = fadd double %mul276, %mul270
  %y281 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 1
  %91 = load double* %y281, align 8, !tbaa !61
  %sub282 = fsub double %78, %p_j_z.0
  %mul283 = fmul double %sub282, %sub282
  %add284 = fadd double %mul283, %add277
  %z288 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 2
  %92 = load double* %z288, align 8, !tbaa !62
  %cmp289 = fcmp ugt double %add284, %3
  br i1 %cmp289, label %while.cond, label %if.then290

if.then290:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div772 = lshr exact i64 %sub.ptr.sub, 2
  %conv292 = trunc i64 %sub.ptr.div772 to i32
  %cmp294830 = icmp sgt i32 %conv292, 0
  br i1 %cmp294830, label %for.body295.lr.ph, label %if.end329

for.body295.lr.ph:                                ; preds = %while.end
  %93 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %94 = lshr i64 %93, 2
  %95 = trunc i64 %94 to i32
  br label %for.body295

for.body295:                                      ; preds = %cond.end315, %for.body295.lr.ph
  %indvars.iv1027 = phi i64 [ 0, %for.body295.lr.ph ], [ %indvars.iv.next1028, %cond.end315 ]
  %pli.0832 = phi i32* [ %cond129799801807813, %for.body295.lr.ph ], [ %add.ptr325, %cond.end315 ]
  %arrayidx298 = getelementptr inbounds i32* %cond3010751078, i64 %indvars.iv1027
  %96 = load i32* %arrayidx298, align 4, !tbaa !11
  %idxprom300 = sext i32 %96 to i64
  %nonbondedGroupIsAtom302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom300, i32 2
  %97 = bitcast [4 x i8]* %nonbondedGroupIsAtom302 to i32*
  %bf.load303 = load i32* %97, align 4
  %bf.clear305 = and i32 %bf.load303, 33554432
  %tobool306 = icmp eq i32 %bf.clear305, 0
  br i1 %tobool306, label %cond.false308, label %cond.end315

cond.false308:                                    ; preds = %for.body295
  %bf.lshr313 = lshr i32 %bf.load303, 22
  %bf.clear314 = and i32 %bf.lshr313, 7
  %phitmp773774 = zext i32 %bf.clear314 to i64
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false308, %for.body295
  %cond316 = phi i64 [ %phitmp773774, %cond.false308 ], [ 1, %for.body295 ]
  store i32 %96, i32* %pli.0832, align 4, !tbaa !11
  %add318 = add nsw i32 %96, 1
  %arrayidx319 = getelementptr inbounds i32* %pli.0832, i64 1
  store i32 %add318, i32* %arrayidx319, align 4, !tbaa !11
  %add320 = add nsw i32 %96, 2
  %arrayidx321 = getelementptr inbounds i32* %pli.0832, i64 2
  store i32 %add320, i32* %arrayidx321, align 4, !tbaa !11
  %add322 = add nsw i32 %96, 3
  %arrayidx323 = getelementptr inbounds i32* %pli.0832, i64 3
  store i32 %add322, i32* %arrayidx323, align 4, !tbaa !11
  %add.ptr325 = getelementptr inbounds i32* %pli.0832, i64 %cond316
  %indvars.iv.next1028 = add nuw nsw i64 %indvars.iv1027, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1028 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %95
  br i1 %exitcond, label %if.end329, label %for.body295

if.end329:                                        ; preds = %cond.end315, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129799801807813, %land.end ], [ %cond129799801807813, %while.end ], [ %add.ptr325, %cond.end315 ]
  %sub.ptr.lhs.cast330 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %sub.ptr.div333769 = lshr exact i64 %sub.ptr.sub332, 2
  %conv334 = trunc i64 %sub.ptr.div333769 to i32
  %tobool335 = icmp eq i32 %conv334, 0
  br i1 %tobool335, label %if.else, label %if.then336

if.then336:                                       ; preds = %if.end329
  %sub337 = shl i64 %sub.ptr.sub332, 30
  %sext770 = add i64 %sub337, -4294967296
  %idxprom338 = ashr exact i64 %sext770, 32
  %arrayidx339 = getelementptr inbounds i32* %cond129799801807813, i64 %idxprom338
  %98 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom340 = ashr exact i64 %sub337, 32
  %arrayidx341 = getelementptr inbounds i32* %cond129799801807813, i64 %idxprom340
  store i32 %98, i32* %arrayidx341, align 4, !tbaa !11
  br label %if.end359

if.else:                                          ; preds = %if.end329
  %bf.load344 = load i32* %71, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end354

cond.false349:                                    ; preds = %if.else
  %bf.lshr352 = lshr i32 %bf.load344, 22
  %bf.clear353 = and i32 %bf.lshr352, 7
  %phitmp = add i32 %bf.clear353, -1
  br label %cond.end354

cond.end354:                                      ; preds = %cond.false349, %if.else
  %cond355 = phi i32 [ %phitmp, %cond.false349 ], [ 0, %if.else ]
  %add357 = add nsw i32 %cond355, %i.1958
  br label %for.inc1216

if.end359:                                        ; preds = %if.then336, %for.body187
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then336 ], [ %pairCount.0956, %for.body187 ]
  %pairlistindex.1 = phi i32 [ %conv334, %if.then336 ], [ %pairlistindex.0957, %for.body187 ]
  %99 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool360 = icmp eq i32 %99, 0
  %bf.load370.pre = load i32* %71, align 4
  br i1 %tobool360, label %land.end367, label %land.rhs361

land.rhs361:                                      ; preds = %if.end359
  %bf.clear365 = and i32 %bf.load370.pre, 67108864
  %tobool366 = icmp ne i32 %bf.clear365, 0
  br label %land.end367

land.end367:                                      ; preds = %land.rhs361, %if.end359
  %100 = phi i1 [ %tobool366, %land.rhs361 ], [ false, %if.end359 ]
  %101 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %102 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add369 = add nsw i32 %102, 1
  %bf.lshr371 = lshr i32 %bf.load370.pre, 28
  %mul372 = mul nsw i32 %bf.lshr371, %add369
  %idx.ext373 = sext i32 %mul372 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 1
  %103 = load float* %charge, align 4, !tbaa !63
  %conv375 = fpext float %103 to double
  %mul376 = fmul double %conv375, 3.320636e+02
  %mul377 = fmul double %9, %mul376
  %mul378 = fmul double %4, %mul377
  %bf.clear381 = and i32 %bf.load370.pre, 4194303
  %idxprom.i787820 = zext i32 %bf.clear381 to i64
  %104 = load i32** %atomVdwType.i788, align 8, !tbaa !64
  %arrayidx.i789 = getelementptr inbounds i32* %104, i64 %idxprom.i787820
  %105 = load i32* %arrayidx.i789, align 4, !tbaa !11
  %106 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %107 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv383 = shl i32 %105, 1
  %mul.i = and i32 %conv383, 131070
  %mul2.i = mul i32 %mul.i, %107
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp389857 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %100, label %for.cond388.preheader, label %if.else450

for.cond388.preheader:                            ; preds = %land.end367
  br i1 %cmp389857, label %for.body390, label %if.end529

for.body390:                                      ; preds = %for.inc447, %for.cond388.preheader
  %indvars.iv1038 = phi i64 [ %indvars.iv.next1039, %for.inc447 ], [ 0, %for.cond388.preheader ]
  %exclChecksum.1861 = phi i32 [ %exclChecksum.3, %for.inc447 ], [ %exclChecksum.0989, %for.cond388.preheader ]
  %pli385.0860 = phi i32* [ %pli385.1, %for.inc447 ], [ %cond140803805815, %for.cond388.preheader ]
  %plin.0859 = phi i32* [ %plin.1, %for.inc447 ], [ %cond151809811, %for.cond388.preheader ]
  %arrayidx392 = getelementptr inbounds i32* %cond129799801807813, i64 %indvars.iv1038
  %108 = load i32* %arrayidx392, align 4, !tbaa !11
  %idxprom394 = sext i32 %108 to i64
  %x397 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 0
  %109 = load double* %x397, align 8, !tbaa !59
  %sub399 = fsub double %76, %109
  %mul400 = fmul double %sub399, %sub399
  %y405 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 1
  %110 = load double* %y405, align 8, !tbaa !61
  %sub407 = fsub double %77, %110
  %mul408 = fmul double %sub407, %sub407
  %add409 = fadd double %mul400, %mul408
  %z414 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 0, i32 2
  %111 = load double* %z414, align 8, !tbaa !62
  %sub415 = fsub double %78, %111
  %mul416 = fmul double %sub415, %sub415
  %add417 = fadd double %add409, %mul416
  %atomFixed420 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom394, i32 2
  %112 = bitcast [4 x i8]* %atomFixed420 to i32*
  %bf.load421 = load i32* %112, align 4
  %bf.clear423 = and i32 %bf.load421, 67108864
  %tobool424 = icmp ne i32 %bf.clear423, 0
  %cmp426 = fcmp ugt double %add417, %2
  %or.cond778 = or i1 %tobool424, %cmp426
  br i1 %or.cond778, label %for.inc447, label %land.lhs.true427

land.lhs.true427:                                 ; preds = %for.body390
  %cmp428 = fcmp ugt double %add417, %11
  br i1 %cmp428, label %if.then432, label %land.lhs.true429

land.lhs.true429:                                 ; preds = %land.lhs.true427
  %inc430 = add nsw i32 %exclChecksum.1861, 1
  %tobool431 = icmp eq i32 %inc430, 0
  br i1 %tobool431, label %if.then432, label %for.inc447

if.then432:                                       ; preds = %land.lhs.true429, %land.lhs.true427
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true429 ], [ %exclChecksum.1861, %land.lhs.true427 ]
  %bf.clear437 = and i32 %bf.load421, 4194303
  %cmp438 = icmp slt i32 %bf.clear437, %73
  %cmp440 = icmp sgt i32 %bf.clear437, %74
  %or.cond779 = or i1 %cmp438, %cmp440
  br i1 %or.cond779, label %if.else443, label %if.then441

if.then441:                                       ; preds = %if.then432
  %incdec.ptr442 = getelementptr inbounds i32* %pli385.0860, i64 1
  store i32 %108, i32* %pli385.0860, align 4, !tbaa !11
  br label %for.inc447

if.else443:                                       ; preds = %if.then432
  %incdec.ptr444 = getelementptr inbounds i32* %plin.0859, i64 1
  store i32 %108, i32* %plin.0859, align 4, !tbaa !11
  br label %for.inc447

for.inc447:                                       ; preds = %if.else443, %if.then441, %land.lhs.true429, %for.body390
  %plin.1 = phi i32* [ %plin.0859, %for.body390 ], [ %plin.0859, %land.lhs.true429 ], [ %plin.0859, %if.then441 ], [ %incdec.ptr444, %if.else443 ]
  %pli385.1 = phi i32* [ %pli385.0860, %for.body390 ], [ %pli385.0860, %land.lhs.true429 ], [ %incdec.ptr442, %if.then441 ], [ %pli385.0860, %if.else443 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1861, %for.body390 ], [ %inc430, %land.lhs.true429 ], [ %exclChecksum.2, %if.then441 ], [ %exclChecksum.2, %if.else443 ]
  %indvars.iv.next1039 = add nuw nsw i64 %indvars.iv1038, 1
  %lftr.wideiv1040 = trunc i64 %indvars.iv.next1039 to i32
  %exitcond1041 = icmp eq i32 %lftr.wideiv1040, %pairlistindex.1
  br i1 %exitcond1041, label %if.end529, label %for.body390

if.else450:                                       ; preds = %land.end367
  br i1 %cmp389857, label %if.then453, label %if.end529

if.then453:                                       ; preds = %if.else450
  %113 = load i32* %cond129799801807813, align 4, !tbaa !11
  %idxprom458 = sext i32 %113 to i64
  %x461 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 0
  %114 = load double* %x461, align 8, !tbaa !59
  %y466 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 1
  %115 = load double* %y466, align 8, !tbaa !61
  %z471 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458, i32 0, i32 2
  %116 = load double* %z471, align 8, !tbaa !62
  br label %while.cond478.outer

while.cond478.outer:                              ; preds = %if.else518, %if.then453
  %idxprom458.pn.ph = phi i64 [ %idxprom458, %if.then453 ], [ %idxprom487, %if.else518 ]
  %p_j_z467.0.ph = phi double [ %116, %if.then453 ], [ %122, %if.else518 ]
  %p_j_y462.0.ph = phi double [ %115, %if.then453 ], [ %121, %if.else518 ]
  %p_j_x457.0.ph = phi double [ %114, %if.then453 ], [ %120, %if.else518 ]
  %j2454.0.ph = phi i32 [ %113, %if.then453 ], [ %119, %if.else518 ]
  %k451.0.ph = phi i32 [ 0, %if.then453 ], [ %inc481, %if.else518 ]
  %plin.2.ph = phi i32* [ %cond151809811, %if.then453 ], [ %incdec.ptr519, %if.else518 ]
  %pli385.2.ph = phi i32* [ %cond140803805815, %if.then453 ], [ %pli385.2.ph840, %if.else518 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0989, %if.then453 ], [ %exclChecksum.5, %if.else518 ]
  br label %while.cond478.outer833

while.cond478.outer833:                           ; preds = %if.then516, %while.cond478.outer
  %idxprom458.pn.ph834 = phi i64 [ %idxprom487, %if.then516 ], [ %idxprom458.pn.ph, %while.cond478.outer ]
  %p_j_z467.0.ph835 = phi double [ %122, %if.then516 ], [ %p_j_z467.0.ph, %while.cond478.outer ]
  %p_j_y462.0.ph836 = phi double [ %121, %if.then516 ], [ %p_j_y462.0.ph, %while.cond478.outer ]
  %p_j_x457.0.ph837 = phi double [ %120, %if.then516 ], [ %p_j_x457.0.ph, %while.cond478.outer ]
  %j2454.0.ph838 = phi i32 [ %119, %if.then516 ], [ %j2454.0.ph, %while.cond478.outer ]
  %k451.0.ph839 = phi i32 [ %inc481, %if.then516 ], [ %k451.0.ph, %while.cond478.outer ]
  %pli385.2.ph840 = phi i32* [ %incdec.ptr517, %if.then516 ], [ %pli385.2.ph, %while.cond478.outer ]
  %exclChecksum.4.ph841 = phi i32 [ %exclChecksum.5, %if.then516 ], [ %exclChecksum.4.ph, %while.cond478.outer ]
  br label %while.cond478.outer842

while.cond478.outer842:                           ; preds = %land.lhs.true509, %while.cond478.outer833
  %idxprom458.pn.ph843 = phi i64 [ %idxprom487, %land.lhs.true509 ], [ %idxprom458.pn.ph834, %while.cond478.outer833 ]
  %p_j_z467.0.ph844 = phi double [ %122, %land.lhs.true509 ], [ %p_j_z467.0.ph835, %while.cond478.outer833 ]
  %p_j_y462.0.ph845 = phi double [ %121, %land.lhs.true509 ], [ %p_j_y462.0.ph836, %while.cond478.outer833 ]
  %p_j_x457.0.ph846 = phi double [ %120, %land.lhs.true509 ], [ %p_j_x457.0.ph837, %while.cond478.outer833 ]
  %j2454.0.ph847 = phi i32 [ %119, %land.lhs.true509 ], [ %j2454.0.ph838, %while.cond478.outer833 ]
  %k451.0.ph848 = phi i32 [ %inc481, %land.lhs.true509 ], [ %k451.0.ph839, %while.cond478.outer833 ]
  %exclChecksum.4.ph849 = phi i32 [ %inc510, %land.lhs.true509 ], [ %exclChecksum.4.ph841, %while.cond478.outer833 ]
  %117 = sext i32 %k451.0.ph848 to i64
  br label %while.cond478

while.cond478:                                    ; preds = %while.body480, %while.cond478.outer842
  %indvars.iv1034 = phi i64 [ %117, %while.cond478.outer842 ], [ %indvars.iv.next1035, %while.body480 ]
  %idxprom458.pn = phi i64 [ %idxprom458.pn.ph843, %while.cond478.outer842 ], [ %idxprom487, %while.body480 ]
  %p_j_z467.0 = phi double [ %p_j_z467.0.ph844, %while.cond478.outer842 ], [ %122, %while.body480 ]
  %p_j_y462.0 = phi double [ %p_j_y462.0.ph845, %while.cond478.outer842 ], [ %121, %while.body480 ]
  %p_j_x457.0 = phi double [ %p_j_x457.0.ph846, %while.cond478.outer842 ], [ %120, %while.body480 ]
  %j2454.0 = phi i32 [ %j2454.0.ph847, %while.cond478.outer842 ], [ %119, %while.body480 ]
  %k451.0 = phi i32 [ %k451.0.ph848, %while.cond478.outer842 ], [ %inc481, %while.body480 ]
  %118 = trunc i64 %indvars.iv1034 to i32
  %cmp479 = icmp slt i32 %118, %pairlistindex.1
  br i1 %cmp479, label %while.body480, label %if.end529

while.body480:                                    ; preds = %while.cond478
  %atom2472.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom458.pn, i32 2
  %atom2472.0.in.in = bitcast [4 x i8]* %atom2472.0.in.in.in to i32*
  %atom2472.0.in = load i32* %atom2472.0.in.in, align 4
  %atom2472.0 = and i32 %atom2472.0.in, 4194303
  %indvars.iv.next1035 = add nsw i64 %indvars.iv1034, 1
  %inc481 = add nsw i32 %k451.0, 1
  %arrayidx483 = getelementptr inbounds i32* %cond129799801807813, i64 %indvars.iv.next1035
  %119 = load i32* %arrayidx483, align 4, !tbaa !11
  %sub485 = fsub double %76, %p_j_x457.0
  %mul486 = fmul double %sub485, %sub485
  %idxprom487 = sext i32 %119 to i64
  %x490 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 0
  %120 = load double* %x490, align 8, !tbaa !59
  %sub492 = fsub double %77, %p_j_y462.0
  %mul493 = fmul double %sub492, %sub492
  %add494 = fadd double %mul493, %mul486
  %y498 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 1
  %121 = load double* %y498, align 8, !tbaa !61
  %sub499 = fsub double %78, %p_j_z467.0
  %mul500 = fmul double %sub499, %sub499
  %add501 = fadd double %mul500, %add494
  %z505 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom487, i32 0, i32 2
  %122 = load double* %z505, align 8, !tbaa !62
  %cmp506 = fcmp ugt double %add501, %2
  br i1 %cmp506, label %while.cond478, label %land.lhs.true507

land.lhs.true507:                                 ; preds = %while.body480
  %cmp508 = fcmp ugt double %add501, %11
  br i1 %cmp508, label %if.then512, label %land.lhs.true509

land.lhs.true509:                                 ; preds = %land.lhs.true507
  %inc510 = add nsw i32 %exclChecksum.4.ph849, 1
  %tobool511 = icmp eq i32 %inc510, 0
  br i1 %tobool511, label %if.then512, label %while.cond478.outer842

if.then512:                                       ; preds = %land.lhs.true509, %land.lhs.true507
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true509 ], [ %exclChecksum.4.ph849, %land.lhs.true507 ]
  %cmp513 = icmp slt i32 %atom2472.0, %73
  %cmp515 = icmp sgt i32 %atom2472.0, %74
  %or.cond780 = or i1 %cmp513, %cmp515
  br i1 %or.cond780, label %if.else518, label %if.then516

if.then516:                                       ; preds = %if.then512
  %incdec.ptr517 = getelementptr inbounds i32* %pli385.2.ph840, i64 1
  store i32 %j2454.0, i32* %pli385.2.ph840, align 4, !tbaa !11
  br label %while.cond478.outer833

if.else518:                                       ; preds = %if.then512
  %incdec.ptr519 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2454.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond478.outer

if.end529:                                        ; preds = %while.cond478, %if.else450, %for.inc447, %for.cond388.preheader
  %plin.4 = phi i32* [ %cond151809811, %if.else450 ], [ %cond151809811, %for.cond388.preheader ], [ %plin.2.ph, %while.cond478 ], [ %plin.1, %for.inc447 ]
  %pli385.4 = phi i32* [ %cond140803805815, %if.else450 ], [ %cond140803805815, %for.cond388.preheader ], [ %pli385.2.ph840, %while.cond478 ], [ %pli385.1, %for.inc447 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0989, %if.else450 ], [ %exclChecksum.0989, %for.cond388.preheader ], [ %exclChecksum.4.ph849, %while.cond478 ], [ %exclChecksum.3, %for.inc447 ]
  %sub.ptr.lhs.cast530 = ptrtoint i32* %pli385.4 to i64
  %sub.ptr.sub532 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast531
  %sub.ptr.div533716 = lshr exact i64 %sub.ptr.sub532, 2
  %conv534 = trunc i64 %sub.ptr.div533716 to i32
  %tobool535 = icmp eq i32 %conv534, 0
  br i1 %tobool535, label %for.end566, label %for.cond544.preheader

for.cond544.preheader:                            ; preds = %if.end529
  %sub537 = shl i64 %sub.ptr.sub532, 30
  %sext767 = add i64 %sub537, -4294967296
  %idxprom538 = ashr exact i64 %sext767, 32
  %arrayidx539 = getelementptr inbounds i32* %cond140803805815, i64 %idxprom538
  %123 = load i32* %arrayidx539, align 4, !tbaa !11
  %idxprom540 = ashr exact i64 %sub537, 32
  %arrayidx541 = getelementptr inbounds i32* %cond140803805815, i64 %idxprom540
  store i32 %123, i32* %arrayidx541, align 4, !tbaa !11
  %cmp545865 = icmp sgt i32 %conv534, 0
  br i1 %cmp545865, label %for.body546.lr.ph, label %for.end566

for.body546.lr.ph:                                ; preds = %for.cond544.preheader
  %124 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast531
  %125 = lshr i64 %124, 2
  %126 = trunc i64 %125 to i32
  br label %for.body546

for.body546:                                      ; preds = %for.inc564, %for.body546.lr.ph
  %indvars.iv1042 = phi i64 [ 0, %for.body546.lr.ph ], [ %indvars.iv.next1043, %for.inc564 ]
  %plin.5869 = phi i32* [ %plin.4, %for.body546.lr.ph ], [ %plin.6, %for.inc564 ]
  %plix.0868 = phi i32* [ %cond162817, %for.body546.lr.ph ], [ %plix.1, %for.inc564 ]
  %plim.0867 = phi i32* [ %cond173, %for.body546.lr.ph ], [ %plim.1, %for.inc564 ]
  %arrayidx549 = getelementptr inbounds i32* %cond140803805815, i64 %indvars.iv1042
  %127 = load i32* %arrayidx549, align 4, !tbaa !11
  %idxprom551 = sext i32 %127 to i64
  %id553 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom551, i32 2
  %128 = bitcast [4 x i8]* %id553 to i32*
  %bf.load554 = load i32* %128, align 4
  %bf.clear555 = and i32 %bf.load554, 4194303
  %idxprom556766 = zext i32 %bf.clear555 to i64
  %add.ptr.sum = sub i64 %idxprom556766, %idx.ext
  %arrayidx557 = getelementptr inbounds i8* %75, i64 %add.ptr.sum
  %129 = load i8* %arrayidx557, align 1, !tbaa !68
  %conv558 = sext i8 %129 to i32
  switch i32 %conv558, label %for.inc564 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb560
    i32 2, label %sw.bb562
  ]

sw.bb:                                            ; preds = %for.body546
  %incdec.ptr559 = getelementptr inbounds i32* %plin.5869, i64 1
  store i32 %127, i32* %plin.5869, align 4, !tbaa !11
  br label %for.inc564

sw.bb560:                                         ; preds = %for.body546
  %incdec.ptr561 = getelementptr inbounds i32* %plix.0868, i64 1
  store i32 %127, i32* %plix.0868, align 4, !tbaa !11
  br label %for.inc564

sw.bb562:                                         ; preds = %for.body546
  %incdec.ptr563 = getelementptr inbounds i32* %plim.0867, i64 1
  store i32 %127, i32* %plim.0867, align 4, !tbaa !11
  br label %for.inc564

for.inc564:                                       ; preds = %sw.bb562, %sw.bb560, %sw.bb, %for.body546
  %plim.1 = phi i32* [ %plim.0867, %for.body546 ], [ %incdec.ptr563, %sw.bb562 ], [ %plim.0867, %sw.bb560 ], [ %plim.0867, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0868, %for.body546 ], [ %plix.0868, %sw.bb562 ], [ %incdec.ptr561, %sw.bb560 ], [ %plix.0868, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5869, %for.body546 ], [ %plin.5869, %sw.bb562 ], [ %plin.5869, %sw.bb560 ], [ %incdec.ptr559, %sw.bb ]
  %indvars.iv.next1043 = add nuw nsw i64 %indvars.iv1042, 1
  %lftr.wideiv1044 = trunc i64 %indvars.iv.next1043 to i32
  %exitcond1045 = icmp eq i32 %lftr.wideiv1044, %126
  br i1 %exitcond1045, label %for.end566, label %for.body546

for.end566:                                       ; preds = %for.inc564, %for.cond544.preheader, %if.end529
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond544.preheader ], [ %plin.4, %if.end529 ], [ %plin.6, %for.inc564 ]
  %plix.0.lcssa = phi i32* [ %cond162817, %for.cond544.preheader ], [ %cond162817, %if.end529 ], [ %plix.1, %for.inc564 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond544.preheader ], [ %cond173, %if.end529 ], [ %plim.1, %for.inc564 ]
  %sub.ptr.lhs.cast567 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub569 = sub i64 %sub.ptr.lhs.cast567, %sub.ptr.rhs.cast568
  %sub.ptr.div570 = ashr exact i64 %sub.ptr.sub569, 2
  %conv571717 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast574 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub576 = sub i64 %sub.ptr.lhs.cast574, %sub.ptr.rhs.cast575
  %sub.ptr.div577 = ashr exact i64 %sub.ptr.sub576, 2
  %add572 = add i64 %sub.ptr.div577, %conv571717
  %add579 = add i64 %add572, %sub.ptr.div570
  %conv580 = trunc i64 %add579 to i32
  %sub.ptr.lhs.cast581 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub583 = sub i64 %sub.ptr.lhs.cast581, %sub.ptr.rhs.cast582
  %sub.ptr.div584719 = lshr exact i64 %sub.ptr.sub583, 2
  %conv585 = trunc i64 %sub.ptr.div584719 to i32
  %cmp587873 = icmp sgt i32 %conv585, 0
  br i1 %cmp587873, label %for.body588.lr.ph, label %for.end797

for.body588.lr.ph:                                ; preds = %for.end566
  %x720 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y729 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z736 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x773 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y783 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z791 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %130 = sub i64 %sub.ptr.lhs.cast581, %sub.ptr.rhs.cast582
  %131 = lshr i64 %130, 2
  %132 = trunc i64 %131 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.body588.for.body588_crit_edge, %for.body588.lr.ph
  %133 = phi i32* [ %104, %for.body588.lr.ph ], [ %.pre, %for.body588.for.body588_crit_edge ]
  %indvars.iv1046 = phi i64 [ 0, %for.body588.lr.ph ], [ %indvars.iv.next1047, %for.body588.for.body588_crit_edge ]
  %fullElectVirial_zz.1875 = phi double [ %fullElectVirial_zz.0959, %for.body588.lr.ph ], [ %add790, %for.body588.for.body588_crit_edge ]
  %134 = phi <2 x double> [ %64, %for.body588.lr.ph ], [ %213, %for.body588.for.body588_crit_edge ]
  %135 = phi <2 x double> [ %65, %for.body588.lr.ph ], [ %171, %for.body588.for.body588_crit_edge ]
  %136 = phi <2 x double> [ %66, %for.body588.lr.ph ], [ %177, %for.body588.for.body588_crit_edge ]
  %137 = phi <2 x double> [ %67, %for.body588.lr.ph ], [ %190, %for.body588.for.body588_crit_edge ]
  %138 = phi <2 x double> [ %68, %for.body588.lr.ph ], [ %219, %for.body588.for.body588_crit_edge ]
  %139 = phi <2 x double> [ %69, %for.body588.lr.ph ], [ %228, %for.body588.for.body588_crit_edge ]
  %140 = phi <2 x double> [ %70, %for.body588.lr.ph ], [ %224, %for.body588.for.body588_crit_edge ]
  %arrayidx591 = getelementptr inbounds i32* %cond151809811, i64 %indvars.iv1046
  %141 = load i32* %arrayidx591, align 4, !tbaa !11
  %idx.ext592 = sext i32 %141 to i64
  %x595 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 0
  %142 = load double* %x595, align 8, !tbaa !59
  %sub596 = fsub double %76, %142
  %mul598 = fmul double %sub596, %sub596
  %y600 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 1
  %143 = load double* %y600, align 8, !tbaa !61
  %sub601 = fsub double %77, %143
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %mul598, %mul602
  %z605 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 0, i32 2
  %144 = load double* %z605, align 8, !tbaa !62
  %sub606 = fsub double %78, %144
  %mul607 = fmul double %sub606, %sub606
  %add608 = fadd double %add603, %mul607
  %conv609 = fptrunc double %add608 to float
  %145 = bitcast float %conv609 to i32
  %shr = ashr i32 %145, 17
  %add611 = add nsw i32 %shr, %mul
  %id612 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 2
  %146 = bitcast [4 x i8]* %id612 to i32*
  %bf.load613 = load i32* %146, align 4
  %bf.clear614 = and i32 %bf.load613, 4194303
  %idxprom.i783823 = zext i32 %bf.clear614 to i64
  %arrayidx.i785 = getelementptr inbounds i32* %133, i64 %idxprom.i783823
  %147 = load i32* %arrayidx.i785, align 4, !tbaa !11
  %conv.i786 = zext i32 %147 to i64
  %conv616 = shl nuw nsw i64 %conv.i786, 1
  %mul617 = and i64 %conv616, 131070
  %mul620 = shl nsw i32 %add611, 4
  %idx.ext621 = sext i32 %mul620 to i64
  %add.ptr622 = getelementptr inbounds double* %7, i64 %idx.ext621
  %148 = load double* %add.ptr622, align 8, !tbaa !17
  %add.ptr622.sum750 = or i64 %idx.ext621, 4
  %add.ptr627 = getelementptr inbounds double* %7, i64 %add.ptr622.sum750
  %149 = load double* %add.ptr627, align 8, !tbaa !17
  %add.ptr622.sum751 = or i64 %idx.ext621, 8
  %add.ptr632 = getelementptr inbounds double* %7, i64 %add.ptr622.sum751
  %150 = load double* %add.ptr632, align 8, !tbaa !17
  %add.ptr632.sum752 = or i64 %idx.ext621, 12
  %add.ptr638 = getelementptr inbounds double* %7, i64 %add.ptr632.sum752
  %151 = load double* %add.ptr638, align 8, !tbaa !17
  %and = and i32 %145, -131072
  %charge641 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext592, i32 1
  %152 = load float* %charge641, align 4, !tbaa !63
  %conv642 = fpext float %152 to double
  %mul643 = fmul double %mul378, %conv642
  %153 = bitcast i32 %and to float
  %conv645 = fpext float %153 to double
  %sub646 = fsub double %add608, %conv645
  %bf.lshr649 = lshr i32 %bf.load613, 28
  %idxprom650 = zext i32 %bf.lshr649 to i64
  %add.ptr374.sum753 = add i64 %idxprom650, %idx.ext373
  %arrayidx651 = getelementptr inbounds double* %101, i64 %add.ptr374.sum753
  %154 = load double* %arrayidx651, align 8, !tbaa !17
  %add.ptr.i.sum824 = add i64 %mul617, %idx.ext.i
  %A653 = getelementptr inbounds %"struct.LJTable::TableEntry"* %106, i64 %add.ptr.i.sum824, i32 0
  %155 = load double* %A653, align 8, !tbaa !69
  %mul654 = fmul double %9, %155
  %B656 = getelementptr inbounds %"struct.LJTable::TableEntry"* %106, i64 %add.ptr.i.sum824, i32 1
  %156 = load double* %B656, align 8, !tbaa !71
  %mul657 = fmul double %9, %156
  %mul658 = fmul double %148, %mul654
  %mul659 = fmul double %149, %mul657
  %sub660 = fsub double %mul658, %mul659
  %add.ptr622.sum754 = or i64 %idx.ext621, 3
  %arrayidx661 = getelementptr inbounds double* %7, i64 %add.ptr622.sum754
  %157 = load double* %arrayidx661, align 8, !tbaa !17
  %mul662 = fmul double %mul654, %157
  %add.ptr627.sum755 = or i64 %idx.ext621, 7
  %arrayidx663 = getelementptr inbounds double* %7, i64 %add.ptr627.sum755
  %158 = load double* %arrayidx663, align 8, !tbaa !17
  %mul664 = fmul double %mul657, %158
  %sub665 = fsub double %mul662, %mul664
  %add.ptr622.sum756 = or i64 %idx.ext621, 2
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr622.sum756
  %159 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul654, %159
  %add.ptr627.sum757 = or i64 %idx.ext621, 6
  %arrayidx668 = getelementptr inbounds double* %7, i64 %add.ptr627.sum757
  %160 = load double* %arrayidx668, align 8, !tbaa !17
  %mul669 = fmul double %mul657, %160
  %sub670 = fsub double %mul667, %mul669
  %add.ptr622.sum758 = or i64 %idx.ext621, 1
  %arrayidx671 = getelementptr inbounds double* %7, i64 %add.ptr622.sum758
  %161 = load double* %arrayidx671, align 8, !tbaa !17
  %mul672 = fmul double %mul654, %161
  %add.ptr627.sum759 = or i64 %idx.ext621, 5
  %arrayidx673 = getelementptr inbounds double* %7, i64 %add.ptr627.sum759
  %162 = load double* %arrayidx673, align 8, !tbaa !17
  %mul674 = fmul double %mul657, %162
  %sub675 = fsub double %mul672, %mul674
  %mul676 = fmul double %sub646, %sub665
  %add677 = fadd double %mul676, %sub670
  %mul678 = fmul double %sub646, %add677
  %add679 = fadd double %mul678, %sub675
  %mul680 = fmul double %sub646, %add679
  %add681 = fadd double %sub660, %mul680
  %add.ptr632.sum760 = or i64 %idx.ext621, 11
  %arrayidx685 = getelementptr inbounds double* %7, i64 %add.ptr632.sum760
  %163 = load double* %arrayidx685, align 8, !tbaa !17
  %mul686 = fmul double %mul643, %163
  %add.ptr632.sum761 = or i64 %idx.ext621, 10
  %arrayidx687 = getelementptr inbounds double* %7, i64 %add.ptr632.sum761
  %164 = load double* %arrayidx687, align 8, !tbaa !17
  %mul688 = fmul double %mul643, %164
  %add.ptr632.sum762 = or i64 %idx.ext621, 9
  %arrayidx689 = getelementptr inbounds double* %7, i64 %add.ptr632.sum762
  %165 = load double* %arrayidx689, align 8, !tbaa !17
  %mul690 = fmul double %mul643, %165
  %mul691 = fmul double %sub646, %mul686
  %add692 = fadd double %mul691, %mul688
  %add699 = fadd double %sub665, %mul686
  %add700 = fadd double %sub670, %mul688
  %add701 = fadd double %sub675, %mul690
  %mul703 = fmul double %sub646, 3.000000e+00
  %mul704 = fmul double %mul703, %add699
  %mul705 = fmul double %add700, 2.000000e+00
  %add706 = fadd double %mul704, %mul705
  %mul707 = fmul double %sub646, %add706
  %add708 = fadd double %add701, %mul707
  %mul709 = fmul double %154, -2.000000e+00
  %mul710 = fmul double %mul709, %add708
  %mul713 = fmul double %sub596, %mul710
  %166 = insertelement <2 x double> undef, double %add681, i32 0
  %167 = insertelement <2 x double> %166, double %sub596, i32 1
  %168 = insertelement <2 x double> undef, double %154, i32 0
  %169 = insertelement <2 x double> %168, double %mul713, i32 1
  %170 = fmul <2 x double> %167, %169
  %171 = fadd <2 x double> %135, %170
  %172 = insertelement <2 x double> undef, double %sub601, i32 0
  %173 = insertelement <2 x double> %172, double %sub606, i32 1
  %174 = insertelement <2 x double> undef, double %mul713, i32 0
  %175 = insertelement <2 x double> %174, double %mul713, i32 1
  %176 = fmul <2 x double> %173, %175
  %177 = fadd <2 x double> %136, %176
  %178 = load double* %x720, align 8, !tbaa !72
  %add721 = fadd double %178, %mul713
  store double %add721, double* %x720, align 8, !tbaa !72
  %x722 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext592, i32 0
  %mul724 = fmul double %sub601, %mul710
  %179 = load double* %y729, align 8, !tbaa !73
  %add730 = fadd double %179, %mul724
  store double %add730, double* %y729, align 8, !tbaa !73
  %180 = bitcast double* %x722 to <2 x double>*
  %181 = load <2 x double>* %180, align 8, !tbaa !17
  %182 = insertelement <2 x double> %174, double %mul724, i32 1
  %183 = fsub <2 x double> %181, %182
  %184 = bitcast double* %x722 to <2 x double>*
  store <2 x double> %183, <2 x double>* %184, align 8, !tbaa !17
  %mul733 = fmul double %sub606, %mul710
  %185 = insertelement <2 x double> undef, double %sub606, i32 0
  %186 = insertelement <2 x double> %185, double %sub606, i32 1
  %187 = insertelement <2 x double> undef, double %mul724, i32 0
  %188 = insertelement <2 x double> %187, double %mul733, i32 1
  %189 = fmul <2 x double> %186, %188
  %190 = fadd <2 x double> %137, %189
  %191 = load double* %z736, align 8, !tbaa !74
  %add737 = fadd double %191, %mul733
  store double %add737, double* %z736, align 8, !tbaa !74
  %z738 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext592, i32 2
  %192 = load double* %z738, align 8, !tbaa !74
  %sub739 = fsub double %192, %mul733
  store double %sub739, double* %z738, align 8, !tbaa !74
  %add.ptr638.sum763 = or i64 %idx.ext621, 13
  %arrayidx740 = getelementptr inbounds double* %7, i64 %add.ptr638.sum763
  %193 = load double* %arrayidx740, align 8, !tbaa !17
  %add.ptr638.sum764 = or i64 %idx.ext621, 14
  %arrayidx741 = getelementptr inbounds double* %7, i64 %add.ptr638.sum764
  %194 = load double* %arrayidx741, align 8, !tbaa !17
  %add.ptr638.sum765 = or i64 %idx.ext621, 15
  %arrayidx742 = getelementptr inbounds double* %7, i64 %add.ptr638.sum765
  %195 = load double* %arrayidx742, align 8, !tbaa !17
  %mul743 = fmul double %mul643, %195
  %mul744 = fmul double %mul643, %194
  %mul745 = fmul double %mul643, %193
  %196 = insertelement <2 x double> undef, double %mul643, i32 0
  %197 = insertelement <2 x double> %196, double %mul643, i32 1
  %198 = insertelement <2 x double> undef, double %150, i32 0
  %199 = insertelement <2 x double> %198, double %151, i32 1
  %200 = fmul <2 x double> %197, %199
  %mul747 = fmul double %sub646, %mul743
  %add748 = fadd double %mul744, %mul747
  %201 = insertelement <2 x double> undef, double %add692, i32 0
  %202 = insertelement <2 x double> %201, double %add748, i32 1
  %203 = insertelement <2 x double> undef, double %sub646, i32 0
  %204 = insertelement <2 x double> %203, double %sub646, i32 1
  %205 = fmul <2 x double> %202, %204
  %206 = insertelement <2 x double> undef, double %mul690, i32 0
  %207 = insertelement <2 x double> %206, double %mul745, i32 1
  %208 = fadd <2 x double> %207, %205
  %209 = fmul <2 x double> %208, %204
  %210 = fadd <2 x double> %200, %209
  %211 = insertelement <2 x double> %168, double %154, i32 1
  %212 = fmul <2 x double> %210, %211
  %213 = fadd <2 x double> %134, %212
  %mul756 = fmul double %mul703, %mul743
  %mul757 = fmul double %mul744, 2.000000e+00
  %add758 = fadd double %mul757, %mul756
  %mul759 = fmul double %sub646, %add758
  %add760 = fadd double %mul745, %mul759
  %mul761 = fmul double %add760, -2.000000e+00
  %mul762 = fmul double %154, %mul761
  %mul766 = fmul double %sub596, %mul762
  %214 = insertelement <2 x double> undef, double %sub596, i32 0
  %215 = insertelement <2 x double> %214, double %sub601, i32 1
  %216 = insertelement <2 x double> undef, double %mul766, i32 0
  %217 = insertelement <2 x double> %216, double %mul766, i32 1
  %218 = fmul <2 x double> %215, %217
  %219 = fadd <2 x double> %138, %218
  %220 = load double* %x773, align 8, !tbaa !72
  %add774 = fadd double %220, %mul766
  store double %add774, double* %x773, align 8, !tbaa !72
  %x775 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext592, i32 0
  %mul778 = fmul double %sub601, %mul762
  %221 = insertelement <2 x double> %172, double %sub601, i32 1
  %222 = insertelement <2 x double> %187, double %mul778, i32 1
  %223 = fmul <2 x double> %221, %222
  %224 = fadd <2 x double> %140, %223
  %225 = insertelement <2 x double> undef, double %mul778, i32 0
  %226 = insertelement <2 x double> %225, double %mul766, i32 1
  %227 = fmul <2 x double> %186, %226
  %228 = fadd <2 x double> %139, %227
  %229 = load double* %y783, align 8, !tbaa !73
  %add784 = fadd double %229, %mul778
  store double %add784, double* %y783, align 8, !tbaa !73
  %230 = bitcast double* %x775 to <2 x double>*
  %231 = load <2 x double>* %230, align 8, !tbaa !17
  %232 = insertelement <2 x double> %216, double %mul778, i32 1
  %233 = fsub <2 x double> %231, %232
  %234 = bitcast double* %x775 to <2 x double>*
  store <2 x double> %233, <2 x double>* %234, align 8, !tbaa !17
  %mul788 = fmul double %sub606, %mul762
  %mul789 = fmul double %sub606, %mul788
  %add790 = fadd double %fullElectVirial_zz.1875, %mul789
  %235 = load double* %z791, align 8, !tbaa !74
  %add792 = fadd double %235, %mul788
  store double %add792, double* %z791, align 8, !tbaa !74
  %z793 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext592, i32 2
  %236 = load double* %z793, align 8, !tbaa !74
  %sub794 = fsub double %236, %mul788
  store double %sub794, double* %z793, align 8, !tbaa !74
  %indvars.iv.next1047 = add nuw nsw i64 %indvars.iv1046, 1
  %lftr.wideiv1048 = trunc i64 %indvars.iv.next1047 to i32
  %exitcond1049 = icmp eq i32 %lftr.wideiv1048, %132
  br i1 %exitcond1049, label %for.end797, label %for.body588.for.body588_crit_edge

for.body588.for.body588_crit_edge:                ; preds = %for.body588
  %.pre = load i32** %atomVdwType.i788, align 8, !tbaa !64
  br label %for.body588

for.end797:                                       ; preds = %for.body588, %for.end566
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0959, %for.end566 ], [ %add790, %for.body588 ]
  %237 = phi <2 x double> [ %64, %for.end566 ], [ %213, %for.body588 ]
  %238 = phi <2 x double> [ %65, %for.end566 ], [ %171, %for.body588 ]
  %239 = phi <2 x double> [ %66, %for.end566 ], [ %177, %for.body588 ]
  %240 = phi <2 x double> [ %67, %for.end566 ], [ %190, %for.body588 ]
  %241 = phi <2 x double> [ %68, %for.end566 ], [ %219, %for.body588 ]
  %242 = phi <2 x double> [ %69, %for.end566 ], [ %228, %for.body588 ]
  %243 = phi <2 x double> [ %70, %for.end566 ], [ %224, %for.body588 ]
  %conv802 = trunc i64 %sub.ptr.div577 to i32
  %cmp804905 = icmp sgt i32 %conv802, 0
  br i1 %cmp804905, label %for.body805.lr.ph, label %for.end1075

for.body805.lr.ph:                                ; preds = %for.end797
  %x974 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y984 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z992 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x1051 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1061 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1069 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  br label %for.body805

for.body805:                                      ; preds = %for.body805, %for.body805.lr.ph
  %indvars.iv1050 = phi i64 [ 0, %for.body805.lr.ph ], [ %indvars.iv.next1051, %for.body805 ]
  %fullElectVirial_zz.2907 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body805.lr.ph ], [ %add1068, %for.body805 ]
  %244 = phi <2 x double> [ %237, %for.body805.lr.ph ], [ %331, %for.body805 ]
  %245 = phi <2 x double> [ %238, %for.body805.lr.ph ], [ %282, %for.body805 ]
  %246 = phi <2 x double> [ %239, %for.body805.lr.ph ], [ %288, %for.body805 ]
  %247 = phi <2 x double> [ %240, %for.body805.lr.ph ], [ %301, %for.body805 ]
  %248 = phi <2 x double> [ %241, %for.body805.lr.ph ], [ %337, %for.body805 ]
  %249 = phi <2 x double> [ %242, %for.body805.lr.ph ], [ %346, %for.body805 ]
  %250 = phi <2 x double> [ %243, %for.body805.lr.ph ], [ %342, %for.body805 ]
  %arrayidx808 = getelementptr inbounds i32* %cond173, i64 %indvars.iv1050
  %251 = load i32* %arrayidx808, align 4, !tbaa !11
  %idx.ext810 = sext i32 %251 to i64
  %x814 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext810, i32 0, i32 0
  %252 = load double* %x814, align 8, !tbaa !59
  %sub815 = fsub double %76, %252
  %mul817 = fmul double %sub815, %sub815
  %y820 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext810, i32 0, i32 1
  %253 = load double* %y820, align 8, !tbaa !61
  %sub821 = fsub double %77, %253
  %mul822 = fmul double %sub821, %sub821
  %add823 = fadd double %mul817, %mul822
  %z826 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext810, i32 0, i32 2
  %254 = load double* %z826, align 8, !tbaa !62
  %sub827 = fsub double %78, %254
  %mul828 = fmul double %sub827, %sub827
  %add829 = fadd double %add823, %mul828
  %conv831 = fptrunc double %add829 to float
  %255 = bitcast float %conv831 to i32
  %shr835 = ashr i32 %255, 17
  %add836 = add nsw i32 %shr835, %mul
  %id838 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext810, i32 2
  %256 = bitcast [4 x i8]* %id838 to i32*
  %bf.load839 = load i32* %256, align 4
  %bf.clear840 = and i32 %bf.load839, 4194303
  %idxprom.i781821 = zext i32 %bf.clear840 to i64
  %257 = load i32** %atomVdwType.i788, align 8, !tbaa !64
  %arrayidx.i782 = getelementptr inbounds i32* %257, i64 %idxprom.i781821
  %258 = load i32* %arrayidx.i782, align 4, !tbaa !11
  %conv.i = zext i32 %258 to i64
  %conv842 = shl nuw nsw i64 %conv.i, 1
  %mul843 = and i64 %conv842, 131070
  %add.ptr845.sum729 = or i64 %mul843, 1
  %mul848 = shl nsw i32 %add836, 4
  %idx.ext849 = sext i32 %mul848 to i64
  %add.ptr850 = getelementptr inbounds double* %7, i64 %idx.ext849
  %259 = load double* %add.ptr850, align 8, !tbaa !17
  %add.ptr850.sum730 = or i64 %idx.ext849, 4
  %add.ptr857 = getelementptr inbounds double* %7, i64 %add.ptr850.sum730
  %260 = load double* %add.ptr857, align 8, !tbaa !17
  %add.ptr850.sum731 = or i64 %idx.ext849, 8
  %add.ptr864 = getelementptr inbounds double* %7, i64 %add.ptr850.sum731
  %261 = load double* %add.ptr864, align 8, !tbaa !17
  %add.ptr864.sum732 = or i64 %idx.ext849, 12
  %add.ptr872 = getelementptr inbounds double* %7, i64 %add.ptr864.sum732
  %262 = load double* %add.ptr872, align 8, !tbaa !17
  %and876 = and i32 %255, -131072
  %charge878 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext810, i32 1
  %263 = load float* %charge878, align 4, !tbaa !63
  %conv879 = fpext float %263 to double
  %mul880 = fmul double %mul378, %conv879
  %264 = bitcast i32 %and876 to float
  %conv883 = fpext float %264 to double
  %sub884 = fsub double %add829, %conv883
  %bf.lshr888 = lshr i32 %bf.load839, 28
  %idxprom889 = zext i32 %bf.lshr888 to i64
  %add.ptr374.sum733 = add i64 %idxprom889, %idx.ext373
  %arrayidx890 = getelementptr inbounds double* %101, i64 %add.ptr374.sum733
  %265 = load double* %arrayidx890, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr845.sum729, %idx.ext.i
  %A892 = getelementptr inbounds %"struct.LJTable::TableEntry"* %106, i64 %add.ptr.i.sum, i32 0
  %266 = load double* %A892, align 8, !tbaa !69
  %mul893 = fmul double %9, %266
  %B895 = getelementptr inbounds %"struct.LJTable::TableEntry"* %106, i64 %add.ptr.i.sum, i32 1
  %267 = load double* %B895, align 8, !tbaa !71
  %mul896 = fmul double %9, %267
  %mul898 = fmul double %259, %mul893
  %mul899 = fmul double %260, %mul896
  %sub900 = fsub double %mul898, %mul899
  %add.ptr850.sum734 = or i64 %idx.ext849, 3
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr850.sum734
  %268 = load double* %arrayidx902, align 8, !tbaa !17
  %mul903 = fmul double %mul893, %268
  %add.ptr857.sum735 = or i64 %idx.ext849, 7
  %arrayidx904 = getelementptr inbounds double* %7, i64 %add.ptr857.sum735
  %269 = load double* %arrayidx904, align 8, !tbaa !17
  %mul905 = fmul double %mul896, %269
  %sub906 = fsub double %mul903, %mul905
  %add.ptr850.sum736 = or i64 %idx.ext849, 2
  %arrayidx908 = getelementptr inbounds double* %7, i64 %add.ptr850.sum736
  %270 = load double* %arrayidx908, align 8, !tbaa !17
  %mul909 = fmul double %mul893, %270
  %add.ptr857.sum737 = or i64 %idx.ext849, 6
  %arrayidx910 = getelementptr inbounds double* %7, i64 %add.ptr857.sum737
  %271 = load double* %arrayidx910, align 8, !tbaa !17
  %mul911 = fmul double %mul896, %271
  %sub912 = fsub double %mul909, %mul911
  %add.ptr850.sum738 = or i64 %idx.ext849, 1
  %arrayidx914 = getelementptr inbounds double* %7, i64 %add.ptr850.sum738
  %272 = load double* %arrayidx914, align 8, !tbaa !17
  %mul915 = fmul double %mul893, %272
  %add.ptr857.sum739 = or i64 %idx.ext849, 5
  %arrayidx916 = getelementptr inbounds double* %7, i64 %add.ptr857.sum739
  %273 = load double* %arrayidx916, align 8, !tbaa !17
  %mul917 = fmul double %mul896, %273
  %sub918 = fsub double %mul915, %mul917
  %mul920 = fmul double %sub884, %sub906
  %add921 = fadd double %mul920, %sub912
  %mul922 = fmul double %sub884, %add921
  %add923 = fadd double %mul922, %sub918
  %mul924 = fmul double %sub884, %add923
  %add925 = fadd double %sub900, %mul924
  %mul929 = fmul double %sub928, %mul880
  %add.ptr864.sum740 = or i64 %idx.ext849, 11
  %arrayidx932 = getelementptr inbounds double* %7, i64 %add.ptr864.sum740
  %274 = load double* %arrayidx932, align 8, !tbaa !17
  %mul933 = fmul double %mul929, %274
  %add.ptr864.sum741 = or i64 %idx.ext849, 10
  %arrayidx935 = getelementptr inbounds double* %7, i64 %add.ptr864.sum741
  %275 = load double* %arrayidx935, align 8, !tbaa !17
  %mul936 = fmul double %mul929, %275
  %add.ptr864.sum742 = or i64 %idx.ext849, 9
  %arrayidx938 = getelementptr inbounds double* %7, i64 %add.ptr864.sum742
  %276 = load double* %arrayidx938, align 8, !tbaa !17
  %mul939 = fmul double %mul929, %276
  %mul941 = fmul double %sub884, %mul933
  %add949 = fadd double %sub906, %mul933
  %add950 = fadd double %sub912, %mul936
  %add951 = fadd double %sub918, %mul939
  %mul954 = fmul double %sub884, 3.000000e+00
  %mul955 = fmul double %mul954, %add949
  %mul956 = fmul double %add950, 2.000000e+00
  %add957 = fadd double %mul955, %mul956
  %mul958 = fmul double %sub884, %add957
  %add959 = fadd double %add951, %mul958
  %mul961 = fmul double %265, -2.000000e+00
  %mul962 = fmul double %mul961, %add959
  %mul967 = fmul double %sub815, %mul962
  %277 = insertelement <2 x double> undef, double %add925, i32 0
  %278 = insertelement <2 x double> %277, double %sub815, i32 1
  %279 = insertelement <2 x double> undef, double %265, i32 0
  %280 = insertelement <2 x double> %279, double %mul967, i32 1
  %281 = fmul <2 x double> %278, %280
  %282 = fadd <2 x double> %245, %281
  %283 = insertelement <2 x double> undef, double %sub821, i32 0
  %284 = insertelement <2 x double> %283, double %sub827, i32 1
  %285 = insertelement <2 x double> undef, double %mul967, i32 0
  %286 = insertelement <2 x double> %285, double %mul967, i32 1
  %287 = fmul <2 x double> %284, %286
  %288 = fadd <2 x double> %246, %287
  %289 = load double* %x974, align 8, !tbaa !72
  %add975 = fadd double %289, %mul967
  store double %add975, double* %x974, align 8, !tbaa !72
  %x976 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext810, i32 0
  %mul979 = fmul double %sub821, %mul962
  %290 = load double* %y984, align 8, !tbaa !73
  %add985 = fadd double %290, %mul979
  store double %add985, double* %y984, align 8, !tbaa !73
  %291 = bitcast double* %x976 to <2 x double>*
  %292 = load <2 x double>* %291, align 8, !tbaa !17
  %293 = insertelement <2 x double> %285, double %mul979, i32 1
  %294 = fsub <2 x double> %292, %293
  %295 = bitcast double* %x976 to <2 x double>*
  store <2 x double> %294, <2 x double>* %295, align 8, !tbaa !17
  %mul989 = fmul double %sub827, %mul962
  %296 = insertelement <2 x double> undef, double %sub827, i32 0
  %297 = insertelement <2 x double> %296, double %sub827, i32 1
  %298 = insertelement <2 x double> undef, double %mul979, i32 0
  %299 = insertelement <2 x double> %298, double %mul989, i32 1
  %300 = fmul <2 x double> %297, %299
  %301 = fadd <2 x double> %247, %300
  %302 = load double* %z992, align 8, !tbaa !74
  %add993 = fadd double %302, %mul989
  store double %add993, double* %z992, align 8, !tbaa !74
  %z994 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext810, i32 2
  %303 = load double* %z994, align 8, !tbaa !74
  %sub995 = fsub double %303, %mul989
  store double %sub995, double* %z994, align 8, !tbaa !74
  %add.ptr872.sum743 = or i64 %idx.ext849, 13
  %arrayidx997 = getelementptr inbounds double* %7, i64 %add.ptr872.sum743
  %304 = load double* %arrayidx997, align 8, !tbaa !17
  %add.ptr872.sum744 = or i64 %idx.ext849, 14
  %arrayidx999 = getelementptr inbounds double* %7, i64 %add.ptr872.sum744
  %305 = load double* %arrayidx999, align 8, !tbaa !17
  %add.ptr872.sum745 = or i64 %idx.ext849, 15
  %arrayidx1001 = getelementptr inbounds double* %7, i64 %add.ptr872.sum745
  %306 = load double* %arrayidx1001, align 8, !tbaa !17
  %mul1002 = shl nsw i32 %add836, 2
  %idx.ext1003 = sext i32 %mul1002 to i64
  %add.ptr1004 = getelementptr inbounds double* %8, i64 %idx.ext1003
  %307 = load double* %add.ptr1004, align 8, !tbaa !17
  %mul1006 = fmul double %sub, %307
  %sub1007 = fsub double %262, %mul1006
  %add.ptr1004.sum746 = or i64 %idx.ext1003, 1
  %arrayidx1008 = getelementptr inbounds double* %8, i64 %add.ptr1004.sum746
  %308 = load double* %arrayidx1008, align 8, !tbaa !17
  %mul1009 = fmul double %sub, %308
  %sub1010 = fsub double %304, %mul1009
  %add.ptr1004.sum747 = or i64 %idx.ext1003, 2
  %arrayidx1011 = getelementptr inbounds double* %8, i64 %add.ptr1004.sum747
  %309 = load double* %arrayidx1011, align 8, !tbaa !17
  %mul1012 = fmul double %sub, %309
  %sub1013 = fsub double %305, %mul1012
  %add.ptr1004.sum748 = or i64 %idx.ext1003, 3
  %arrayidx1014 = getelementptr inbounds double* %8, i64 %add.ptr1004.sum748
  %310 = load double* %arrayidx1014, align 8, !tbaa !17
  %mul1015 = fmul double %sub, %310
  %sub1016 = fsub double %306, %mul1015
  %mul1017 = fmul double %mul880, %sub1016
  %mul1018 = fmul double %mul880, %sub1013
  %mul1019 = fmul double %mul880, %sub1010
  %311 = insertelement <2 x double> undef, double %mul929, i32 0
  %312 = insertelement <2 x double> %311, double %sub1007, i32 1
  %313 = insertelement <2 x double> undef, double %261, i32 0
  %314 = insertelement <2 x double> %313, double %mul880, i32 1
  %315 = fmul <2 x double> %312, %314
  %mul1022 = fmul double %sub884, %mul1017
  %316 = insertelement <2 x double> undef, double %mul941, i32 0
  %317 = insertelement <2 x double> %316, double %mul1018, i32 1
  %318 = insertelement <2 x double> undef, double %mul936, i32 0
  %319 = insertelement <2 x double> %318, double %mul1022, i32 1
  %320 = fadd <2 x double> %317, %319
  %321 = insertelement <2 x double> undef, double %sub884, i32 0
  %322 = insertelement <2 x double> %321, double %sub884, i32 1
  %323 = fmul <2 x double> %320, %322
  %324 = insertelement <2 x double> undef, double %mul939, i32 0
  %325 = insertelement <2 x double> %324, double %mul1019, i32 1
  %326 = fadd <2 x double> %325, %323
  %327 = fmul <2 x double> %326, %322
  %328 = fadd <2 x double> %315, %327
  %329 = insertelement <2 x double> %279, double %265, i32 1
  %330 = fmul <2 x double> %328, %329
  %331 = fadd <2 x double> %244, %330
  %mul1032 = fmul double %mul954, %mul1017
  %mul1033 = fmul double %mul1018, 2.000000e+00
  %add1034 = fadd double %mul1033, %mul1032
  %mul1035 = fmul double %sub884, %add1034
  %add1036 = fadd double %mul1019, %mul1035
  %mul1038 = fmul double %add1036, -2.000000e+00
  %mul1039 = fmul double %265, %mul1038
  %mul1044 = fmul double %sub815, %mul1039
  %332 = insertelement <2 x double> undef, double %sub815, i32 0
  %333 = insertelement <2 x double> %332, double %sub821, i32 1
  %334 = insertelement <2 x double> undef, double %mul1044, i32 0
  %335 = insertelement <2 x double> %334, double %mul1044, i32 1
  %336 = fmul <2 x double> %333, %335
  %337 = fadd <2 x double> %248, %336
  %338 = load double* %x1051, align 8, !tbaa !72
  %add1052 = fadd double %338, %mul1044
  store double %add1052, double* %x1051, align 8, !tbaa !72
  %x1053 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext810, i32 0
  %mul1056 = fmul double %sub821, %mul1039
  %339 = insertelement <2 x double> %283, double %sub821, i32 1
  %340 = insertelement <2 x double> %298, double %mul1056, i32 1
  %341 = fmul <2 x double> %339, %340
  %342 = fadd <2 x double> %250, %341
  %343 = insertelement <2 x double> undef, double %mul1056, i32 0
  %344 = insertelement <2 x double> %343, double %mul1044, i32 1
  %345 = fmul <2 x double> %297, %344
  %346 = fadd <2 x double> %249, %345
  %347 = load double* %y1061, align 8, !tbaa !73
  %add1062 = fadd double %347, %mul1056
  store double %add1062, double* %y1061, align 8, !tbaa !73
  %348 = bitcast double* %x1053 to <2 x double>*
  %349 = load <2 x double>* %348, align 8, !tbaa !17
  %350 = insertelement <2 x double> %334, double %mul1056, i32 1
  %351 = fsub <2 x double> %349, %350
  %352 = bitcast double* %x1053 to <2 x double>*
  store <2 x double> %351, <2 x double>* %352, align 8, !tbaa !17
  %mul1066 = fmul double %sub827, %mul1039
  %mul1067 = fmul double %sub827, %mul1066
  %add1068 = fadd double %fullElectVirial_zz.2907, %mul1067
  %353 = load double* %z1069, align 8, !tbaa !74
  %add1070 = fadd double %353, %mul1066
  store double %add1070, double* %z1069, align 8, !tbaa !74
  %z1071 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext810, i32 2
  %354 = load double* %z1071, align 8, !tbaa !74
  %sub1072 = fsub double %354, %mul1066
  store double %sub1072, double* %z1071, align 8, !tbaa !74
  %indvars.iv.next1051 = add nuw nsw i64 %indvars.iv1050, 1
  %lftr.wideiv1052 = trunc i64 %indvars.iv.next1051 to i32
  %exitcond1053 = icmp eq i32 %lftr.wideiv1052, %conv802
  br i1 %exitcond1053, label %for.end1075, label %for.body805

for.end1075:                                      ; preds = %for.body805, %for.end797
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end797 ], [ %add1068, %for.body805 ]
  %355 = phi <2 x double> [ %237, %for.end797 ], [ %331, %for.body805 ]
  %356 = phi <2 x double> [ %238, %for.end797 ], [ %282, %for.body805 ]
  %357 = phi <2 x double> [ %239, %for.end797 ], [ %288, %for.body805 ]
  %358 = phi <2 x double> [ %240, %for.end797 ], [ %301, %for.body805 ]
  %359 = phi <2 x double> [ %241, %for.end797 ], [ %337, %for.body805 ]
  %360 = phi <2 x double> [ %242, %for.end797 ], [ %346, %for.body805 ]
  %361 = phi <2 x double> [ %243, %for.end797 ], [ %342, %for.body805 ]
  %conv1080 = trunc i64 %sub.ptr.div570 to i32
  %cmp1082937 = icmp sgt i32 %conv1080, 0
  br i1 %cmp1082937, label %for.body1083.lr.ph, label %for.inc1216

for.body1083.lr.ph:                               ; preds = %for.end1075
  %362 = extractelement <2 x double> %355, i32 1
  %363 = extractelement <2 x double> %355, i32 0
  %364 = extractelement <2 x double> %361, i32 1
  %365 = extractelement <2 x double> %361, i32 0
  %x1191 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1201 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1209 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %366 = insertelement <2 x double> undef, double %363, i32 0
  %367 = insertelement <2 x double> undef, double %365, i32 0
  br label %for.body1083

for.body1083:                                     ; preds = %for.body1083, %for.body1083.lr.ph
  %indvars.iv1054 = phi i64 [ 0, %for.body1083.lr.ph ], [ %indvars.iv.next1055, %for.body1083 ]
  %fullElectEnergy.3945 = phi double [ %362, %for.body1083.lr.ph ], [ %add1169, %for.body1083 ]
  %fullElectVirial_yy.3941 = phi double [ %364, %for.body1083.lr.ph ], [ %add1198, %for.body1083 ]
  %fullElectVirial_zz.3939 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body1083.lr.ph ], [ %add1208, %for.body1083 ]
  %368 = phi <2 x double> [ %359, %for.body1083.lr.ph ], [ %392, %for.body1083 ]
  %369 = phi <2 x double> [ %360, %for.body1083.lr.ph ], [ %399, %for.body1083 ]
  %arrayidx1086 = getelementptr inbounds i32* %cond162817, i64 %indvars.iv1054
  %370 = load i32* %arrayidx1086, align 4, !tbaa !11
  %idx.ext1088 = sext i32 %370 to i64
  %x1092 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1088, i32 0, i32 0
  %371 = load double* %x1092, align 8, !tbaa !59
  %sub1093 = fsub double %76, %371
  %mul1095 = fmul double %sub1093, %sub1093
  %y1098 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1088, i32 0, i32 1
  %372 = load double* %y1098, align 8, !tbaa !61
  %sub1099 = fsub double %77, %372
  %mul1100 = fmul double %sub1099, %sub1099
  %add1101 = fadd double %mul1095, %mul1100
  %z1104 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1088, i32 0, i32 2
  %373 = load double* %z1104, align 8, !tbaa !62
  %sub1105 = fsub double %78, %373
  %mul1106 = fmul double %sub1105, %sub1105
  %add1107 = fadd double %add1101, %mul1106
  %conv1109 = fptrunc double %add1107 to float
  %374 = bitcast float %conv1109 to i32
  %shr1113 = ashr i32 %374, 17
  %add1114 = add nsw i32 %shr1113, %mul
  %mul1116 = shl nsw i32 %add1114, 4
  %idx.ext1117 = sext i32 %mul1116 to i64
  %add.ptr1119.sum721 = or i64 %idx.ext1117, 12
  %add.ptr1120 = getelementptr inbounds double* %7, i64 %add.ptr1119.sum721
  %375 = load double* %add.ptr1120, align 8, !tbaa !17
  %and1124 = and i32 %374, -131072
  %charge1126 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1088, i32 1
  %376 = load float* %charge1126, align 4, !tbaa !63
  %conv1127 = fpext float %376 to double
  %mul1128 = fmul double %mul378, %conv1127
  %377 = bitcast i32 %and1124 to float
  %conv1131 = fpext float %377 to double
  %sub1132 = fsub double %add1107, %conv1131
  %partition1134 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1088, i32 2
  %378 = bitcast [4 x i8]* %partition1134 to i32*
  %bf.load1135 = load i32* %378, align 4
  %bf.lshr1136 = lshr i32 %bf.load1135, 28
  %idxprom1137 = zext i32 %bf.lshr1136 to i64
  %add.ptr374.sum = add i64 %idxprom1137, %idx.ext373
  %arrayidx1138 = getelementptr inbounds double* %101, i64 %add.ptr374.sum
  %379 = load double* %arrayidx1138, align 8, !tbaa !17
  %add.ptr1120.sum722 = or i64 %idx.ext1117, 13
  %arrayidx1140 = getelementptr inbounds double* %7, i64 %add.ptr1120.sum722
  %380 = load double* %arrayidx1140, align 8, !tbaa !17
  %add.ptr1120.sum723 = or i64 %idx.ext1117, 14
  %arrayidx1142 = getelementptr inbounds double* %7, i64 %add.ptr1120.sum723
  %381 = load double* %arrayidx1142, align 8, !tbaa !17
  %add.ptr1120.sum724 = or i64 %idx.ext1117, 15
  %arrayidx1144 = getelementptr inbounds double* %7, i64 %add.ptr1120.sum724
  %382 = load double* %arrayidx1144, align 8, !tbaa !17
  %mul1146 = shl nsw i32 %add1114, 2
  %idx.ext1147 = sext i32 %mul1146 to i64
  %add.ptr1148 = getelementptr inbounds double* %8, i64 %idx.ext1147
  %383 = load double* %add.ptr1148, align 8, !tbaa !17
  %sub1150 = fsub double %375, %383
  %add.ptr1148.sum725 = or i64 %idx.ext1147, 1
  %arrayidx1151 = getelementptr inbounds double* %8, i64 %add.ptr1148.sum725
  %384 = load double* %arrayidx1151, align 8, !tbaa !17
  %sub1152 = fsub double %380, %384
  %add.ptr1148.sum726 = or i64 %idx.ext1147, 2
  %arrayidx1153 = getelementptr inbounds double* %8, i64 %add.ptr1148.sum726
  %385 = load double* %arrayidx1153, align 8, !tbaa !17
  %sub1154 = fsub double %381, %385
  %add.ptr1148.sum727 = or i64 %idx.ext1147, 3
  %arrayidx1155 = getelementptr inbounds double* %8, i64 %add.ptr1148.sum727
  %386 = load double* %arrayidx1155, align 8, !tbaa !17
  %sub1156 = fsub double %382, %386
  %mul1157 = fmul double %mul1128, %sub1156
  %mul1158 = fmul double %mul1128, %sub1154
  %mul1159 = fmul double %mul1128, %sub1152
  %mul1160 = fmul double %mul1128, %sub1150
  %mul1162 = fmul double %sub1132, %mul1157
  %add1163 = fadd double %mul1158, %mul1162
  %mul1164 = fmul double %sub1132, %add1163
  %add1165 = fadd double %mul1159, %mul1164
  %mul1166 = fmul double %sub1132, %add1165
  %add1167 = fadd double %mul1160, %mul1166
  %mul1168 = fmul double %379, %add1167
  %add1169 = fadd double %fullElectEnergy.3945, %mul1168
  %mul1171 = fmul double %sub1132, 3.000000e+00
  %mul1172 = fmul double %mul1171, %mul1157
  %mul1173 = fmul double %mul1158, 2.000000e+00
  %add1174 = fadd double %mul1173, %mul1172
  %mul1175 = fmul double %sub1132, %add1174
  %add1176 = fadd double %mul1159, %mul1175
  %mul1178 = fmul double %add1176, -2.000000e+00
  %mul1179 = fmul double %379, %mul1178
  %mul1184 = fmul double %sub1093, %mul1179
  %387 = insertelement <2 x double> undef, double %sub1093, i32 0
  %388 = insertelement <2 x double> %387, double %sub1099, i32 1
  %389 = insertelement <2 x double> undef, double %mul1184, i32 0
  %390 = insertelement <2 x double> %389, double %mul1184, i32 1
  %391 = fmul <2 x double> %388, %390
  %392 = fadd <2 x double> %368, %391
  %393 = load double* %x1191, align 8, !tbaa !72
  %add1192 = fadd double %393, %mul1184
  store double %add1192, double* %x1191, align 8, !tbaa !72
  %x1193 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1088, i32 0
  %mul1196 = fmul double %sub1099, %mul1179
  %mul1197 = fmul double %sub1099, %mul1196
  %add1198 = fadd double %fullElectVirial_yy.3941, %mul1197
  %394 = insertelement <2 x double> undef, double %sub1105, i32 0
  %395 = insertelement <2 x double> %394, double %sub1105, i32 1
  %396 = insertelement <2 x double> undef, double %mul1196, i32 0
  %397 = insertelement <2 x double> %396, double %mul1184, i32 1
  %398 = fmul <2 x double> %395, %397
  %399 = fadd <2 x double> %369, %398
  %400 = load double* %y1201, align 8, !tbaa !73
  %add1202 = fadd double %400, %mul1196
  store double %add1202, double* %y1201, align 8, !tbaa !73
  %401 = bitcast double* %x1193 to <2 x double>*
  %402 = load <2 x double>* %401, align 8, !tbaa !17
  %403 = insertelement <2 x double> %389, double %mul1196, i32 1
  %404 = fsub <2 x double> %402, %403
  %405 = bitcast double* %x1193 to <2 x double>*
  store <2 x double> %404, <2 x double>* %405, align 8, !tbaa !17
  %mul1206 = fmul double %sub1105, %mul1179
  %mul1207 = fmul double %sub1105, %mul1206
  %add1208 = fadd double %fullElectVirial_zz.3939, %mul1207
  %406 = load double* %z1209, align 8, !tbaa !74
  %add1210 = fadd double %406, %mul1206
  store double %add1210, double* %z1209, align 8, !tbaa !74
  %z1211 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1088, i32 2
  %407 = load double* %z1211, align 8, !tbaa !74
  %sub1212 = fsub double %407, %mul1206
  store double %sub1212, double* %z1211, align 8, !tbaa !74
  %indvars.iv.next1055 = add nuw nsw i64 %indvars.iv1054, 1
  %lftr.wideiv1056 = trunc i64 %indvars.iv.next1055 to i32
  %exitcond1057 = icmp eq i32 %lftr.wideiv1056, %conv1080
  br i1 %exitcond1057, label %for.inc1216.loopexit, label %for.body1083

for.inc1216.loopexit:                             ; preds = %for.body1083
  %408 = insertelement <2 x double> %366, double %add1169, i32 1
  %409 = insertelement <2 x double> %367, double %add1198, i32 1
  br label %for.inc1216

for.inc1216:                                      ; preds = %for.inc1216.loopexit, %for.end1075, %cond.end354, %if.then226
  %pairCount.3 = phi i32 [ %add222, %if.then226 ], [ %pairCount.1, %cond.end354 ], [ %pairCount.2, %for.end1075 ], [ %pairCount.2, %for.inc1216.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0957, %if.then226 ], [ 0, %cond.end354 ], [ %pairlistindex.1, %for.end1075 ], [ %pairlistindex.1, %for.inc1216.loopexit ]
  %i.2 = phi i32 [ %add228, %if.then226 ], [ %add357, %cond.end354 ], [ %i.1958, %for.end1075 ], [ %i.1958, %for.inc1216.loopexit ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0959, %if.then226 ], [ %fullElectVirial_zz.0959, %cond.end354 ], [ %fullElectVirial_zz.2.lcssa, %for.end1075 ], [ %add1208, %for.inc1216.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0989, %if.then226 ], [ %exclChecksum.0989, %cond.end354 ], [ %conv580, %for.end1075 ], [ %conv580, %for.inc1216.loopexit ]
  %410 = phi <2 x double> [ %64, %if.then226 ], [ %64, %cond.end354 ], [ %355, %for.end1075 ], [ %408, %for.inc1216.loopexit ]
  %411 = phi <2 x double> [ %65, %if.then226 ], [ %65, %cond.end354 ], [ %356, %for.end1075 ], [ %356, %for.inc1216.loopexit ]
  %412 = phi <2 x double> [ %66, %if.then226 ], [ %66, %cond.end354 ], [ %357, %for.end1075 ], [ %357, %for.inc1216.loopexit ]
  %413 = phi <2 x double> [ %67, %if.then226 ], [ %67, %cond.end354 ], [ %358, %for.end1075 ], [ %358, %for.inc1216.loopexit ]
  %414 = phi <2 x double> [ %68, %if.then226 ], [ %68, %cond.end354 ], [ %359, %for.end1075 ], [ %392, %for.inc1216.loopexit ]
  %415 = phi <2 x double> [ %69, %if.then226 ], [ %69, %cond.end354 ], [ %360, %for.end1075 ], [ %399, %for.inc1216.loopexit ]
  %416 = phi <2 x double> [ %70, %if.then226 ], [ %70, %cond.end354 ], [ %361, %for.end1075 ], [ %409, %for.inc1216.loopexit ]
  %inc1217 = add nsw i32 %i.2, 1
  %cmp186 = icmp slt i32 %inc1217, %13
  br i1 %cmp186, label %for.body187, label %for.end1218

for.end1218:                                      ; preds = %for.inc1216, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1216 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end172 ], [ %fullElectVirial_zz.4, %for.inc1216 ]
  %417 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %410, %for.inc1216 ]
  %418 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %411, %for.inc1216 ]
  %419 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %412, %for.inc1216 ]
  %420 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %413, %for.inc1216 ]
  %421 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %414, %for.inc1216 ]
  %422 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %415, %for.inc1216 ]
  %423 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %416, %for.inc1216 ]
  %424 = extractelement <2 x double> %422, i32 1
  %425 = extractelement <2 x double> %422, i32 0
  %arraydecay1219 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1220 = icmp eq i32* %cond79179310731079, %arraydecay1219
  br i1 %cmp1220, label %if.end1225, label %delete.notnull1223

delete.notnull1223:                               ; preds = %for.end1218
  %426 = bitcast i32* %cond79179310731079 to i8*
  call void @_ZdaPv(i8* %426) #7
  br label %if.end1225

if.end1225:                                       ; preds = %delete.notnull1223, %for.end1218
  %arraydecay1226 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1227 = icmp eq i32* %cond1979510711080, %arraydecay1226
  br i1 %cmp1227, label %if.end1232, label %delete.notnull1230

delete.notnull1230:                               ; preds = %if.end1225
  %427 = bitcast i32* %cond1979510711080 to i8*
  call void @_ZdaPv(i8* %427) #7
  br label %if.end1232

if.end1232:                                       ; preds = %delete.notnull1230, %if.end1225
  %arraydecay1233 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1234 = icmp eq i32* %cond3010751078, %arraydecay1233
  br i1 %cmp1234, label %if.end1239, label %delete.notnull1237

delete.notnull1237:                               ; preds = %if.end1232
  %428 = bitcast i32* %cond3010751078 to i8*
  call void @_ZdaPv(i8* %428) #7
  br label %if.end1239

if.end1239:                                       ; preds = %delete.notnull1237, %if.end1232
  %arraydecay1240 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1241 = icmp eq i32* %cond129799801807813, %arraydecay1240
  br i1 %cmp1241, label %if.end1246, label %delete.notnull1244

delete.notnull1244:                               ; preds = %if.end1239
  %429 = bitcast i32* %cond129799801807813 to i8*
  call void @_ZdaPv(i8* %429) #7
  br label %if.end1246

if.end1246:                                       ; preds = %delete.notnull1244, %if.end1239
  %arraydecay1247 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1248 = icmp eq i32* %cond140803805815, %arraydecay1247
  br i1 %cmp1248, label %if.end1253, label %delete.notnull1251

delete.notnull1251:                               ; preds = %if.end1246
  %430 = bitcast i32* %cond140803805815 to i8*
  call void @_ZdaPv(i8* %430) #7
  br label %if.end1253

if.end1253:                                       ; preds = %delete.notnull1251, %if.end1246
  %arraydecay1254 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1255 = icmp eq i32* %cond151809811, %arraydecay1254
  br i1 %cmp1255, label %if.end1260, label %delete.notnull1258

delete.notnull1258:                               ; preds = %if.end1253
  %431 = bitcast i32* %cond151809811 to i8*
  call void @_ZdaPv(i8* %431) #7
  br label %if.end1260

if.end1260:                                       ; preds = %delete.notnull1258, %if.end1253
  %arraydecay1261 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1262 = icmp eq i32* %cond162817, %arraydecay1261
  br i1 %cmp1262, label %if.end1267, label %delete.notnull1265

delete.notnull1265:                               ; preds = %if.end1260
  %432 = bitcast i32* %cond162817 to i8*
  call void @_ZdaPv(i8* %432) #7
  br label %if.end1267

if.end1267:                                       ; preds = %delete.notnull1265, %if.end1260
  %arraydecay1268 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1269 = icmp eq i32* %cond173, %arraydecay1268
  br i1 %cmp1269, label %if.end1274, label %delete.notnull1272

delete.notnull1272:                               ; preds = %if.end1267
  %433 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %433) #7
  br label %if.end1274

if.end1274:                                       ; preds = %delete.notnull1272, %if.end1267
  %conv1275 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1276 = getelementptr inbounds double* %1, i64 22
  %434 = load double* %arrayidx1276, align 8, !tbaa !17
  %add1277 = fadd double %conv1275, %434
  store double %add1277, double* %arrayidx1276, align 8, !tbaa !17
  %arrayidx1278 = getelementptr inbounds double* %1, i64 2
  %435 = bitcast double* %arrayidx1278 to <2 x double>*
  %436 = load <2 x double>* %435, align 8, !tbaa !17
  %437 = fadd <2 x double> %418, %436
  %438 = bitcast double* %arrayidx1278 to <2 x double>*
  store <2 x double> %437, <2 x double>* %438, align 8, !tbaa !17
  %arrayidx1284 = getelementptr inbounds double* %1, i64 4
  %439 = bitcast double* %arrayidx1284 to <2 x double>*
  %440 = load <2 x double>* %439, align 8, !tbaa !17
  %441 = fadd <2 x double> %419, %440
  %442 = bitcast double* %arrayidx1284 to <2 x double>*
  store <2 x double> %441, <2 x double>* %442, align 8, !tbaa !17
  %arrayidx1288 = getelementptr inbounds double* %1, i64 6
  %443 = bitcast double* %arrayidx1288 to <2 x double>*
  %444 = load <2 x double>* %443, align 8, !tbaa !17
  %445 = shufflevector <2 x double> %419, <2 x double> %423, <2 x i32> <i32 0, i32 2>
  %446 = fadd <2 x double> %445, %444
  %447 = bitcast double* %arrayidx1288 to <2 x double>*
  store <2 x double> %446, <2 x double>* %447, align 8, !tbaa !17
  %arrayidx1292 = getelementptr inbounds double* %1, i64 8
  %448 = bitcast double* %arrayidx1292 to <2 x double>*
  %449 = load <2 x double>* %448, align 8, !tbaa !17
  %450 = shufflevector <2 x double> %420, <2 x double> %419, <2 x i32> <i32 0, i32 3>
  %451 = fadd <2 x double> %450, %449
  %452 = bitcast double* %arrayidx1292 to <2 x double>*
  store <2 x double> %451, <2 x double>* %452, align 8, !tbaa !17
  %arrayidx1296 = getelementptr inbounds double* %1, i64 10
  %453 = bitcast double* %arrayidx1296 to <2 x double>*
  %454 = load <2 x double>* %453, align 8, !tbaa !17
  %455 = fadd <2 x double> %420, %454
  %456 = bitcast double* %arrayidx1296 to <2 x double>*
  store <2 x double> %455, <2 x double>* %456, align 8, !tbaa !17
  %457 = bitcast double* %1 to <2 x double>*
  %458 = load <2 x double>* %457, align 8, !tbaa !17
  %459 = fadd <2 x double> %417, %458
  %460 = bitcast double* %1 to <2 x double>*
  store <2 x double> %459, <2 x double>* %460, align 8, !tbaa !17
  %arrayidx1302 = getelementptr inbounds double* %1, i64 12
  %461 = bitcast double* %arrayidx1302 to <2 x double>*
  %462 = load <2 x double>* %461, align 8, !tbaa !17
  %463 = fadd <2 x double> %421, %462
  %464 = bitcast double* %arrayidx1302 to <2 x double>*
  store <2 x double> %463, <2 x double>* %464, align 8, !tbaa !17
  %arrayidx1306 = getelementptr inbounds double* %1, i64 14
  %465 = load double* %arrayidx1306, align 8, !tbaa !17
  %add1307 = fadd double %424, %465
  store double %add1307, double* %arrayidx1306, align 8, !tbaa !17
  %arrayidx1308 = getelementptr inbounds double* %1, i64 15
  %466 = bitcast double* %arrayidx1308 to <2 x double>*
  %467 = load <2 x double>* %466, align 8, !tbaa !17
  %468 = shufflevector <2 x double> %421, <2 x double> %423, <2 x i32> <i32 1, i32 3>
  %469 = fadd <2 x double> %468, %467
  %470 = bitcast double* %arrayidx1308 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 8, !tbaa !17
  %arrayidx1312 = getelementptr inbounds double* %1, i64 17
  %471 = bitcast double* %arrayidx1312 to <2 x double>*
  %472 = load <2 x double>* %471, align 8, !tbaa !17
  %473 = fadd <2 x double> %422, %472
  %474 = bitcast double* %arrayidx1312 to <2 x double>*
  store <2 x double> %473, <2 x double>* %474, align 8, !tbaa !17
  %arrayidx1316 = getelementptr inbounds double* %1, i64 19
  %475 = bitcast double* %arrayidx1316 to <2 x double>*
  %476 = load <2 x double>* %475, align 8, !tbaa !17
  %477 = insertelement <2 x double> undef, double %425, i32 0
  %478 = insertelement <2 x double> %477, double %fullElectVirial_zz.0.lcssa, i32 1
  %479 = fadd <2 x double> %478, %476
  %480 = bitcast double* %arrayidx1316 to <2 x double>*
  store <2 x double> %479, <2 x double>* %480, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %46) #6
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1274, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil23calc_self_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31974 = icmp sgt i32 %14, 0
  br i1 %cmp31974, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301049 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond7597611047 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond197631045 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1037 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1038, %for.inc ]
  %g.0975 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1037, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0975, 1
  %idxprom41 = sext i32 %g.0975 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond7597611047, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1037 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0975, %for.body ]
  %indvars.iv.next1038 = add nuw nsw i64 %indvars.iv1037, 1
  %lftr.wideiv1039 = trunc i64 %indvars.iv.next1038 to i32
  %exitcond1040 = icmp eq i32 %lftr.wideiv1039, %14
  br i1 %exitcond1040, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond7597611047, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond7597611047, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1054 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1976310441053 = phi i32* [ %cond197631045, %for.end ], [ %cond197631045, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond75976110461052 = phi i32* [ %cond7597611047, %for.end ], [ %cond7597611047, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3010481051 = phi i32* [ %cond301049, %for.end ], [ %cond301049, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56968 = icmp sgt i32 %g.0.lcssa1054, 0
  br i1 %cmp56968, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1033 = phi i64 [ %indvars.iv.next1034, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0970 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0969 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond75976110461052, i64 %indvars.iv1033
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0970, 1
  %idxprom68 = sext i32 %fixg.0970 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1976310441053, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0969, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0970, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1034 = add nuw nsw i64 %indvars.iv1033, 1
  %lftr.wideiv1035 = trunc i64 %indvars.iv.next1034 to i32
  %exitcond1036 = icmp eq i32 %lftr.wideiv1035, %g.0.lcssa1054
  br i1 %exitcond1036, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond75976110461052, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %36 = bitcast i32* %cond75976110461052 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1976310441053, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %37 = bitcast i32* %cond1976310441053 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3010481051, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %38 = bitcast i32* %cond3010481051 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1976310441053, i64 %idxprom99
  %39 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1976310441053, i64 %idxprom101
  store i32 %39, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2766 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %40 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %14, 5
  %45 = sext i32 %add108 to i64
  %46 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %45, i64 4)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 -1, i64 %48
  %call109 = call noalias i8* @_Znam(i64 %49) #8
  %50 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %49) #8
  %51 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %49) #8
  %52 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %49) #8
  %53 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %49) #8
  %54 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147785 = phi i32* [ %arraydecay139, %cond.true149 ], [ %53, %cond.false151 ]
  %cond125771773783 = phi i32* [ %arraydecay117, %cond.true149 ], [ %51, %cond.false151 ]
  %cond114767769775781 = phi i32* [ %arraydecay106, %cond.true149 ], [ %50, %cond.false151 ]
  %cond136777779 = phi i32* [ %arraydecay128, %cond.true149 ], [ %52, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %54, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %55 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %56 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %57 = load %class.Vector** %arrayidx162, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %58 = load %class.Vector** %arrayidx164, align 8, !tbaa !1
  %sub165 = add nsw i32 %13, -1
  %mul166 = mul nsw i32 %sub165, %14
  %div = sdiv i32 %mul166, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %59 = load i32* %minPart, align 4, !tbaa !50
  %mul167 = mul nsw i32 %59, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %60 = load i32* %numParts, align 4, !tbaa !51
  %div168 = sdiv i32 %mul167, %60
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %61 = load i32* %maxPart, align 4, !tbaa !52
  %mul169 = mul nsw i32 %61, %div
  %div171 = sdiv i32 %mul169, %60
  %cmp174934 = icmp sgt i32 %sub165, 0
  br i1 %cmp174934, label %for.body175.lr.ph, label %for.end1205

for.body175.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i756 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast555 = ptrtoint i32* %cond125771773783 to i64
  %sub.ptr.rhs.cast615 = ptrtoint i32* %cond147785 to i64
  %sub.ptr.rhs.cast622 = ptrtoint i32* %cond158 to i64
  %sub942 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3010481051 to i64
  %sub.ptr.rhs.cast372 = ptrtoint i32* %cond114767769775781 to i64
  br label %for.body175

for.body175:                                      ; preds = %for.inc1203, %for.body175.lr.ph
  %exclChecksum.0954 = phi i32 [ 0, %for.body175.lr.ph ], [ %exclChecksum.10, %for.inc1203 ]
  %i.0941 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc1204, %for.inc1203 ]
  %j_hgroup.0940 = phi i32 [ 0, %for.body175.lr.ph ], [ %j_hgroup.3, %for.inc1203 ]
  %g_lower.0939 = phi i32 [ 0, %for.body175.lr.ph ], [ %g_lower.4, %for.inc1203 ]
  %fixg_lower.0938 = phi i32 [ 0, %for.body175.lr.ph ], [ %fixg_lower.4, %for.inc1203 ]
  %pairlistindex.0937 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistindex.3, %for.inc1203 ]
  %pairlistoffset.0936 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistoffset.2, %for.inc1203 ]
  %pairCount.0935 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairCount.3, %for.inc1203 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %371, %for.inc1203 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %372, %for.inc1203 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %373, %for.inc1203 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %374, %for.inc1203 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %375, %for.inc1203 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %376, %for.inc1203 ]
  %idxprom176 = sext i32 %i.0941 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 2
  %68 = bitcast [4 x i8]* %id to i32*
  %bf.load178 = load i32* %68, align 4
  %bf.clear179 = and i32 %bf.load178, 4194303
  %idxprom.i787 = zext i32 %bf.clear179 to i64
  %69 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i787, i32 0
  %70 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i787, i32 1
  %71 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i787, i32 2
  %72 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %70 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 0
  %73 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 1
  %74 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 2
  %75 = load double* %z, align 8, !tbaa !62
  %arrayidx184 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176
  %arrayidx186 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176
  %76 = and i32 %bf.load178, 62914560
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %if.else, label %if.then198

if.then198:                                       ; preds = %for.body175
  %bf.lshr201 = lshr i32 %bf.load178, 22
  %bf.clear202 = and i32 %bf.lshr201, 7
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.end224, label %if.then204

if.then204:                                       ; preds = %if.then198
  %sub210 = sub nsw i32 %sub165, %i.0941
  %mul211 = mul nsw i32 %bf.clear202, %sub210
  %add212 = add nsw i32 %mul211, %pairCount.0935
  %sub213 = add nsw i32 %bf.clear202, -1
  %mul214 = mul nsw i32 %sub213, %bf.clear202
  %div215.neg = sdiv i32 %mul214, -2
  %sub216 = add i32 %add212, %div215.neg
  %cmp217 = icmp sge i32 %pairCount.0935, %div168
  %cmp219 = icmp slt i32 %pairCount.0935, %div171
  %or.cond745 = and i1 %cmp217, %cmp219
  br i1 %or.cond745, label %if.end224, label %if.then220

if.then220:                                       ; preds = %if.then204
  %add222 = add nsw i32 %sub213, %i.0941
  br label %for.inc1203

if.end224:                                        ; preds = %if.then204, %if.then198
  %pairCount.1 = phi i32 [ %pairCount.0935, %if.then198 ], [ %sub216, %if.then204 ]
  %78 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool225 = icmp eq i32 %78, 0
  br i1 %tobool225, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end224
  %bf.clear229 = and i32 %bf.load178, 134217728
  %tobool230 = icmp ne i32 %bf.clear229, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end224
  %79 = phi i1 [ false, %if.end224 ], [ %tobool230, %land.rhs ]
  br i1 %tobool203, label %if.end259, label %if.then236

if.then236:                                       ; preds = %land.end
  %add241 = add nsw i32 %bf.clear202, %i.0941
  %cmp242794 = icmp slt i32 %g_lower.0939, %g.0.lcssa1054
  br i1 %cmp242794, label %land.rhs243.lr.ph, label %while.cond249.loopexit

land.rhs243.lr.ph:                                ; preds = %if.then236
  %80 = sext i32 %g_lower.0939 to i64
  br label %land.rhs243

while.cond:                                       ; preds = %land.rhs243
  %81 = trunc i64 %indvars.iv.next to i32
  %cmp242 = icmp slt i32 %81, %g.0.lcssa1054
  br i1 %cmp242, label %land.rhs243, label %while.cond249.loopexit

land.rhs243:                                      ; preds = %while.cond, %land.rhs243.lr.ph
  %indvars.iv = phi i64 [ %80, %land.rhs243.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1795 = phi i32 [ %g_lower.0939, %land.rhs243.lr.ph ], [ %inc248, %while.cond ]
  %arrayidx245 = getelementptr inbounds i32* %cond75976110461052, i64 %indvars.iv
  %82 = load i32* %arrayidx245, align 4, !tbaa !11
  %cmp246 = icmp slt i32 %82, %add241
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc248 = add nsw i32 %g_lower.1795, 1
  br i1 %cmp246, label %while.cond, label %while.cond249.loopexit

while.cond249.loopexit:                           ; preds = %land.rhs243, %while.cond, %if.then236
  %g_lower.1.lcssa = phi i32 [ %g_lower.0939, %if.then236 ], [ %inc248, %while.cond ], [ %g_lower.1795, %land.rhs243 ]
  %cmp250796 = icmp slt i32 %fixg_lower.0938, %fixg.2766
  br i1 %cmp250796, label %land.rhs251.lr.ph, label %if.end259

land.rhs251.lr.ph:                                ; preds = %while.cond249.loopexit
  %83 = sext i32 %fixg_lower.0938 to i64
  br label %land.rhs251

while.cond249:                                    ; preds = %land.rhs251
  %84 = trunc i64 %indvars.iv.next983 to i32
  %cmp250 = icmp slt i32 %84, %fixg.2766
  br i1 %cmp250, label %land.rhs251, label %if.end259

land.rhs251:                                      ; preds = %while.cond249, %land.rhs251.lr.ph
  %indvars.iv982 = phi i64 [ %83, %land.rhs251.lr.ph ], [ %indvars.iv.next983, %while.cond249 ]
  %fixg_lower.1797 = phi i32 [ %fixg_lower.0938, %land.rhs251.lr.ph ], [ %inc257, %while.cond249 ]
  %arrayidx253 = getelementptr inbounds i32* %cond1976310441053, i64 %indvars.iv982
  %85 = load i32* %arrayidx253, align 4, !tbaa !11
  %cmp254 = icmp slt i32 %85, %add241
  %indvars.iv.next983 = add nsw i64 %indvars.iv982, 1
  %inc257 = add nsw i32 %fixg_lower.1797, 1
  br i1 %cmp254, label %while.cond249, label %if.end259

if.end259:                                        ; preds = %land.rhs251, %while.cond249, %while.cond249.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0938, %land.end ], [ %fixg_lower.0938, %while.cond249.loopexit ], [ %fixg_lower.1797, %land.rhs251 ], [ %inc257, %while.cond249 ]
  %g_lower.2 = phi i32 [ %g_lower.0939, %land.end ], [ %g_lower.1.lcssa, %while.cond249.loopexit ], [ %g_lower.1.lcssa, %while.cond249 ], [ %g_lower.1.lcssa, %land.rhs251 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0940, %land.end ], [ %add241, %while.cond249.loopexit ], [ %add241, %while.cond249 ], [ %add241, %land.rhs251 ]
  %j.1799 = add nsw i32 %i.0941, 1
  %cmp262800 = icmp slt i32 %j.1799, %j_hgroup.1
  br i1 %cmp262800, label %for.body263.lr.ph, label %for.end269

for.body263.lr.ph:                                ; preds = %if.end259
  %86 = add i32 %j_hgroup.1, -1
  %87 = sub i32 %86, %i.0941
  %88 = add i32 %j_hgroup.1, -2
  %89 = sub i32 %88, %i.0941
  %90 = zext i32 %89 to i64
  %91 = add i64 %90, 1
  %end.idx = add i64 %90, 1
  %n.vec = and i64 %91, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1799
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body263.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body263.lr.ph ]
  %92 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1799, %92
  %broadcast.splatinsert1092 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1093 = shufflevector <4 x i32> %broadcast.splatinsert1092, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1094 = add <4 x i32> %broadcast.splat1093, <i32 0, i32 1, i32 2, i32 3>
  %induction1095 = add <4 x i32> %broadcast.splat1093, <i32 4, i32 5, i32 6, i32 7>
  %93 = getelementptr inbounds i32* %cond114767769775781, i64 %index
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %induction1094, <4 x i32>* %94, align 4
  %.sum1098 = or i64 %index, 4
  %95 = getelementptr i32* %cond114767769775781, i64 %.sum1098
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %induction1095, <4 x i32>* %96, align 4
  %index.next = add i64 %index, 8
  %97 = icmp eq i64 %index.next, %n.vec
  br i1 %97, label %middle.block, label %vector.body, !llvm.loop !87

middle.block:                                     ; preds = %vector.body, %for.body263.lr.ph
  %resume.val = phi i64 [ 0, %for.body263.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1090 = phi i32 [ %j.1799, %for.body263.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond261.for.end269_crit_edge, label %for.body263

for.body263:                                      ; preds = %for.body263, %middle.block
  %indvars.iv984 = phi i64 [ %indvars.iv.next985, %for.body263 ], [ %resume.val, %middle.block ]
  %j.1802 = phi i32 [ %j.1, %for.body263 ], [ %resume.val1090, %middle.block ]
  %indvars.iv.next985 = add nuw nsw i64 %indvars.iv984, 1
  %arrayidx266 = getelementptr inbounds i32* %cond114767769775781, i64 %indvars.iv984
  store i32 %j.1802, i32* %arrayidx266, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1802, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next985 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %87
  br i1 %exitcond, label %for.cond261.for.end269_crit_edge, label %for.body263, !llvm.loop !88

for.cond261.for.end269_crit_edge:                 ; preds = %for.body263, %middle.block
  %phitmp = sext i32 %87 to i64
  br label %for.end269

for.end269:                                       ; preds = %for.cond261.for.end269_crit_edge, %if.end259
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond261.for.end269_crit_edge ], [ 0, %if.end259 ]
  %add.ptr271 = getelementptr inbounds i32* %cond114767769775781, i64 %pairlistindex.1.lcssa
  %cond276 = select i1 %79, i32* %cond1976310441053, i32* %cond75976110461052
  %cond281 = select i1 %79, i32 %fixg_lower.2, i32 %g_lower.2
  %cond286 = select i1 %79, i32 %fixg.2766, i32 %g.0.lcssa1054
  %cmp287 = icmp slt i32 %cond281, %cond286
  br i1 %cmp287, label %if.then288, label %if.end370

if.then288:                                       ; preds = %for.end269
  %idxprom289 = sext i32 %cond281 to i64
  %arrayidx290 = getelementptr inbounds i32* %cond276, i64 %idxprom289
  %98 = load i32* %arrayidx290, align 4, !tbaa !11
  %idxprom291 = sext i32 %98 to i64
  %x294 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 0
  %99 = load double* %x294, align 8, !tbaa !59
  %y298 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 1
  %100 = load double* %y298, align 8, !tbaa !61
  %z302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 2
  %101 = load double* %z302, align 8, !tbaa !62
  br label %while.cond303.outer

while.cond303.outer:                              ; preds = %if.then330, %if.then288
  %p_j_z.0.ph = phi double [ %101, %if.then288 ], [ %107, %if.then330 ]
  %p_j_y.0.ph = phi double [ %100, %if.then288 ], [ %106, %if.then330 ]
  %p_j_x.0.ph = phi double [ %99, %if.then288 ], [ %105, %if.then330 ]
  %j2.0.ph = phi i32 [ %98, %if.then288 ], [ %104, %if.then330 ]
  %gli.0.ph = phi i32* [ %cond3010481051, %if.then288 ], [ %incdec.ptr, %if.then330 ]
  %g.3.ph = phi i32 [ %cond281, %if.then288 ], [ %inc306, %if.then330 ]
  %102 = sext i32 %g.3.ph to i64
  br label %while.cond303

while.cond303:                                    ; preds = %while.body305, %while.cond303.outer
  %indvars.iv990 = phi i64 [ %102, %while.cond303.outer ], [ %indvars.iv.next991, %while.body305 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond303.outer ], [ %107, %while.body305 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond303.outer ], [ %106, %while.body305 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond303.outer ], [ %105, %while.body305 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond303.outer ], [ %104, %while.body305 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond303.outer ], [ %inc306, %while.body305 ]
  %103 = trunc i64 %indvars.iv990 to i32
  %cmp304 = icmp slt i32 %103, %cond286
  br i1 %cmp304, label %while.body305, label %while.end332

while.body305:                                    ; preds = %while.cond303
  %indvars.iv.next991 = add nsw i64 %indvars.iv990, 1
  %inc306 = add nsw i32 %g.3, 1
  %arrayidx308 = getelementptr inbounds i32* %cond276, i64 %indvars.iv.next991
  %104 = load i32* %arrayidx308, align 4, !tbaa !11
  %sub309 = fsub double %73, %p_j_x.0
  %mul310 = fmul double %sub309, %sub309
  %idxprom311 = sext i32 %104 to i64
  %x314 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 0
  %105 = load double* %x314, align 8, !tbaa !59
  %sub315 = fsub double %74, %p_j_y.0
  %mul316 = fmul double %sub315, %sub315
  %add317 = fadd double %mul316, %mul310
  %y321 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 1
  %106 = load double* %y321, align 8, !tbaa !61
  %sub322 = fsub double %75, %p_j_z.0
  %mul323 = fmul double %sub322, %sub322
  %add324 = fadd double %mul323, %add317
  %z328 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 2
  %107 = load double* %z328, align 8, !tbaa !62
  %cmp329 = fcmp ugt double %add324, %3
  br i1 %cmp329, label %while.cond303, label %if.then330

if.then330:                                       ; preds = %while.body305
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond303.outer

while.end332:                                     ; preds = %while.cond303
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div742 = lshr exact i64 %sub.ptr.sub, 2
  %conv333 = trunc i64 %sub.ptr.div742 to i32
  %cmp335808 = icmp sgt i32 %conv333, 0
  br i1 %cmp335808, label %for.body336.lr.ph, label %if.end370

for.body336.lr.ph:                                ; preds = %while.end332
  %108 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %109 = lshr i64 %108, 2
  %110 = trunc i64 %109 to i32
  br label %for.body336

for.body336:                                      ; preds = %cond.end356, %for.body336.lr.ph
  %indvars.iv992 = phi i64 [ 0, %for.body336.lr.ph ], [ %indvars.iv.next993, %cond.end356 ]
  %pli.0810 = phi i32* [ %add.ptr271, %for.body336.lr.ph ], [ %add.ptr366, %cond.end356 ]
  %arrayidx339 = getelementptr inbounds i32* %cond3010481051, i64 %indvars.iv992
  %111 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom341 = sext i32 %111 to i64
  %nonbondedGroupIsAtom343 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom341, i32 2
  %112 = bitcast [4 x i8]* %nonbondedGroupIsAtom343 to i32*
  %bf.load344 = load i32* %112, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end356

cond.false349:                                    ; preds = %for.body336
  %bf.lshr354 = lshr i32 %bf.load344, 22
  %bf.clear355 = and i32 %bf.lshr354, 7
  %phitmp743 = zext i32 %bf.clear355 to i64
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false349, %for.body336
  %cond357 = phi i64 [ %phitmp743, %cond.false349 ], [ 1, %for.body336 ]
  store i32 %111, i32* %pli.0810, align 4, !tbaa !11
  %add359 = add nsw i32 %111, 1
  %arrayidx360 = getelementptr inbounds i32* %pli.0810, i64 1
  store i32 %add359, i32* %arrayidx360, align 4, !tbaa !11
  %add361 = add nsw i32 %111, 2
  %arrayidx362 = getelementptr inbounds i32* %pli.0810, i64 2
  store i32 %add361, i32* %arrayidx362, align 4, !tbaa !11
  %add363 = add nsw i32 %111, 3
  %arrayidx364 = getelementptr inbounds i32* %pli.0810, i64 3
  store i32 %add363, i32* %arrayidx364, align 4, !tbaa !11
  %add.ptr366 = getelementptr inbounds i32* %pli.0810, i64 %cond357
  %indvars.iv.next993 = add nuw nsw i64 %indvars.iv992, 1
  %lftr.wideiv994 = trunc i64 %indvars.iv.next993 to i32
  %exitcond995 = icmp eq i32 %lftr.wideiv994, %110
  br i1 %exitcond995, label %if.end370, label %for.body336

if.end370:                                        ; preds = %cond.end356, %while.end332, %for.end269
  %pli.1 = phi i32* [ %add.ptr271, %for.end269 ], [ %add.ptr271, %while.end332 ], [ %add.ptr366, %cond.end356 ]
  %sub.ptr.lhs.cast371 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub373 = sub i64 %sub.ptr.lhs.cast371, %sub.ptr.rhs.cast372
  %sub.ptr.div374739 = lshr exact i64 %sub.ptr.sub373, 2
  %conv375 = trunc i64 %sub.ptr.div374739 to i32
  %tobool376 = icmp eq i32 %conv375, 0
  br i1 %tobool376, label %if.end385, label %if.then377

if.then377:                                       ; preds = %if.end370
  %sub378 = shl i64 %sub.ptr.sub373, 30
  %sext740 = add i64 %sub378, -4294967296
  %idxprom379 = ashr exact i64 %sext740, 32
  %arrayidx380 = getelementptr inbounds i32* %cond114767769775781, i64 %idxprom379
  %113 = load i32* %arrayidx380, align 4, !tbaa !11
  %idxprom381 = ashr exact i64 %sub378, 32
  %arrayidx382 = getelementptr inbounds i32* %cond114767769775781, i64 %idxprom381
  store i32 %113, i32* %arrayidx382, align 4, !tbaa !11
  br label %if.end385

if.else:                                          ; preds = %for.body175
  %inc384 = add nsw i32 %pairlistoffset.0936, 1
  br label %if.end385

if.end385:                                        ; preds = %if.else, %if.then377, %if.end370
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then377 ], [ %pairCount.1, %if.end370 ], [ %pairCount.0935, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then377 ], [ 0, %if.end370 ], [ %inc384, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv375, %if.then377 ], [ 0, %if.end370 ], [ %pairlistindex.0937, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then377 ], [ %fixg_lower.2, %if.end370 ], [ %fixg_lower.0938, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then377 ], [ %g_lower.2, %if.end370 ], [ %g_lower.0939, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then377 ], [ %j_hgroup.1, %if.end370 ], [ %j_hgroup.0940, %if.else ]
  %114 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool386 = icmp eq i32 %114, 0
  %bf.load395.pre = load i32* %68, align 4
  br i1 %tobool386, label %land.end392, label %land.rhs387

land.rhs387:                                      ; preds = %if.end385
  %bf.clear390 = and i32 %bf.load395.pre, 67108864
  %tobool391 = icmp ne i32 %bf.clear390, 0
  br label %land.end392

land.end392:                                      ; preds = %land.rhs387, %if.end385
  %115 = phi i1 [ %tobool391, %land.rhs387 ], [ false, %if.end385 ]
  %116 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %117 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add394 = add nsw i32 %117, 1
  %bf.lshr396 = lshr i32 %bf.load395.pre, 28
  %mul397 = mul nsw i32 %bf.lshr396, %add394
  %idx.ext398 = sext i32 %mul397 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 1
  %118 = load float* %charge, align 4, !tbaa !63
  %conv400 = fpext float %118 to double
  %mul401 = fmul double %conv400, 3.320636e+02
  %mul402 = fmul double %9, %mul401
  %mul403 = fmul double %4, %mul402
  %bf.clear406 = and i32 %bf.load395.pre, 4194303
  %idxprom.i755788 = zext i32 %bf.clear406 to i64
  %119 = load i32** %atomVdwType.i756, align 8, !tbaa !64
  %arrayidx.i757 = getelementptr inbounds i32* %119, i64 %idxprom.i755788
  %120 = load i32* %arrayidx.i757, align 4, !tbaa !11
  %121 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %122 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv408 = shl i32 %120, 1
  %mul.i = and i32 %conv408, 131070
  %mul2.i = mul i32 %mul.i, %122
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp414836 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %115, label %for.cond413.preheader, label %if.else474

for.cond413.preheader:                            ; preds = %land.end392
  br i1 %cmp414836, label %for.body415.lr.ph, label %if.end553

for.body415.lr.ph:                                ; preds = %for.cond413.preheader
  %123 = sext i32 %pairlistoffset.1 to i64
  br label %for.body415

for.body415:                                      ; preds = %for.inc471, %for.body415.lr.ph
  %indvars.iv1005 = phi i64 [ %123, %for.body415.lr.ph ], [ %indvars.iv.next1006, %for.inc471 ]
  %exclChecksum.1840 = phi i32 [ %exclChecksum.0954, %for.body415.lr.ph ], [ %exclChecksum.3, %for.inc471 ]
  %pli410.0839 = phi i32* [ %cond125771773783, %for.body415.lr.ph ], [ %pli410.1, %for.inc471 ]
  %plin.0838 = phi i32* [ %cond136777779, %for.body415.lr.ph ], [ %plin.1, %for.inc471 ]
  %arrayidx417 = getelementptr inbounds i32* %cond114767769775781, i64 %indvars.iv1005
  %124 = load i32* %arrayidx417, align 4, !tbaa !11
  %idxprom419 = sext i32 %124 to i64
  %x422 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 0
  %125 = load double* %x422, align 8, !tbaa !59
  %sub424 = fsub double %73, %125
  %mul425 = fmul double %sub424, %sub424
  %y430 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 1
  %126 = load double* %y430, align 8, !tbaa !61
  %sub432 = fsub double %74, %126
  %mul433 = fmul double %sub432, %sub432
  %add434 = fadd double %mul425, %mul433
  %z439 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 2
  %127 = load double* %z439, align 8, !tbaa !62
  %sub440 = fsub double %75, %127
  %mul441 = fmul double %sub440, %sub440
  %add442 = fadd double %add434, %mul441
  %atomFixed445 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 2
  %128 = bitcast [4 x i8]* %atomFixed445 to i32*
  %bf.load446 = load i32* %128, align 4
  %bf.clear448 = and i32 %bf.load446, 67108864
  %tobool449 = icmp ne i32 %bf.clear448, 0
  %cmp450 = fcmp ugt double %add442, %2
  %or.cond746 = or i1 %tobool449, %cmp450
  br i1 %or.cond746, label %for.inc471, label %land.lhs.true451

land.lhs.true451:                                 ; preds = %for.body415
  %cmp452 = fcmp ugt double %add442, %11
  br i1 %cmp452, label %if.then456, label %land.lhs.true453

land.lhs.true453:                                 ; preds = %land.lhs.true451
  %inc454 = add nsw i32 %exclChecksum.1840, 1
  %tobool455 = icmp eq i32 %inc454, 0
  br i1 %tobool455, label %if.then456, label %for.inc471

if.then456:                                       ; preds = %land.lhs.true453, %land.lhs.true451
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true453 ], [ %exclChecksum.1840, %land.lhs.true451 ]
  %bf.clear461 = and i32 %bf.load446, 4194303
  %cmp462 = icmp slt i32 %bf.clear461, %70
  %cmp464 = icmp sgt i32 %bf.clear461, %71
  %or.cond747 = or i1 %cmp462, %cmp464
  br i1 %or.cond747, label %if.else467, label %if.then465

if.then465:                                       ; preds = %if.then456
  %incdec.ptr466 = getelementptr inbounds i32* %pli410.0839, i64 1
  store i32 %124, i32* %pli410.0839, align 4, !tbaa !11
  br label %for.inc471

if.else467:                                       ; preds = %if.then456
  %incdec.ptr468 = getelementptr inbounds i32* %plin.0838, i64 1
  store i32 %124, i32* %plin.0838, align 4, !tbaa !11
  br label %for.inc471

for.inc471:                                       ; preds = %if.else467, %if.then465, %land.lhs.true453, %for.body415
  %plin.1 = phi i32* [ %plin.0838, %for.body415 ], [ %plin.0838, %land.lhs.true453 ], [ %plin.0838, %if.then465 ], [ %incdec.ptr468, %if.else467 ]
  %pli410.1 = phi i32* [ %pli410.0839, %for.body415 ], [ %pli410.0839, %land.lhs.true453 ], [ %incdec.ptr466, %if.then465 ], [ %pli410.0839, %if.else467 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1840, %for.body415 ], [ %inc454, %land.lhs.true453 ], [ %exclChecksum.2, %if.then465 ], [ %exclChecksum.2, %if.else467 ]
  %indvars.iv.next1006 = add nsw i64 %indvars.iv1005, 1
  %lftr.wideiv1007 = trunc i64 %indvars.iv.next1006 to i32
  %exitcond1008 = icmp eq i32 %lftr.wideiv1007, %pairlistindex.2
  br i1 %exitcond1008, label %if.end553, label %for.body415

if.else474:                                       ; preds = %land.end392
  br i1 %cmp414836, label %if.then477, label %if.end553

if.then477:                                       ; preds = %if.else474
  %idxprom479 = sext i32 %pairlistoffset.1 to i64
  %arrayidx480 = getelementptr inbounds i32* %cond114767769775781, i64 %idxprom479
  %129 = load i32* %arrayidx480, align 4, !tbaa !11
  %idxprom482 = sext i32 %129 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 0
  %130 = load double* %x485, align 8, !tbaa !59
  %y490 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 1
  %131 = load double* %y490, align 8, !tbaa !61
  %z495 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 2
  %132 = load double* %z495, align 8, !tbaa !62
  br label %while.cond502.outer

while.cond502.outer:                              ; preds = %if.else542, %if.then477
  %idxprom482.pn.ph = phi i64 [ %idxprom482, %if.then477 ], [ %idxprom511, %if.else542 ]
  %p_j_z491.0.ph = phi double [ %132, %if.then477 ], [ %138, %if.else542 ]
  %p_j_y486.0.ph = phi double [ %131, %if.then477 ], [ %137, %if.else542 ]
  %p_j_x481.0.ph = phi double [ %130, %if.then477 ], [ %136, %if.else542 ]
  %j2478.0.ph = phi i32 [ %129, %if.then477 ], [ %135, %if.else542 ]
  %k475.0.ph = phi i32 [ %pairlistoffset.1, %if.then477 ], [ %inc505, %if.else542 ]
  %plin.2.ph = phi i32* [ %cond136777779, %if.then477 ], [ %incdec.ptr543, %if.else542 ]
  %pli410.2.ph = phi i32* [ %cond125771773783, %if.then477 ], [ %pli410.2.ph819, %if.else542 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0954, %if.then477 ], [ %exclChecksum.5, %if.else542 ]
  br label %while.cond502.outer812

while.cond502.outer812:                           ; preds = %if.then540, %while.cond502.outer
  %idxprom482.pn.ph813 = phi i64 [ %idxprom511, %if.then540 ], [ %idxprom482.pn.ph, %while.cond502.outer ]
  %p_j_z491.0.ph814 = phi double [ %138, %if.then540 ], [ %p_j_z491.0.ph, %while.cond502.outer ]
  %p_j_y486.0.ph815 = phi double [ %137, %if.then540 ], [ %p_j_y486.0.ph, %while.cond502.outer ]
  %p_j_x481.0.ph816 = phi double [ %136, %if.then540 ], [ %p_j_x481.0.ph, %while.cond502.outer ]
  %j2478.0.ph817 = phi i32 [ %135, %if.then540 ], [ %j2478.0.ph, %while.cond502.outer ]
  %k475.0.ph818 = phi i32 [ %inc505, %if.then540 ], [ %k475.0.ph, %while.cond502.outer ]
  %pli410.2.ph819 = phi i32* [ %incdec.ptr541, %if.then540 ], [ %pli410.2.ph, %while.cond502.outer ]
  %exclChecksum.4.ph820 = phi i32 [ %exclChecksum.5, %if.then540 ], [ %exclChecksum.4.ph, %while.cond502.outer ]
  br label %while.cond502.outer821

while.cond502.outer821:                           ; preds = %land.lhs.true533, %while.cond502.outer812
  %idxprom482.pn.ph822 = phi i64 [ %idxprom511, %land.lhs.true533 ], [ %idxprom482.pn.ph813, %while.cond502.outer812 ]
  %p_j_z491.0.ph823 = phi double [ %138, %land.lhs.true533 ], [ %p_j_z491.0.ph814, %while.cond502.outer812 ]
  %p_j_y486.0.ph824 = phi double [ %137, %land.lhs.true533 ], [ %p_j_y486.0.ph815, %while.cond502.outer812 ]
  %p_j_x481.0.ph825 = phi double [ %136, %land.lhs.true533 ], [ %p_j_x481.0.ph816, %while.cond502.outer812 ]
  %j2478.0.ph826 = phi i32 [ %135, %land.lhs.true533 ], [ %j2478.0.ph817, %while.cond502.outer812 ]
  %k475.0.ph827 = phi i32 [ %inc505, %land.lhs.true533 ], [ %k475.0.ph818, %while.cond502.outer812 ]
  %exclChecksum.4.ph828 = phi i32 [ %inc534, %land.lhs.true533 ], [ %exclChecksum.4.ph820, %while.cond502.outer812 ]
  %133 = sext i32 %k475.0.ph827 to i64
  br label %while.cond502

while.cond502:                                    ; preds = %while.body504, %while.cond502.outer821
  %indvars.iv1001 = phi i64 [ %133, %while.cond502.outer821 ], [ %indvars.iv.next1002, %while.body504 ]
  %idxprom482.pn = phi i64 [ %idxprom482.pn.ph822, %while.cond502.outer821 ], [ %idxprom511, %while.body504 ]
  %p_j_z491.0 = phi double [ %p_j_z491.0.ph823, %while.cond502.outer821 ], [ %138, %while.body504 ]
  %p_j_y486.0 = phi double [ %p_j_y486.0.ph824, %while.cond502.outer821 ], [ %137, %while.body504 ]
  %p_j_x481.0 = phi double [ %p_j_x481.0.ph825, %while.cond502.outer821 ], [ %136, %while.body504 ]
  %j2478.0 = phi i32 [ %j2478.0.ph826, %while.cond502.outer821 ], [ %135, %while.body504 ]
  %k475.0 = phi i32 [ %k475.0.ph827, %while.cond502.outer821 ], [ %inc505, %while.body504 ]
  %134 = trunc i64 %indvars.iv1001 to i32
  %cmp503 = icmp slt i32 %134, %pairlistindex.2
  br i1 %cmp503, label %while.body504, label %if.end553

while.body504:                                    ; preds = %while.cond502
  %atom2496.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482.pn, i32 2
  %atom2496.0.in.in = bitcast [4 x i8]* %atom2496.0.in.in.in to i32*
  %atom2496.0.in = load i32* %atom2496.0.in.in, align 4
  %atom2496.0 = and i32 %atom2496.0.in, 4194303
  %indvars.iv.next1002 = add nsw i64 %indvars.iv1001, 1
  %inc505 = add nsw i32 %k475.0, 1
  %arrayidx507 = getelementptr inbounds i32* %cond114767769775781, i64 %indvars.iv.next1002
  %135 = load i32* %arrayidx507, align 4, !tbaa !11
  %sub509 = fsub double %73, %p_j_x481.0
  %mul510 = fmul double %sub509, %sub509
  %idxprom511 = sext i32 %135 to i64
  %x514 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 0
  %136 = load double* %x514, align 8, !tbaa !59
  %sub516 = fsub double %74, %p_j_y486.0
  %mul517 = fmul double %sub516, %sub516
  %add518 = fadd double %mul517, %mul510
  %y522 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 1
  %137 = load double* %y522, align 8, !tbaa !61
  %sub523 = fsub double %75, %p_j_z491.0
  %mul524 = fmul double %sub523, %sub523
  %add525 = fadd double %mul524, %add518
  %z529 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 2
  %138 = load double* %z529, align 8, !tbaa !62
  %cmp530 = fcmp ugt double %add525, %2
  br i1 %cmp530, label %while.cond502, label %land.lhs.true531

land.lhs.true531:                                 ; preds = %while.body504
  %cmp532 = fcmp ugt double %add525, %11
  br i1 %cmp532, label %if.then536, label %land.lhs.true533

land.lhs.true533:                                 ; preds = %land.lhs.true531
  %inc534 = add nsw i32 %exclChecksum.4.ph828, 1
  %tobool535 = icmp eq i32 %inc534, 0
  br i1 %tobool535, label %if.then536, label %while.cond502.outer821

if.then536:                                       ; preds = %land.lhs.true533, %land.lhs.true531
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true533 ], [ %exclChecksum.4.ph828, %land.lhs.true531 ]
  %cmp537 = icmp slt i32 %atom2496.0, %70
  %cmp539 = icmp sgt i32 %atom2496.0, %71
  %or.cond748 = or i1 %cmp537, %cmp539
  br i1 %or.cond748, label %if.else542, label %if.then540

if.then540:                                       ; preds = %if.then536
  %incdec.ptr541 = getelementptr inbounds i32* %pli410.2.ph819, i64 1
  store i32 %j2478.0, i32* %pli410.2.ph819, align 4, !tbaa !11
  br label %while.cond502.outer812

if.else542:                                       ; preds = %if.then536
  %incdec.ptr543 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2478.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond502.outer

if.end553:                                        ; preds = %while.cond502, %if.else474, %for.inc471, %for.cond413.preheader
  %plin.4 = phi i32* [ %cond136777779, %if.else474 ], [ %cond136777779, %for.cond413.preheader ], [ %plin.2.ph, %while.cond502 ], [ %plin.1, %for.inc471 ]
  %pli410.4 = phi i32* [ %cond125771773783, %if.else474 ], [ %cond125771773783, %for.cond413.preheader ], [ %pli410.2.ph819, %while.cond502 ], [ %pli410.1, %for.inc471 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0954, %if.else474 ], [ %exclChecksum.0954, %for.cond413.preheader ], [ %exclChecksum.4.ph828, %while.cond502 ], [ %exclChecksum.3, %for.inc471 ]
  %sub.ptr.lhs.cast554 = ptrtoint i32* %pli410.4 to i64
  %sub.ptr.sub556 = sub i64 %sub.ptr.lhs.cast554, %sub.ptr.rhs.cast555
  %sub.ptr.div557686 = lshr exact i64 %sub.ptr.sub556, 2
  %conv558 = trunc i64 %sub.ptr.div557686 to i32
  %tobool559 = icmp eq i32 %conv558, 0
  br i1 %tobool559, label %for.cond568.preheader, label %if.then560

if.then560:                                       ; preds = %if.end553
  %sub561 = shl i64 %sub.ptr.sub556, 30
  %sext737 = add i64 %sub561, -4294967296
  %idxprom562 = ashr exact i64 %sext737, 32
  %arrayidx563 = getelementptr inbounds i32* %cond125771773783, i64 %idxprom562
  %139 = load i32* %arrayidx563, align 4, !tbaa !11
  %idxprom564 = ashr exact i64 %sub561, 32
  %arrayidx565 = getelementptr inbounds i32* %cond125771773783, i64 %idxprom564
  store i32 %139, i32* %arrayidx565, align 4, !tbaa !11
  br label %for.cond568.preheader

for.cond568.preheader:                            ; preds = %if.then560, %if.end553
  %cmp569844 = icmp ult i32* %cond136777779, %plin.4
  br i1 %cmp569844, label %land.lhs.true570, label %for.cond577.loopexit

land.lhs.true570:                                 ; preds = %for.body572, %for.cond568.preheader
  %exclChecksum.8847 = phi i32 [ %dec, %for.body572 ], [ %exclChecksum.7, %for.cond568.preheader ]
  %plix.0846 = phi i32* [ %incdec.ptr573, %for.body572 ], [ %cond147785, %for.cond568.preheader ]
  %pln.0845 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %cond136777779, %for.cond568.preheader ]
  %140 = load i32* %pln.0845, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %140, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond577.loopexit

for.body572:                                      ; preds = %land.lhs.true570
  %incdec.ptr573 = getelementptr inbounds i32* %plix.0846, i64 1
  store i32 %140, i32* %plix.0846, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8847, -1
  %incdec.ptr575 = getelementptr inbounds i32* %pln.0845, i64 1
  %cmp569 = icmp ult i32* %incdec.ptr575, %plin.4
  br i1 %cmp569, label %land.lhs.true570, label %for.cond577.loopexit

for.cond577.loopexit:                             ; preds = %for.body572, %land.lhs.true570, %for.cond568.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond568.preheader ], [ %dec, %for.body572 ], [ %exclChecksum.8847, %land.lhs.true570 ]
  %plix.0.lcssa = phi i32* [ %cond147785, %for.cond568.preheader ], [ %incdec.ptr573, %for.body572 ], [ %plix.0846, %land.lhs.true570 ]
  %pln.0.lcssa = phi i32* [ %cond136777779, %for.cond568.preheader ], [ %incdec.ptr575, %for.body572 ], [ %pln.0845, %land.lhs.true570 ]
  %cmp578851 = icmp sgt i32 %conv558, 0
  br i1 %cmp578851, label %land.lhs.true579, label %for.cond591.loopexit

land.lhs.true579:                                 ; preds = %for.body583, %for.cond577.loopexit
  %indvars.iv1015 = phi i64 [ %indvars.iv.next1016, %for.body583 ], [ 0, %for.cond577.loopexit ]
  %exclChecksum.9854 = phi i32 [ %dec587, %for.body583 ], [ %exclChecksum.8.lcssa, %for.cond577.loopexit ]
  %plix.1853 = phi i32* [ %incdec.ptr586, %for.body583 ], [ %plix.0.lcssa, %for.cond577.loopexit ]
  %k567.0852 = phi i32 [ %inc589, %for.body583 ], [ 0, %for.cond577.loopexit ]
  %arrayidx581 = getelementptr inbounds i32* %cond125771773783, i64 %indvars.iv1015
  %141 = load i32* %arrayidx581, align 4, !tbaa !11
  %cmp582 = icmp slt i32 %141, %j_hgroup.2
  br i1 %cmp582, label %for.body583, label %for.cond591.loopexit

for.body583:                                      ; preds = %land.lhs.true579
  %incdec.ptr586 = getelementptr inbounds i32* %plix.1853, i64 1
  store i32 %141, i32* %plix.1853, align 4, !tbaa !11
  %dec587 = add nsw i32 %exclChecksum.9854, -1
  %indvars.iv.next1016 = add nuw nsw i64 %indvars.iv1015, 1
  %inc589 = add nsw i32 %k567.0852, 1
  %142 = trunc i64 %indvars.iv.next1016 to i32
  %cmp578 = icmp slt i32 %142, %conv558
  br i1 %cmp578, label %land.lhs.true579, label %for.cond591.loopexit

for.cond591.loopexit:                             ; preds = %for.body583, %land.lhs.true579, %for.cond577.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond577.loopexit ], [ %dec587, %for.body583 ], [ %exclChecksum.9854, %land.lhs.true579 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond577.loopexit ], [ %incdec.ptr586, %for.body583 ], [ %plix.1853, %land.lhs.true579 ]
  %k567.0.lcssa = phi i32 [ 0, %for.cond577.loopexit ], [ %inc589, %for.body583 ], [ %k567.0852, %land.lhs.true579 ]
  %cmp592858 = icmp slt i32 %k567.0.lcssa, %conv558
  br i1 %cmp592858, label %for.body593.lr.ph, label %for.end613

for.body593.lr.ph:                                ; preds = %for.cond591.loopexit
  %143 = sext i32 %k567.0.lcssa to i64
  %144 = sub i64 %sub.ptr.lhs.cast554, %sub.ptr.rhs.cast555
  %145 = lshr i64 %144, 2
  %146 = trunc i64 %145 to i32
  br label %for.body593

for.body593:                                      ; preds = %for.inc611, %for.body593.lr.ph
  %indvars.iv1017 = phi i64 [ %143, %for.body593.lr.ph ], [ %indvars.iv.next1018, %for.inc611 ]
  %plin.5862 = phi i32* [ %plin.4, %for.body593.lr.ph ], [ %plin.6, %for.inc611 ]
  %plix.2861 = phi i32* [ %plix.1.lcssa, %for.body593.lr.ph ], [ %plix.3, %for.inc611 ]
  %plim.0860 = phi i32* [ %cond158, %for.body593.lr.ph ], [ %plim.1, %for.inc611 ]
  %arrayidx596 = getelementptr inbounds i32* %cond125771773783, i64 %indvars.iv1017
  %147 = load i32* %arrayidx596, align 4, !tbaa !11
  %idxprom598 = sext i32 %147 to i64
  %id600 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom598, i32 2
  %148 = bitcast [4 x i8]* %id600 to i32*
  %bf.load601 = load i32* %148, align 4
  %bf.clear602 = and i32 %bf.load601, 4194303
  %idxprom603736 = zext i32 %bf.clear602 to i64
  %add.ptr.sum = sub i64 %idxprom603736, %idx.ext
  %arrayidx604 = getelementptr inbounds i8* %72, i64 %add.ptr.sum
  %149 = load i8* %arrayidx604, align 1, !tbaa !68
  %conv605 = sext i8 %149 to i32
  switch i32 %conv605, label %for.inc611 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb607
    i32 2, label %sw.bb609
  ]

sw.bb:                                            ; preds = %for.body593
  %incdec.ptr606 = getelementptr inbounds i32* %plin.5862, i64 1
  store i32 %147, i32* %plin.5862, align 4, !tbaa !11
  br label %for.inc611

sw.bb607:                                         ; preds = %for.body593
  %incdec.ptr608 = getelementptr inbounds i32* %plix.2861, i64 1
  store i32 %147, i32* %plix.2861, align 4, !tbaa !11
  br label %for.inc611

sw.bb609:                                         ; preds = %for.body593
  %incdec.ptr610 = getelementptr inbounds i32* %plim.0860, i64 1
  store i32 %147, i32* %plim.0860, align 4, !tbaa !11
  br label %for.inc611

for.inc611:                                       ; preds = %sw.bb609, %sw.bb607, %sw.bb, %for.body593
  %plim.1 = phi i32* [ %plim.0860, %for.body593 ], [ %incdec.ptr610, %sw.bb609 ], [ %plim.0860, %sw.bb607 ], [ %plim.0860, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2861, %for.body593 ], [ %plix.2861, %sw.bb609 ], [ %incdec.ptr608, %sw.bb607 ], [ %plix.2861, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5862, %for.body593 ], [ %plin.5862, %sw.bb609 ], [ %plin.5862, %sw.bb607 ], [ %incdec.ptr606, %sw.bb ]
  %indvars.iv.next1018 = add nsw i64 %indvars.iv1017, 1
  %lftr.wideiv1019 = trunc i64 %indvars.iv.next1018 to i32
  %exitcond1020 = icmp eq i32 %lftr.wideiv1019, %146
  br i1 %exitcond1020, label %for.end613, label %for.body593

for.end613:                                       ; preds = %for.inc611, %for.cond591.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond591.loopexit ], [ %plin.6, %for.inc611 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond591.loopexit ], [ %plix.3, %for.inc611 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond591.loopexit ], [ %plim.1, %for.inc611 ]
  %sub.ptr.lhs.cast614 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub616 = sub i64 %sub.ptr.lhs.cast614, %sub.ptr.rhs.cast615
  %sub.ptr.div617 = ashr exact i64 %sub.ptr.sub616, 2
  %conv618687 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast621 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub623 = sub i64 %sub.ptr.lhs.cast621, %sub.ptr.rhs.cast622
  %sub.ptr.div624 = ashr exact i64 %sub.ptr.sub623, 2
  %add619 = add i64 %sub.ptr.div624, %conv618687
  %add626 = add i64 %add619, %sub.ptr.div617
  %conv627 = trunc i64 %add626 to i32
  %sub.ptr.lhs.cast628 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast629 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub630 = sub i64 %sub.ptr.lhs.cast628, %sub.ptr.rhs.cast629
  %sub.ptr.div631689 = lshr exact i64 %sub.ptr.sub630, 2
  %conv632 = trunc i64 %sub.ptr.div631689 to i32
  %cmp634866 = icmp sgt i32 %conv632, 0
  br i1 %cmp634866, label %for.body635.lr.ph, label %for.end820

for.body635.lr.ph:                                ; preds = %for.end613
  %x751 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y760 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z767 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x796 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y806 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z814 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body635

for.body635:                                      ; preds = %for.body635.for.body635_crit_edge, %for.body635.lr.ph
  %150 = phi i32* [ %119, %for.body635.lr.ph ], [ %.pre, %for.body635.for.body635_crit_edge ]
  %indvars.iv1021 = phi i64 [ 0, %for.body635.lr.ph ], [ %indvars.iv.next1022, %for.body635.for.body635_crit_edge ]
  %151 = phi <2 x double> [ %62, %for.body635.lr.ph ], [ %183, %for.body635.for.body635_crit_edge ]
  %152 = phi <2 x double> [ %63, %for.body635.lr.ph ], [ %190, %for.body635.for.body635_crit_edge ]
  %153 = phi <2 x double> [ %64, %for.body635.lr.ph ], [ %207, %for.body635.for.body635_crit_edge ]
  %154 = phi <2 x double> [ %65, %for.body635.lr.ph ], [ %211, %for.body635.for.body635_crit_edge ]
  %155 = phi <2 x double> [ %66, %for.body635.lr.ph ], [ %216, %for.body635.for.body635_crit_edge ]
  %156 = phi <2 x double> [ %67, %for.body635.lr.ph ], [ %227, %for.body635.for.body635_crit_edge ]
  %arrayidx638 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv1021
  %157 = load i32* %arrayidx638, align 4, !tbaa !11
  %idx.ext639 = sext i32 %157 to i64
  %x642 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 0
  %158 = load double* %x642, align 8, !tbaa !59
  %sub643 = fsub double %73, %158
  %mul645 = fmul double %sub643, %sub643
  %y647 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 1
  %159 = load double* %y647, align 8, !tbaa !61
  %sub648 = fsub double %74, %159
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %mul645, %mul649
  %z652 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 2
  %160 = load double* %z652, align 8, !tbaa !62
  %sub653 = fsub double %75, %160
  %mul654 = fmul double %sub653, %sub653
  %add655 = fadd double %add650, %mul654
  %conv656 = fptrunc double %add655 to float
  %161 = bitcast float %conv656 to i32
  %shr = ashr i32 %161, 17
  %add658 = add nsw i32 %shr, %mul
  %id659 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 2
  %162 = bitcast [4 x i8]* %id659 to i32*
  %bf.load660 = load i32* %162, align 4
  %bf.clear661 = and i32 %bf.load660, 4194303
  %idxprom.i751791 = zext i32 %bf.clear661 to i64
  %arrayidx.i753 = getelementptr inbounds i32* %150, i64 %idxprom.i751791
  %163 = load i32* %arrayidx.i753, align 4, !tbaa !11
  %conv.i754 = zext i32 %163 to i64
  %conv663 = shl nuw nsw i64 %conv.i754, 1
  %mul664 = and i64 %conv663, 131070
  %mul667 = shl nsw i32 %add658, 4
  %idx.ext668 = sext i32 %mul667 to i64
  %and = and i32 %161, -131072
  %charge688 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 1
  %164 = load float* %charge688, align 4, !tbaa !63
  %conv689 = fpext float %164 to double
  %mul690 = fmul double %mul403, %conv689
  %165 = bitcast i32 %and to float
  %conv692 = fpext float %165 to double
  %sub693 = fsub double %add655, %conv692
  %bf.lshr696 = lshr i32 %bf.load660, 28
  %idxprom697 = zext i32 %bf.lshr696 to i64
  %add.ptr399.sum723 = add i64 %idxprom697, %idx.ext398
  %arrayidx698 = getelementptr inbounds double* %116, i64 %add.ptr399.sum723
  %166 = load double* %arrayidx698, align 8, !tbaa !17
  %add.ptr.i.sum792 = add i64 %mul664, %idx.ext.i
  %A700 = getelementptr inbounds %"struct.LJTable::TableEntry"* %121, i64 %add.ptr.i.sum792, i32 0
  %167 = load double* %A700, align 8, !tbaa !69
  %mul701 = fmul double %9, %167
  %B703 = getelementptr inbounds %"struct.LJTable::TableEntry"* %121, i64 %add.ptr.i.sum792, i32 1
  %168 = load double* %B703, align 8, !tbaa !71
  %mul704 = fmul double %9, %168
  %add.ptr669.sum724 = or i64 %idx.ext668, 3
  %arrayidx708 = getelementptr inbounds double* %7, i64 %add.ptr669.sum724
  %169 = load double* %arrayidx708, align 8, !tbaa !17
  %mul709 = fmul double %mul701, %169
  %add.ptr674.sum725 = or i64 %idx.ext668, 7
  %arrayidx710 = getelementptr inbounds double* %7, i64 %add.ptr674.sum725
  %170 = load double* %arrayidx710, align 8, !tbaa !17
  %mul711 = fmul double %mul704, %170
  %sub712 = fsub double %mul709, %mul711
  %add.ptr669.sum726 = or i64 %idx.ext668, 2
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr669.sum726
  %171 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul701, %171
  %add.ptr674.sum727 = or i64 %idx.ext668, 6
  %arrayidx715 = getelementptr inbounds double* %7, i64 %add.ptr674.sum727
  %172 = load double* %arrayidx715, align 8, !tbaa !17
  %mul716 = fmul double %mul704, %172
  %sub717 = fsub double %mul714, %mul716
  %add.ptr669.sum728 = or i64 %idx.ext668, 1
  %arrayidx718 = getelementptr inbounds double* %7, i64 %add.ptr669.sum728
  %173 = load double* %arrayidx718, align 8, !tbaa !17
  %mul719 = fmul double %mul701, %173
  %add.ptr674.sum729 = or i64 %idx.ext668, 5
  %arrayidx720 = getelementptr inbounds double* %7, i64 %add.ptr674.sum729
  %174 = load double* %arrayidx720, align 8, !tbaa !17
  %mul721 = fmul double %mul704, %174
  %sub722 = fsub double %mul719, %mul721
  %add.ptr679.sum730 = or i64 %idx.ext668, 11
  %arrayidx724 = getelementptr inbounds double* %7, i64 %add.ptr679.sum730
  %175 = load double* %arrayidx724, align 8, !tbaa !17
  %mul725 = fmul double %mul690, %175
  %add.ptr679.sum731 = or i64 %idx.ext668, 10
  %arrayidx726 = getelementptr inbounds double* %7, i64 %add.ptr679.sum731
  %176 = load double* %arrayidx726, align 8, !tbaa !17
  %mul727 = fmul double %mul690, %176
  %add.ptr679.sum732 = or i64 %idx.ext668, 9
  %arrayidx728 = getelementptr inbounds double* %7, i64 %add.ptr679.sum732
  %177 = load double* %arrayidx728, align 8, !tbaa !17
  %mul729 = fmul double %mul690, %177
  %add730 = fadd double %sub712, %mul725
  %add731 = fadd double %sub717, %mul727
  %add732 = fadd double %sub722, %mul729
  %mul734 = fmul double %sub693, 3.000000e+00
  %mul735 = fmul double %mul734, %add730
  %mul736 = fmul double %add731, 2.000000e+00
  %add737 = fadd double %mul735, %mul736
  %mul738 = fmul double %sub693, %add737
  %add739 = fadd double %add732, %mul738
  %mul740 = fmul double %166, -2.000000e+00
  %mul741 = fmul double %mul740, %add739
  %mul744 = fmul double %sub643, %mul741
  %178 = insertelement <2 x double> undef, double %sub643, i32 0
  %179 = insertelement <2 x double> %178, double %sub648, i32 1
  %180 = insertelement <2 x double> undef, double %mul744, i32 0
  %181 = insertelement <2 x double> %180, double %mul744, i32 1
  %182 = fmul <2 x double> %179, %181
  %183 = fadd <2 x double> %151, %182
  %184 = load double* %x751, align 8, !tbaa !72
  %add752 = fadd double %184, %mul744
  store double %add752, double* %x751, align 8, !tbaa !72
  %x753 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext639, i32 0
  %mul755 = fmul double %sub648, %mul741
  %185 = insertelement <2 x double> undef, double %sub648, i32 0
  %186 = insertelement <2 x double> %185, double %sub653, i32 1
  %187 = insertelement <2 x double> undef, double %mul755, i32 0
  %188 = insertelement <2 x double> %187, double %mul755, i32 1
  %189 = fmul <2 x double> %186, %188
  %190 = fadd <2 x double> %152, %189
  %191 = load double* %y760, align 8, !tbaa !73
  %add761 = fadd double %191, %mul755
  store double %add761, double* %y760, align 8, !tbaa !73
  %192 = bitcast double* %x753 to <2 x double>*
  %193 = load <2 x double>* %192, align 8, !tbaa !17
  %194 = insertelement <2 x double> %180, double %mul755, i32 1
  %195 = fsub <2 x double> %193, %194
  %196 = bitcast double* %x753 to <2 x double>*
  store <2 x double> %195, <2 x double>* %196, align 8, !tbaa !17
  %mul764 = fmul double %sub653, %mul741
  %197 = load double* %z767, align 8, !tbaa !74
  %add768 = fadd double %197, %mul764
  store double %add768, double* %z767, align 8, !tbaa !74
  %z769 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext639, i32 2
  %198 = load double* %z769, align 8, !tbaa !74
  %sub770 = fsub double %198, %mul764
  store double %sub770, double* %z769, align 8, !tbaa !74
  %add.ptr685.sum733 = or i64 %idx.ext668, 13
  %arrayidx771 = getelementptr inbounds double* %7, i64 %add.ptr685.sum733
  %199 = load double* %arrayidx771, align 8, !tbaa !17
  %add.ptr685.sum734 = or i64 %idx.ext668, 14
  %arrayidx772 = getelementptr inbounds double* %7, i64 %add.ptr685.sum734
  %200 = load double* %arrayidx772, align 8, !tbaa !17
  %add.ptr685.sum735 = or i64 %idx.ext668, 15
  %arrayidx773 = getelementptr inbounds double* %7, i64 %add.ptr685.sum735
  %201 = load double* %arrayidx773, align 8, !tbaa !17
  %mul774 = fmul double %mul690, %201
  %mul775 = fmul double %mul690, %200
  %mul776 = fmul double %mul690, %199
  %mul779 = fmul double %mul734, %mul774
  %mul780 = fmul double %mul775, 2.000000e+00
  %add781 = fadd double %mul780, %mul779
  %mul782 = fmul double %sub693, %add781
  %add783 = fadd double %mul776, %mul782
  %mul784 = fmul double %add783, -2.000000e+00
  %mul785 = fmul double %166, %mul784
  %mul789 = fmul double %sub643, %mul785
  %202 = insertelement <2 x double> undef, double %sub653, i32 0
  %203 = insertelement <2 x double> %202, double %sub643, i32 1
  %204 = insertelement <2 x double> undef, double %mul764, i32 0
  %205 = insertelement <2 x double> %204, double %mul789, i32 1
  %206 = fmul <2 x double> %203, %205
  %207 = fadd <2 x double> %153, %206
  %208 = insertelement <2 x double> undef, double %mul789, i32 0
  %209 = insertelement <2 x double> %208, double %mul789, i32 1
  %210 = fmul <2 x double> %186, %209
  %211 = fadd <2 x double> %154, %210
  %212 = load double* %x796, align 8, !tbaa !72
  %add797 = fadd double %212, %mul789
  store double %add797, double* %x796, align 8, !tbaa !72
  %x798 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext639, i32 0
  %mul801 = fmul double %sub648, %mul785
  %213 = insertelement <2 x double> %202, double %sub648, i32 1
  %214 = insertelement <2 x double> %180, double %mul801, i32 1
  %215 = fmul <2 x double> %213, %214
  %216 = fadd <2 x double> %155, %215
  %217 = load double* %y806, align 8, !tbaa !73
  %add807 = fadd double %217, %mul801
  store double %add807, double* %y806, align 8, !tbaa !73
  %218 = bitcast double* %x798 to <2 x double>*
  %219 = load <2 x double>* %218, align 8, !tbaa !17
  %220 = insertelement <2 x double> %208, double %mul801, i32 1
  %221 = fsub <2 x double> %219, %220
  %222 = bitcast double* %x798 to <2 x double>*
  store <2 x double> %221, <2 x double>* %222, align 8, !tbaa !17
  %mul811 = fmul double %sub653, %mul785
  %223 = insertelement <2 x double> %202, double %sub653, i32 1
  %224 = insertelement <2 x double> undef, double %mul801, i32 0
  %225 = insertelement <2 x double> %224, double %mul811, i32 1
  %226 = fmul <2 x double> %223, %225
  %227 = fadd <2 x double> %156, %226
  %228 = load double* %z814, align 8, !tbaa !74
  %add815 = fadd double %228, %mul811
  store double %add815, double* %z814, align 8, !tbaa !74
  %z816 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext639, i32 2
  %229 = load double* %z816, align 8, !tbaa !74
  %sub817 = fsub double %229, %mul811
  store double %sub817, double* %z816, align 8, !tbaa !74
  %indvars.iv.next1022 = add nuw nsw i64 %indvars.iv1021, 1
  %lftr.wideiv1023 = trunc i64 %indvars.iv.next1022 to i32
  %exitcond1024 = icmp eq i32 %lftr.wideiv1023, %conv632
  br i1 %exitcond1024, label %for.end820, label %for.body635.for.body635_crit_edge

for.body635.for.body635_crit_edge:                ; preds = %for.body635
  %.pre = load i32** %atomVdwType.i756, align 8, !tbaa !64
  br label %for.body635

for.end820:                                       ; preds = %for.body635, %for.end613
  %230 = phi <2 x double> [ %62, %for.end613 ], [ %183, %for.body635 ]
  %231 = phi <2 x double> [ %63, %for.end613 ], [ %190, %for.body635 ]
  %232 = phi <2 x double> [ %64, %for.end613 ], [ %207, %for.body635 ]
  %233 = phi <2 x double> [ %65, %for.end613 ], [ %211, %for.body635 ]
  %234 = phi <2 x double> [ %66, %for.end613 ], [ %216, %for.body635 ]
  %235 = phi <2 x double> [ %67, %for.end613 ], [ %227, %for.body635 ]
  %conv825 = trunc i64 %sub.ptr.div624 to i32
  %cmp827892 = icmp sgt i32 %conv825, 0
  br i1 %cmp827892, label %for.body828.lr.ph, label %for.end1071

for.body828.lr.ph:                                ; preds = %for.end820
  %x979 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y989 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z997 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x1047 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1057 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1065 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body828

for.body828:                                      ; preds = %for.body828, %for.body828.lr.ph
  %indvars.iv1025 = phi i64 [ 0, %for.body828.lr.ph ], [ %indvars.iv.next1026, %for.body828 ]
  %236 = phi <2 x double> [ %230, %for.body828.lr.ph ], [ %269, %for.body828 ]
  %237 = phi <2 x double> [ %231, %for.body828.lr.ph ], [ %276, %for.body828 ]
  %238 = phi <2 x double> [ %232, %for.body828.lr.ph ], [ %296, %for.body828 ]
  %239 = phi <2 x double> [ %233, %for.body828.lr.ph ], [ %300, %for.body828 ]
  %240 = phi <2 x double> [ %234, %for.body828.lr.ph ], [ %305, %for.body828 ]
  %241 = phi <2 x double> [ %235, %for.body828.lr.ph ], [ %316, %for.body828 ]
  %arrayidx831 = getelementptr inbounds i32* %cond158, i64 %indvars.iv1025
  %242 = load i32* %arrayidx831, align 4, !tbaa !11
  %idx.ext833 = sext i32 %242 to i64
  %x837 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext833, i32 0, i32 0
  %243 = load double* %x837, align 8, !tbaa !59
  %sub838 = fsub double %73, %243
  %mul840 = fmul double %sub838, %sub838
  %y843 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext833, i32 0, i32 1
  %244 = load double* %y843, align 8, !tbaa !61
  %sub844 = fsub double %74, %244
  %mul845 = fmul double %sub844, %sub844
  %add846 = fadd double %mul840, %mul845
  %z849 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext833, i32 0, i32 2
  %245 = load double* %z849, align 8, !tbaa !62
  %sub850 = fsub double %75, %245
  %mul851 = fmul double %sub850, %sub850
  %add852 = fadd double %add846, %mul851
  %conv854 = fptrunc double %add852 to float
  %246 = bitcast float %conv854 to i32
  %shr858 = ashr i32 %246, 17
  %add859 = add nsw i32 %shr858, %mul
  %id861 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext833, i32 2
  %247 = bitcast [4 x i8]* %id861 to i32*
  %bf.load862 = load i32* %247, align 4
  %bf.clear863 = and i32 %bf.load862, 4194303
  %idxprom.i749789 = zext i32 %bf.clear863 to i64
  %248 = load i32** %atomVdwType.i756, align 8, !tbaa !64
  %arrayidx.i750 = getelementptr inbounds i32* %248, i64 %idxprom.i749789
  %249 = load i32* %arrayidx.i750, align 4, !tbaa !11
  %conv.i = zext i32 %249 to i64
  %conv865 = shl nuw nsw i64 %conv.i, 1
  %mul866 = and i64 %conv865, 131070
  %add.ptr868.sum699 = or i64 %mul866, 1
  %mul871 = shl nsw i32 %add859, 4
  %idx.ext872 = sext i32 %mul871 to i64
  %and899 = and i32 %246, -131072
  %charge901 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext833, i32 1
  %250 = load float* %charge901, align 4, !tbaa !63
  %conv902 = fpext float %250 to double
  %mul903 = fmul double %mul403, %conv902
  %251 = bitcast i32 %and899 to float
  %conv906 = fpext float %251 to double
  %sub907 = fsub double %add852, %conv906
  %bf.lshr911 = lshr i32 %bf.load862, 28
  %idxprom912 = zext i32 %bf.lshr911 to i64
  %add.ptr399.sum703 = add i64 %idxprom912, %idx.ext398
  %arrayidx913 = getelementptr inbounds double* %116, i64 %add.ptr399.sum703
  %252 = load double* %arrayidx913, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr868.sum699, %idx.ext.i
  %A915 = getelementptr inbounds %"struct.LJTable::TableEntry"* %121, i64 %add.ptr.i.sum, i32 0
  %253 = load double* %A915, align 8, !tbaa !69
  %mul916 = fmul double %9, %253
  %B918 = getelementptr inbounds %"struct.LJTable::TableEntry"* %121, i64 %add.ptr.i.sum, i32 1
  %254 = load double* %B918, align 8, !tbaa !71
  %mul919 = fmul double %9, %254
  %add.ptr873.sum704 = or i64 %idx.ext872, 3
  %arrayidx925 = getelementptr inbounds double* %7, i64 %add.ptr873.sum704
  %255 = load double* %arrayidx925, align 8, !tbaa !17
  %mul926 = fmul double %mul916, %255
  %add.ptr880.sum705 = or i64 %idx.ext872, 7
  %arrayidx927 = getelementptr inbounds double* %7, i64 %add.ptr880.sum705
  %256 = load double* %arrayidx927, align 8, !tbaa !17
  %mul928 = fmul double %mul919, %256
  %sub929 = fsub double %mul926, %mul928
  %add.ptr873.sum706 = or i64 %idx.ext872, 2
  %arrayidx931 = getelementptr inbounds double* %7, i64 %add.ptr873.sum706
  %257 = load double* %arrayidx931, align 8, !tbaa !17
  %mul932 = fmul double %mul916, %257
  %add.ptr880.sum707 = or i64 %idx.ext872, 6
  %arrayidx933 = getelementptr inbounds double* %7, i64 %add.ptr880.sum707
  %258 = load double* %arrayidx933, align 8, !tbaa !17
  %mul934 = fmul double %mul919, %258
  %sub935 = fsub double %mul932, %mul934
  %add.ptr873.sum708 = or i64 %idx.ext872, 1
  %arrayidx937 = getelementptr inbounds double* %7, i64 %add.ptr873.sum708
  %259 = load double* %arrayidx937, align 8, !tbaa !17
  %mul938 = fmul double %mul916, %259
  %add.ptr880.sum709 = or i64 %idx.ext872, 5
  %arrayidx939 = getelementptr inbounds double* %7, i64 %add.ptr880.sum709
  %260 = load double* %arrayidx939, align 8, !tbaa !17
  %mul940 = fmul double %mul919, %260
  %sub941 = fsub double %mul938, %mul940
  %mul943 = fmul double %sub942, %mul903
  %add.ptr887.sum710 = or i64 %idx.ext872, 11
  %arrayidx946 = getelementptr inbounds double* %7, i64 %add.ptr887.sum710
  %261 = load double* %arrayidx946, align 8, !tbaa !17
  %mul947 = fmul double %mul943, %261
  %add.ptr887.sum711 = or i64 %idx.ext872, 10
  %arrayidx949 = getelementptr inbounds double* %7, i64 %add.ptr887.sum711
  %262 = load double* %arrayidx949, align 8, !tbaa !17
  %mul950 = fmul double %mul943, %262
  %add.ptr887.sum712 = or i64 %idx.ext872, 9
  %arrayidx952 = getelementptr inbounds double* %7, i64 %add.ptr887.sum712
  %263 = load double* %arrayidx952, align 8, !tbaa !17
  %mul953 = fmul double %mul943, %263
  %add954 = fadd double %sub929, %mul947
  %add955 = fadd double %sub935, %mul950
  %add956 = fadd double %sub941, %mul953
  %mul959 = fmul double %sub907, 3.000000e+00
  %mul960 = fmul double %mul959, %add954
  %mul961 = fmul double %add955, 2.000000e+00
  %add962 = fadd double %mul960, %mul961
  %mul963 = fmul double %sub907, %add962
  %add964 = fadd double %add956, %mul963
  %mul966 = fmul double %252, -2.000000e+00
  %mul967 = fmul double %mul966, %add964
  %mul972 = fmul double %sub838, %mul967
  %264 = insertelement <2 x double> undef, double %sub838, i32 0
  %265 = insertelement <2 x double> %264, double %sub844, i32 1
  %266 = insertelement <2 x double> undef, double %mul972, i32 0
  %267 = insertelement <2 x double> %266, double %mul972, i32 1
  %268 = fmul <2 x double> %265, %267
  %269 = fadd <2 x double> %236, %268
  %270 = load double* %x979, align 8, !tbaa !72
  %add980 = fadd double %270, %mul972
  store double %add980, double* %x979, align 8, !tbaa !72
  %x981 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext833, i32 0
  %mul984 = fmul double %sub844, %mul967
  %271 = insertelement <2 x double> undef, double %sub844, i32 0
  %272 = insertelement <2 x double> %271, double %sub850, i32 1
  %273 = insertelement <2 x double> undef, double %mul984, i32 0
  %274 = insertelement <2 x double> %273, double %mul984, i32 1
  %275 = fmul <2 x double> %272, %274
  %276 = fadd <2 x double> %237, %275
  %277 = load double* %y989, align 8, !tbaa !73
  %add990 = fadd double %277, %mul984
  store double %add990, double* %y989, align 8, !tbaa !73
  %278 = bitcast double* %x981 to <2 x double>*
  %279 = load <2 x double>* %278, align 8, !tbaa !17
  %280 = insertelement <2 x double> %266, double %mul984, i32 1
  %281 = fsub <2 x double> %279, %280
  %282 = bitcast double* %x981 to <2 x double>*
  store <2 x double> %281, <2 x double>* %282, align 8, !tbaa !17
  %mul994 = fmul double %sub850, %mul967
  %283 = load double* %z997, align 8, !tbaa !74
  %add998 = fadd double %283, %mul994
  store double %add998, double* %z997, align 8, !tbaa !74
  %z999 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext833, i32 2
  %284 = load double* %z999, align 8, !tbaa !74
  %sub1000 = fsub double %284, %mul994
  store double %sub1000, double* %z999, align 8, !tbaa !74
  %add.ptr895.sum713 = or i64 %idx.ext872, 13
  %arrayidx1002 = getelementptr inbounds double* %7, i64 %add.ptr895.sum713
  %285 = load double* %arrayidx1002, align 8, !tbaa !17
  %add.ptr895.sum714 = or i64 %idx.ext872, 14
  %arrayidx1004 = getelementptr inbounds double* %7, i64 %add.ptr895.sum714
  %286 = load double* %arrayidx1004, align 8, !tbaa !17
  %add.ptr895.sum715 = or i64 %idx.ext872, 15
  %arrayidx1006 = getelementptr inbounds double* %7, i64 %add.ptr895.sum715
  %287 = load double* %arrayidx1006, align 8, !tbaa !17
  %mul1007 = shl nsw i32 %add859, 2
  %idx.ext1008 = sext i32 %mul1007 to i64
  %add.ptr1009.sum716 = or i64 %idx.ext1008, 1
  %arrayidx1013 = getelementptr inbounds double* %8, i64 %add.ptr1009.sum716
  %288 = load double* %arrayidx1013, align 8, !tbaa !17
  %mul1014 = fmul double %sub, %288
  %sub1015 = fsub double %285, %mul1014
  %add.ptr1009.sum717 = or i64 %idx.ext1008, 2
  %arrayidx1016 = getelementptr inbounds double* %8, i64 %add.ptr1009.sum717
  %289 = load double* %arrayidx1016, align 8, !tbaa !17
  %mul1017 = fmul double %sub, %289
  %sub1018 = fsub double %286, %mul1017
  %add.ptr1009.sum718 = or i64 %idx.ext1008, 3
  %arrayidx1019 = getelementptr inbounds double* %8, i64 %add.ptr1009.sum718
  %290 = load double* %arrayidx1019, align 8, !tbaa !17
  %mul1020 = fmul double %sub, %290
  %sub1021 = fsub double %287, %mul1020
  %mul1022 = fmul double %mul903, %sub1021
  %mul1023 = fmul double %mul903, %sub1018
  %mul1024 = fmul double %mul903, %sub1015
  %mul1028 = fmul double %mul959, %mul1022
  %mul1029 = fmul double %mul1023, 2.000000e+00
  %add1030 = fadd double %mul1029, %mul1028
  %mul1031 = fmul double %sub907, %add1030
  %add1032 = fadd double %mul1024, %mul1031
  %mul1034 = fmul double %add1032, -2.000000e+00
  %mul1035 = fmul double %252, %mul1034
  %mul1040 = fmul double %sub838, %mul1035
  %291 = insertelement <2 x double> undef, double %sub850, i32 0
  %292 = insertelement <2 x double> %291, double %sub838, i32 1
  %293 = insertelement <2 x double> undef, double %mul994, i32 0
  %294 = insertelement <2 x double> %293, double %mul1040, i32 1
  %295 = fmul <2 x double> %292, %294
  %296 = fadd <2 x double> %238, %295
  %297 = insertelement <2 x double> undef, double %mul1040, i32 0
  %298 = insertelement <2 x double> %297, double %mul1040, i32 1
  %299 = fmul <2 x double> %272, %298
  %300 = fadd <2 x double> %239, %299
  %301 = load double* %x1047, align 8, !tbaa !72
  %add1048 = fadd double %301, %mul1040
  store double %add1048, double* %x1047, align 8, !tbaa !72
  %x1049 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext833, i32 0
  %mul1052 = fmul double %sub844, %mul1035
  %302 = insertelement <2 x double> %291, double %sub844, i32 1
  %303 = insertelement <2 x double> %266, double %mul1052, i32 1
  %304 = fmul <2 x double> %302, %303
  %305 = fadd <2 x double> %240, %304
  %306 = load double* %y1057, align 8, !tbaa !73
  %add1058 = fadd double %306, %mul1052
  store double %add1058, double* %y1057, align 8, !tbaa !73
  %307 = bitcast double* %x1049 to <2 x double>*
  %308 = load <2 x double>* %307, align 8, !tbaa !17
  %309 = insertelement <2 x double> %297, double %mul1052, i32 1
  %310 = fsub <2 x double> %308, %309
  %311 = bitcast double* %x1049 to <2 x double>*
  store <2 x double> %310, <2 x double>* %311, align 8, !tbaa !17
  %mul1062 = fmul double %sub850, %mul1035
  %312 = insertelement <2 x double> %291, double %sub850, i32 1
  %313 = insertelement <2 x double> undef, double %mul1052, i32 0
  %314 = insertelement <2 x double> %313, double %mul1062, i32 1
  %315 = fmul <2 x double> %312, %314
  %316 = fadd <2 x double> %241, %315
  %317 = load double* %z1065, align 8, !tbaa !74
  %add1066 = fadd double %317, %mul1062
  store double %add1066, double* %z1065, align 8, !tbaa !74
  %z1067 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext833, i32 2
  %318 = load double* %z1067, align 8, !tbaa !74
  %sub1068 = fsub double %318, %mul1062
  store double %sub1068, double* %z1067, align 8, !tbaa !74
  %indvars.iv.next1026 = add nuw nsw i64 %indvars.iv1025, 1
  %lftr.wideiv1027 = trunc i64 %indvars.iv.next1026 to i32
  %exitcond1028 = icmp eq i32 %lftr.wideiv1027, %conv825
  br i1 %exitcond1028, label %for.end1071, label %for.body828

for.end1071:                                      ; preds = %for.body828, %for.end820
  %319 = phi <2 x double> [ %230, %for.end820 ], [ %269, %for.body828 ]
  %320 = phi <2 x double> [ %231, %for.end820 ], [ %276, %for.body828 ]
  %321 = phi <2 x double> [ %232, %for.end820 ], [ %296, %for.body828 ]
  %322 = phi <2 x double> [ %233, %for.end820 ], [ %300, %for.body828 ]
  %323 = phi <2 x double> [ %234, %for.end820 ], [ %305, %for.body828 ]
  %324 = phi <2 x double> [ %235, %for.end820 ], [ %316, %for.body828 ]
  %conv1076 = trunc i64 %sub.ptr.div617 to i32
  %cmp1078918 = icmp sgt i32 %conv1076, 0
  br i1 %cmp1078918, label %for.body1079.lr.ph, label %for.inc1203

for.body1079.lr.ph:                               ; preds = %for.end1071
  %325 = extractelement <2 x double> %321, i32 1
  %326 = extractelement <2 x double> %321, i32 0
  %327 = extractelement <2 x double> %323, i32 1
  %328 = extractelement <2 x double> %323, i32 0
  %x1178 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1188 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  %329 = insertelement <2 x double> undef, double %326, i32 0
  %330 = insertelement <2 x double> undef, double %328, i32 0
  br label %for.body1079

for.body1079:                                     ; preds = %for.body1079, %for.body1079.lr.ph
  %indvars.iv1029 = phi i64 [ 0, %for.body1079.lr.ph ], [ %indvars.iv.next1030, %for.body1079 ]
  %fullElectVirial_xx.3925 = phi double [ %325, %for.body1079.lr.ph ], [ %add1173, %for.body1079 ]
  %fullElectVirial_yy.3922 = phi double [ %327, %for.body1079.lr.ph ], [ %add1185, %for.body1079 ]
  %331 = phi <2 x double> [ %322, %for.body1079.lr.ph ], [ %353, %for.body1079 ]
  %332 = phi <2 x double> [ %324, %for.body1079.lr.ph ], [ %366, %for.body1079 ]
  %arrayidx1082 = getelementptr inbounds i32* %cond147785, i64 %indvars.iv1029
  %333 = load i32* %arrayidx1082, align 4, !tbaa !11
  %idx.ext1084 = sext i32 %333 to i64
  %x1088 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1084, i32 0, i32 0
  %334 = load double* %x1088, align 8, !tbaa !59
  %sub1089 = fsub double %73, %334
  %mul1091 = fmul double %sub1089, %sub1089
  %y1094 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1084, i32 0, i32 1
  %335 = load double* %y1094, align 8, !tbaa !61
  %sub1095 = fsub double %74, %335
  %mul1096 = fmul double %sub1095, %sub1095
  %add1097 = fadd double %mul1091, %mul1096
  %z1100 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1084, i32 0, i32 2
  %336 = load double* %z1100, align 8, !tbaa !62
  %sub1101 = fsub double %75, %336
  %mul1102 = fmul double %sub1101, %sub1101
  %add1103 = fadd double %add1097, %mul1102
  %conv1105 = fptrunc double %add1103 to float
  %337 = bitcast float %conv1105 to i32
  %shr1109 = ashr i32 %337, 17
  %add1110 = add nsw i32 %shr1109, %mul
  %mul1112 = shl nsw i32 %add1110, 4
  %idx.ext1113 = sext i32 %mul1112 to i64
  %and1120 = and i32 %337, -131072
  %charge1122 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1084, i32 1
  %338 = load float* %charge1122, align 4, !tbaa !63
  %conv1123 = fpext float %338 to double
  %mul1124 = fmul double %mul403, %conv1123
  %339 = bitcast i32 %and1120 to float
  %conv1127 = fpext float %339 to double
  %sub1128 = fsub double %add1103, %conv1127
  %partition1130 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1084, i32 2
  %340 = bitcast [4 x i8]* %partition1130 to i32*
  %bf.load1131 = load i32* %340, align 4
  %bf.lshr1132 = lshr i32 %bf.load1131, 28
  %idxprom1133 = zext i32 %bf.lshr1132 to i64
  %add.ptr399.sum = add i64 %idxprom1133, %idx.ext398
  %arrayidx1134 = getelementptr inbounds double* %116, i64 %add.ptr399.sum
  %341 = load double* %arrayidx1134, align 8, !tbaa !17
  %add.ptr1116.sum692 = or i64 %idx.ext1113, 13
  %arrayidx1136 = getelementptr inbounds double* %7, i64 %add.ptr1116.sum692
  %342 = load double* %arrayidx1136, align 8, !tbaa !17
  %add.ptr1116.sum693 = or i64 %idx.ext1113, 14
  %arrayidx1138 = getelementptr inbounds double* %7, i64 %add.ptr1116.sum693
  %343 = load double* %arrayidx1138, align 8, !tbaa !17
  %add.ptr1116.sum694 = or i64 %idx.ext1113, 15
  %arrayidx1140 = getelementptr inbounds double* %7, i64 %add.ptr1116.sum694
  %344 = load double* %arrayidx1140, align 8, !tbaa !17
  %mul1142 = shl nsw i32 %add1110, 2
  %idx.ext1143 = sext i32 %mul1142 to i64
  %add.ptr1144.sum695 = or i64 %idx.ext1143, 1
  %arrayidx1147 = getelementptr inbounds double* %8, i64 %add.ptr1144.sum695
  %345 = load double* %arrayidx1147, align 8, !tbaa !17
  %sub1148 = fsub double %342, %345
  %add.ptr1144.sum696 = or i64 %idx.ext1143, 2
  %arrayidx1149 = getelementptr inbounds double* %8, i64 %add.ptr1144.sum696
  %346 = load double* %arrayidx1149, align 8, !tbaa !17
  %sub1150 = fsub double %343, %346
  %add.ptr1144.sum697 = or i64 %idx.ext1143, 3
  %arrayidx1151 = getelementptr inbounds double* %8, i64 %add.ptr1144.sum697
  %347 = load double* %arrayidx1151, align 8, !tbaa !17
  %sub1152 = fsub double %344, %347
  %mul1153 = fmul double %mul1124, %sub1152
  %mul1154 = fmul double %mul1124, %sub1150
  %mul1155 = fmul double %mul1124, %sub1148
  %mul1158 = fmul double %sub1128, 3.000000e+00
  %mul1159 = fmul double %mul1158, %mul1153
  %mul1160 = fmul double %mul1154, 2.000000e+00
  %add1161 = fadd double %mul1160, %mul1159
  %mul1162 = fmul double %sub1128, %add1161
  %add1163 = fadd double %mul1155, %mul1162
  %mul1165 = fmul double %add1163, -2.000000e+00
  %mul1166 = fmul double %341, %mul1165
  %mul1171 = fmul double %sub1089, %mul1166
  %mul1172 = fmul double %sub1089, %mul1171
  %add1173 = fadd double %fullElectVirial_xx.3925, %mul1172
  %348 = insertelement <2 x double> undef, double %sub1095, i32 0
  %349 = insertelement <2 x double> %348, double %sub1101, i32 1
  %350 = insertelement <2 x double> undef, double %mul1171, i32 0
  %351 = insertelement <2 x double> %350, double %mul1171, i32 1
  %352 = fmul <2 x double> %349, %351
  %353 = fadd <2 x double> %331, %352
  %354 = load double* %x1178, align 8, !tbaa !72
  %add1179 = fadd double %354, %mul1171
  store double %add1179, double* %x1178, align 8, !tbaa !72
  %x1180 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1084, i32 0
  %mul1183 = fmul double %sub1095, %mul1166
  %mul1184 = fmul double %sub1095, %mul1183
  %add1185 = fadd double %fullElectVirial_yy.3922, %mul1184
  %355 = load double* %y1188, align 8, !tbaa !73
  %add1189 = fadd double %355, %mul1183
  store double %add1189, double* %y1188, align 8, !tbaa !73
  %356 = bitcast double* %x1180 to <2 x double>*
  %357 = load <2 x double>* %356, align 8, !tbaa !17
  %358 = insertelement <2 x double> %350, double %mul1183, i32 1
  %359 = fsub <2 x double> %357, %358
  %360 = bitcast double* %x1180 to <2 x double>*
  store <2 x double> %359, <2 x double>* %360, align 8, !tbaa !17
  %mul1193 = fmul double %sub1101, %mul1166
  %361 = insertelement <2 x double> undef, double %sub1101, i32 0
  %362 = insertelement <2 x double> %361, double %sub1101, i32 1
  %363 = insertelement <2 x double> undef, double %mul1183, i32 0
  %364 = insertelement <2 x double> %363, double %mul1193, i32 1
  %365 = fmul <2 x double> %362, %364
  %366 = fadd <2 x double> %332, %365
  %367 = load double* %z1196, align 8, !tbaa !74
  %add1197 = fadd double %367, %mul1193
  store double %add1197, double* %z1196, align 8, !tbaa !74
  %z1198 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1084, i32 2
  %368 = load double* %z1198, align 8, !tbaa !74
  %sub1199 = fsub double %368, %mul1193
  store double %sub1199, double* %z1198, align 8, !tbaa !74
  %indvars.iv.next1030 = add nuw nsw i64 %indvars.iv1029, 1
  %lftr.wideiv1031 = trunc i64 %indvars.iv.next1030 to i32
  %exitcond1032 = icmp eq i32 %lftr.wideiv1031, %conv1076
  br i1 %exitcond1032, label %for.inc1203.loopexit, label %for.body1079

for.inc1203.loopexit:                             ; preds = %for.body1079
  %369 = insertelement <2 x double> %329, double %add1173, i32 1
  %370 = insertelement <2 x double> %330, double %add1185, i32 1
  br label %for.inc1203

for.inc1203:                                      ; preds = %for.inc1203.loopexit, %for.end1071, %if.then220
  %pairCount.3 = phi i32 [ %sub216, %if.then220 ], [ %pairCount.2, %for.end1071 ], [ %pairCount.2, %for.inc1203.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0936, %if.then220 ], [ %pairlistoffset.1, %for.end1071 ], [ %pairlistoffset.1, %for.inc1203.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0937, %if.then220 ], [ %pairlistindex.2, %for.end1071 ], [ %pairlistindex.2, %for.inc1203.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0938, %if.then220 ], [ %fixg_lower.3, %for.end1071 ], [ %fixg_lower.3, %for.inc1203.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.0939, %if.then220 ], [ %g_lower.3, %for.end1071 ], [ %g_lower.3, %for.inc1203.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0940, %if.then220 ], [ %j_hgroup.2, %for.end1071 ], [ %j_hgroup.2, %for.inc1203.loopexit ]
  %i.1 = phi i32 [ %add222, %if.then220 ], [ %i.0941, %for.end1071 ], [ %i.0941, %for.inc1203.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0954, %if.then220 ], [ %conv627, %for.end1071 ], [ %conv627, %for.inc1203.loopexit ]
  %371 = phi <2 x double> [ %62, %if.then220 ], [ %319, %for.end1071 ], [ %319, %for.inc1203.loopexit ]
  %372 = phi <2 x double> [ %63, %if.then220 ], [ %320, %for.end1071 ], [ %320, %for.inc1203.loopexit ]
  %373 = phi <2 x double> [ %64, %if.then220 ], [ %321, %for.end1071 ], [ %369, %for.inc1203.loopexit ]
  %374 = phi <2 x double> [ %65, %if.then220 ], [ %322, %for.end1071 ], [ %353, %for.inc1203.loopexit ]
  %375 = phi <2 x double> [ %66, %if.then220 ], [ %323, %for.end1071 ], [ %370, %for.inc1203.loopexit ]
  %376 = phi <2 x double> [ %67, %if.then220 ], [ %324, %for.end1071 ], [ %366, %for.inc1203.loopexit ]
  %inc1204 = add nsw i32 %i.1, 1
  %cmp174 = icmp sgt i32 %sub165, %inc1204
  br i1 %cmp174, label %for.body175, label %for.end1205

for.end1205:                                      ; preds = %for.inc1203, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1203 ]
  %377 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %371, %for.inc1203 ]
  %378 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %372, %for.inc1203 ]
  %379 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %373, %for.inc1203 ]
  %380 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %374, %for.inc1203 ]
  %381 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %375, %for.inc1203 ]
  %382 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %376, %for.inc1203 ]
  %383 = extractelement <2 x double> %382, i32 1
  %384 = extractelement <2 x double> %382, i32 0
  %arraydecay1206 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1207 = icmp eq i32* %cond75976110461052, %arraydecay1206
  br i1 %cmp1207, label %if.end1212, label %delete.notnull1210

delete.notnull1210:                               ; preds = %for.end1205
  %385 = bitcast i32* %cond75976110461052 to i8*
  call void @_ZdaPv(i8* %385) #7
  br label %if.end1212

if.end1212:                                       ; preds = %delete.notnull1210, %for.end1205
  %arraydecay1213 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1214 = icmp eq i32* %cond1976310441053, %arraydecay1213
  br i1 %cmp1214, label %if.end1219, label %delete.notnull1217

delete.notnull1217:                               ; preds = %if.end1212
  %386 = bitcast i32* %cond1976310441053 to i8*
  call void @_ZdaPv(i8* %386) #7
  br label %if.end1219

if.end1219:                                       ; preds = %delete.notnull1217, %if.end1212
  %arraydecay1220 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1221 = icmp eq i32* %cond3010481051, %arraydecay1220
  br i1 %cmp1221, label %if.end1226, label %delete.notnull1224

delete.notnull1224:                               ; preds = %if.end1219
  %387 = bitcast i32* %cond3010481051 to i8*
  call void @_ZdaPv(i8* %387) #7
  br label %if.end1226

if.end1226:                                       ; preds = %delete.notnull1224, %if.end1219
  %arraydecay1227 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1228 = icmp eq i32* %cond114767769775781, %arraydecay1227
  br i1 %cmp1228, label %if.end1233, label %delete.notnull1231

delete.notnull1231:                               ; preds = %if.end1226
  %388 = bitcast i32* %cond114767769775781 to i8*
  call void @_ZdaPv(i8* %388) #7
  br label %if.end1233

if.end1233:                                       ; preds = %delete.notnull1231, %if.end1226
  %arraydecay1234 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1235 = icmp eq i32* %cond125771773783, %arraydecay1234
  br i1 %cmp1235, label %if.end1240, label %delete.notnull1238

delete.notnull1238:                               ; preds = %if.end1233
  %389 = bitcast i32* %cond125771773783 to i8*
  call void @_ZdaPv(i8* %389) #7
  br label %if.end1240

if.end1240:                                       ; preds = %delete.notnull1238, %if.end1233
  %arraydecay1241 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1242 = icmp eq i32* %cond136777779, %arraydecay1241
  br i1 %cmp1242, label %if.end1247, label %delete.notnull1245

delete.notnull1245:                               ; preds = %if.end1240
  %390 = bitcast i32* %cond136777779 to i8*
  call void @_ZdaPv(i8* %390) #7
  br label %if.end1247

if.end1247:                                       ; preds = %delete.notnull1245, %if.end1240
  %arraydecay1248 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1249 = icmp eq i32* %cond147785, %arraydecay1248
  br i1 %cmp1249, label %if.end1254, label %delete.notnull1252

delete.notnull1252:                               ; preds = %if.end1247
  %391 = bitcast i32* %cond147785 to i8*
  call void @_ZdaPv(i8* %391) #7
  br label %if.end1254

if.end1254:                                       ; preds = %delete.notnull1252, %if.end1247
  %arraydecay1255 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1256 = icmp eq i32* %cond158, %arraydecay1255
  br i1 %cmp1256, label %if.end1261, label %delete.notnull1259

delete.notnull1259:                               ; preds = %if.end1254
  %392 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %392) #7
  br label %if.end1261

if.end1261:                                       ; preds = %delete.notnull1259, %if.end1254
  %conv1262 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1263 = getelementptr inbounds double* %1, i64 22
  %393 = load double* %arrayidx1263, align 8, !tbaa !17
  %add1264 = fadd double %conv1262, %393
  store double %add1264, double* %arrayidx1263, align 8, !tbaa !17
  %arrayidx1265 = getelementptr inbounds double* %1, i64 3
  %394 = bitcast double* %arrayidx1265 to <2 x double>*
  %395 = load <2 x double>* %394, align 8, !tbaa !17
  %396 = fadd <2 x double> %377, %395
  %397 = bitcast double* %arrayidx1265 to <2 x double>*
  store <2 x double> %396, <2 x double>* %397, align 8, !tbaa !17
  %arrayidx1269 = getelementptr inbounds double* %1, i64 5
  %398 = bitcast double* %arrayidx1269 to <2 x double>*
  %399 = load <2 x double>* %398, align 8, !tbaa !17
  %400 = shufflevector <2 x double> %381, <2 x double> %377, <2 x i32> <i32 0, i32 3>
  %401 = fadd <2 x double> %400, %399
  %402 = bitcast double* %arrayidx1269 to <2 x double>*
  store <2 x double> %401, <2 x double>* %402, align 8, !tbaa !17
  %arrayidx1273 = getelementptr inbounds double* %1, i64 7
  %403 = bitcast double* %arrayidx1273 to <2 x double>*
  %404 = load <2 x double>* %403, align 8, !tbaa !17
  %405 = fadd <2 x double> %378, %404
  %406 = bitcast double* %arrayidx1273 to <2 x double>*
  store <2 x double> %405, <2 x double>* %406, align 8, !tbaa !17
  %arrayidx1277 = getelementptr inbounds double* %1, i64 9
  %407 = bitcast double* %arrayidx1277 to <2 x double>*
  %408 = load <2 x double>* %407, align 8, !tbaa !17
  %409 = shufflevector <2 x double> %381, <2 x double> %378, <2 x i32> <i32 0, i32 3>
  %410 = fadd <2 x double> %409, %408
  %411 = bitcast double* %arrayidx1277 to <2 x double>*
  store <2 x double> %410, <2 x double>* %411, align 8, !tbaa !17
  %arrayidx1281 = getelementptr inbounds double* %1, i64 11
  %412 = bitcast double* %arrayidx1281 to <2 x double>*
  %413 = load <2 x double>* %412, align 8, !tbaa !17
  %414 = fadd <2 x double> %379, %413
  %415 = bitcast double* %arrayidx1281 to <2 x double>*
  store <2 x double> %414, <2 x double>* %415, align 8, !tbaa !17
  %arrayidx1285 = getelementptr inbounds double* %1, i64 13
  %416 = bitcast double* %arrayidx1285 to <2 x double>*
  %417 = load <2 x double>* %416, align 8, !tbaa !17
  %418 = fadd <2 x double> %380, %417
  %419 = bitcast double* %arrayidx1285 to <2 x double>*
  store <2 x double> %418, <2 x double>* %419, align 8, !tbaa !17
  %arrayidx1289 = getelementptr inbounds double* %1, i64 15
  %420 = bitcast double* %arrayidx1289 to <2 x double>*
  %421 = load <2 x double>* %420, align 8, !tbaa !17
  %422 = shufflevector <2 x double> %380, <2 x double> %381, <2 x i32> <i32 0, i32 3>
  %423 = fadd <2 x double> %422, %421
  %424 = bitcast double* %arrayidx1289 to <2 x double>*
  store <2 x double> %423, <2 x double>* %424, align 8, !tbaa !17
  %arrayidx1293 = getelementptr inbounds double* %1, i64 17
  %425 = load double* %arrayidx1293, align 8, !tbaa !17
  %add1294 = fadd double %384, %425
  store double %add1294, double* %arrayidx1293, align 8, !tbaa !17
  %arrayidx1295 = getelementptr inbounds double* %1, i64 18
  %426 = bitcast double* %arrayidx1295 to <2 x double>*
  %427 = load <2 x double>* %426, align 8, !tbaa !17
  %428 = shufflevector <2 x double> %380, <2 x double> %382, <2 x i32> <i32 1, i32 2>
  %429 = fadd <2 x double> %428, %427
  %430 = bitcast double* %arrayidx1295 to <2 x double>*
  store <2 x double> %429, <2 x double>* %430, align 8, !tbaa !17
  %arrayidx1299 = getelementptr inbounds double* %1, i64 20
  %431 = load double* %arrayidx1299, align 8, !tbaa !17
  %add1300 = fadd double %383, %431
  store double %add1300, double* %arrayidx1299, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1261, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil30calc_self_energy_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311060 = icmp sgt i32 %14, 0
  br i1 %cmp311060, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301135 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond8258271133 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond198291131 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1123 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1124, %for.inc ]
  %g.01061 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1123, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01061, 1
  %idxprom41 = sext i32 %g.01061 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond8258271133, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1123 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01061, %for.body ]
  %indvars.iv.next1124 = add nuw nsw i64 %indvars.iv1123, 1
  %lftr.wideiv1125 = trunc i64 %indvars.iv.next1124 to i32
  %exitcond1126 = icmp eq i32 %lftr.wideiv1125, %14
  br i1 %exitcond1126, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond8258271133, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond8258271133, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1140 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1982911301139 = phi i32* [ %cond198291131, %for.end ], [ %cond198291131, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond82582711321138 = phi i32* [ %cond8258271133, %for.end ], [ %cond8258271133, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3011341137 = phi i32* [ %cond301135, %for.end ], [ %cond301135, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp561054 = icmp sgt i32 %g.0.lcssa1140, 0
  br i1 %cmp561054, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1119 = phi i64 [ %indvars.iv.next1120, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.01056 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.01055 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond82582711321138, i64 %indvars.iv1119
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.01056, 1
  %idxprom68 = sext i32 %fixg.01056 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1982911301139, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.01055, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.01056, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1120 = add nuw nsw i64 %indvars.iv1119, 1
  %lftr.wideiv1121 = trunc i64 %indvars.iv.next1120 to i32
  %exitcond1122 = icmp eq i32 %lftr.wideiv1121, %g.0.lcssa1140
  br i1 %exitcond1122, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond82582711321138, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %36 = bitcast i32* %cond82582711321138 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1982911301139, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %37 = bitcast i32* %cond1982911301139 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3011341137, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %38 = bitcast i32* %cond3011341137 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1982911301139, i64 %idxprom99
  %39 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1982911301139, i64 %idxprom101
  store i32 %39, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2832 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %40 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %14, 5
  %45 = sext i32 %add108 to i64
  %46 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %45, i64 4)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 -1, i64 %48
  %call109 = call noalias i8* @_Znam(i64 %49) #8
  %50 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %49) #8
  %51 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %49) #8
  %52 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %49) #8
  %53 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %49) #8
  %54 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147851 = phi i32* [ %arraydecay139, %cond.true149 ], [ %53, %cond.false151 ]
  %cond125837839849 = phi i32* [ %arraydecay117, %cond.true149 ], [ %51, %cond.false151 ]
  %cond114833835841847 = phi i32* [ %arraydecay106, %cond.true149 ], [ %50, %cond.false151 ]
  %cond136843845 = phi i32* [ %arraydecay128, %cond.true149 ], [ %52, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %54, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %55 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %56 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %57 = load %class.Vector** %arrayidx162, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %58 = load %class.Vector** %arrayidx164, align 8, !tbaa !1
  %sub165 = add nsw i32 %13, -1
  %mul166 = mul nsw i32 %sub165, %14
  %div = sdiv i32 %mul166, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %59 = load i32* %minPart, align 4, !tbaa !50
  %mul167 = mul nsw i32 %59, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %60 = load i32* %numParts, align 4, !tbaa !51
  %div168 = sdiv i32 %mul167, %60
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %61 = load i32* %maxPart, align 4, !tbaa !52
  %mul169 = mul nsw i32 %61, %div
  %div171 = sdiv i32 %mul169, %60
  %cmp1741014 = icmp sgt i32 %sub165, 0
  br i1 %cmp1741014, label %for.body175.lr.ph, label %for.end1265

for.body175.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i822 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast555 = ptrtoint i32* %cond125837839849 to i64
  %sub.ptr.rhs.cast615 = ptrtoint i32* %cond147851 to i64
  %sub.ptr.rhs.cast622 = ptrtoint i32* %cond158 to i64
  %sub975 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3011341137 to i64
  %sub.ptr.rhs.cast372 = ptrtoint i32* %cond114833835841847 to i64
  br label %for.body175

for.body175:                                      ; preds = %for.inc1263, %for.body175.lr.ph
  %exclChecksum.01037 = phi i32 [ 0, %for.body175.lr.ph ], [ %exclChecksum.10, %for.inc1263 ]
  %fullElectVirial_zz.01022 = phi double [ 0.000000e+00, %for.body175.lr.ph ], [ %fullElectVirial_zz.4, %for.inc1263 ]
  %i.01021 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc1264, %for.inc1263 ]
  %j_hgroup.01020 = phi i32 [ 0, %for.body175.lr.ph ], [ %j_hgroup.3, %for.inc1263 ]
  %g_lower.01019 = phi i32 [ 0, %for.body175.lr.ph ], [ %g_lower.4, %for.inc1263 ]
  %fixg_lower.01018 = phi i32 [ 0, %for.body175.lr.ph ], [ %fixg_lower.4, %for.inc1263 ]
  %pairlistindex.01017 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistindex.3, %for.inc1263 ]
  %pairlistoffset.01016 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistoffset.2, %for.inc1263 ]
  %pairCount.01015 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairCount.3, %for.inc1263 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %428, %for.inc1263 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %429, %for.inc1263 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %430, %for.inc1263 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %431, %for.inc1263 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %432, %for.inc1263 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %433, %for.inc1263 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %434, %for.inc1263 ]
  %idxprom176 = sext i32 %i.01021 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 2
  %69 = bitcast [4 x i8]* %id to i32*
  %bf.load178 = load i32* %69, align 4
  %bf.clear179 = and i32 %bf.load178, 4194303
  %idxprom.i853 = zext i32 %bf.clear179 to i64
  %70 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i853, i32 0
  %71 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i853, i32 1
  %72 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i853, i32 2
  %73 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %71 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 0
  %74 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 1
  %75 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 2
  %76 = load double* %z, align 8, !tbaa !62
  %arrayidx184 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176
  %arrayidx186 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176
  %77 = and i32 %bf.load178, 62914560
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %if.else, label %if.then198

if.then198:                                       ; preds = %for.body175
  %bf.lshr201 = lshr i32 %bf.load178, 22
  %bf.clear202 = and i32 %bf.lshr201, 7
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.end224, label %if.then204

if.then204:                                       ; preds = %if.then198
  %sub210 = sub nsw i32 %sub165, %i.01021
  %mul211 = mul nsw i32 %bf.clear202, %sub210
  %add212 = add nsw i32 %mul211, %pairCount.01015
  %sub213 = add nsw i32 %bf.clear202, -1
  %mul214 = mul nsw i32 %sub213, %bf.clear202
  %div215.neg = sdiv i32 %mul214, -2
  %sub216 = add i32 %add212, %div215.neg
  %cmp217 = icmp sge i32 %pairCount.01015, %div168
  %cmp219 = icmp slt i32 %pairCount.01015, %div171
  %or.cond811 = and i1 %cmp217, %cmp219
  br i1 %or.cond811, label %if.end224, label %if.then220

if.then220:                                       ; preds = %if.then204
  %add222 = add nsw i32 %sub213, %i.01021
  br label %for.inc1263

if.end224:                                        ; preds = %if.then204, %if.then198
  %pairCount.1 = phi i32 [ %pairCount.01015, %if.then198 ], [ %sub216, %if.then204 ]
  %79 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool225 = icmp eq i32 %79, 0
  br i1 %tobool225, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end224
  %bf.clear229 = and i32 %bf.load178, 134217728
  %tobool230 = icmp ne i32 %bf.clear229, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end224
  %80 = phi i1 [ false, %if.end224 ], [ %tobool230, %land.rhs ]
  br i1 %tobool203, label %if.end259, label %if.then236

if.then236:                                       ; preds = %land.end
  %add241 = add nsw i32 %bf.clear202, %i.01021
  %cmp242860 = icmp slt i32 %g_lower.01019, %g.0.lcssa1140
  br i1 %cmp242860, label %land.rhs243.lr.ph, label %while.cond249.loopexit

land.rhs243.lr.ph:                                ; preds = %if.then236
  %81 = sext i32 %g_lower.01019 to i64
  br label %land.rhs243

while.cond:                                       ; preds = %land.rhs243
  %82 = trunc i64 %indvars.iv.next to i32
  %cmp242 = icmp slt i32 %82, %g.0.lcssa1140
  br i1 %cmp242, label %land.rhs243, label %while.cond249.loopexit

land.rhs243:                                      ; preds = %while.cond, %land.rhs243.lr.ph
  %indvars.iv = phi i64 [ %81, %land.rhs243.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1861 = phi i32 [ %g_lower.01019, %land.rhs243.lr.ph ], [ %inc248, %while.cond ]
  %arrayidx245 = getelementptr inbounds i32* %cond82582711321138, i64 %indvars.iv
  %83 = load i32* %arrayidx245, align 4, !tbaa !11
  %cmp246 = icmp slt i32 %83, %add241
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc248 = add nsw i32 %g_lower.1861, 1
  br i1 %cmp246, label %while.cond, label %while.cond249.loopexit

while.cond249.loopexit:                           ; preds = %land.rhs243, %while.cond, %if.then236
  %g_lower.1.lcssa = phi i32 [ %g_lower.01019, %if.then236 ], [ %inc248, %while.cond ], [ %g_lower.1861, %land.rhs243 ]
  %cmp250862 = icmp slt i32 %fixg_lower.01018, %fixg.2832
  br i1 %cmp250862, label %land.rhs251.lr.ph, label %if.end259

land.rhs251.lr.ph:                                ; preds = %while.cond249.loopexit
  %84 = sext i32 %fixg_lower.01018 to i64
  br label %land.rhs251

while.cond249:                                    ; preds = %land.rhs251
  %85 = trunc i64 %indvars.iv.next1069 to i32
  %cmp250 = icmp slt i32 %85, %fixg.2832
  br i1 %cmp250, label %land.rhs251, label %if.end259

land.rhs251:                                      ; preds = %while.cond249, %land.rhs251.lr.ph
  %indvars.iv1068 = phi i64 [ %84, %land.rhs251.lr.ph ], [ %indvars.iv.next1069, %while.cond249 ]
  %fixg_lower.1863 = phi i32 [ %fixg_lower.01018, %land.rhs251.lr.ph ], [ %inc257, %while.cond249 ]
  %arrayidx253 = getelementptr inbounds i32* %cond1982911301139, i64 %indvars.iv1068
  %86 = load i32* %arrayidx253, align 4, !tbaa !11
  %cmp254 = icmp slt i32 %86, %add241
  %indvars.iv.next1069 = add nsw i64 %indvars.iv1068, 1
  %inc257 = add nsw i32 %fixg_lower.1863, 1
  br i1 %cmp254, label %while.cond249, label %if.end259

if.end259:                                        ; preds = %land.rhs251, %while.cond249, %while.cond249.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.01018, %land.end ], [ %fixg_lower.01018, %while.cond249.loopexit ], [ %fixg_lower.1863, %land.rhs251 ], [ %inc257, %while.cond249 ]
  %g_lower.2 = phi i32 [ %g_lower.01019, %land.end ], [ %g_lower.1.lcssa, %while.cond249.loopexit ], [ %g_lower.1.lcssa, %while.cond249 ], [ %g_lower.1.lcssa, %land.rhs251 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.01020, %land.end ], [ %add241, %while.cond249.loopexit ], [ %add241, %while.cond249 ], [ %add241, %land.rhs251 ]
  %j.1865 = add nsw i32 %i.01021, 1
  %cmp262866 = icmp slt i32 %j.1865, %j_hgroup.1
  br i1 %cmp262866, label %for.body263.lr.ph, label %for.end269

for.body263.lr.ph:                                ; preds = %if.end259
  %87 = add i32 %j_hgroup.1, -1
  %88 = sub i32 %87, %i.01021
  %89 = add i32 %j_hgroup.1, -2
  %90 = sub i32 %89, %i.01021
  %91 = zext i32 %90 to i64
  %92 = add i64 %91, 1
  %end.idx = add i64 %91, 1
  %n.vec = and i64 %92, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1865
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body263.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body263.lr.ph ]
  %93 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1865, %93
  %broadcast.splatinsert1181 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1182 = shufflevector <4 x i32> %broadcast.splatinsert1181, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1183 = add <4 x i32> %broadcast.splat1182, <i32 0, i32 1, i32 2, i32 3>
  %induction1184 = add <4 x i32> %broadcast.splat1182, <i32 4, i32 5, i32 6, i32 7>
  %94 = getelementptr inbounds i32* %cond114833835841847, i64 %index
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %induction1183, <4 x i32>* %95, align 4
  %.sum1187 = or i64 %index, 4
  %96 = getelementptr i32* %cond114833835841847, i64 %.sum1187
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %induction1184, <4 x i32>* %97, align 4
  %index.next = add i64 %index, 8
  %98 = icmp eq i64 %index.next, %n.vec
  br i1 %98, label %middle.block, label %vector.body, !llvm.loop !89

middle.block:                                     ; preds = %vector.body, %for.body263.lr.ph
  %resume.val = phi i64 [ 0, %for.body263.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1179 = phi i32 [ %j.1865, %for.body263.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond261.for.end269_crit_edge, label %for.body263

for.body263:                                      ; preds = %for.body263, %middle.block
  %indvars.iv1070 = phi i64 [ %indvars.iv.next1071, %for.body263 ], [ %resume.val, %middle.block ]
  %j.1868 = phi i32 [ %j.1, %for.body263 ], [ %resume.val1179, %middle.block ]
  %indvars.iv.next1071 = add nuw nsw i64 %indvars.iv1070, 1
  %arrayidx266 = getelementptr inbounds i32* %cond114833835841847, i64 %indvars.iv1070
  store i32 %j.1868, i32* %arrayidx266, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1868, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1071 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %for.cond261.for.end269_crit_edge, label %for.body263, !llvm.loop !90

for.cond261.for.end269_crit_edge:                 ; preds = %for.body263, %middle.block
  %phitmp = sext i32 %88 to i64
  br label %for.end269

for.end269:                                       ; preds = %for.cond261.for.end269_crit_edge, %if.end259
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond261.for.end269_crit_edge ], [ 0, %if.end259 ]
  %add.ptr271 = getelementptr inbounds i32* %cond114833835841847, i64 %pairlistindex.1.lcssa
  %cond276 = select i1 %80, i32* %cond1982911301139, i32* %cond82582711321138
  %cond281 = select i1 %80, i32 %fixg_lower.2, i32 %g_lower.2
  %cond286 = select i1 %80, i32 %fixg.2832, i32 %g.0.lcssa1140
  %cmp287 = icmp slt i32 %cond281, %cond286
  br i1 %cmp287, label %if.then288, label %if.end370

if.then288:                                       ; preds = %for.end269
  %idxprom289 = sext i32 %cond281 to i64
  %arrayidx290 = getelementptr inbounds i32* %cond276, i64 %idxprom289
  %99 = load i32* %arrayidx290, align 4, !tbaa !11
  %idxprom291 = sext i32 %99 to i64
  %x294 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 0
  %100 = load double* %x294, align 8, !tbaa !59
  %y298 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 1
  %101 = load double* %y298, align 8, !tbaa !61
  %z302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 2
  %102 = load double* %z302, align 8, !tbaa !62
  br label %while.cond303.outer

while.cond303.outer:                              ; preds = %if.then330, %if.then288
  %p_j_z.0.ph = phi double [ %102, %if.then288 ], [ %108, %if.then330 ]
  %p_j_y.0.ph = phi double [ %101, %if.then288 ], [ %107, %if.then330 ]
  %p_j_x.0.ph = phi double [ %100, %if.then288 ], [ %106, %if.then330 ]
  %j2.0.ph = phi i32 [ %99, %if.then288 ], [ %105, %if.then330 ]
  %gli.0.ph = phi i32* [ %cond3011341137, %if.then288 ], [ %incdec.ptr, %if.then330 ]
  %g.3.ph = phi i32 [ %cond281, %if.then288 ], [ %inc306, %if.then330 ]
  %103 = sext i32 %g.3.ph to i64
  br label %while.cond303

while.cond303:                                    ; preds = %while.body305, %while.cond303.outer
  %indvars.iv1076 = phi i64 [ %103, %while.cond303.outer ], [ %indvars.iv.next1077, %while.body305 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond303.outer ], [ %108, %while.body305 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond303.outer ], [ %107, %while.body305 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond303.outer ], [ %106, %while.body305 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond303.outer ], [ %105, %while.body305 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond303.outer ], [ %inc306, %while.body305 ]
  %104 = trunc i64 %indvars.iv1076 to i32
  %cmp304 = icmp slt i32 %104, %cond286
  br i1 %cmp304, label %while.body305, label %while.end332

while.body305:                                    ; preds = %while.cond303
  %indvars.iv.next1077 = add nsw i64 %indvars.iv1076, 1
  %inc306 = add nsw i32 %g.3, 1
  %arrayidx308 = getelementptr inbounds i32* %cond276, i64 %indvars.iv.next1077
  %105 = load i32* %arrayidx308, align 4, !tbaa !11
  %sub309 = fsub double %74, %p_j_x.0
  %mul310 = fmul double %sub309, %sub309
  %idxprom311 = sext i32 %105 to i64
  %x314 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 0
  %106 = load double* %x314, align 8, !tbaa !59
  %sub315 = fsub double %75, %p_j_y.0
  %mul316 = fmul double %sub315, %sub315
  %add317 = fadd double %mul316, %mul310
  %y321 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 1
  %107 = load double* %y321, align 8, !tbaa !61
  %sub322 = fsub double %76, %p_j_z.0
  %mul323 = fmul double %sub322, %sub322
  %add324 = fadd double %mul323, %add317
  %z328 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 2
  %108 = load double* %z328, align 8, !tbaa !62
  %cmp329 = fcmp ugt double %add324, %3
  br i1 %cmp329, label %while.cond303, label %if.then330

if.then330:                                       ; preds = %while.body305
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond303.outer

while.end332:                                     ; preds = %while.cond303
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div808 = lshr exact i64 %sub.ptr.sub, 2
  %conv333 = trunc i64 %sub.ptr.div808 to i32
  %cmp335874 = icmp sgt i32 %conv333, 0
  br i1 %cmp335874, label %for.body336.lr.ph, label %if.end370

for.body336.lr.ph:                                ; preds = %while.end332
  %109 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %110 = lshr i64 %109, 2
  %111 = trunc i64 %110 to i32
  br label %for.body336

for.body336:                                      ; preds = %cond.end356, %for.body336.lr.ph
  %indvars.iv1078 = phi i64 [ 0, %for.body336.lr.ph ], [ %indvars.iv.next1079, %cond.end356 ]
  %pli.0876 = phi i32* [ %add.ptr271, %for.body336.lr.ph ], [ %add.ptr366, %cond.end356 ]
  %arrayidx339 = getelementptr inbounds i32* %cond3011341137, i64 %indvars.iv1078
  %112 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom341 = sext i32 %112 to i64
  %nonbondedGroupIsAtom343 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom341, i32 2
  %113 = bitcast [4 x i8]* %nonbondedGroupIsAtom343 to i32*
  %bf.load344 = load i32* %113, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end356

cond.false349:                                    ; preds = %for.body336
  %bf.lshr354 = lshr i32 %bf.load344, 22
  %bf.clear355 = and i32 %bf.lshr354, 7
  %phitmp809 = zext i32 %bf.clear355 to i64
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false349, %for.body336
  %cond357 = phi i64 [ %phitmp809, %cond.false349 ], [ 1, %for.body336 ]
  store i32 %112, i32* %pli.0876, align 4, !tbaa !11
  %add359 = add nsw i32 %112, 1
  %arrayidx360 = getelementptr inbounds i32* %pli.0876, i64 1
  store i32 %add359, i32* %arrayidx360, align 4, !tbaa !11
  %add361 = add nsw i32 %112, 2
  %arrayidx362 = getelementptr inbounds i32* %pli.0876, i64 2
  store i32 %add361, i32* %arrayidx362, align 4, !tbaa !11
  %add363 = add nsw i32 %112, 3
  %arrayidx364 = getelementptr inbounds i32* %pli.0876, i64 3
  store i32 %add363, i32* %arrayidx364, align 4, !tbaa !11
  %add.ptr366 = getelementptr inbounds i32* %pli.0876, i64 %cond357
  %indvars.iv.next1079 = add nuw nsw i64 %indvars.iv1078, 1
  %lftr.wideiv1080 = trunc i64 %indvars.iv.next1079 to i32
  %exitcond1081 = icmp eq i32 %lftr.wideiv1080, %111
  br i1 %exitcond1081, label %if.end370, label %for.body336

if.end370:                                        ; preds = %cond.end356, %while.end332, %for.end269
  %pli.1 = phi i32* [ %add.ptr271, %for.end269 ], [ %add.ptr271, %while.end332 ], [ %add.ptr366, %cond.end356 ]
  %sub.ptr.lhs.cast371 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub373 = sub i64 %sub.ptr.lhs.cast371, %sub.ptr.rhs.cast372
  %sub.ptr.div374805 = lshr exact i64 %sub.ptr.sub373, 2
  %conv375 = trunc i64 %sub.ptr.div374805 to i32
  %tobool376 = icmp eq i32 %conv375, 0
  br i1 %tobool376, label %if.end385, label %if.then377

if.then377:                                       ; preds = %if.end370
  %sub378 = shl i64 %sub.ptr.sub373, 30
  %sext806 = add i64 %sub378, -4294967296
  %idxprom379 = ashr exact i64 %sext806, 32
  %arrayidx380 = getelementptr inbounds i32* %cond114833835841847, i64 %idxprom379
  %114 = load i32* %arrayidx380, align 4, !tbaa !11
  %idxprom381 = ashr exact i64 %sub378, 32
  %arrayidx382 = getelementptr inbounds i32* %cond114833835841847, i64 %idxprom381
  store i32 %114, i32* %arrayidx382, align 4, !tbaa !11
  br label %if.end385

if.else:                                          ; preds = %for.body175
  %inc384 = add nsw i32 %pairlistoffset.01016, 1
  br label %if.end385

if.end385:                                        ; preds = %if.else, %if.then377, %if.end370
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then377 ], [ %pairCount.1, %if.end370 ], [ %pairCount.01015, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then377 ], [ 0, %if.end370 ], [ %inc384, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv375, %if.then377 ], [ 0, %if.end370 ], [ %pairlistindex.01017, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then377 ], [ %fixg_lower.2, %if.end370 ], [ %fixg_lower.01018, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then377 ], [ %g_lower.2, %if.end370 ], [ %g_lower.01019, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then377 ], [ %j_hgroup.1, %if.end370 ], [ %j_hgroup.01020, %if.else ]
  %115 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool386 = icmp eq i32 %115, 0
  %bf.load395.pre = load i32* %69, align 4
  br i1 %tobool386, label %land.end392, label %land.rhs387

land.rhs387:                                      ; preds = %if.end385
  %bf.clear390 = and i32 %bf.load395.pre, 67108864
  %tobool391 = icmp ne i32 %bf.clear390, 0
  br label %land.end392

land.end392:                                      ; preds = %land.rhs387, %if.end385
  %116 = phi i1 [ %tobool391, %land.rhs387 ], [ false, %if.end385 ]
  %117 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %118 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add394 = add nsw i32 %118, 1
  %bf.lshr396 = lshr i32 %bf.load395.pre, 28
  %mul397 = mul nsw i32 %bf.lshr396, %add394
  %idx.ext398 = sext i32 %mul397 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 1
  %119 = load float* %charge, align 4, !tbaa !63
  %conv400 = fpext float %119 to double
  %mul401 = fmul double %conv400, 3.320636e+02
  %mul402 = fmul double %9, %mul401
  %mul403 = fmul double %4, %mul402
  %bf.clear406 = and i32 %bf.load395.pre, 4194303
  %idxprom.i821854 = zext i32 %bf.clear406 to i64
  %120 = load i32** %atomVdwType.i822, align 8, !tbaa !64
  %arrayidx.i823 = getelementptr inbounds i32* %120, i64 %idxprom.i821854
  %121 = load i32* %arrayidx.i823, align 4, !tbaa !11
  %122 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %123 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv408 = shl i32 %121, 1
  %mul.i = and i32 %conv408, 131070
  %mul2.i = mul i32 %mul.i, %123
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp414902 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %116, label %for.cond413.preheader, label %if.else474

for.cond413.preheader:                            ; preds = %land.end392
  br i1 %cmp414902, label %for.body415.lr.ph, label %if.end553

for.body415.lr.ph:                                ; preds = %for.cond413.preheader
  %124 = sext i32 %pairlistoffset.1 to i64
  br label %for.body415

for.body415:                                      ; preds = %for.inc471, %for.body415.lr.ph
  %indvars.iv1091 = phi i64 [ %124, %for.body415.lr.ph ], [ %indvars.iv.next1092, %for.inc471 ]
  %exclChecksum.1906 = phi i32 [ %exclChecksum.01037, %for.body415.lr.ph ], [ %exclChecksum.3, %for.inc471 ]
  %pli410.0905 = phi i32* [ %cond125837839849, %for.body415.lr.ph ], [ %pli410.1, %for.inc471 ]
  %plin.0904 = phi i32* [ %cond136843845, %for.body415.lr.ph ], [ %plin.1, %for.inc471 ]
  %arrayidx417 = getelementptr inbounds i32* %cond114833835841847, i64 %indvars.iv1091
  %125 = load i32* %arrayidx417, align 4, !tbaa !11
  %idxprom419 = sext i32 %125 to i64
  %x422 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 0
  %126 = load double* %x422, align 8, !tbaa !59
  %sub424 = fsub double %74, %126
  %mul425 = fmul double %sub424, %sub424
  %y430 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 1
  %127 = load double* %y430, align 8, !tbaa !61
  %sub432 = fsub double %75, %127
  %mul433 = fmul double %sub432, %sub432
  %add434 = fadd double %mul425, %mul433
  %z439 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 0, i32 2
  %128 = load double* %z439, align 8, !tbaa !62
  %sub440 = fsub double %76, %128
  %mul441 = fmul double %sub440, %sub440
  %add442 = fadd double %add434, %mul441
  %atomFixed445 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom419, i32 2
  %129 = bitcast [4 x i8]* %atomFixed445 to i32*
  %bf.load446 = load i32* %129, align 4
  %bf.clear448 = and i32 %bf.load446, 67108864
  %tobool449 = icmp ne i32 %bf.clear448, 0
  %cmp450 = fcmp ugt double %add442, %2
  %or.cond812 = or i1 %tobool449, %cmp450
  br i1 %or.cond812, label %for.inc471, label %land.lhs.true451

land.lhs.true451:                                 ; preds = %for.body415
  %cmp452 = fcmp ugt double %add442, %11
  br i1 %cmp452, label %if.then456, label %land.lhs.true453

land.lhs.true453:                                 ; preds = %land.lhs.true451
  %inc454 = add nsw i32 %exclChecksum.1906, 1
  %tobool455 = icmp eq i32 %inc454, 0
  br i1 %tobool455, label %if.then456, label %for.inc471

if.then456:                                       ; preds = %land.lhs.true453, %land.lhs.true451
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true453 ], [ %exclChecksum.1906, %land.lhs.true451 ]
  %bf.clear461 = and i32 %bf.load446, 4194303
  %cmp462 = icmp slt i32 %bf.clear461, %71
  %cmp464 = icmp sgt i32 %bf.clear461, %72
  %or.cond813 = or i1 %cmp462, %cmp464
  br i1 %or.cond813, label %if.else467, label %if.then465

if.then465:                                       ; preds = %if.then456
  %incdec.ptr466 = getelementptr inbounds i32* %pli410.0905, i64 1
  store i32 %125, i32* %pli410.0905, align 4, !tbaa !11
  br label %for.inc471

if.else467:                                       ; preds = %if.then456
  %incdec.ptr468 = getelementptr inbounds i32* %plin.0904, i64 1
  store i32 %125, i32* %plin.0904, align 4, !tbaa !11
  br label %for.inc471

for.inc471:                                       ; preds = %if.else467, %if.then465, %land.lhs.true453, %for.body415
  %plin.1 = phi i32* [ %plin.0904, %for.body415 ], [ %plin.0904, %land.lhs.true453 ], [ %plin.0904, %if.then465 ], [ %incdec.ptr468, %if.else467 ]
  %pli410.1 = phi i32* [ %pli410.0905, %for.body415 ], [ %pli410.0905, %land.lhs.true453 ], [ %incdec.ptr466, %if.then465 ], [ %pli410.0905, %if.else467 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1906, %for.body415 ], [ %inc454, %land.lhs.true453 ], [ %exclChecksum.2, %if.then465 ], [ %exclChecksum.2, %if.else467 ]
  %indvars.iv.next1092 = add nsw i64 %indvars.iv1091, 1
  %lftr.wideiv1093 = trunc i64 %indvars.iv.next1092 to i32
  %exitcond1094 = icmp eq i32 %lftr.wideiv1093, %pairlistindex.2
  br i1 %exitcond1094, label %if.end553, label %for.body415

if.else474:                                       ; preds = %land.end392
  br i1 %cmp414902, label %if.then477, label %if.end553

if.then477:                                       ; preds = %if.else474
  %idxprom479 = sext i32 %pairlistoffset.1 to i64
  %arrayidx480 = getelementptr inbounds i32* %cond114833835841847, i64 %idxprom479
  %130 = load i32* %arrayidx480, align 4, !tbaa !11
  %idxprom482 = sext i32 %130 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 0
  %131 = load double* %x485, align 8, !tbaa !59
  %y490 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 1
  %132 = load double* %y490, align 8, !tbaa !61
  %z495 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482, i32 0, i32 2
  %133 = load double* %z495, align 8, !tbaa !62
  br label %while.cond502.outer

while.cond502.outer:                              ; preds = %if.else542, %if.then477
  %idxprom482.pn.ph = phi i64 [ %idxprom482, %if.then477 ], [ %idxprom511, %if.else542 ]
  %p_j_z491.0.ph = phi double [ %133, %if.then477 ], [ %139, %if.else542 ]
  %p_j_y486.0.ph = phi double [ %132, %if.then477 ], [ %138, %if.else542 ]
  %p_j_x481.0.ph = phi double [ %131, %if.then477 ], [ %137, %if.else542 ]
  %j2478.0.ph = phi i32 [ %130, %if.then477 ], [ %136, %if.else542 ]
  %k475.0.ph = phi i32 [ %pairlistoffset.1, %if.then477 ], [ %inc505, %if.else542 ]
  %plin.2.ph = phi i32* [ %cond136843845, %if.then477 ], [ %incdec.ptr543, %if.else542 ]
  %pli410.2.ph = phi i32* [ %cond125837839849, %if.then477 ], [ %pli410.2.ph885, %if.else542 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.01037, %if.then477 ], [ %exclChecksum.5, %if.else542 ]
  br label %while.cond502.outer878

while.cond502.outer878:                           ; preds = %if.then540, %while.cond502.outer
  %idxprom482.pn.ph879 = phi i64 [ %idxprom511, %if.then540 ], [ %idxprom482.pn.ph, %while.cond502.outer ]
  %p_j_z491.0.ph880 = phi double [ %139, %if.then540 ], [ %p_j_z491.0.ph, %while.cond502.outer ]
  %p_j_y486.0.ph881 = phi double [ %138, %if.then540 ], [ %p_j_y486.0.ph, %while.cond502.outer ]
  %p_j_x481.0.ph882 = phi double [ %137, %if.then540 ], [ %p_j_x481.0.ph, %while.cond502.outer ]
  %j2478.0.ph883 = phi i32 [ %136, %if.then540 ], [ %j2478.0.ph, %while.cond502.outer ]
  %k475.0.ph884 = phi i32 [ %inc505, %if.then540 ], [ %k475.0.ph, %while.cond502.outer ]
  %pli410.2.ph885 = phi i32* [ %incdec.ptr541, %if.then540 ], [ %pli410.2.ph, %while.cond502.outer ]
  %exclChecksum.4.ph886 = phi i32 [ %exclChecksum.5, %if.then540 ], [ %exclChecksum.4.ph, %while.cond502.outer ]
  br label %while.cond502.outer887

while.cond502.outer887:                           ; preds = %land.lhs.true533, %while.cond502.outer878
  %idxprom482.pn.ph888 = phi i64 [ %idxprom511, %land.lhs.true533 ], [ %idxprom482.pn.ph879, %while.cond502.outer878 ]
  %p_j_z491.0.ph889 = phi double [ %139, %land.lhs.true533 ], [ %p_j_z491.0.ph880, %while.cond502.outer878 ]
  %p_j_y486.0.ph890 = phi double [ %138, %land.lhs.true533 ], [ %p_j_y486.0.ph881, %while.cond502.outer878 ]
  %p_j_x481.0.ph891 = phi double [ %137, %land.lhs.true533 ], [ %p_j_x481.0.ph882, %while.cond502.outer878 ]
  %j2478.0.ph892 = phi i32 [ %136, %land.lhs.true533 ], [ %j2478.0.ph883, %while.cond502.outer878 ]
  %k475.0.ph893 = phi i32 [ %inc505, %land.lhs.true533 ], [ %k475.0.ph884, %while.cond502.outer878 ]
  %exclChecksum.4.ph894 = phi i32 [ %inc534, %land.lhs.true533 ], [ %exclChecksum.4.ph886, %while.cond502.outer878 ]
  %134 = sext i32 %k475.0.ph893 to i64
  br label %while.cond502

while.cond502:                                    ; preds = %while.body504, %while.cond502.outer887
  %indvars.iv1087 = phi i64 [ %134, %while.cond502.outer887 ], [ %indvars.iv.next1088, %while.body504 ]
  %idxprom482.pn = phi i64 [ %idxprom482.pn.ph888, %while.cond502.outer887 ], [ %idxprom511, %while.body504 ]
  %p_j_z491.0 = phi double [ %p_j_z491.0.ph889, %while.cond502.outer887 ], [ %139, %while.body504 ]
  %p_j_y486.0 = phi double [ %p_j_y486.0.ph890, %while.cond502.outer887 ], [ %138, %while.body504 ]
  %p_j_x481.0 = phi double [ %p_j_x481.0.ph891, %while.cond502.outer887 ], [ %137, %while.body504 ]
  %j2478.0 = phi i32 [ %j2478.0.ph892, %while.cond502.outer887 ], [ %136, %while.body504 ]
  %k475.0 = phi i32 [ %k475.0.ph893, %while.cond502.outer887 ], [ %inc505, %while.body504 ]
  %135 = trunc i64 %indvars.iv1087 to i32
  %cmp503 = icmp slt i32 %135, %pairlistindex.2
  br i1 %cmp503, label %while.body504, label %if.end553

while.body504:                                    ; preds = %while.cond502
  %atom2496.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom482.pn, i32 2
  %atom2496.0.in.in = bitcast [4 x i8]* %atom2496.0.in.in.in to i32*
  %atom2496.0.in = load i32* %atom2496.0.in.in, align 4
  %atom2496.0 = and i32 %atom2496.0.in, 4194303
  %indvars.iv.next1088 = add nsw i64 %indvars.iv1087, 1
  %inc505 = add nsw i32 %k475.0, 1
  %arrayidx507 = getelementptr inbounds i32* %cond114833835841847, i64 %indvars.iv.next1088
  %136 = load i32* %arrayidx507, align 4, !tbaa !11
  %sub509 = fsub double %74, %p_j_x481.0
  %mul510 = fmul double %sub509, %sub509
  %idxprom511 = sext i32 %136 to i64
  %x514 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 0
  %137 = load double* %x514, align 8, !tbaa !59
  %sub516 = fsub double %75, %p_j_y486.0
  %mul517 = fmul double %sub516, %sub516
  %add518 = fadd double %mul517, %mul510
  %y522 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 1
  %138 = load double* %y522, align 8, !tbaa !61
  %sub523 = fsub double %76, %p_j_z491.0
  %mul524 = fmul double %sub523, %sub523
  %add525 = fadd double %mul524, %add518
  %z529 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom511, i32 0, i32 2
  %139 = load double* %z529, align 8, !tbaa !62
  %cmp530 = fcmp ugt double %add525, %2
  br i1 %cmp530, label %while.cond502, label %land.lhs.true531

land.lhs.true531:                                 ; preds = %while.body504
  %cmp532 = fcmp ugt double %add525, %11
  br i1 %cmp532, label %if.then536, label %land.lhs.true533

land.lhs.true533:                                 ; preds = %land.lhs.true531
  %inc534 = add nsw i32 %exclChecksum.4.ph894, 1
  %tobool535 = icmp eq i32 %inc534, 0
  br i1 %tobool535, label %if.then536, label %while.cond502.outer887

if.then536:                                       ; preds = %land.lhs.true533, %land.lhs.true531
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true533 ], [ %exclChecksum.4.ph894, %land.lhs.true531 ]
  %cmp537 = icmp slt i32 %atom2496.0, %71
  %cmp539 = icmp sgt i32 %atom2496.0, %72
  %or.cond814 = or i1 %cmp537, %cmp539
  br i1 %or.cond814, label %if.else542, label %if.then540

if.then540:                                       ; preds = %if.then536
  %incdec.ptr541 = getelementptr inbounds i32* %pli410.2.ph885, i64 1
  store i32 %j2478.0, i32* %pli410.2.ph885, align 4, !tbaa !11
  br label %while.cond502.outer878

if.else542:                                       ; preds = %if.then536
  %incdec.ptr543 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2478.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond502.outer

if.end553:                                        ; preds = %while.cond502, %if.else474, %for.inc471, %for.cond413.preheader
  %plin.4 = phi i32* [ %cond136843845, %if.else474 ], [ %cond136843845, %for.cond413.preheader ], [ %plin.2.ph, %while.cond502 ], [ %plin.1, %for.inc471 ]
  %pli410.4 = phi i32* [ %cond125837839849, %if.else474 ], [ %cond125837839849, %for.cond413.preheader ], [ %pli410.2.ph885, %while.cond502 ], [ %pli410.1, %for.inc471 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.01037, %if.else474 ], [ %exclChecksum.01037, %for.cond413.preheader ], [ %exclChecksum.4.ph894, %while.cond502 ], [ %exclChecksum.3, %for.inc471 ]
  %sub.ptr.lhs.cast554 = ptrtoint i32* %pli410.4 to i64
  %sub.ptr.sub556 = sub i64 %sub.ptr.lhs.cast554, %sub.ptr.rhs.cast555
  %sub.ptr.div557752 = lshr exact i64 %sub.ptr.sub556, 2
  %conv558 = trunc i64 %sub.ptr.div557752 to i32
  %tobool559 = icmp eq i32 %conv558, 0
  br i1 %tobool559, label %for.cond568.preheader, label %if.then560

if.then560:                                       ; preds = %if.end553
  %sub561 = shl i64 %sub.ptr.sub556, 30
  %sext803 = add i64 %sub561, -4294967296
  %idxprom562 = ashr exact i64 %sext803, 32
  %arrayidx563 = getelementptr inbounds i32* %cond125837839849, i64 %idxprom562
  %140 = load i32* %arrayidx563, align 4, !tbaa !11
  %idxprom564 = ashr exact i64 %sub561, 32
  %arrayidx565 = getelementptr inbounds i32* %cond125837839849, i64 %idxprom564
  store i32 %140, i32* %arrayidx565, align 4, !tbaa !11
  br label %for.cond568.preheader

for.cond568.preheader:                            ; preds = %if.then560, %if.end553
  %cmp569910 = icmp ult i32* %cond136843845, %plin.4
  br i1 %cmp569910, label %land.lhs.true570, label %for.cond577.loopexit

land.lhs.true570:                                 ; preds = %for.body572, %for.cond568.preheader
  %exclChecksum.8913 = phi i32 [ %dec, %for.body572 ], [ %exclChecksum.7, %for.cond568.preheader ]
  %plix.0912 = phi i32* [ %incdec.ptr573, %for.body572 ], [ %cond147851, %for.cond568.preheader ]
  %pln.0911 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %cond136843845, %for.cond568.preheader ]
  %141 = load i32* %pln.0911, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %141, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond577.loopexit

for.body572:                                      ; preds = %land.lhs.true570
  %incdec.ptr573 = getelementptr inbounds i32* %plix.0912, i64 1
  store i32 %141, i32* %plix.0912, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8913, -1
  %incdec.ptr575 = getelementptr inbounds i32* %pln.0911, i64 1
  %cmp569 = icmp ult i32* %incdec.ptr575, %plin.4
  br i1 %cmp569, label %land.lhs.true570, label %for.cond577.loopexit

for.cond577.loopexit:                             ; preds = %for.body572, %land.lhs.true570, %for.cond568.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond568.preheader ], [ %dec, %for.body572 ], [ %exclChecksum.8913, %land.lhs.true570 ]
  %plix.0.lcssa = phi i32* [ %cond147851, %for.cond568.preheader ], [ %incdec.ptr573, %for.body572 ], [ %plix.0912, %land.lhs.true570 ]
  %pln.0.lcssa = phi i32* [ %cond136843845, %for.cond568.preheader ], [ %incdec.ptr575, %for.body572 ], [ %pln.0911, %land.lhs.true570 ]
  %cmp578917 = icmp sgt i32 %conv558, 0
  br i1 %cmp578917, label %land.lhs.true579, label %for.cond591.loopexit

land.lhs.true579:                                 ; preds = %for.body583, %for.cond577.loopexit
  %indvars.iv1101 = phi i64 [ %indvars.iv.next1102, %for.body583 ], [ 0, %for.cond577.loopexit ]
  %exclChecksum.9920 = phi i32 [ %dec587, %for.body583 ], [ %exclChecksum.8.lcssa, %for.cond577.loopexit ]
  %plix.1919 = phi i32* [ %incdec.ptr586, %for.body583 ], [ %plix.0.lcssa, %for.cond577.loopexit ]
  %k567.0918 = phi i32 [ %inc589, %for.body583 ], [ 0, %for.cond577.loopexit ]
  %arrayidx581 = getelementptr inbounds i32* %cond125837839849, i64 %indvars.iv1101
  %142 = load i32* %arrayidx581, align 4, !tbaa !11
  %cmp582 = icmp slt i32 %142, %j_hgroup.2
  br i1 %cmp582, label %for.body583, label %for.cond591.loopexit

for.body583:                                      ; preds = %land.lhs.true579
  %incdec.ptr586 = getelementptr inbounds i32* %plix.1919, i64 1
  store i32 %142, i32* %plix.1919, align 4, !tbaa !11
  %dec587 = add nsw i32 %exclChecksum.9920, -1
  %indvars.iv.next1102 = add nuw nsw i64 %indvars.iv1101, 1
  %inc589 = add nsw i32 %k567.0918, 1
  %143 = trunc i64 %indvars.iv.next1102 to i32
  %cmp578 = icmp slt i32 %143, %conv558
  br i1 %cmp578, label %land.lhs.true579, label %for.cond591.loopexit

for.cond591.loopexit:                             ; preds = %for.body583, %land.lhs.true579, %for.cond577.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond577.loopexit ], [ %dec587, %for.body583 ], [ %exclChecksum.9920, %land.lhs.true579 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond577.loopexit ], [ %incdec.ptr586, %for.body583 ], [ %plix.1919, %land.lhs.true579 ]
  %k567.0.lcssa = phi i32 [ 0, %for.cond577.loopexit ], [ %inc589, %for.body583 ], [ %k567.0918, %land.lhs.true579 ]
  %cmp592924 = icmp slt i32 %k567.0.lcssa, %conv558
  br i1 %cmp592924, label %for.body593.lr.ph, label %for.end613

for.body593.lr.ph:                                ; preds = %for.cond591.loopexit
  %144 = sext i32 %k567.0.lcssa to i64
  %145 = sub i64 %sub.ptr.lhs.cast554, %sub.ptr.rhs.cast555
  %146 = lshr i64 %145, 2
  %147 = trunc i64 %146 to i32
  br label %for.body593

for.body593:                                      ; preds = %for.inc611, %for.body593.lr.ph
  %indvars.iv1103 = phi i64 [ %144, %for.body593.lr.ph ], [ %indvars.iv.next1104, %for.inc611 ]
  %plin.5928 = phi i32* [ %plin.4, %for.body593.lr.ph ], [ %plin.6, %for.inc611 ]
  %plix.2927 = phi i32* [ %plix.1.lcssa, %for.body593.lr.ph ], [ %plix.3, %for.inc611 ]
  %plim.0926 = phi i32* [ %cond158, %for.body593.lr.ph ], [ %plim.1, %for.inc611 ]
  %arrayidx596 = getelementptr inbounds i32* %cond125837839849, i64 %indvars.iv1103
  %148 = load i32* %arrayidx596, align 4, !tbaa !11
  %idxprom598 = sext i32 %148 to i64
  %id600 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom598, i32 2
  %149 = bitcast [4 x i8]* %id600 to i32*
  %bf.load601 = load i32* %149, align 4
  %bf.clear602 = and i32 %bf.load601, 4194303
  %idxprom603802 = zext i32 %bf.clear602 to i64
  %add.ptr.sum = sub i64 %idxprom603802, %idx.ext
  %arrayidx604 = getelementptr inbounds i8* %73, i64 %add.ptr.sum
  %150 = load i8* %arrayidx604, align 1, !tbaa !68
  %conv605 = sext i8 %150 to i32
  switch i32 %conv605, label %for.inc611 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb607
    i32 2, label %sw.bb609
  ]

sw.bb:                                            ; preds = %for.body593
  %incdec.ptr606 = getelementptr inbounds i32* %plin.5928, i64 1
  store i32 %148, i32* %plin.5928, align 4, !tbaa !11
  br label %for.inc611

sw.bb607:                                         ; preds = %for.body593
  %incdec.ptr608 = getelementptr inbounds i32* %plix.2927, i64 1
  store i32 %148, i32* %plix.2927, align 4, !tbaa !11
  br label %for.inc611

sw.bb609:                                         ; preds = %for.body593
  %incdec.ptr610 = getelementptr inbounds i32* %plim.0926, i64 1
  store i32 %148, i32* %plim.0926, align 4, !tbaa !11
  br label %for.inc611

for.inc611:                                       ; preds = %sw.bb609, %sw.bb607, %sw.bb, %for.body593
  %plim.1 = phi i32* [ %plim.0926, %for.body593 ], [ %incdec.ptr610, %sw.bb609 ], [ %plim.0926, %sw.bb607 ], [ %plim.0926, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2927, %for.body593 ], [ %plix.2927, %sw.bb609 ], [ %incdec.ptr608, %sw.bb607 ], [ %plix.2927, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5928, %for.body593 ], [ %plin.5928, %sw.bb609 ], [ %plin.5928, %sw.bb607 ], [ %incdec.ptr606, %sw.bb ]
  %indvars.iv.next1104 = add nsw i64 %indvars.iv1103, 1
  %lftr.wideiv1105 = trunc i64 %indvars.iv.next1104 to i32
  %exitcond1106 = icmp eq i32 %lftr.wideiv1105, %147
  br i1 %exitcond1106, label %for.end613, label %for.body593

for.end613:                                       ; preds = %for.inc611, %for.cond591.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond591.loopexit ], [ %plin.6, %for.inc611 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond591.loopexit ], [ %plix.3, %for.inc611 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond591.loopexit ], [ %plim.1, %for.inc611 ]
  %sub.ptr.lhs.cast614 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub616 = sub i64 %sub.ptr.lhs.cast614, %sub.ptr.rhs.cast615
  %sub.ptr.div617 = ashr exact i64 %sub.ptr.sub616, 2
  %conv618753 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast621 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub623 = sub i64 %sub.ptr.lhs.cast621, %sub.ptr.rhs.cast622
  %sub.ptr.div624 = ashr exact i64 %sub.ptr.sub623, 2
  %add619 = add i64 %sub.ptr.div624, %conv618753
  %add626 = add i64 %add619, %sub.ptr.div617
  %conv627 = trunc i64 %add626 to i32
  %sub.ptr.lhs.cast628 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast629 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub630 = sub i64 %sub.ptr.lhs.cast628, %sub.ptr.rhs.cast629
  %sub.ptr.div631755 = lshr exact i64 %sub.ptr.sub630, 2
  %conv632 = trunc i64 %sub.ptr.div631755 to i32
  %cmp634932 = icmp sgt i32 %conv632, 0
  br i1 %cmp634932, label %for.body635.lr.ph, label %for.end844

for.body635.lr.ph:                                ; preds = %for.end613
  %x767 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y776 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z783 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x820 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y830 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z838 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body635

for.body635:                                      ; preds = %for.body635.for.body635_crit_edge, %for.body635.lr.ph
  %151 = phi i32* [ %120, %for.body635.lr.ph ], [ %.pre, %for.body635.for.body635_crit_edge ]
  %indvars.iv1107 = phi i64 [ 0, %for.body635.lr.ph ], [ %indvars.iv.next1108, %for.body635.for.body635_crit_edge ]
  %fullElectVirial_zz.1934 = phi double [ %fullElectVirial_zz.01022, %for.body635.lr.ph ], [ %add837, %for.body635.for.body635_crit_edge ]
  %152 = phi <2 x double> [ %62, %for.body635.lr.ph ], [ %231, %for.body635.for.body635_crit_edge ]
  %153 = phi <2 x double> [ %63, %for.body635.lr.ph ], [ %189, %for.body635.for.body635_crit_edge ]
  %154 = phi <2 x double> [ %64, %for.body635.lr.ph ], [ %195, %for.body635.for.body635_crit_edge ]
  %155 = phi <2 x double> [ %65, %for.body635.lr.ph ], [ %208, %for.body635.for.body635_crit_edge ]
  %156 = phi <2 x double> [ %66, %for.body635.lr.ph ], [ %237, %for.body635.for.body635_crit_edge ]
  %157 = phi <2 x double> [ %67, %for.body635.lr.ph ], [ %246, %for.body635.for.body635_crit_edge ]
  %158 = phi <2 x double> [ %68, %for.body635.lr.ph ], [ %242, %for.body635.for.body635_crit_edge ]
  %arrayidx638 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv1107
  %159 = load i32* %arrayidx638, align 4, !tbaa !11
  %idx.ext639 = sext i32 %159 to i64
  %x642 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 0
  %160 = load double* %x642, align 8, !tbaa !59
  %sub643 = fsub double %74, %160
  %mul645 = fmul double %sub643, %sub643
  %y647 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 1
  %161 = load double* %y647, align 8, !tbaa !61
  %sub648 = fsub double %75, %161
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %mul645, %mul649
  %z652 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 0, i32 2
  %162 = load double* %z652, align 8, !tbaa !62
  %sub653 = fsub double %76, %162
  %mul654 = fmul double %sub653, %sub653
  %add655 = fadd double %add650, %mul654
  %conv656 = fptrunc double %add655 to float
  %163 = bitcast float %conv656 to i32
  %shr = ashr i32 %163, 17
  %add658 = add nsw i32 %shr, %mul
  %id659 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 2
  %164 = bitcast [4 x i8]* %id659 to i32*
  %bf.load660 = load i32* %164, align 4
  %bf.clear661 = and i32 %bf.load660, 4194303
  %idxprom.i817857 = zext i32 %bf.clear661 to i64
  %arrayidx.i819 = getelementptr inbounds i32* %151, i64 %idxprom.i817857
  %165 = load i32* %arrayidx.i819, align 4, !tbaa !11
  %conv.i820 = zext i32 %165 to i64
  %conv663 = shl nuw nsw i64 %conv.i820, 1
  %mul664 = and i64 %conv663, 131070
  %mul667 = shl nsw i32 %add658, 4
  %idx.ext668 = sext i32 %mul667 to i64
  %add.ptr669 = getelementptr inbounds double* %7, i64 %idx.ext668
  %166 = load double* %add.ptr669, align 8, !tbaa !17
  %add.ptr669.sum786 = or i64 %idx.ext668, 4
  %add.ptr674 = getelementptr inbounds double* %7, i64 %add.ptr669.sum786
  %167 = load double* %add.ptr674, align 8, !tbaa !17
  %add.ptr669.sum787 = or i64 %idx.ext668, 8
  %add.ptr679 = getelementptr inbounds double* %7, i64 %add.ptr669.sum787
  %168 = load double* %add.ptr679, align 8, !tbaa !17
  %add.ptr679.sum788 = or i64 %idx.ext668, 12
  %add.ptr685 = getelementptr inbounds double* %7, i64 %add.ptr679.sum788
  %169 = load double* %add.ptr685, align 8, !tbaa !17
  %and = and i32 %163, -131072
  %charge688 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext639, i32 1
  %170 = load float* %charge688, align 4, !tbaa !63
  %conv689 = fpext float %170 to double
  %mul690 = fmul double %mul403, %conv689
  %171 = bitcast i32 %and to float
  %conv692 = fpext float %171 to double
  %sub693 = fsub double %add655, %conv692
  %bf.lshr696 = lshr i32 %bf.load660, 28
  %idxprom697 = zext i32 %bf.lshr696 to i64
  %add.ptr399.sum789 = add i64 %idxprom697, %idx.ext398
  %arrayidx698 = getelementptr inbounds double* %117, i64 %add.ptr399.sum789
  %172 = load double* %arrayidx698, align 8, !tbaa !17
  %add.ptr.i.sum858 = add i64 %mul664, %idx.ext.i
  %A700 = getelementptr inbounds %"struct.LJTable::TableEntry"* %122, i64 %add.ptr.i.sum858, i32 0
  %173 = load double* %A700, align 8, !tbaa !69
  %mul701 = fmul double %9, %173
  %B703 = getelementptr inbounds %"struct.LJTable::TableEntry"* %122, i64 %add.ptr.i.sum858, i32 1
  %174 = load double* %B703, align 8, !tbaa !71
  %mul704 = fmul double %9, %174
  %mul705 = fmul double %166, %mul701
  %mul706 = fmul double %167, %mul704
  %sub707 = fsub double %mul705, %mul706
  %add.ptr669.sum790 = or i64 %idx.ext668, 3
  %arrayidx708 = getelementptr inbounds double* %7, i64 %add.ptr669.sum790
  %175 = load double* %arrayidx708, align 8, !tbaa !17
  %mul709 = fmul double %mul701, %175
  %add.ptr674.sum791 = or i64 %idx.ext668, 7
  %arrayidx710 = getelementptr inbounds double* %7, i64 %add.ptr674.sum791
  %176 = load double* %arrayidx710, align 8, !tbaa !17
  %mul711 = fmul double %mul704, %176
  %sub712 = fsub double %mul709, %mul711
  %add.ptr669.sum792 = or i64 %idx.ext668, 2
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr669.sum792
  %177 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul701, %177
  %add.ptr674.sum793 = or i64 %idx.ext668, 6
  %arrayidx715 = getelementptr inbounds double* %7, i64 %add.ptr674.sum793
  %178 = load double* %arrayidx715, align 8, !tbaa !17
  %mul716 = fmul double %mul704, %178
  %sub717 = fsub double %mul714, %mul716
  %add.ptr669.sum794 = or i64 %idx.ext668, 1
  %arrayidx718 = getelementptr inbounds double* %7, i64 %add.ptr669.sum794
  %179 = load double* %arrayidx718, align 8, !tbaa !17
  %mul719 = fmul double %mul701, %179
  %add.ptr674.sum795 = or i64 %idx.ext668, 5
  %arrayidx720 = getelementptr inbounds double* %7, i64 %add.ptr674.sum795
  %180 = load double* %arrayidx720, align 8, !tbaa !17
  %mul721 = fmul double %mul704, %180
  %sub722 = fsub double %mul719, %mul721
  %mul723 = fmul double %sub693, %sub712
  %add724 = fadd double %mul723, %sub717
  %mul725 = fmul double %sub693, %add724
  %add726 = fadd double %mul725, %sub722
  %mul727 = fmul double %sub693, %add726
  %add728 = fadd double %sub707, %mul727
  %add.ptr679.sum796 = or i64 %idx.ext668, 11
  %arrayidx732 = getelementptr inbounds double* %7, i64 %add.ptr679.sum796
  %181 = load double* %arrayidx732, align 8, !tbaa !17
  %mul733 = fmul double %mul690, %181
  %add.ptr679.sum797 = or i64 %idx.ext668, 10
  %arrayidx734 = getelementptr inbounds double* %7, i64 %add.ptr679.sum797
  %182 = load double* %arrayidx734, align 8, !tbaa !17
  %mul735 = fmul double %mul690, %182
  %add.ptr679.sum798 = or i64 %idx.ext668, 9
  %arrayidx736 = getelementptr inbounds double* %7, i64 %add.ptr679.sum798
  %183 = load double* %arrayidx736, align 8, !tbaa !17
  %mul737 = fmul double %mul690, %183
  %mul738 = fmul double %sub693, %mul733
  %add739 = fadd double %mul738, %mul735
  %add746 = fadd double %sub712, %mul733
  %add747 = fadd double %sub717, %mul735
  %add748 = fadd double %sub722, %mul737
  %mul750 = fmul double %sub693, 3.000000e+00
  %mul751 = fmul double %mul750, %add746
  %mul752 = fmul double %add747, 2.000000e+00
  %add753 = fadd double %mul751, %mul752
  %mul754 = fmul double %sub693, %add753
  %add755 = fadd double %add748, %mul754
  %mul756 = fmul double %172, -2.000000e+00
  %mul757 = fmul double %mul756, %add755
  %mul760 = fmul double %sub643, %mul757
  %184 = insertelement <2 x double> undef, double %add728, i32 0
  %185 = insertelement <2 x double> %184, double %sub643, i32 1
  %186 = insertelement <2 x double> undef, double %172, i32 0
  %187 = insertelement <2 x double> %186, double %mul760, i32 1
  %188 = fmul <2 x double> %185, %187
  %189 = fadd <2 x double> %153, %188
  %190 = insertelement <2 x double> undef, double %sub648, i32 0
  %191 = insertelement <2 x double> %190, double %sub653, i32 1
  %192 = insertelement <2 x double> undef, double %mul760, i32 0
  %193 = insertelement <2 x double> %192, double %mul760, i32 1
  %194 = fmul <2 x double> %191, %193
  %195 = fadd <2 x double> %154, %194
  %196 = load double* %x767, align 8, !tbaa !72
  %add768 = fadd double %196, %mul760
  store double %add768, double* %x767, align 8, !tbaa !72
  %x769 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext639, i32 0
  %mul771 = fmul double %sub648, %mul757
  %197 = load double* %y776, align 8, !tbaa !73
  %add777 = fadd double %197, %mul771
  store double %add777, double* %y776, align 8, !tbaa !73
  %198 = bitcast double* %x769 to <2 x double>*
  %199 = load <2 x double>* %198, align 8, !tbaa !17
  %200 = insertelement <2 x double> %192, double %mul771, i32 1
  %201 = fsub <2 x double> %199, %200
  %202 = bitcast double* %x769 to <2 x double>*
  store <2 x double> %201, <2 x double>* %202, align 8, !tbaa !17
  %mul780 = fmul double %sub653, %mul757
  %203 = insertelement <2 x double> undef, double %sub653, i32 0
  %204 = insertelement <2 x double> %203, double %sub653, i32 1
  %205 = insertelement <2 x double> undef, double %mul771, i32 0
  %206 = insertelement <2 x double> %205, double %mul780, i32 1
  %207 = fmul <2 x double> %204, %206
  %208 = fadd <2 x double> %155, %207
  %209 = load double* %z783, align 8, !tbaa !74
  %add784 = fadd double %209, %mul780
  store double %add784, double* %z783, align 8, !tbaa !74
  %z785 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext639, i32 2
  %210 = load double* %z785, align 8, !tbaa !74
  %sub786 = fsub double %210, %mul780
  store double %sub786, double* %z785, align 8, !tbaa !74
  %add.ptr685.sum799 = or i64 %idx.ext668, 13
  %arrayidx787 = getelementptr inbounds double* %7, i64 %add.ptr685.sum799
  %211 = load double* %arrayidx787, align 8, !tbaa !17
  %add.ptr685.sum800 = or i64 %idx.ext668, 14
  %arrayidx788 = getelementptr inbounds double* %7, i64 %add.ptr685.sum800
  %212 = load double* %arrayidx788, align 8, !tbaa !17
  %add.ptr685.sum801 = or i64 %idx.ext668, 15
  %arrayidx789 = getelementptr inbounds double* %7, i64 %add.ptr685.sum801
  %213 = load double* %arrayidx789, align 8, !tbaa !17
  %mul790 = fmul double %mul690, %213
  %mul791 = fmul double %mul690, %212
  %mul792 = fmul double %mul690, %211
  %214 = insertelement <2 x double> undef, double %mul690, i32 0
  %215 = insertelement <2 x double> %214, double %mul690, i32 1
  %216 = insertelement <2 x double> undef, double %168, i32 0
  %217 = insertelement <2 x double> %216, double %169, i32 1
  %218 = fmul <2 x double> %215, %217
  %mul794 = fmul double %sub693, %mul790
  %add795 = fadd double %mul791, %mul794
  %219 = insertelement <2 x double> undef, double %add739, i32 0
  %220 = insertelement <2 x double> %219, double %add795, i32 1
  %221 = insertelement <2 x double> undef, double %sub693, i32 0
  %222 = insertelement <2 x double> %221, double %sub693, i32 1
  %223 = fmul <2 x double> %220, %222
  %224 = insertelement <2 x double> undef, double %mul737, i32 0
  %225 = insertelement <2 x double> %224, double %mul792, i32 1
  %226 = fadd <2 x double> %225, %223
  %227 = fmul <2 x double> %226, %222
  %228 = fadd <2 x double> %218, %227
  %229 = insertelement <2 x double> %186, double %172, i32 1
  %230 = fmul <2 x double> %228, %229
  %231 = fadd <2 x double> %152, %230
  %mul803 = fmul double %mul750, %mul790
  %mul804 = fmul double %mul791, 2.000000e+00
  %add805 = fadd double %mul804, %mul803
  %mul806 = fmul double %sub693, %add805
  %add807 = fadd double %mul792, %mul806
  %mul808 = fmul double %add807, -2.000000e+00
  %mul809 = fmul double %172, %mul808
  %mul813 = fmul double %sub643, %mul809
  %232 = insertelement <2 x double> undef, double %sub643, i32 0
  %233 = insertelement <2 x double> %232, double %sub648, i32 1
  %234 = insertelement <2 x double> undef, double %mul813, i32 0
  %235 = insertelement <2 x double> %234, double %mul813, i32 1
  %236 = fmul <2 x double> %233, %235
  %237 = fadd <2 x double> %156, %236
  %238 = load double* %x820, align 8, !tbaa !72
  %add821 = fadd double %238, %mul813
  store double %add821, double* %x820, align 8, !tbaa !72
  %x822 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext639, i32 0
  %mul825 = fmul double %sub648, %mul809
  %239 = insertelement <2 x double> %190, double %sub648, i32 1
  %240 = insertelement <2 x double> %205, double %mul825, i32 1
  %241 = fmul <2 x double> %239, %240
  %242 = fadd <2 x double> %158, %241
  %243 = insertelement <2 x double> undef, double %mul825, i32 0
  %244 = insertelement <2 x double> %243, double %mul813, i32 1
  %245 = fmul <2 x double> %204, %244
  %246 = fadd <2 x double> %157, %245
  %247 = load double* %y830, align 8, !tbaa !73
  %add831 = fadd double %247, %mul825
  store double %add831, double* %y830, align 8, !tbaa !73
  %248 = bitcast double* %x822 to <2 x double>*
  %249 = load <2 x double>* %248, align 8, !tbaa !17
  %250 = insertelement <2 x double> %234, double %mul825, i32 1
  %251 = fsub <2 x double> %249, %250
  %252 = bitcast double* %x822 to <2 x double>*
  store <2 x double> %251, <2 x double>* %252, align 8, !tbaa !17
  %mul835 = fmul double %sub653, %mul809
  %mul836 = fmul double %sub653, %mul835
  %add837 = fadd double %fullElectVirial_zz.1934, %mul836
  %253 = load double* %z838, align 8, !tbaa !74
  %add839 = fadd double %253, %mul835
  store double %add839, double* %z838, align 8, !tbaa !74
  %z840 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext639, i32 2
  %254 = load double* %z840, align 8, !tbaa !74
  %sub841 = fsub double %254, %mul835
  store double %sub841, double* %z840, align 8, !tbaa !74
  %indvars.iv.next1108 = add nuw nsw i64 %indvars.iv1107, 1
  %lftr.wideiv1109 = trunc i64 %indvars.iv.next1108 to i32
  %exitcond1110 = icmp eq i32 %lftr.wideiv1109, %conv632
  br i1 %exitcond1110, label %for.end844, label %for.body635.for.body635_crit_edge

for.body635.for.body635_crit_edge:                ; preds = %for.body635
  %.pre = load i32** %atomVdwType.i822, align 8, !tbaa !64
  br label %for.body635

for.end844:                                       ; preds = %for.body635, %for.end613
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.01022, %for.end613 ], [ %add837, %for.body635 ]
  %255 = phi <2 x double> [ %62, %for.end613 ], [ %231, %for.body635 ]
  %256 = phi <2 x double> [ %63, %for.end613 ], [ %189, %for.body635 ]
  %257 = phi <2 x double> [ %64, %for.end613 ], [ %195, %for.body635 ]
  %258 = phi <2 x double> [ %65, %for.end613 ], [ %208, %for.body635 ]
  %259 = phi <2 x double> [ %66, %for.end613 ], [ %237, %for.body635 ]
  %260 = phi <2 x double> [ %67, %for.end613 ], [ %246, %for.body635 ]
  %261 = phi <2 x double> [ %68, %for.end613 ], [ %242, %for.body635 ]
  %conv849 = trunc i64 %sub.ptr.div624 to i32
  %cmp851964 = icmp sgt i32 %conv849, 0
  br i1 %cmp851964, label %for.body852.lr.ph, label %for.end1122

for.body852.lr.ph:                                ; preds = %for.end844
  %x1021 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y1031 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z1039 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x1098 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1108 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1116 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body852

for.body852:                                      ; preds = %for.body852, %for.body852.lr.ph
  %indvars.iv1111 = phi i64 [ 0, %for.body852.lr.ph ], [ %indvars.iv.next1112, %for.body852 ]
  %fullElectVirial_zz.2966 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body852.lr.ph ], [ %add1115, %for.body852 ]
  %262 = phi <2 x double> [ %255, %for.body852.lr.ph ], [ %349, %for.body852 ]
  %263 = phi <2 x double> [ %256, %for.body852.lr.ph ], [ %300, %for.body852 ]
  %264 = phi <2 x double> [ %257, %for.body852.lr.ph ], [ %306, %for.body852 ]
  %265 = phi <2 x double> [ %258, %for.body852.lr.ph ], [ %319, %for.body852 ]
  %266 = phi <2 x double> [ %259, %for.body852.lr.ph ], [ %355, %for.body852 ]
  %267 = phi <2 x double> [ %260, %for.body852.lr.ph ], [ %364, %for.body852 ]
  %268 = phi <2 x double> [ %261, %for.body852.lr.ph ], [ %360, %for.body852 ]
  %arrayidx855 = getelementptr inbounds i32* %cond158, i64 %indvars.iv1111
  %269 = load i32* %arrayidx855, align 4, !tbaa !11
  %idx.ext857 = sext i32 %269 to i64
  %x861 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext857, i32 0, i32 0
  %270 = load double* %x861, align 8, !tbaa !59
  %sub862 = fsub double %74, %270
  %mul864 = fmul double %sub862, %sub862
  %y867 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext857, i32 0, i32 1
  %271 = load double* %y867, align 8, !tbaa !61
  %sub868 = fsub double %75, %271
  %mul869 = fmul double %sub868, %sub868
  %add870 = fadd double %mul864, %mul869
  %z873 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext857, i32 0, i32 2
  %272 = load double* %z873, align 8, !tbaa !62
  %sub874 = fsub double %76, %272
  %mul875 = fmul double %sub874, %sub874
  %add876 = fadd double %add870, %mul875
  %conv878 = fptrunc double %add876 to float
  %273 = bitcast float %conv878 to i32
  %shr882 = ashr i32 %273, 17
  %add883 = add nsw i32 %shr882, %mul
  %id885 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext857, i32 2
  %274 = bitcast [4 x i8]* %id885 to i32*
  %bf.load886 = load i32* %274, align 4
  %bf.clear887 = and i32 %bf.load886, 4194303
  %idxprom.i815855 = zext i32 %bf.clear887 to i64
  %275 = load i32** %atomVdwType.i822, align 8, !tbaa !64
  %arrayidx.i816 = getelementptr inbounds i32* %275, i64 %idxprom.i815855
  %276 = load i32* %arrayidx.i816, align 4, !tbaa !11
  %conv.i = zext i32 %276 to i64
  %conv889 = shl nuw nsw i64 %conv.i, 1
  %mul890 = and i64 %conv889, 131070
  %add.ptr892.sum765 = or i64 %mul890, 1
  %mul895 = shl nsw i32 %add883, 4
  %idx.ext896 = sext i32 %mul895 to i64
  %add.ptr897 = getelementptr inbounds double* %7, i64 %idx.ext896
  %277 = load double* %add.ptr897, align 8, !tbaa !17
  %add.ptr897.sum766 = or i64 %idx.ext896, 4
  %add.ptr904 = getelementptr inbounds double* %7, i64 %add.ptr897.sum766
  %278 = load double* %add.ptr904, align 8, !tbaa !17
  %add.ptr897.sum767 = or i64 %idx.ext896, 8
  %add.ptr911 = getelementptr inbounds double* %7, i64 %add.ptr897.sum767
  %279 = load double* %add.ptr911, align 8, !tbaa !17
  %add.ptr911.sum768 = or i64 %idx.ext896, 12
  %add.ptr919 = getelementptr inbounds double* %7, i64 %add.ptr911.sum768
  %280 = load double* %add.ptr919, align 8, !tbaa !17
  %and923 = and i32 %273, -131072
  %charge925 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext857, i32 1
  %281 = load float* %charge925, align 4, !tbaa !63
  %conv926 = fpext float %281 to double
  %mul927 = fmul double %mul403, %conv926
  %282 = bitcast i32 %and923 to float
  %conv930 = fpext float %282 to double
  %sub931 = fsub double %add876, %conv930
  %bf.lshr935 = lshr i32 %bf.load886, 28
  %idxprom936 = zext i32 %bf.lshr935 to i64
  %add.ptr399.sum769 = add i64 %idxprom936, %idx.ext398
  %arrayidx937 = getelementptr inbounds double* %117, i64 %add.ptr399.sum769
  %283 = load double* %arrayidx937, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr892.sum765, %idx.ext.i
  %A939 = getelementptr inbounds %"struct.LJTable::TableEntry"* %122, i64 %add.ptr.i.sum, i32 0
  %284 = load double* %A939, align 8, !tbaa !69
  %mul940 = fmul double %9, %284
  %B942 = getelementptr inbounds %"struct.LJTable::TableEntry"* %122, i64 %add.ptr.i.sum, i32 1
  %285 = load double* %B942, align 8, !tbaa !71
  %mul943 = fmul double %9, %285
  %mul945 = fmul double %277, %mul940
  %mul946 = fmul double %278, %mul943
  %sub947 = fsub double %mul945, %mul946
  %add.ptr897.sum770 = or i64 %idx.ext896, 3
  %arrayidx949 = getelementptr inbounds double* %7, i64 %add.ptr897.sum770
  %286 = load double* %arrayidx949, align 8, !tbaa !17
  %mul950 = fmul double %mul940, %286
  %add.ptr904.sum771 = or i64 %idx.ext896, 7
  %arrayidx951 = getelementptr inbounds double* %7, i64 %add.ptr904.sum771
  %287 = load double* %arrayidx951, align 8, !tbaa !17
  %mul952 = fmul double %mul943, %287
  %sub953 = fsub double %mul950, %mul952
  %add.ptr897.sum772 = or i64 %idx.ext896, 2
  %arrayidx955 = getelementptr inbounds double* %7, i64 %add.ptr897.sum772
  %288 = load double* %arrayidx955, align 8, !tbaa !17
  %mul956 = fmul double %mul940, %288
  %add.ptr904.sum773 = or i64 %idx.ext896, 6
  %arrayidx957 = getelementptr inbounds double* %7, i64 %add.ptr904.sum773
  %289 = load double* %arrayidx957, align 8, !tbaa !17
  %mul958 = fmul double %mul943, %289
  %sub959 = fsub double %mul956, %mul958
  %add.ptr897.sum774 = or i64 %idx.ext896, 1
  %arrayidx961 = getelementptr inbounds double* %7, i64 %add.ptr897.sum774
  %290 = load double* %arrayidx961, align 8, !tbaa !17
  %mul962 = fmul double %mul940, %290
  %add.ptr904.sum775 = or i64 %idx.ext896, 5
  %arrayidx963 = getelementptr inbounds double* %7, i64 %add.ptr904.sum775
  %291 = load double* %arrayidx963, align 8, !tbaa !17
  %mul964 = fmul double %mul943, %291
  %sub965 = fsub double %mul962, %mul964
  %mul967 = fmul double %sub931, %sub953
  %add968 = fadd double %mul967, %sub959
  %mul969 = fmul double %sub931, %add968
  %add970 = fadd double %mul969, %sub965
  %mul971 = fmul double %sub931, %add970
  %add972 = fadd double %sub947, %mul971
  %mul976 = fmul double %sub975, %mul927
  %add.ptr911.sum776 = or i64 %idx.ext896, 11
  %arrayidx979 = getelementptr inbounds double* %7, i64 %add.ptr911.sum776
  %292 = load double* %arrayidx979, align 8, !tbaa !17
  %mul980 = fmul double %mul976, %292
  %add.ptr911.sum777 = or i64 %idx.ext896, 10
  %arrayidx982 = getelementptr inbounds double* %7, i64 %add.ptr911.sum777
  %293 = load double* %arrayidx982, align 8, !tbaa !17
  %mul983 = fmul double %mul976, %293
  %add.ptr911.sum778 = or i64 %idx.ext896, 9
  %arrayidx985 = getelementptr inbounds double* %7, i64 %add.ptr911.sum778
  %294 = load double* %arrayidx985, align 8, !tbaa !17
  %mul986 = fmul double %mul976, %294
  %mul988 = fmul double %sub931, %mul980
  %add996 = fadd double %sub953, %mul980
  %add997 = fadd double %sub959, %mul983
  %add998 = fadd double %sub965, %mul986
  %mul1001 = fmul double %sub931, 3.000000e+00
  %mul1002 = fmul double %mul1001, %add996
  %mul1003 = fmul double %add997, 2.000000e+00
  %add1004 = fadd double %mul1002, %mul1003
  %mul1005 = fmul double %sub931, %add1004
  %add1006 = fadd double %add998, %mul1005
  %mul1008 = fmul double %283, -2.000000e+00
  %mul1009 = fmul double %mul1008, %add1006
  %mul1014 = fmul double %sub862, %mul1009
  %295 = insertelement <2 x double> undef, double %add972, i32 0
  %296 = insertelement <2 x double> %295, double %sub862, i32 1
  %297 = insertelement <2 x double> undef, double %283, i32 0
  %298 = insertelement <2 x double> %297, double %mul1014, i32 1
  %299 = fmul <2 x double> %296, %298
  %300 = fadd <2 x double> %263, %299
  %301 = insertelement <2 x double> undef, double %sub868, i32 0
  %302 = insertelement <2 x double> %301, double %sub874, i32 1
  %303 = insertelement <2 x double> undef, double %mul1014, i32 0
  %304 = insertelement <2 x double> %303, double %mul1014, i32 1
  %305 = fmul <2 x double> %302, %304
  %306 = fadd <2 x double> %264, %305
  %307 = load double* %x1021, align 8, !tbaa !72
  %add1022 = fadd double %307, %mul1014
  store double %add1022, double* %x1021, align 8, !tbaa !72
  %x1023 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext857, i32 0
  %mul1026 = fmul double %sub868, %mul1009
  %308 = load double* %y1031, align 8, !tbaa !73
  %add1032 = fadd double %308, %mul1026
  store double %add1032, double* %y1031, align 8, !tbaa !73
  %309 = bitcast double* %x1023 to <2 x double>*
  %310 = load <2 x double>* %309, align 8, !tbaa !17
  %311 = insertelement <2 x double> %303, double %mul1026, i32 1
  %312 = fsub <2 x double> %310, %311
  %313 = bitcast double* %x1023 to <2 x double>*
  store <2 x double> %312, <2 x double>* %313, align 8, !tbaa !17
  %mul1036 = fmul double %sub874, %mul1009
  %314 = insertelement <2 x double> undef, double %sub874, i32 0
  %315 = insertelement <2 x double> %314, double %sub874, i32 1
  %316 = insertelement <2 x double> undef, double %mul1026, i32 0
  %317 = insertelement <2 x double> %316, double %mul1036, i32 1
  %318 = fmul <2 x double> %315, %317
  %319 = fadd <2 x double> %265, %318
  %320 = load double* %z1039, align 8, !tbaa !74
  %add1040 = fadd double %320, %mul1036
  store double %add1040, double* %z1039, align 8, !tbaa !74
  %z1041 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext857, i32 2
  %321 = load double* %z1041, align 8, !tbaa !74
  %sub1042 = fsub double %321, %mul1036
  store double %sub1042, double* %z1041, align 8, !tbaa !74
  %add.ptr919.sum779 = or i64 %idx.ext896, 13
  %arrayidx1044 = getelementptr inbounds double* %7, i64 %add.ptr919.sum779
  %322 = load double* %arrayidx1044, align 8, !tbaa !17
  %add.ptr919.sum780 = or i64 %idx.ext896, 14
  %arrayidx1046 = getelementptr inbounds double* %7, i64 %add.ptr919.sum780
  %323 = load double* %arrayidx1046, align 8, !tbaa !17
  %add.ptr919.sum781 = or i64 %idx.ext896, 15
  %arrayidx1048 = getelementptr inbounds double* %7, i64 %add.ptr919.sum781
  %324 = load double* %arrayidx1048, align 8, !tbaa !17
  %mul1049 = shl nsw i32 %add883, 2
  %idx.ext1050 = sext i32 %mul1049 to i64
  %add.ptr1051 = getelementptr inbounds double* %8, i64 %idx.ext1050
  %325 = load double* %add.ptr1051, align 8, !tbaa !17
  %mul1053 = fmul double %sub, %325
  %sub1054 = fsub double %280, %mul1053
  %add.ptr1051.sum782 = or i64 %idx.ext1050, 1
  %arrayidx1055 = getelementptr inbounds double* %8, i64 %add.ptr1051.sum782
  %326 = load double* %arrayidx1055, align 8, !tbaa !17
  %mul1056 = fmul double %sub, %326
  %sub1057 = fsub double %322, %mul1056
  %add.ptr1051.sum783 = or i64 %idx.ext1050, 2
  %arrayidx1058 = getelementptr inbounds double* %8, i64 %add.ptr1051.sum783
  %327 = load double* %arrayidx1058, align 8, !tbaa !17
  %mul1059 = fmul double %sub, %327
  %sub1060 = fsub double %323, %mul1059
  %add.ptr1051.sum784 = or i64 %idx.ext1050, 3
  %arrayidx1061 = getelementptr inbounds double* %8, i64 %add.ptr1051.sum784
  %328 = load double* %arrayidx1061, align 8, !tbaa !17
  %mul1062 = fmul double %sub, %328
  %sub1063 = fsub double %324, %mul1062
  %mul1064 = fmul double %mul927, %sub1063
  %mul1065 = fmul double %mul927, %sub1060
  %mul1066 = fmul double %mul927, %sub1057
  %329 = insertelement <2 x double> undef, double %mul976, i32 0
  %330 = insertelement <2 x double> %329, double %sub1054, i32 1
  %331 = insertelement <2 x double> undef, double %279, i32 0
  %332 = insertelement <2 x double> %331, double %mul927, i32 1
  %333 = fmul <2 x double> %330, %332
  %mul1069 = fmul double %sub931, %mul1064
  %334 = insertelement <2 x double> undef, double %mul988, i32 0
  %335 = insertelement <2 x double> %334, double %mul1065, i32 1
  %336 = insertelement <2 x double> undef, double %mul983, i32 0
  %337 = insertelement <2 x double> %336, double %mul1069, i32 1
  %338 = fadd <2 x double> %335, %337
  %339 = insertelement <2 x double> undef, double %sub931, i32 0
  %340 = insertelement <2 x double> %339, double %sub931, i32 1
  %341 = fmul <2 x double> %338, %340
  %342 = insertelement <2 x double> undef, double %mul986, i32 0
  %343 = insertelement <2 x double> %342, double %mul1066, i32 1
  %344 = fadd <2 x double> %343, %341
  %345 = fmul <2 x double> %344, %340
  %346 = fadd <2 x double> %333, %345
  %347 = insertelement <2 x double> %297, double %283, i32 1
  %348 = fmul <2 x double> %346, %347
  %349 = fadd <2 x double> %262, %348
  %mul1079 = fmul double %mul1001, %mul1064
  %mul1080 = fmul double %mul1065, 2.000000e+00
  %add1081 = fadd double %mul1080, %mul1079
  %mul1082 = fmul double %sub931, %add1081
  %add1083 = fadd double %mul1066, %mul1082
  %mul1085 = fmul double %add1083, -2.000000e+00
  %mul1086 = fmul double %283, %mul1085
  %mul1091 = fmul double %sub862, %mul1086
  %350 = insertelement <2 x double> undef, double %sub862, i32 0
  %351 = insertelement <2 x double> %350, double %sub868, i32 1
  %352 = insertelement <2 x double> undef, double %mul1091, i32 0
  %353 = insertelement <2 x double> %352, double %mul1091, i32 1
  %354 = fmul <2 x double> %351, %353
  %355 = fadd <2 x double> %266, %354
  %356 = load double* %x1098, align 8, !tbaa !72
  %add1099 = fadd double %356, %mul1091
  store double %add1099, double* %x1098, align 8, !tbaa !72
  %x1100 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext857, i32 0
  %mul1103 = fmul double %sub868, %mul1086
  %357 = insertelement <2 x double> %301, double %sub868, i32 1
  %358 = insertelement <2 x double> %316, double %mul1103, i32 1
  %359 = fmul <2 x double> %357, %358
  %360 = fadd <2 x double> %268, %359
  %361 = insertelement <2 x double> undef, double %mul1103, i32 0
  %362 = insertelement <2 x double> %361, double %mul1091, i32 1
  %363 = fmul <2 x double> %315, %362
  %364 = fadd <2 x double> %267, %363
  %365 = load double* %y1108, align 8, !tbaa !73
  %add1109 = fadd double %365, %mul1103
  store double %add1109, double* %y1108, align 8, !tbaa !73
  %366 = bitcast double* %x1100 to <2 x double>*
  %367 = load <2 x double>* %366, align 8, !tbaa !17
  %368 = insertelement <2 x double> %352, double %mul1103, i32 1
  %369 = fsub <2 x double> %367, %368
  %370 = bitcast double* %x1100 to <2 x double>*
  store <2 x double> %369, <2 x double>* %370, align 8, !tbaa !17
  %mul1113 = fmul double %sub874, %mul1086
  %mul1114 = fmul double %sub874, %mul1113
  %add1115 = fadd double %fullElectVirial_zz.2966, %mul1114
  %371 = load double* %z1116, align 8, !tbaa !74
  %add1117 = fadd double %371, %mul1113
  store double %add1117, double* %z1116, align 8, !tbaa !74
  %z1118 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext857, i32 2
  %372 = load double* %z1118, align 8, !tbaa !74
  %sub1119 = fsub double %372, %mul1113
  store double %sub1119, double* %z1118, align 8, !tbaa !74
  %indvars.iv.next1112 = add nuw nsw i64 %indvars.iv1111, 1
  %lftr.wideiv1113 = trunc i64 %indvars.iv.next1112 to i32
  %exitcond1114 = icmp eq i32 %lftr.wideiv1113, %conv849
  br i1 %exitcond1114, label %for.end1122, label %for.body852

for.end1122:                                      ; preds = %for.body852, %for.end844
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end844 ], [ %add1115, %for.body852 ]
  %373 = phi <2 x double> [ %255, %for.end844 ], [ %349, %for.body852 ]
  %374 = phi <2 x double> [ %256, %for.end844 ], [ %300, %for.body852 ]
  %375 = phi <2 x double> [ %257, %for.end844 ], [ %306, %for.body852 ]
  %376 = phi <2 x double> [ %258, %for.end844 ], [ %319, %for.body852 ]
  %377 = phi <2 x double> [ %259, %for.end844 ], [ %355, %for.body852 ]
  %378 = phi <2 x double> [ %260, %for.end844 ], [ %364, %for.body852 ]
  %379 = phi <2 x double> [ %261, %for.end844 ], [ %360, %for.body852 ]
  %conv1127 = trunc i64 %sub.ptr.div617 to i32
  %cmp1129996 = icmp sgt i32 %conv1127, 0
  br i1 %cmp1129996, label %for.body1130.lr.ph, label %for.inc1263

for.body1130.lr.ph:                               ; preds = %for.end1122
  %380 = extractelement <2 x double> %373, i32 1
  %381 = extractelement <2 x double> %373, i32 0
  %382 = extractelement <2 x double> %379, i32 1
  %383 = extractelement <2 x double> %379, i32 0
  %x1238 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1248 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1256 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  %384 = insertelement <2 x double> undef, double %381, i32 0
  %385 = insertelement <2 x double> undef, double %383, i32 0
  br label %for.body1130

for.body1130:                                     ; preds = %for.body1130, %for.body1130.lr.ph
  %indvars.iv1115 = phi i64 [ 0, %for.body1130.lr.ph ], [ %indvars.iv.next1116, %for.body1130 ]
  %fullElectEnergy.31004 = phi double [ %380, %for.body1130.lr.ph ], [ %add1216, %for.body1130 ]
  %fullElectVirial_yy.31000 = phi double [ %382, %for.body1130.lr.ph ], [ %add1245, %for.body1130 ]
  %fullElectVirial_zz.3998 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body1130.lr.ph ], [ %add1255, %for.body1130 ]
  %386 = phi <2 x double> [ %377, %for.body1130.lr.ph ], [ %410, %for.body1130 ]
  %387 = phi <2 x double> [ %378, %for.body1130.lr.ph ], [ %417, %for.body1130 ]
  %arrayidx1133 = getelementptr inbounds i32* %cond147851, i64 %indvars.iv1115
  %388 = load i32* %arrayidx1133, align 4, !tbaa !11
  %idx.ext1135 = sext i32 %388 to i64
  %x1139 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1135, i32 0, i32 0
  %389 = load double* %x1139, align 8, !tbaa !59
  %sub1140 = fsub double %74, %389
  %mul1142 = fmul double %sub1140, %sub1140
  %y1145 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1135, i32 0, i32 1
  %390 = load double* %y1145, align 8, !tbaa !61
  %sub1146 = fsub double %75, %390
  %mul1147 = fmul double %sub1146, %sub1146
  %add1148 = fadd double %mul1142, %mul1147
  %z1151 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1135, i32 0, i32 2
  %391 = load double* %z1151, align 8, !tbaa !62
  %sub1152 = fsub double %76, %391
  %mul1153 = fmul double %sub1152, %sub1152
  %add1154 = fadd double %add1148, %mul1153
  %conv1156 = fptrunc double %add1154 to float
  %392 = bitcast float %conv1156 to i32
  %shr1160 = ashr i32 %392, 17
  %add1161 = add nsw i32 %shr1160, %mul
  %mul1163 = shl nsw i32 %add1161, 4
  %idx.ext1164 = sext i32 %mul1163 to i64
  %add.ptr1166.sum757 = or i64 %idx.ext1164, 12
  %add.ptr1167 = getelementptr inbounds double* %7, i64 %add.ptr1166.sum757
  %393 = load double* %add.ptr1167, align 8, !tbaa !17
  %and1171 = and i32 %392, -131072
  %charge1173 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1135, i32 1
  %394 = load float* %charge1173, align 4, !tbaa !63
  %conv1174 = fpext float %394 to double
  %mul1175 = fmul double %mul403, %conv1174
  %395 = bitcast i32 %and1171 to float
  %conv1178 = fpext float %395 to double
  %sub1179 = fsub double %add1154, %conv1178
  %partition1181 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1135, i32 2
  %396 = bitcast [4 x i8]* %partition1181 to i32*
  %bf.load1182 = load i32* %396, align 4
  %bf.lshr1183 = lshr i32 %bf.load1182, 28
  %idxprom1184 = zext i32 %bf.lshr1183 to i64
  %add.ptr399.sum = add i64 %idxprom1184, %idx.ext398
  %arrayidx1185 = getelementptr inbounds double* %117, i64 %add.ptr399.sum
  %397 = load double* %arrayidx1185, align 8, !tbaa !17
  %add.ptr1167.sum758 = or i64 %idx.ext1164, 13
  %arrayidx1187 = getelementptr inbounds double* %7, i64 %add.ptr1167.sum758
  %398 = load double* %arrayidx1187, align 8, !tbaa !17
  %add.ptr1167.sum759 = or i64 %idx.ext1164, 14
  %arrayidx1189 = getelementptr inbounds double* %7, i64 %add.ptr1167.sum759
  %399 = load double* %arrayidx1189, align 8, !tbaa !17
  %add.ptr1167.sum760 = or i64 %idx.ext1164, 15
  %arrayidx1191 = getelementptr inbounds double* %7, i64 %add.ptr1167.sum760
  %400 = load double* %arrayidx1191, align 8, !tbaa !17
  %mul1193 = shl nsw i32 %add1161, 2
  %idx.ext1194 = sext i32 %mul1193 to i64
  %add.ptr1195 = getelementptr inbounds double* %8, i64 %idx.ext1194
  %401 = load double* %add.ptr1195, align 8, !tbaa !17
  %sub1197 = fsub double %393, %401
  %add.ptr1195.sum761 = or i64 %idx.ext1194, 1
  %arrayidx1198 = getelementptr inbounds double* %8, i64 %add.ptr1195.sum761
  %402 = load double* %arrayidx1198, align 8, !tbaa !17
  %sub1199 = fsub double %398, %402
  %add.ptr1195.sum762 = or i64 %idx.ext1194, 2
  %arrayidx1200 = getelementptr inbounds double* %8, i64 %add.ptr1195.sum762
  %403 = load double* %arrayidx1200, align 8, !tbaa !17
  %sub1201 = fsub double %399, %403
  %add.ptr1195.sum763 = or i64 %idx.ext1194, 3
  %arrayidx1202 = getelementptr inbounds double* %8, i64 %add.ptr1195.sum763
  %404 = load double* %arrayidx1202, align 8, !tbaa !17
  %sub1203 = fsub double %400, %404
  %mul1204 = fmul double %mul1175, %sub1203
  %mul1205 = fmul double %mul1175, %sub1201
  %mul1206 = fmul double %mul1175, %sub1199
  %mul1207 = fmul double %mul1175, %sub1197
  %mul1209 = fmul double %sub1179, %mul1204
  %add1210 = fadd double %mul1205, %mul1209
  %mul1211 = fmul double %sub1179, %add1210
  %add1212 = fadd double %mul1206, %mul1211
  %mul1213 = fmul double %sub1179, %add1212
  %add1214 = fadd double %mul1207, %mul1213
  %mul1215 = fmul double %397, %add1214
  %add1216 = fadd double %fullElectEnergy.31004, %mul1215
  %mul1218 = fmul double %sub1179, 3.000000e+00
  %mul1219 = fmul double %mul1218, %mul1204
  %mul1220 = fmul double %mul1205, 2.000000e+00
  %add1221 = fadd double %mul1220, %mul1219
  %mul1222 = fmul double %sub1179, %add1221
  %add1223 = fadd double %mul1206, %mul1222
  %mul1225 = fmul double %add1223, -2.000000e+00
  %mul1226 = fmul double %397, %mul1225
  %mul1231 = fmul double %sub1140, %mul1226
  %405 = insertelement <2 x double> undef, double %sub1140, i32 0
  %406 = insertelement <2 x double> %405, double %sub1146, i32 1
  %407 = insertelement <2 x double> undef, double %mul1231, i32 0
  %408 = insertelement <2 x double> %407, double %mul1231, i32 1
  %409 = fmul <2 x double> %406, %408
  %410 = fadd <2 x double> %386, %409
  %411 = load double* %x1238, align 8, !tbaa !72
  %add1239 = fadd double %411, %mul1231
  store double %add1239, double* %x1238, align 8, !tbaa !72
  %x1240 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1135, i32 0
  %mul1243 = fmul double %sub1146, %mul1226
  %mul1244 = fmul double %sub1146, %mul1243
  %add1245 = fadd double %fullElectVirial_yy.31000, %mul1244
  %412 = insertelement <2 x double> undef, double %sub1152, i32 0
  %413 = insertelement <2 x double> %412, double %sub1152, i32 1
  %414 = insertelement <2 x double> undef, double %mul1243, i32 0
  %415 = insertelement <2 x double> %414, double %mul1231, i32 1
  %416 = fmul <2 x double> %413, %415
  %417 = fadd <2 x double> %387, %416
  %418 = load double* %y1248, align 8, !tbaa !73
  %add1249 = fadd double %418, %mul1243
  store double %add1249, double* %y1248, align 8, !tbaa !73
  %419 = bitcast double* %x1240 to <2 x double>*
  %420 = load <2 x double>* %419, align 8, !tbaa !17
  %421 = insertelement <2 x double> %407, double %mul1243, i32 1
  %422 = fsub <2 x double> %420, %421
  %423 = bitcast double* %x1240 to <2 x double>*
  store <2 x double> %422, <2 x double>* %423, align 8, !tbaa !17
  %mul1253 = fmul double %sub1152, %mul1226
  %mul1254 = fmul double %sub1152, %mul1253
  %add1255 = fadd double %fullElectVirial_zz.3998, %mul1254
  %424 = load double* %z1256, align 8, !tbaa !74
  %add1257 = fadd double %424, %mul1253
  store double %add1257, double* %z1256, align 8, !tbaa !74
  %z1258 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1135, i32 2
  %425 = load double* %z1258, align 8, !tbaa !74
  %sub1259 = fsub double %425, %mul1253
  store double %sub1259, double* %z1258, align 8, !tbaa !74
  %indvars.iv.next1116 = add nuw nsw i64 %indvars.iv1115, 1
  %lftr.wideiv1117 = trunc i64 %indvars.iv.next1116 to i32
  %exitcond1118 = icmp eq i32 %lftr.wideiv1117, %conv1127
  br i1 %exitcond1118, label %for.inc1263.loopexit, label %for.body1130

for.inc1263.loopexit:                             ; preds = %for.body1130
  %426 = insertelement <2 x double> %384, double %add1216, i32 1
  %427 = insertelement <2 x double> %385, double %add1245, i32 1
  br label %for.inc1263

for.inc1263:                                      ; preds = %for.inc1263.loopexit, %for.end1122, %if.then220
  %pairCount.3 = phi i32 [ %sub216, %if.then220 ], [ %pairCount.2, %for.end1122 ], [ %pairCount.2, %for.inc1263.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.01016, %if.then220 ], [ %pairlistoffset.1, %for.end1122 ], [ %pairlistoffset.1, %for.inc1263.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.01017, %if.then220 ], [ %pairlistindex.2, %for.end1122 ], [ %pairlistindex.2, %for.inc1263.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.01018, %if.then220 ], [ %fixg_lower.3, %for.end1122 ], [ %fixg_lower.3, %for.inc1263.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.01019, %if.then220 ], [ %g_lower.3, %for.end1122 ], [ %g_lower.3, %for.inc1263.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.01020, %if.then220 ], [ %j_hgroup.2, %for.end1122 ], [ %j_hgroup.2, %for.inc1263.loopexit ]
  %i.1 = phi i32 [ %add222, %if.then220 ], [ %i.01021, %for.end1122 ], [ %i.01021, %for.inc1263.loopexit ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.01022, %if.then220 ], [ %fullElectVirial_zz.2.lcssa, %for.end1122 ], [ %add1255, %for.inc1263.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.01037, %if.then220 ], [ %conv627, %for.end1122 ], [ %conv627, %for.inc1263.loopexit ]
  %428 = phi <2 x double> [ %62, %if.then220 ], [ %373, %for.end1122 ], [ %426, %for.inc1263.loopexit ]
  %429 = phi <2 x double> [ %63, %if.then220 ], [ %374, %for.end1122 ], [ %374, %for.inc1263.loopexit ]
  %430 = phi <2 x double> [ %64, %if.then220 ], [ %375, %for.end1122 ], [ %375, %for.inc1263.loopexit ]
  %431 = phi <2 x double> [ %65, %if.then220 ], [ %376, %for.end1122 ], [ %376, %for.inc1263.loopexit ]
  %432 = phi <2 x double> [ %66, %if.then220 ], [ %377, %for.end1122 ], [ %410, %for.inc1263.loopexit ]
  %433 = phi <2 x double> [ %67, %if.then220 ], [ %378, %for.end1122 ], [ %417, %for.inc1263.loopexit ]
  %434 = phi <2 x double> [ %68, %if.then220 ], [ %379, %for.end1122 ], [ %427, %for.inc1263.loopexit ]
  %inc1264 = add nsw i32 %i.1, 1
  %cmp174 = icmp sgt i32 %sub165, %inc1264
  br i1 %cmp174, label %for.body175, label %for.end1265

for.end1265:                                      ; preds = %for.inc1263, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1263 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end157 ], [ %fullElectVirial_zz.4, %for.inc1263 ]
  %435 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %428, %for.inc1263 ]
  %436 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %429, %for.inc1263 ]
  %437 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %430, %for.inc1263 ]
  %438 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %431, %for.inc1263 ]
  %439 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %432, %for.inc1263 ]
  %440 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %433, %for.inc1263 ]
  %441 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %434, %for.inc1263 ]
  %442 = extractelement <2 x double> %440, i32 1
  %443 = extractelement <2 x double> %440, i32 0
  %arraydecay1266 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1267 = icmp eq i32* %cond82582711321138, %arraydecay1266
  br i1 %cmp1267, label %if.end1272, label %delete.notnull1270

delete.notnull1270:                               ; preds = %for.end1265
  %444 = bitcast i32* %cond82582711321138 to i8*
  call void @_ZdaPv(i8* %444) #7
  br label %if.end1272

if.end1272:                                       ; preds = %delete.notnull1270, %for.end1265
  %arraydecay1273 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1274 = icmp eq i32* %cond1982911301139, %arraydecay1273
  br i1 %cmp1274, label %if.end1279, label %delete.notnull1277

delete.notnull1277:                               ; preds = %if.end1272
  %445 = bitcast i32* %cond1982911301139 to i8*
  call void @_ZdaPv(i8* %445) #7
  br label %if.end1279

if.end1279:                                       ; preds = %delete.notnull1277, %if.end1272
  %arraydecay1280 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1281 = icmp eq i32* %cond3011341137, %arraydecay1280
  br i1 %cmp1281, label %if.end1286, label %delete.notnull1284

delete.notnull1284:                               ; preds = %if.end1279
  %446 = bitcast i32* %cond3011341137 to i8*
  call void @_ZdaPv(i8* %446) #7
  br label %if.end1286

if.end1286:                                       ; preds = %delete.notnull1284, %if.end1279
  %arraydecay1287 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1288 = icmp eq i32* %cond114833835841847, %arraydecay1287
  br i1 %cmp1288, label %if.end1293, label %delete.notnull1291

delete.notnull1291:                               ; preds = %if.end1286
  %447 = bitcast i32* %cond114833835841847 to i8*
  call void @_ZdaPv(i8* %447) #7
  br label %if.end1293

if.end1293:                                       ; preds = %delete.notnull1291, %if.end1286
  %arraydecay1294 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1295 = icmp eq i32* %cond125837839849, %arraydecay1294
  br i1 %cmp1295, label %if.end1300, label %delete.notnull1298

delete.notnull1298:                               ; preds = %if.end1293
  %448 = bitcast i32* %cond125837839849 to i8*
  call void @_ZdaPv(i8* %448) #7
  br label %if.end1300

if.end1300:                                       ; preds = %delete.notnull1298, %if.end1293
  %arraydecay1301 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1302 = icmp eq i32* %cond136843845, %arraydecay1301
  br i1 %cmp1302, label %if.end1307, label %delete.notnull1305

delete.notnull1305:                               ; preds = %if.end1300
  %449 = bitcast i32* %cond136843845 to i8*
  call void @_ZdaPv(i8* %449) #7
  br label %if.end1307

if.end1307:                                       ; preds = %delete.notnull1305, %if.end1300
  %arraydecay1308 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1309 = icmp eq i32* %cond147851, %arraydecay1308
  br i1 %cmp1309, label %if.end1314, label %delete.notnull1312

delete.notnull1312:                               ; preds = %if.end1307
  %450 = bitcast i32* %cond147851 to i8*
  call void @_ZdaPv(i8* %450) #7
  br label %if.end1314

if.end1314:                                       ; preds = %delete.notnull1312, %if.end1307
  %arraydecay1315 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1316 = icmp eq i32* %cond158, %arraydecay1315
  br i1 %cmp1316, label %if.end1321, label %delete.notnull1319

delete.notnull1319:                               ; preds = %if.end1314
  %451 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %451) #7
  br label %if.end1321

if.end1321:                                       ; preds = %delete.notnull1319, %if.end1314
  %conv1322 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1323 = getelementptr inbounds double* %1, i64 22
  %452 = load double* %arrayidx1323, align 8, !tbaa !17
  %add1324 = fadd double %conv1322, %452
  store double %add1324, double* %arrayidx1323, align 8, !tbaa !17
  %arrayidx1325 = getelementptr inbounds double* %1, i64 2
  %453 = bitcast double* %arrayidx1325 to <2 x double>*
  %454 = load <2 x double>* %453, align 8, !tbaa !17
  %455 = fadd <2 x double> %436, %454
  %456 = bitcast double* %arrayidx1325 to <2 x double>*
  store <2 x double> %455, <2 x double>* %456, align 8, !tbaa !17
  %arrayidx1331 = getelementptr inbounds double* %1, i64 4
  %457 = bitcast double* %arrayidx1331 to <2 x double>*
  %458 = load <2 x double>* %457, align 8, !tbaa !17
  %459 = fadd <2 x double> %437, %458
  %460 = bitcast double* %arrayidx1331 to <2 x double>*
  store <2 x double> %459, <2 x double>* %460, align 8, !tbaa !17
  %arrayidx1335 = getelementptr inbounds double* %1, i64 6
  %461 = bitcast double* %arrayidx1335 to <2 x double>*
  %462 = load <2 x double>* %461, align 8, !tbaa !17
  %463 = shufflevector <2 x double> %437, <2 x double> %441, <2 x i32> <i32 0, i32 2>
  %464 = fadd <2 x double> %463, %462
  %465 = bitcast double* %arrayidx1335 to <2 x double>*
  store <2 x double> %464, <2 x double>* %465, align 8, !tbaa !17
  %arrayidx1339 = getelementptr inbounds double* %1, i64 8
  %466 = bitcast double* %arrayidx1339 to <2 x double>*
  %467 = load <2 x double>* %466, align 8, !tbaa !17
  %468 = shufflevector <2 x double> %438, <2 x double> %437, <2 x i32> <i32 0, i32 3>
  %469 = fadd <2 x double> %468, %467
  %470 = bitcast double* %arrayidx1339 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 8, !tbaa !17
  %arrayidx1343 = getelementptr inbounds double* %1, i64 10
  %471 = bitcast double* %arrayidx1343 to <2 x double>*
  %472 = load <2 x double>* %471, align 8, !tbaa !17
  %473 = fadd <2 x double> %438, %472
  %474 = bitcast double* %arrayidx1343 to <2 x double>*
  store <2 x double> %473, <2 x double>* %474, align 8, !tbaa !17
  %475 = bitcast double* %1 to <2 x double>*
  %476 = load <2 x double>* %475, align 8, !tbaa !17
  %477 = fadd <2 x double> %435, %476
  %478 = bitcast double* %1 to <2 x double>*
  store <2 x double> %477, <2 x double>* %478, align 8, !tbaa !17
  %arrayidx1349 = getelementptr inbounds double* %1, i64 12
  %479 = bitcast double* %arrayidx1349 to <2 x double>*
  %480 = load <2 x double>* %479, align 8, !tbaa !17
  %481 = fadd <2 x double> %439, %480
  %482 = bitcast double* %arrayidx1349 to <2 x double>*
  store <2 x double> %481, <2 x double>* %482, align 8, !tbaa !17
  %arrayidx1353 = getelementptr inbounds double* %1, i64 14
  %483 = load double* %arrayidx1353, align 8, !tbaa !17
  %add1354 = fadd double %442, %483
  store double %add1354, double* %arrayidx1353, align 8, !tbaa !17
  %arrayidx1355 = getelementptr inbounds double* %1, i64 15
  %484 = bitcast double* %arrayidx1355 to <2 x double>*
  %485 = load <2 x double>* %484, align 8, !tbaa !17
  %486 = shufflevector <2 x double> %439, <2 x double> %441, <2 x i32> <i32 1, i32 3>
  %487 = fadd <2 x double> %486, %485
  %488 = bitcast double* %arrayidx1355 to <2 x double>*
  store <2 x double> %487, <2 x double>* %488, align 8, !tbaa !17
  %arrayidx1359 = getelementptr inbounds double* %1, i64 17
  %489 = bitcast double* %arrayidx1359 to <2 x double>*
  %490 = load <2 x double>* %489, align 8, !tbaa !17
  %491 = fadd <2 x double> %440, %490
  %492 = bitcast double* %arrayidx1359 to <2 x double>*
  store <2 x double> %491, <2 x double>* %492, align 8, !tbaa !17
  %arrayidx1363 = getelementptr inbounds double* %1, i64 19
  %493 = bitcast double* %arrayidx1363 to <2 x double>*
  %494 = load <2 x double>* %493, align 8, !tbaa !17
  %495 = insertelement <2 x double> undef, double %443, i32 0
  %496 = insertelement <2 x double> %495, double %fullElectVirial_zz.0.lcssa, i32 1
  %497 = fadd <2 x double> %496, %494
  %498 = bitcast double* %arrayidx1363 to <2 x double>*
  store <2 x double> %497, <2 x double>* %498, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1321, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil29calc_pair_merge_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31778 = icmp sgt i32 %13, 0
  br i1 %cmp31778, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30835 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond615617833 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19619831 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv824 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next825, %for.inc ]
  %g.0779 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv824, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0779, 1
  %idxprom41 = sext i32 %g.0779 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond615617833, i64 %idxprom41
  %30 = trunc i64 %indvars.iv824 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0779, %for.body ]
  %indvars.iv.next825 = add nuw nsw i64 %indvars.iv824, 1
  %lftr.wideiv826 = trunc i64 %indvars.iv.next825 to i32
  %exitcond827 = icmp eq i32 %lftr.wideiv826, %13
  br i1 %exitcond827, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond615617833, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond615617833, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa840 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19619830839 = phi i32* [ %cond19619831, %for.end ], [ %cond19619831, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond615617832838 = phi i32* [ %cond615617833, %for.end ], [ %cond615617833, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30834837 = phi i32* [ %cond30835, %for.end ], [ %cond30835, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56772 = icmp sgt i32 %g.0.lcssa840, 0
  br i1 %cmp56772, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75766 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76767 = icmp sgt i32 %12, 0
  %or.cond599768 = and i1 %tobool75766, %cmp76767
  br i1 %or.cond599768, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv820 = phi i64 [ %indvars.iv.next821, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0774 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0773 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond615617832838, i64 %indvars.iv820
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0774, 1
  %idxprom68 = sext i32 %fixg.0774 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19619830839, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0773, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0774, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next821 = add nuw nsw i64 %indvars.iv820, 1
  %lftr.wideiv822 = trunc i64 %indvars.iv.next821 to i32
  %exitcond823 = icmp eq i32 %lftr.wideiv822, %g.0.lcssa840
  br i1 %exitcond823, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv818 = phi i64 [ %indvars.iv.next819, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2769 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv818, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2769
  %indvars.iv.next819 = add nuw nsw i64 %indvars.iv818, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next819 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond599 = and i1 %tobool75, %cmp76
  br i1 %or.cond599, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75766, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond615617832838, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond615617832838 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19619830839, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19619830839 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30834837, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30834837 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19619830839, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19619830839, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2622 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162641 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140627629639 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129623625631637 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151633635 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183741 = icmp sgt i32 %12, 0
  br i1 %cmp183741, label %for.body184.lr.ph, label %for.end1038

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i612 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140627629639 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162641 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151633635 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30834837 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129623625631637 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc1036, %for.body184.lr.ph
  %exclChecksum.0757 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc1036 ]
  %i.1744 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc1037, %for.inc1036 ]
  %pairlistindex.0743 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc1036 ]
  %pairCount.0742 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc1036 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %281, %for.inc1036 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %282, %for.inc1036 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %283, %for.inc1036 ]
  %idxprom185 = sext i32 %i.1744 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i643 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i643, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i643, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i643, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0742
  %cmp218 = icmp sge i32 %pairCount.0742, %div
  %cmp220 = icmp slt i32 %pairCount.0742, %div181
  %or.cond601 = and i1 %cmp218, %cmp220
  br i1 %or.cond601, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1744, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc1036

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0742, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19619830839, i32* %cond615617832838
  %cond243 = select i1 %75, i32 %fixg.2622, i32 %g.0.lcssa840
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30834837, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div596 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div596 to i32
  %cmp289654 = icmp sgt i32 %conv287, 0
  br i1 %cmp289654, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv786 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next787, %cond.end310 ]
  %pli.0656 = phi i32* [ %cond129623625631637, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30834837, i64 %indvars.iv786
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp597598 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp597598, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0656, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0656, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0656, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0656, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0656, i64 %cond311
  %indvars.iv.next787 = add nuw nsw i64 %indvars.iv786, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next787 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129623625631637, %land.end ], [ %cond129623625631637, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328593 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328593 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext594 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext594, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129623625631637, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129623625631637, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1744
  br label %for.inc1036

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0742, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0743, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load365.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %94 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %95 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %95, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %96 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %96 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %bf.clear376 = and i32 %bf.load365.pre, 4194303
  %idxprom.i611644 = zext i32 %bf.clear376 to i64
  %97 = load i32** %atomVdwType.i612, align 8, !tbaa !64
  %arrayidx.i613 = getelementptr inbounds i32* %97, i64 %idxprom.i611644
  %98 = load i32* %arrayidx.i613, align 4, !tbaa !11
  %99 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %100 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv378 = shl i32 %98, 1
  %mul.i = and i32 %conv378, 131070
  %mul2.i = mul i32 %mul.i, %100
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp384681 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384681, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv797 = phi i64 [ %indvars.iv.next798, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1685 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0757, %for.cond383.preheader ]
  %pli380.0684 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140627629639, %for.cond383.preheader ]
  %plin.0683 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151633635, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129623625631637, i64 %indvars.iv797
  %101 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %101 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %102 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %69, %102
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %103 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %70, %103
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %104 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %71, %104
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %105 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %105, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond602 = or i1 %tobool419, %cmp421
  br i1 %or.cond602, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1685, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1685, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %66
  %cmp435 = icmp sgt i32 %bf.clear432, %67
  %or.cond603 = or i1 %cmp433, %cmp435
  br i1 %or.cond603, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0684, i64 1
  store i32 %101, i32* %pli380.0684, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0683, i64 1
  store i32 %101, i32* %plin.0683, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0683, %for.body385 ], [ %plin.0683, %land.lhs.true424 ], [ %plin.0683, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0684, %for.body385 ], [ %pli380.0684, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0684, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1685, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next798 = add nuw nsw i64 %indvars.iv797, 1
  %lftr.wideiv799 = trunc i64 %indvars.iv.next798 to i32
  %exitcond800 = icmp eq i32 %lftr.wideiv799, %pairlistindex.1
  br i1 %exitcond800, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384681, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %106 = load i32* %cond129623625631637, align 4, !tbaa !11
  %idxprom453 = sext i32 %106 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %107 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %108 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %109 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %109, %if.then448 ], [ %115, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %108, %if.then448 ], [ %114, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %107, %if.then448 ], [ %113, %if.else513 ]
  %j2449.0.ph = phi i32 [ %106, %if.then448 ], [ %112, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151633635, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140627629639, %if.then448 ], [ %pli380.2.ph664, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0757, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer657

while.cond473.outer657:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph658 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph659 = phi double [ %115, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph660 = phi double [ %114, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph661 = phi double [ %113, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph662 = phi i32 [ %112, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph663 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph664 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph665 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer666

while.cond473.outer666:                           ; preds = %land.lhs.true504, %while.cond473.outer657
  %idxprom453.pn.ph667 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph658, %while.cond473.outer657 ]
  %p_j_z462.0.ph668 = phi double [ %115, %land.lhs.true504 ], [ %p_j_z462.0.ph659, %while.cond473.outer657 ]
  %p_j_y457.0.ph669 = phi double [ %114, %land.lhs.true504 ], [ %p_j_y457.0.ph660, %while.cond473.outer657 ]
  %p_j_x452.0.ph670 = phi double [ %113, %land.lhs.true504 ], [ %p_j_x452.0.ph661, %while.cond473.outer657 ]
  %j2449.0.ph671 = phi i32 [ %112, %land.lhs.true504 ], [ %j2449.0.ph662, %while.cond473.outer657 ]
  %k446.0.ph672 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph663, %while.cond473.outer657 ]
  %exclChecksum.4.ph673 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph665, %while.cond473.outer657 ]
  %110 = sext i32 %k446.0.ph672 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer666
  %indvars.iv793 = phi i64 [ %110, %while.cond473.outer666 ], [ %indvars.iv.next794, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph667, %while.cond473.outer666 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph668, %while.cond473.outer666 ], [ %115, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph669, %while.cond473.outer666 ], [ %114, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph670, %while.cond473.outer666 ], [ %113, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph671, %while.cond473.outer666 ], [ %112, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph672, %while.cond473.outer666 ], [ %inc476, %while.body475 ]
  %111 = trunc i64 %indvars.iv793 to i32
  %cmp474 = icmp slt i32 %111, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next794 = add nsw i64 %indvars.iv793, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129623625631637, i64 %indvars.iv.next794
  %112 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %69, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %112 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %113 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %70, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %114 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %71, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %115 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph673, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer666

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph673, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %66
  %cmp510 = icmp sgt i32 %atom2467.0, %67
  %or.cond604 = or i1 %cmp508, %cmp510
  br i1 %or.cond604, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph664, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph664, align 4, !tbaa !11
  br label %while.cond473.outer657

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151633635, %if.else445 ], [ %cond151633635, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140627629639, %if.else445 ], [ %cond140627629639, %for.cond383.preheader ], [ %pli380.2.ph664, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0757, %if.else445 ], [ %exclChecksum.0757, %for.cond383.preheader ], [ %exclChecksum.4.ph673, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528547 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528547 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext591 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext591, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140627629639, i64 %idxprom533
  %116 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140627629639, i64 %idxprom535
  store i32 %116, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540689 = icmp sgt i32 %conv529, 0
  br i1 %cmp540689, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %117 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %118 = lshr i64 %117, 2
  %119 = trunc i64 %118 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv801 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next802, %for.inc559 ]
  %plin.5693 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0692 = phi i32* [ %cond162641, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0691 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140627629639, i64 %indvars.iv801
  %120 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %120 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %121 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %121, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551590 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551590, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %122 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %122 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5693, i64 1
  store i32 %120, i32* %plin.5693, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0692, i64 1
  store i32 %120, i32* %plix.0692, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0691, i64 1
  store i32 %120, i32* %plim.0691, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0691, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0691, %sw.bb555 ], [ %plim.0691, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0692, %for.body541 ], [ %plix.0692, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0692, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5693, %for.body541 ], [ %plin.5693, %sw.bb557 ], [ %plin.5693, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next802 = add nuw nsw i64 %indvars.iv801, 1
  %lftr.wideiv803 = trunc i64 %indvars.iv.next802 to i32
  %exitcond804 = icmp eq i32 %lftr.wideiv803, %119
  br i1 %exitcond804, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162641, %for.cond539.preheader ], [ %cond162641, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565 = ashr exact i64 %sub.ptr.sub564, 2
  %conv566548 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566548
  %add574 = add i64 %add567, %sub.ptr.div565
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579550 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579550 to i32
  %cmp582697 = icmp sgt i32 %conv580, 0
  br i1 %cmp582697, label %for.body583.lr.ph, label %for.end715

for.body583.lr.ph:                                ; preds = %for.end561
  %x693 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y702 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z709 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %123 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %124 = lshr i64 %123, 2
  %125 = trunc i64 %124 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583.for.body583_crit_edge, %for.body583.lr.ph
  %126 = phi i32* [ %97, %for.body583.lr.ph ], [ %.pre, %for.body583.for.body583_crit_edge ]
  %indvars.iv805 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next806, %for.body583.for.body583_crit_edge ]
  %127 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %156, %for.body583.for.body583_crit_edge ]
  %128 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %163, %for.body583.for.body583_crit_edge ]
  %129 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %174, %for.body583.for.body583_crit_edge ]
  %arrayidx586 = getelementptr inbounds i32* %cond151633635, i64 %indvars.iv805
  %130 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %130 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %131 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %69, %131
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %132 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %70, %132
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %133 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %71, %133
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %134 = bitcast float %conv604 to i32
  %shr = ashr i32 %134, 17
  %add606 = add nsw i32 %shr, %mul
  %id607 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %135 = bitcast [4 x i8]* %id607 to i32*
  %bf.load608 = load i32* %135, align 4
  %bf.clear609 = and i32 %bf.load608, 4194303
  %idxprom.i607647 = zext i32 %bf.clear609 to i64
  %arrayidx.i609 = getelementptr inbounds i32* %126, i64 %idxprom.i607647
  %136 = load i32* %arrayidx.i609, align 4, !tbaa !11
  %conv.i610 = zext i32 %136 to i64
  %conv611 = shl nuw nsw i64 %conv.i610, 1
  %mul612 = and i64 %conv611, 131070
  %mul615 = shl nsw i32 %add606, 4
  %idx.ext616 = sext i32 %mul615 to i64
  %and = and i32 %134, -131072
  %charge630 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %137 = load float* %charge630, align 4, !tbaa !63
  %conv631 = fpext float %137 to double
  %mul632 = fmul double %mul373, %conv631
  %138 = bitcast i32 %and to float
  %conv634 = fpext float %138 to double
  %sub635 = fsub double %add603, %conv634
  %bf.lshr638 = lshr i32 %bf.load608, 28
  %idxprom639 = zext i32 %bf.lshr638 to i64
  %add.ptr369.sum580 = add i64 %idxprom639, %idx.ext368
  %arrayidx640 = getelementptr inbounds double* %94, i64 %add.ptr369.sum580
  %139 = load double* %arrayidx640, align 8, !tbaa !17
  %add.ptr.i.sum648 = add i64 %mul612, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum648, i32 0
  %140 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %8, %140
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum648, i32 1
  %141 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %8, %141
  %add.ptr617.sum581 = or i64 %idx.ext616, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr617.sum581
  %142 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %142
  %add.ptr622.sum582 = or i64 %idx.ext616, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr622.sum582
  %143 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %143
  %sub654 = fsub double %mul651, %mul653
  %add.ptr617.sum583 = or i64 %idx.ext616, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr617.sum583
  %144 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %144
  %add.ptr622.sum584 = or i64 %idx.ext616, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr622.sum584
  %145 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %145
  %sub659 = fsub double %mul656, %mul658
  %add.ptr617.sum585 = or i64 %idx.ext616, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr617.sum585
  %146 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %146
  %add.ptr622.sum586 = or i64 %idx.ext616, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr622.sum586
  %147 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %147
  %sub664 = fsub double %mul661, %mul663
  %add.ptr627.sum587 = or i64 %idx.ext616, 9
  %arrayidx665 = getelementptr inbounds double* %7, i64 %add.ptr627.sum587
  %148 = load double* %arrayidx665, align 8, !tbaa !17
  %add.ptr627.sum588 = or i64 %idx.ext616, 10
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr627.sum588
  %149 = load double* %arrayidx666, align 8, !tbaa !17
  %add.ptr627.sum589 = or i64 %idx.ext616, 11
  %arrayidx667 = getelementptr inbounds double* %7, i64 %add.ptr627.sum589
  %150 = load double* %arrayidx667, align 8, !tbaa !17
  %mul668 = fmul double %mul632, %150
  %mul669 = fmul double %mul632, %149
  %mul670 = fmul double %mul632, %148
  %add672 = fadd double %sub654, %mul668
  %add673 = fadd double %sub659, %mul669
  %add674 = fadd double %mul670, %sub664
  %mul676 = fmul double %sub635, 3.000000e+00
  %mul677 = fmul double %mul676, %add672
  %mul678 = fmul double %add673, 2.000000e+00
  %add679 = fadd double %mul678, %mul677
  %mul680 = fmul double %sub635, %add679
  %add681 = fadd double %add674, %mul680
  %mul682 = fmul double %add681, -2.000000e+00
  %mul683 = fmul double %139, %mul682
  %mul686 = fmul double %sub591, %mul683
  %151 = insertelement <2 x double> undef, double %sub591, i32 0
  %152 = insertelement <2 x double> %151, double %sub596, i32 1
  %153 = insertelement <2 x double> undef, double %mul686, i32 0
  %154 = insertelement <2 x double> %153, double %mul686, i32 1
  %155 = fmul <2 x double> %152, %154
  %156 = fadd <2 x double> %127, %155
  %157 = load double* %x693, align 8, !tbaa !72
  %add694 = fadd double %157, %mul686
  store double %add694, double* %x693, align 8, !tbaa !72
  %x695 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul697 = fmul double %sub596, %mul683
  %158 = insertelement <2 x double> undef, double %sub596, i32 0
  %159 = insertelement <2 x double> %158, double %sub601, i32 1
  %160 = insertelement <2 x double> undef, double %mul697, i32 0
  %161 = insertelement <2 x double> %160, double %mul697, i32 1
  %162 = fmul <2 x double> %159, %161
  %163 = fadd <2 x double> %128, %162
  %164 = load double* %y702, align 8, !tbaa !73
  %add703 = fadd double %164, %mul697
  store double %add703, double* %y702, align 8, !tbaa !73
  %165 = bitcast double* %x695 to <2 x double>*
  %166 = load <2 x double>* %165, align 8, !tbaa !17
  %167 = insertelement <2 x double> %153, double %mul697, i32 1
  %168 = fsub <2 x double> %166, %167
  %169 = bitcast double* %x695 to <2 x double>*
  store <2 x double> %168, <2 x double>* %169, align 8, !tbaa !17
  %mul706 = fmul double %sub601, %mul683
  %170 = insertelement <2 x double> undef, double %sub601, i32 0
  %171 = insertelement <2 x double> %170, double %sub601, i32 1
  %172 = insertelement <2 x double> %153, double %mul706, i32 1
  %173 = fmul <2 x double> %171, %172
  %174 = fadd <2 x double> %129, %173
  %175 = load double* %z709, align 8, !tbaa !74
  %add710 = fadd double %175, %mul706
  store double %add710, double* %z709, align 8, !tbaa !74
  %z711 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %176 = load double* %z711, align 8, !tbaa !74
  %sub712 = fsub double %176, %mul706
  store double %sub712, double* %z711, align 8, !tbaa !74
  %indvars.iv.next806 = add nuw nsw i64 %indvars.iv805, 1
  %lftr.wideiv807 = trunc i64 %indvars.iv.next806 to i32
  %exitcond808 = icmp eq i32 %lftr.wideiv807, %125
  br i1 %exitcond808, label %for.end715, label %for.body583.for.body583_crit_edge

for.body583.for.body583_crit_edge:                ; preds = %for.body583
  %.pre = load i32** %atomVdwType.i612, align 8, !tbaa !64
  br label %for.body583

for.end715:                                       ; preds = %for.body583, %for.end561
  %177 = phi <2 x double> [ %61, %for.end561 ], [ %156, %for.body583 ]
  %178 = phi <2 x double> [ %62, %for.end561 ], [ %163, %for.body583 ]
  %179 = phi <2 x double> [ %63, %for.end561 ], [ %174, %for.body583 ]
  %conv720 = trunc i64 %sub.ptr.div572 to i32
  %cmp722711 = icmp sgt i32 %conv720, 0
  br i1 %cmp722711, label %for.body723.lr.ph, label %for.end904

for.body723.lr.ph:                                ; preds = %for.end715
  %x880 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y890 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z898 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body723

for.body723:                                      ; preds = %for.body723, %for.body723.lr.ph
  %indvars.iv809 = phi i64 [ 0, %for.body723.lr.ph ], [ %indvars.iv.next810, %for.body723 ]
  %180 = phi <2 x double> [ %177, %for.body723.lr.ph ], [ %213, %for.body723 ]
  %181 = phi <2 x double> [ %178, %for.body723.lr.ph ], [ %220, %for.body723 ]
  %182 = phi <2 x double> [ %179, %for.body723.lr.ph ], [ %231, %for.body723 ]
  %arrayidx726 = getelementptr inbounds i32* %cond173, i64 %indvars.iv809
  %183 = load i32* %arrayidx726, align 4, !tbaa !11
  %idx.ext728 = sext i32 %183 to i64
  %x732 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 0
  %184 = load double* %x732, align 8, !tbaa !59
  %sub733 = fsub double %69, %184
  %mul735 = fmul double %sub733, %sub733
  %y738 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 1
  %185 = load double* %y738, align 8, !tbaa !61
  %sub739 = fsub double %70, %185
  %mul740 = fmul double %sub739, %sub739
  %add741 = fadd double %mul735, %mul740
  %z744 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 0, i32 2
  %186 = load double* %z744, align 8, !tbaa !62
  %sub745 = fsub double %71, %186
  %mul746 = fmul double %sub745, %sub745
  %add747 = fadd double %add741, %mul746
  %conv749 = fptrunc double %add747 to float
  %187 = bitcast float %conv749 to i32
  %shr753 = ashr i32 %187, 17
  %add754 = add nsw i32 %shr753, %mul
  %id756 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 2
  %188 = bitcast [4 x i8]* %id756 to i32*
  %bf.load757 = load i32* %188, align 4
  %bf.clear758 = and i32 %bf.load757, 4194303
  %idxprom.i605645 = zext i32 %bf.clear758 to i64
  %189 = load i32** %atomVdwType.i612, align 8, !tbaa !64
  %arrayidx.i606 = getelementptr inbounds i32* %189, i64 %idxprom.i605645
  %190 = load i32* %arrayidx.i606, align 4, !tbaa !11
  %conv.i = zext i32 %190 to i64
  %conv760 = shl nuw nsw i64 %conv.i, 1
  %mul761 = and i64 %conv760, 131070
  %add.ptr763.sum560 = or i64 %mul761, 1
  %mul766 = shl nsw i32 %add754, 4
  %idx.ext767 = sext i32 %mul766 to i64
  %and786 = and i32 %187, -131072
  %charge788 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext728, i32 1
  %191 = load float* %charge788, align 4, !tbaa !63
  %conv789 = fpext float %191 to double
  %mul790 = fmul double %mul373, %conv789
  %192 = bitcast i32 %and786 to float
  %conv793 = fpext float %192 to double
  %sub794 = fsub double %add747, %conv793
  %bf.lshr798 = lshr i32 %bf.load757, 28
  %idxprom799 = zext i32 %bf.lshr798 to i64
  %add.ptr369.sum563 = add i64 %idxprom799, %idx.ext368
  %arrayidx800 = getelementptr inbounds double* %94, i64 %add.ptr369.sum563
  %193 = load double* %arrayidx800, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr763.sum560, %idx.ext.i
  %A802 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum, i32 0
  %194 = load double* %A802, align 8, !tbaa !69
  %mul803 = fmul double %8, %194
  %B805 = getelementptr inbounds %"struct.LJTable::TableEntry"* %99, i64 %add.ptr.i.sum, i32 1
  %195 = load double* %B805, align 8, !tbaa !71
  %mul806 = fmul double %8, %195
  %add.ptr768.sum564 = or i64 %idx.ext767, 3
  %arrayidx812 = getelementptr inbounds double* %7, i64 %add.ptr768.sum564
  %196 = load double* %arrayidx812, align 8, !tbaa !17
  %mul813 = fmul double %mul803, %196
  %add.ptr775.sum565 = or i64 %idx.ext767, 7
  %arrayidx814 = getelementptr inbounds double* %7, i64 %add.ptr775.sum565
  %197 = load double* %arrayidx814, align 8, !tbaa !17
  %mul815 = fmul double %mul806, %197
  %sub816 = fsub double %mul813, %mul815
  %add.ptr768.sum566 = or i64 %idx.ext767, 2
  %arrayidx818 = getelementptr inbounds double* %7, i64 %add.ptr768.sum566
  %198 = load double* %arrayidx818, align 8, !tbaa !17
  %mul819 = fmul double %mul803, %198
  %add.ptr775.sum567 = or i64 %idx.ext767, 6
  %arrayidx820 = getelementptr inbounds double* %7, i64 %add.ptr775.sum567
  %199 = load double* %arrayidx820, align 8, !tbaa !17
  %mul821 = fmul double %mul806, %199
  %sub822 = fsub double %mul819, %mul821
  %add.ptr768.sum568 = or i64 %idx.ext767, 1
  %arrayidx824 = getelementptr inbounds double* %7, i64 %add.ptr768.sum568
  %200 = load double* %arrayidx824, align 8, !tbaa !17
  %mul825 = fmul double %mul803, %200
  %add.ptr775.sum569 = or i64 %idx.ext767, 5
  %arrayidx826 = getelementptr inbounds double* %7, i64 %add.ptr775.sum569
  %201 = load double* %arrayidx826, align 8, !tbaa !17
  %mul827 = fmul double %mul806, %201
  %sub828 = fsub double %mul825, %mul827
  %add.ptr782.sum570 = or i64 %idx.ext767, 9
  %arrayidx830 = getelementptr inbounds double* %7, i64 %add.ptr782.sum570
  %202 = load double* %arrayidx830, align 8, !tbaa !17
  %add.ptr782.sum571 = or i64 %idx.ext767, 10
  %arrayidx832 = getelementptr inbounds double* %7, i64 %add.ptr782.sum571
  %203 = load double* %arrayidx832, align 8, !tbaa !17
  %add.ptr782.sum572 = or i64 %idx.ext767, 11
  %arrayidx834 = getelementptr inbounds double* %7, i64 %add.ptr782.sum572
  %204 = load double* %arrayidx834, align 8, !tbaa !17
  %add.ptr838.sum574 = or i64 %idx.ext767, 13
  %arrayidx842 = getelementptr inbounds double* %7, i64 %add.ptr838.sum574
  %205 = load double* %arrayidx842, align 8, !tbaa !17
  %mul843 = fmul double %sub, %205
  %sub844 = fsub double %202, %mul843
  %add.ptr838.sum575 = or i64 %idx.ext767, 14
  %arrayidx845 = getelementptr inbounds double* %7, i64 %add.ptr838.sum575
  %206 = load double* %arrayidx845, align 8, !tbaa !17
  %mul846 = fmul double %sub, %206
  %sub847 = fsub double %203, %mul846
  %add.ptr838.sum576 = or i64 %idx.ext767, 15
  %arrayidx848 = getelementptr inbounds double* %7, i64 %add.ptr838.sum576
  %207 = load double* %arrayidx848, align 8, !tbaa !17
  %mul849 = fmul double %sub, %207
  %sub850 = fsub double %204, %mul849
  %mul851 = fmul double %mul790, %sub850
  %mul852 = fmul double %mul790, %sub847
  %mul853 = fmul double %mul790, %sub844
  %add855 = fadd double %sub816, %mul851
  %add856 = fadd double %sub822, %mul852
  %add857 = fadd double %sub828, %mul853
  %mul860 = fmul double %sub794, 3.000000e+00
  %mul861 = fmul double %mul860, %add855
  %mul862 = fmul double %add856, 2.000000e+00
  %add863 = fadd double %mul862, %mul861
  %mul864 = fmul double %sub794, %add863
  %add865 = fadd double %add857, %mul864
  %mul867 = fmul double %add865, -2.000000e+00
  %mul868 = fmul double %193, %mul867
  %mul873 = fmul double %sub733, %mul868
  %208 = insertelement <2 x double> undef, double %sub733, i32 0
  %209 = insertelement <2 x double> %208, double %sub739, i32 1
  %210 = insertelement <2 x double> undef, double %mul873, i32 0
  %211 = insertelement <2 x double> %210, double %mul873, i32 1
  %212 = fmul <2 x double> %209, %211
  %213 = fadd <2 x double> %180, %212
  %214 = load double* %x880, align 8, !tbaa !72
  %add881 = fadd double %214, %mul873
  store double %add881, double* %x880, align 8, !tbaa !72
  %x882 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext728, i32 0
  %mul885 = fmul double %sub739, %mul868
  %215 = insertelement <2 x double> undef, double %sub739, i32 0
  %216 = insertelement <2 x double> %215, double %sub745, i32 1
  %217 = insertelement <2 x double> undef, double %mul885, i32 0
  %218 = insertelement <2 x double> %217, double %mul885, i32 1
  %219 = fmul <2 x double> %216, %218
  %220 = fadd <2 x double> %181, %219
  %221 = load double* %y890, align 8, !tbaa !73
  %add891 = fadd double %221, %mul885
  store double %add891, double* %y890, align 8, !tbaa !73
  %222 = bitcast double* %x882 to <2 x double>*
  %223 = load <2 x double>* %222, align 8, !tbaa !17
  %224 = insertelement <2 x double> %210, double %mul885, i32 1
  %225 = fsub <2 x double> %223, %224
  %226 = bitcast double* %x882 to <2 x double>*
  store <2 x double> %225, <2 x double>* %226, align 8, !tbaa !17
  %mul895 = fmul double %sub745, %mul868
  %227 = insertelement <2 x double> undef, double %sub745, i32 0
  %228 = insertelement <2 x double> %227, double %sub745, i32 1
  %229 = insertelement <2 x double> %210, double %mul895, i32 1
  %230 = fmul <2 x double> %228, %229
  %231 = fadd <2 x double> %182, %230
  %232 = load double* %z898, align 8, !tbaa !74
  %add899 = fadd double %232, %mul895
  store double %add899, double* %z898, align 8, !tbaa !74
  %z900 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext728, i32 2
  %233 = load double* %z900, align 8, !tbaa !74
  %sub901 = fsub double %233, %mul895
  store double %sub901, double* %z900, align 8, !tbaa !74
  %indvars.iv.next810 = add nuw nsw i64 %indvars.iv809, 1
  %lftr.wideiv811 = trunc i64 %indvars.iv.next810 to i32
  %exitcond812 = icmp eq i32 %lftr.wideiv811, %conv720
  br i1 %exitcond812, label %for.end904, label %for.body723

for.end904:                                       ; preds = %for.body723, %for.end715
  %234 = phi <2 x double> [ %177, %for.end715 ], [ %213, %for.body723 ]
  %235 = phi <2 x double> [ %178, %for.end715 ], [ %220, %for.body723 ]
  %236 = phi <2 x double> [ %179, %for.end715 ], [ %231, %for.body723 ]
  %conv909 = trunc i64 %sub.ptr.div565 to i32
  %cmp911725 = icmp sgt i32 %conv909, 0
  br i1 %cmp911725, label %for.body912.lr.ph, label %for.inc1036

for.body912.lr.ph:                                ; preds = %for.end904
  %x1011 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y1021 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z1029 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body912

for.body912:                                      ; preds = %for.body912, %for.body912.lr.ph
  %indvars.iv813 = phi i64 [ 0, %for.body912.lr.ph ], [ %indvars.iv.next814, %for.body912 ]
  %237 = phi <2 x double> [ %234, %for.body912.lr.ph ], [ %260, %for.body912 ]
  %238 = phi <2 x double> [ %235, %for.body912.lr.ph ], [ %267, %for.body912 ]
  %239 = phi <2 x double> [ %236, %for.body912.lr.ph ], [ %278, %for.body912 ]
  %arrayidx915 = getelementptr inbounds i32* %cond162641, i64 %indvars.iv813
  %240 = load i32* %arrayidx915, align 4, !tbaa !11
  %idx.ext917 = sext i32 %240 to i64
  %x921 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext917, i32 0, i32 0
  %241 = load double* %x921, align 8, !tbaa !59
  %sub922 = fsub double %69, %241
  %mul924 = fmul double %sub922, %sub922
  %y927 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext917, i32 0, i32 1
  %242 = load double* %y927, align 8, !tbaa !61
  %sub928 = fsub double %70, %242
  %mul929 = fmul double %sub928, %sub928
  %add930 = fadd double %mul924, %mul929
  %z933 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext917, i32 0, i32 2
  %243 = load double* %z933, align 8, !tbaa !62
  %sub934 = fsub double %71, %243
  %mul935 = fmul double %sub934, %sub934
  %add936 = fadd double %add930, %mul935
  %conv938 = fptrunc double %add936 to float
  %244 = bitcast float %conv938 to i32
  %shr942 = ashr i32 %244, 17
  %add943 = add nsw i32 %shr942, %mul
  %mul945 = shl nsw i32 %add943, 4
  %idx.ext946 = sext i32 %mul945 to i64
  %and952 = and i32 %244, -131072
  %charge954 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext917, i32 1
  %245 = load float* %charge954, align 4, !tbaa !63
  %conv955 = fpext float %245 to double
  %mul956 = fmul double %mul373, %conv955
  %246 = bitcast i32 %and952 to float
  %conv959 = fpext float %246 to double
  %sub960 = fsub double %add936, %conv959
  %partition962 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext917, i32 2
  %247 = bitcast [4 x i8]* %partition962 to i32*
  %bf.load963 = load i32* %247, align 4
  %bf.lshr964 = lshr i32 %bf.load963, 28
  %idxprom965 = zext i32 %bf.lshr964 to i64
  %add.ptr369.sum = add i64 %idxprom965, %idx.ext368
  %arrayidx966 = getelementptr inbounds double* %94, i64 %add.ptr369.sum
  %248 = load double* %arrayidx966, align 8, !tbaa !17
  %add.ptr948.sum552 = or i64 %idx.ext946, 9
  %arrayidx968 = getelementptr inbounds double* %7, i64 %add.ptr948.sum552
  %249 = load double* %arrayidx968, align 8, !tbaa !17
  %add.ptr948.sum553 = or i64 %idx.ext946, 10
  %arrayidx970 = getelementptr inbounds double* %7, i64 %add.ptr948.sum553
  %250 = load double* %arrayidx970, align 8, !tbaa !17
  %add.ptr948.sum554 = or i64 %idx.ext946, 11
  %arrayidx972 = getelementptr inbounds double* %7, i64 %add.ptr948.sum554
  %251 = load double* %arrayidx972, align 8, !tbaa !17
  %add.ptr977.sum556 = or i64 %idx.ext946, 13
  %arrayidx980 = getelementptr inbounds double* %7, i64 %add.ptr977.sum556
  %252 = load double* %arrayidx980, align 8, !tbaa !17
  %sub981 = fsub double %249, %252
  %add.ptr977.sum557 = or i64 %idx.ext946, 14
  %arrayidx982 = getelementptr inbounds double* %7, i64 %add.ptr977.sum557
  %253 = load double* %arrayidx982, align 8, !tbaa !17
  %sub983 = fsub double %250, %253
  %add.ptr977.sum558 = or i64 %idx.ext946, 15
  %arrayidx984 = getelementptr inbounds double* %7, i64 %add.ptr977.sum558
  %254 = load double* %arrayidx984, align 8, !tbaa !17
  %sub985 = fsub double %251, %254
  %mul986 = fmul double %mul956, %sub985
  %mul987 = fmul double %mul956, %sub983
  %mul988 = fmul double %mul956, %sub981
  %mul991 = fmul double %sub960, 3.000000e+00
  %mul992 = fmul double %mul991, %mul986
  %mul993 = fmul double %mul987, 2.000000e+00
  %add994 = fadd double %mul993, %mul992
  %mul995 = fmul double %sub960, %add994
  %add996 = fadd double %mul988, %mul995
  %mul998 = fmul double %add996, -2.000000e+00
  %mul999 = fmul double %248, %mul998
  %mul1004 = fmul double %sub922, %mul999
  %255 = insertelement <2 x double> undef, double %sub922, i32 0
  %256 = insertelement <2 x double> %255, double %sub928, i32 1
  %257 = insertelement <2 x double> undef, double %mul1004, i32 0
  %258 = insertelement <2 x double> %257, double %mul1004, i32 1
  %259 = fmul <2 x double> %256, %258
  %260 = fadd <2 x double> %237, %259
  %261 = load double* %x1011, align 8, !tbaa !72
  %add1012 = fadd double %261, %mul1004
  store double %add1012, double* %x1011, align 8, !tbaa !72
  %x1013 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext917, i32 0
  %mul1016 = fmul double %sub928, %mul999
  %262 = insertelement <2 x double> undef, double %sub928, i32 0
  %263 = insertelement <2 x double> %262, double %sub934, i32 1
  %264 = insertelement <2 x double> undef, double %mul1016, i32 0
  %265 = insertelement <2 x double> %264, double %mul1016, i32 1
  %266 = fmul <2 x double> %263, %265
  %267 = fadd <2 x double> %238, %266
  %268 = load double* %y1021, align 8, !tbaa !73
  %add1022 = fadd double %268, %mul1016
  store double %add1022, double* %y1021, align 8, !tbaa !73
  %269 = bitcast double* %x1013 to <2 x double>*
  %270 = load <2 x double>* %269, align 8, !tbaa !17
  %271 = insertelement <2 x double> %257, double %mul1016, i32 1
  %272 = fsub <2 x double> %270, %271
  %273 = bitcast double* %x1013 to <2 x double>*
  store <2 x double> %272, <2 x double>* %273, align 8, !tbaa !17
  %mul1026 = fmul double %sub934, %mul999
  %274 = insertelement <2 x double> undef, double %sub934, i32 0
  %275 = insertelement <2 x double> %274, double %sub934, i32 1
  %276 = insertelement <2 x double> %257, double %mul1026, i32 1
  %277 = fmul <2 x double> %275, %276
  %278 = fadd <2 x double> %239, %277
  %279 = load double* %z1029, align 8, !tbaa !74
  %add1030 = fadd double %279, %mul1026
  store double %add1030, double* %z1029, align 8, !tbaa !74
  %z1031 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext917, i32 2
  %280 = load double* %z1031, align 8, !tbaa !74
  %sub1032 = fsub double %280, %mul1026
  store double %sub1032, double* %z1031, align 8, !tbaa !74
  %indvars.iv.next814 = add nuw nsw i64 %indvars.iv813, 1
  %lftr.wideiv815 = trunc i64 %indvars.iv.next814 to i32
  %exitcond816 = icmp eq i32 %lftr.wideiv815, %conv909
  br i1 %exitcond816, label %for.inc1036, label %for.body912

for.inc1036:                                      ; preds = %for.body912, %for.end904, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end904 ], [ %pairCount.2, %for.body912 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0743, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end904 ], [ %pairlistindex.1, %for.body912 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1744, %for.end904 ], [ %i.1744, %for.body912 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0757, %if.then221 ], [ %exclChecksum.0757, %cond.end349 ], [ %conv575, %for.end904 ], [ %conv575, %for.body912 ]
  %281 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %234, %for.end904 ], [ %260, %for.body912 ]
  %282 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %235, %for.end904 ], [ %267, %for.body912 ]
  %283 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %236, %for.end904 ], [ %278, %for.body912 ]
  %inc1037 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc1037, %12
  br i1 %cmp183, label %for.body184, label %for.end1038

for.end1038:                                      ; preds = %for.inc1036, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1036 ]
  %284 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %281, %for.inc1036 ]
  %285 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %282, %for.inc1036 ]
  %286 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %283, %for.inc1036 ]
  %287 = extractelement <2 x double> %286, i32 1
  %arraydecay1039 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1040 = icmp eq i32* %cond615617832838, %arraydecay1039
  br i1 %cmp1040, label %if.end1045, label %delete.notnull1043

delete.notnull1043:                               ; preds = %for.end1038
  %288 = bitcast i32* %cond615617832838 to i8*
  call void @_ZdaPv(i8* %288) #7
  br label %if.end1045

if.end1045:                                       ; preds = %delete.notnull1043, %for.end1038
  %arraydecay1046 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1047 = icmp eq i32* %cond19619830839, %arraydecay1046
  br i1 %cmp1047, label %if.end1052, label %delete.notnull1050

delete.notnull1050:                               ; preds = %if.end1045
  %289 = bitcast i32* %cond19619830839 to i8*
  call void @_ZdaPv(i8* %289) #7
  br label %if.end1052

if.end1052:                                       ; preds = %delete.notnull1050, %if.end1045
  %arraydecay1053 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1054 = icmp eq i32* %cond30834837, %arraydecay1053
  br i1 %cmp1054, label %if.end1059, label %delete.notnull1057

delete.notnull1057:                               ; preds = %if.end1052
  %290 = bitcast i32* %cond30834837 to i8*
  call void @_ZdaPv(i8* %290) #7
  br label %if.end1059

if.end1059:                                       ; preds = %delete.notnull1057, %if.end1052
  %arraydecay1060 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1061 = icmp eq i32* %cond129623625631637, %arraydecay1060
  br i1 %cmp1061, label %if.end1066, label %delete.notnull1064

delete.notnull1064:                               ; preds = %if.end1059
  %291 = bitcast i32* %cond129623625631637 to i8*
  call void @_ZdaPv(i8* %291) #7
  br label %if.end1066

if.end1066:                                       ; preds = %delete.notnull1064, %if.end1059
  %arraydecay1067 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1068 = icmp eq i32* %cond140627629639, %arraydecay1067
  br i1 %cmp1068, label %if.end1073, label %delete.notnull1071

delete.notnull1071:                               ; preds = %if.end1066
  %292 = bitcast i32* %cond140627629639 to i8*
  call void @_ZdaPv(i8* %292) #7
  br label %if.end1073

if.end1073:                                       ; preds = %delete.notnull1071, %if.end1066
  %arraydecay1074 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1075 = icmp eq i32* %cond151633635, %arraydecay1074
  br i1 %cmp1075, label %if.end1080, label %delete.notnull1078

delete.notnull1078:                               ; preds = %if.end1073
  %293 = bitcast i32* %cond151633635 to i8*
  call void @_ZdaPv(i8* %293) #7
  br label %if.end1080

if.end1080:                                       ; preds = %delete.notnull1078, %if.end1073
  %arraydecay1081 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1082 = icmp eq i32* %cond162641, %arraydecay1081
  br i1 %cmp1082, label %if.end1087, label %delete.notnull1085

delete.notnull1085:                               ; preds = %if.end1080
  %294 = bitcast i32* %cond162641 to i8*
  call void @_ZdaPv(i8* %294) #7
  br label %if.end1087

if.end1087:                                       ; preds = %delete.notnull1085, %if.end1080
  %arraydecay1088 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1089 = icmp eq i32* %cond173, %arraydecay1088
  br i1 %cmp1089, label %if.end1094, label %delete.notnull1092

delete.notnull1092:                               ; preds = %if.end1087
  %295 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %295) #7
  br label %if.end1094

if.end1094:                                       ; preds = %delete.notnull1092, %if.end1087
  %conv1095 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1096 = getelementptr inbounds double* %1, i64 22
  %296 = load double* %arrayidx1096, align 8, !tbaa !17
  %add1097 = fadd double %conv1095, %296
  store double %add1097, double* %arrayidx1096, align 8, !tbaa !17
  %arrayidx1098 = getelementptr inbounds double* %1, i64 12
  %297 = bitcast double* %arrayidx1098 to <2 x double>*
  %298 = load <2 x double>* %297, align 8, !tbaa !17
  %299 = fadd <2 x double> %284, %298
  %300 = bitcast double* %arrayidx1098 to <2 x double>*
  store <2 x double> %299, <2 x double>* %300, align 8, !tbaa !17
  %arrayidx1102 = getelementptr inbounds double* %1, i64 14
  %301 = bitcast double* %arrayidx1102 to <2 x double>*
  %302 = load <2 x double>* %301, align 8, !tbaa !17
  %303 = shufflevector <2 x double> %286, <2 x double> %284, <2 x i32> <i32 0, i32 3>
  %304 = fadd <2 x double> %303, %302
  %305 = bitcast double* %arrayidx1102 to <2 x double>*
  store <2 x double> %304, <2 x double>* %305, align 8, !tbaa !17
  %arrayidx1106 = getelementptr inbounds double* %1, i64 16
  %306 = bitcast double* %arrayidx1106 to <2 x double>*
  %307 = load <2 x double>* %306, align 8, !tbaa !17
  %308 = fadd <2 x double> %285, %307
  %309 = bitcast double* %arrayidx1106 to <2 x double>*
  store <2 x double> %308, <2 x double>* %309, align 8, !tbaa !17
  %arrayidx1110 = getelementptr inbounds double* %1, i64 18
  %310 = bitcast double* %arrayidx1110 to <2 x double>*
  %311 = load <2 x double>* %310, align 8, !tbaa !17
  %312 = shufflevector <2 x double> %286, <2 x double> %285, <2 x i32> <i32 0, i32 3>
  %313 = fadd <2 x double> %312, %311
  %314 = bitcast double* %arrayidx1110 to <2 x double>*
  store <2 x double> %313, <2 x double>* %314, align 8, !tbaa !17
  %arrayidx1114 = getelementptr inbounds double* %1, i64 20
  %315 = load double* %arrayidx1114, align 8, !tbaa !17
  %add1115 = fadd double %287, %315
  store double %add1115, double* %arrayidx1114, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1094, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil36calc_pair_energy_merge_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31841 = icmp sgt i32 %13, 0
  br i1 %cmp31841, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30898 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond662664896 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19666894 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv887 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next888, %for.inc ]
  %g.0842 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv887, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0842, 1
  %idxprom41 = sext i32 %g.0842 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond662664896, i64 %idxprom41
  %30 = trunc i64 %indvars.iv887 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0842, %for.body ]
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1
  %lftr.wideiv889 = trunc i64 %indvars.iv.next888 to i32
  %exitcond890 = icmp eq i32 %lftr.wideiv889, %13
  br i1 %exitcond890, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond662664896, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond662664896, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa903 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19666893902 = phi i32* [ %cond19666894, %for.end ], [ %cond19666894, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond662664895901 = phi i32* [ %cond662664896, %for.end ], [ %cond662664896, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30897900 = phi i32* [ %cond30898, %for.end ], [ %cond30898, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56835 = icmp sgt i32 %g.0.lcssa903, 0
  br i1 %cmp56835, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75829 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76830 = icmp sgt i32 %12, 0
  %or.cond646831 = and i1 %tobool75829, %cmp76830
  br i1 %or.cond646831, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv883 = phi i64 [ %indvars.iv.next884, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0837 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0836 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond662664895901, i64 %indvars.iv883
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0837, 1
  %idxprom68 = sext i32 %fixg.0837 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19666893902, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0836, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0837, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next884 = add nuw nsw i64 %indvars.iv883, 1
  %lftr.wideiv885 = trunc i64 %indvars.iv.next884 to i32
  %exitcond886 = icmp eq i32 %lftr.wideiv885, %g.0.lcssa903
  br i1 %exitcond886, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv881 = phi i64 [ %indvars.iv.next882, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2832 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv881, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2832
  %indvars.iv.next882 = add nuw nsw i64 %indvars.iv881, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next882 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond646 = and i1 %tobool75, %cmp76
  br i1 %or.cond646, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75829, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond662664895901, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond662664895901 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19666893902, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19666893902 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30897900, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30897900 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19666893902, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19666893902, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2669 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162688 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140674676686 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129670672678684 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151680682 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183798 = icmp sgt i32 %12, 0
  br i1 %cmp183798, label %for.body184.lr.ph, label %for.end1081

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i659 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140674676686 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162688 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151680682 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30897900 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129670672678684 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc1079, %for.body184.lr.ph
  %exclChecksum.0818 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc1079 ]
  %i.1801 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc1080, %for.inc1079 ]
  %pairlistindex.0800 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc1079 ]
  %pairCount.0799 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc1079 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %336, %for.inc1079 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %337, %for.inc1079 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %338, %for.inc1079 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %339, %for.inc1079 ]
  %idxprom185 = sext i32 %i.1801 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %65 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %65, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i690 = zext i32 %bf.clear188 to i64
  %66 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i690, i32 0
  %67 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i690, i32 1
  %68 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i690, i32 2
  %69 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %67 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %70 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %71 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %72 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %73 = and i32 %bf.load187, 62914560
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0799
  %cmp218 = icmp sge i32 %pairCount.0799, %div
  %cmp220 = icmp slt i32 %pairCount.0799, %div181
  %or.cond648 = and i1 %cmp218, %cmp220
  br i1 %or.cond648, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1801, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc1079

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0799, %if.then205 ], [ %add217, %if.then211 ]
  %75 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %75, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %76 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %76, i32* %cond19666893902, i32* %cond662664895901
  %cond243 = select i1 %76, i32 %fixg.2669, i32 %g.0.lcssa903
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %77 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %77 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %78 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %79 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %80 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_y.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_x.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %j2.0.ph = phi i32 [ %77, %if.then245 ], [ %83, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30897900, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %81 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %81, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %82 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %82, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %83 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %70, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %83 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %84 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %71, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %85 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %72, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %86 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div643 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div643 to i32
  %cmp289701 = icmp sgt i32 %conv287, 0
  br i1 %cmp289701, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %87 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %88 = lshr i64 %87, 2
  %89 = trunc i64 %88 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv849 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next850, %cond.end310 ]
  %pli.0703 = phi i32* [ %cond129670672678684, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30897900, i64 %indvars.iv849
  %90 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %90 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %91 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %91, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp644645 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp644645, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %90, i32* %pli.0703, align 4, !tbaa !11
  %add313 = add nsw i32 %90, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0703, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %90, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0703, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %90, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0703, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0703, i64 %cond311
  %indvars.iv.next850 = add nuw nsw i64 %indvars.iv849, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next850 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129670672678684, %land.end ], [ %cond129670672678684, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328640 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328640 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext641 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext641, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129670672678684, i64 %idxprom333
  %92 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129670672678684, i64 %idxprom335
  store i32 %92, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %65, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1801
  br label %for.inc1079

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0799, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0800, %for.body184 ]
  %93 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %93, 0
  %bf.load365.pre = load i32* %65, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %94 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %95 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %96 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %96, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %97 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %97 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %bf.clear376 = and i32 %bf.load365.pre, 4194303
  %idxprom.i658691 = zext i32 %bf.clear376 to i64
  %98 = load i32** %atomVdwType.i659, align 8, !tbaa !64
  %arrayidx.i660 = getelementptr inbounds i32* %98, i64 %idxprom.i658691
  %99 = load i32* %arrayidx.i660, align 4, !tbaa !11
  %100 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %101 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv378 = shl i32 %99, 1
  %mul.i = and i32 %conv378, 131070
  %mul2.i = mul i32 %mul.i, %101
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp384728 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %94, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384728, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv860 = phi i64 [ %indvars.iv.next861, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1732 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0818, %for.cond383.preheader ]
  %pli380.0731 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140674676686, %for.cond383.preheader ]
  %plin.0730 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151680682, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129670672678684, i64 %indvars.iv860
  %102 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %102 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %103 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %70, %103
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %104 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %71, %104
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %105 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %72, %105
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %106 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %106, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond649 = or i1 %tobool419, %cmp421
  br i1 %or.cond649, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1732, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1732, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %67
  %cmp435 = icmp sgt i32 %bf.clear432, %68
  %or.cond650 = or i1 %cmp433, %cmp435
  br i1 %or.cond650, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0731, i64 1
  store i32 %102, i32* %pli380.0731, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0730, i64 1
  store i32 %102, i32* %plin.0730, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0730, %for.body385 ], [ %plin.0730, %land.lhs.true424 ], [ %plin.0730, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0731, %for.body385 ], [ %pli380.0731, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0731, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1732, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next861 = add nuw nsw i64 %indvars.iv860, 1
  %lftr.wideiv862 = trunc i64 %indvars.iv.next861 to i32
  %exitcond863 = icmp eq i32 %lftr.wideiv862, %pairlistindex.1
  br i1 %exitcond863, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384728, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %107 = load i32* %cond129670672678684, align 4, !tbaa !11
  %idxprom453 = sext i32 %107 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %108 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %109 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %110 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %110, %if.then448 ], [ %116, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %109, %if.then448 ], [ %115, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %108, %if.then448 ], [ %114, %if.else513 ]
  %j2449.0.ph = phi i32 [ %107, %if.then448 ], [ %113, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151680682, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140674676686, %if.then448 ], [ %pli380.2.ph711, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0818, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer704

while.cond473.outer704:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph705 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph706 = phi double [ %116, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph707 = phi double [ %115, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph708 = phi double [ %114, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph709 = phi i32 [ %113, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph710 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph711 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph712 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer713

while.cond473.outer713:                           ; preds = %land.lhs.true504, %while.cond473.outer704
  %idxprom453.pn.ph714 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph705, %while.cond473.outer704 ]
  %p_j_z462.0.ph715 = phi double [ %116, %land.lhs.true504 ], [ %p_j_z462.0.ph706, %while.cond473.outer704 ]
  %p_j_y457.0.ph716 = phi double [ %115, %land.lhs.true504 ], [ %p_j_y457.0.ph707, %while.cond473.outer704 ]
  %p_j_x452.0.ph717 = phi double [ %114, %land.lhs.true504 ], [ %p_j_x452.0.ph708, %while.cond473.outer704 ]
  %j2449.0.ph718 = phi i32 [ %113, %land.lhs.true504 ], [ %j2449.0.ph709, %while.cond473.outer704 ]
  %k446.0.ph719 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph710, %while.cond473.outer704 ]
  %exclChecksum.4.ph720 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph712, %while.cond473.outer704 ]
  %111 = sext i32 %k446.0.ph719 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer713
  %indvars.iv856 = phi i64 [ %111, %while.cond473.outer713 ], [ %indvars.iv.next857, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph714, %while.cond473.outer713 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph715, %while.cond473.outer713 ], [ %116, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph716, %while.cond473.outer713 ], [ %115, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph717, %while.cond473.outer713 ], [ %114, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph718, %while.cond473.outer713 ], [ %113, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph719, %while.cond473.outer713 ], [ %inc476, %while.body475 ]
  %112 = trunc i64 %indvars.iv856 to i32
  %cmp474 = icmp slt i32 %112, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next857 = add nsw i64 %indvars.iv856, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129670672678684, i64 %indvars.iv.next857
  %113 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %70, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %113 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %114 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %71, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %115 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %72, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %116 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph720, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer713

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph720, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %67
  %cmp510 = icmp sgt i32 %atom2467.0, %68
  %or.cond651 = or i1 %cmp508, %cmp510
  br i1 %or.cond651, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph711, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph711, align 4, !tbaa !11
  br label %while.cond473.outer704

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151680682, %if.else445 ], [ %cond151680682, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140674676686, %if.else445 ], [ %cond140674676686, %for.cond383.preheader ], [ %pli380.2.ph711, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0818, %if.else445 ], [ %exclChecksum.0818, %for.cond383.preheader ], [ %exclChecksum.4.ph720, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528594 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528594 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext638 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext638, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140674676686, i64 %idxprom533
  %117 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140674676686, i64 %idxprom535
  store i32 %117, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540736 = icmp sgt i32 %conv529, 0
  br i1 %cmp540736, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %118 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %119 = lshr i64 %118, 2
  %120 = trunc i64 %119 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv864 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next865, %for.inc559 ]
  %plin.5740 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0739 = phi i32* [ %cond162688, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0738 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140674676686, i64 %indvars.iv864
  %121 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %121 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %122 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %122, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551637 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551637, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %69, i64 %add.ptr.sum
  %123 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %123 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5740, i64 1
  store i32 %121, i32* %plin.5740, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0739, i64 1
  store i32 %121, i32* %plix.0739, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0738, i64 1
  store i32 %121, i32* %plim.0738, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0738, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0738, %sw.bb555 ], [ %plim.0738, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0739, %for.body541 ], [ %plix.0739, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0739, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5740, %for.body541 ], [ %plin.5740, %sw.bb557 ], [ %plin.5740, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next865 = add nuw nsw i64 %indvars.iv864, 1
  %lftr.wideiv866 = trunc i64 %indvars.iv.next865 to i32
  %exitcond867 = icmp eq i32 %lftr.wideiv866, %120
  br i1 %exitcond867, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162688, %for.cond539.preheader ], [ %cond162688, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565 = ashr exact i64 %sub.ptr.sub564, 2
  %conv566595 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566595
  %add574 = add i64 %add567, %sub.ptr.div565
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579597 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579597 to i32
  %cmp582744 = icmp sgt i32 %conv580, 0
  br i1 %cmp582744, label %for.body583.lr.ph, label %for.end731

for.body583.lr.ph:                                ; preds = %for.end561
  %x709 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y718 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z725 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %124 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %125 = lshr i64 %124, 2
  %126 = trunc i64 %125 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583.for.body583_crit_edge, %for.body583.lr.ph
  %127 = phi i32* [ %98, %for.body583.lr.ph ], [ %.pre, %for.body583.for.body583_crit_edge ]
  %indvars.iv868 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next869, %for.body583.for.body583_crit_edge ]
  %128 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %173, %for.body583.for.body583_crit_edge ]
  %129 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %180, %for.body583.for.body583_crit_edge ]
  %130 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %187, %for.body583.for.body583_crit_edge ]
  %131 = phi <2 x double> [ %64, %for.body583.lr.ph ], [ %198, %for.body583.for.body583_crit_edge ]
  %arrayidx586 = getelementptr inbounds i32* %cond151680682, i64 %indvars.iv868
  %132 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %132 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %133 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %70, %133
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %134 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %71, %134
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %135 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %72, %135
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %136 = bitcast float %conv604 to i32
  %shr = ashr i32 %136, 17
  %add606 = add nsw i32 %shr, %mul
  %id607 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %137 = bitcast [4 x i8]* %id607 to i32*
  %bf.load608 = load i32* %137, align 4
  %bf.clear609 = and i32 %bf.load608, 4194303
  %idxprom.i654694 = zext i32 %bf.clear609 to i64
  %arrayidx.i656 = getelementptr inbounds i32* %127, i64 %idxprom.i654694
  %138 = load i32* %arrayidx.i656, align 4, !tbaa !11
  %conv.i657 = zext i32 %138 to i64
  %conv611 = shl nuw nsw i64 %conv.i657, 1
  %mul612 = and i64 %conv611, 131070
  %mul615 = shl nsw i32 %add606, 4
  %idx.ext616 = sext i32 %mul615 to i64
  %add.ptr617 = getelementptr inbounds double* %7, i64 %idx.ext616
  %139 = load double* %add.ptr617, align 8, !tbaa !17
  %add.ptr617.sum625 = or i64 %idx.ext616, 4
  %add.ptr622 = getelementptr inbounds double* %7, i64 %add.ptr617.sum625
  %140 = load double* %add.ptr622, align 8, !tbaa !17
  %add.ptr617.sum626 = or i64 %idx.ext616, 8
  %add.ptr627 = getelementptr inbounds double* %7, i64 %add.ptr617.sum626
  %141 = load double* %add.ptr627, align 8, !tbaa !17
  %and = and i32 %136, -131072
  %charge630 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %142 = load float* %charge630, align 4, !tbaa !63
  %conv631 = fpext float %142 to double
  %mul632 = fmul double %mul373, %conv631
  %143 = bitcast i32 %and to float
  %conv634 = fpext float %143 to double
  %sub635 = fsub double %add603, %conv634
  %bf.lshr638 = lshr i32 %bf.load608, 28
  %idxprom639 = zext i32 %bf.lshr638 to i64
  %add.ptr369.sum627 = add i64 %idxprom639, %idx.ext368
  %arrayidx640 = getelementptr inbounds double* %95, i64 %add.ptr369.sum627
  %144 = load double* %arrayidx640, align 8, !tbaa !17
  %add.ptr.i.sum695 = add i64 %mul612, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum695, i32 0
  %145 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %8, %145
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum695, i32 1
  %146 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %8, %146
  %mul647 = fmul double %139, %mul643
  %mul648 = fmul double %140, %mul646
  %sub649 = fsub double %mul647, %mul648
  %add.ptr617.sum628 = or i64 %idx.ext616, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr617.sum628
  %147 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %147
  %add.ptr622.sum629 = or i64 %idx.ext616, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr622.sum629
  %148 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %148
  %sub654 = fsub double %mul651, %mul653
  %add.ptr617.sum630 = or i64 %idx.ext616, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr617.sum630
  %149 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %149
  %add.ptr622.sum631 = or i64 %idx.ext616, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr622.sum631
  %150 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %150
  %sub659 = fsub double %mul656, %mul658
  %add.ptr617.sum632 = or i64 %idx.ext616, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr617.sum632
  %151 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %151
  %add.ptr622.sum633 = or i64 %idx.ext616, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr622.sum633
  %152 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %152
  %sub664 = fsub double %mul661, %mul663
  %mul665 = fmul double %sub635, %sub654
  %add666 = fadd double %mul665, %sub659
  %add.ptr627.sum634 = or i64 %idx.ext616, 9
  %arrayidx673 = getelementptr inbounds double* %7, i64 %add.ptr627.sum634
  %153 = load double* %arrayidx673, align 8, !tbaa !17
  %add.ptr627.sum635 = or i64 %idx.ext616, 10
  %arrayidx674 = getelementptr inbounds double* %7, i64 %add.ptr627.sum635
  %154 = load double* %arrayidx674, align 8, !tbaa !17
  %add.ptr627.sum636 = or i64 %idx.ext616, 11
  %arrayidx675 = getelementptr inbounds double* %7, i64 %add.ptr627.sum636
  %155 = load double* %arrayidx675, align 8, !tbaa !17
  %mul676 = fmul double %mul632, %155
  %mul677 = fmul double %mul632, %154
  %156 = insertelement <2 x double> undef, double %mul632, i32 0
  %157 = insertelement <2 x double> %156, double %add666, i32 1
  %158 = insertelement <2 x double> undef, double %153, i32 0
  %159 = insertelement <2 x double> %158, double %sub635, i32 1
  %160 = fmul <2 x double> %157, %159
  %mul679 = fmul double %141, %mul632
  %mul680 = fmul double %sub635, %mul676
  %add681 = fadd double %mul677, %mul680
  %mul682 = fmul double %sub635, %add681
  %161 = insertelement <2 x double> undef, double %mul682, i32 0
  %162 = insertelement <2 x double> %161, double %sub664, i32 1
  %163 = fadd <2 x double> %160, %162
  %164 = insertelement <2 x double> undef, double %sub635, i32 0
  %165 = insertelement <2 x double> %164, double %sub635, i32 1
  %166 = fmul <2 x double> %163, %165
  %167 = insertelement <2 x double> undef, double %mul679, i32 0
  %168 = insertelement <2 x double> %167, double %sub649, i32 1
  %169 = fadd <2 x double> %168, %166
  %170 = insertelement <2 x double> undef, double %144, i32 0
  %171 = insertelement <2 x double> %170, double %144, i32 1
  %172 = fmul <2 x double> %169, %171
  %173 = fadd <2 x double> %128, %172
  %add688 = fadd double %sub654, %mul676
  %add689 = fadd double %sub659, %mul677
  %174 = extractelement <2 x double> %160, i32 0
  %add690 = fadd double %174, %sub664
  %mul692 = fmul double %sub635, 3.000000e+00
  %mul693 = fmul double %mul692, %add688
  %mul694 = fmul double %add689, 2.000000e+00
  %add695 = fadd double %mul694, %mul693
  %mul696 = fmul double %sub635, %add695
  %add697 = fadd double %add690, %mul696
  %mul698 = fmul double %add697, -2.000000e+00
  %mul699 = fmul double %144, %mul698
  %mul702 = fmul double %sub591, %mul699
  %175 = insertelement <2 x double> undef, double %sub591, i32 0
  %176 = insertelement <2 x double> %175, double %sub596, i32 1
  %177 = insertelement <2 x double> undef, double %mul702, i32 0
  %178 = insertelement <2 x double> %177, double %mul702, i32 1
  %179 = fmul <2 x double> %176, %178
  %180 = fadd <2 x double> %129, %179
  %181 = load double* %x709, align 8, !tbaa !72
  %add710 = fadd double %181, %mul702
  store double %add710, double* %x709, align 8, !tbaa !72
  %x711 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul713 = fmul double %sub596, %mul699
  %182 = insertelement <2 x double> undef, double %sub596, i32 0
  %183 = insertelement <2 x double> %182, double %sub601, i32 1
  %184 = insertelement <2 x double> undef, double %mul713, i32 0
  %185 = insertelement <2 x double> %184, double %mul713, i32 1
  %186 = fmul <2 x double> %183, %185
  %187 = fadd <2 x double> %130, %186
  %188 = load double* %y718, align 8, !tbaa !73
  %add719 = fadd double %188, %mul713
  store double %add719, double* %y718, align 8, !tbaa !73
  %189 = bitcast double* %x711 to <2 x double>*
  %190 = load <2 x double>* %189, align 8, !tbaa !17
  %191 = insertelement <2 x double> %177, double %mul713, i32 1
  %192 = fsub <2 x double> %190, %191
  %193 = bitcast double* %x711 to <2 x double>*
  store <2 x double> %192, <2 x double>* %193, align 8, !tbaa !17
  %mul722 = fmul double %sub601, %mul699
  %194 = insertelement <2 x double> undef, double %sub601, i32 0
  %195 = insertelement <2 x double> %194, double %sub601, i32 1
  %196 = insertelement <2 x double> %177, double %mul722, i32 1
  %197 = fmul <2 x double> %195, %196
  %198 = fadd <2 x double> %131, %197
  %199 = load double* %z725, align 8, !tbaa !74
  %add726 = fadd double %199, %mul722
  store double %add726, double* %z725, align 8, !tbaa !74
  %z727 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %200 = load double* %z727, align 8, !tbaa !74
  %sub728 = fsub double %200, %mul722
  store double %sub728, double* %z727, align 8, !tbaa !74
  %indvars.iv.next869 = add nuw nsw i64 %indvars.iv868, 1
  %lftr.wideiv870 = trunc i64 %indvars.iv.next869 to i32
  %exitcond871 = icmp eq i32 %lftr.wideiv870, %126
  br i1 %exitcond871, label %for.end731, label %for.body583.for.body583_crit_edge

for.body583.for.body583_crit_edge:                ; preds = %for.body583
  %.pre = load i32** %atomVdwType.i659, align 8, !tbaa !64
  br label %for.body583

for.end731:                                       ; preds = %for.body583, %for.end561
  %201 = phi <2 x double> [ %61, %for.end561 ], [ %173, %for.body583 ]
  %202 = phi <2 x double> [ %62, %for.end561 ], [ %180, %for.body583 ]
  %203 = phi <2 x double> [ %63, %for.end561 ], [ %187, %for.body583 ]
  %204 = phi <2 x double> [ %64, %for.end561 ], [ %198, %for.body583 ]
  %conv736 = trunc i64 %sub.ptr.div572 to i32
  %cmp738762 = icmp sgt i32 %conv736, 0
  br i1 %cmp738762, label %for.body739.lr.ph, label %for.end938

for.body739.lr.ph:                                ; preds = %for.end731
  %x914 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y924 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z932 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body739

for.body739:                                      ; preds = %for.body739, %for.body739.lr.ph
  %indvars.iv872 = phi i64 [ 0, %for.body739.lr.ph ], [ %indvars.iv.next873, %for.body739 ]
  %205 = phi <2 x double> [ %201, %for.body739.lr.ph ], [ %255, %for.body739 ]
  %206 = phi <2 x double> [ %202, %for.body739.lr.ph ], [ %262, %for.body739 ]
  %207 = phi <2 x double> [ %203, %for.body739.lr.ph ], [ %269, %for.body739 ]
  %208 = phi <2 x double> [ %204, %for.body739.lr.ph ], [ %280, %for.body739 ]
  %arrayidx742 = getelementptr inbounds i32* %cond173, i64 %indvars.iv872
  %209 = load i32* %arrayidx742, align 4, !tbaa !11
  %idx.ext744 = sext i32 %209 to i64
  %x748 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 0
  %210 = load double* %x748, align 8, !tbaa !59
  %sub749 = fsub double %70, %210
  %mul751 = fmul double %sub749, %sub749
  %y754 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 1
  %211 = load double* %y754, align 8, !tbaa !61
  %sub755 = fsub double %71, %211
  %mul756 = fmul double %sub755, %sub755
  %add757 = fadd double %mul751, %mul756
  %z760 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 0, i32 2
  %212 = load double* %z760, align 8, !tbaa !62
  %sub761 = fsub double %72, %212
  %mul762 = fmul double %sub761, %sub761
  %add763 = fadd double %add757, %mul762
  %conv765 = fptrunc double %add763 to float
  %213 = bitcast float %conv765 to i32
  %shr769 = ashr i32 %213, 17
  %add770 = add nsw i32 %shr769, %mul
  %id772 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 2
  %214 = bitcast [4 x i8]* %id772 to i32*
  %bf.load773 = load i32* %214, align 4
  %bf.clear774 = and i32 %bf.load773, 4194303
  %idxprom.i652692 = zext i32 %bf.clear774 to i64
  %215 = load i32** %atomVdwType.i659, align 8, !tbaa !64
  %arrayidx.i653 = getelementptr inbounds i32* %215, i64 %idxprom.i652692
  %216 = load i32* %arrayidx.i653, align 4, !tbaa !11
  %conv.i = zext i32 %216 to i64
  %conv776 = shl nuw nsw i64 %conv.i, 1
  %mul777 = and i64 %conv776, 131070
  %add.ptr779.sum607 = or i64 %mul777, 1
  %mul782 = shl nsw i32 %add770, 4
  %idx.ext783 = sext i32 %mul782 to i64
  %add.ptr784 = getelementptr inbounds double* %7, i64 %idx.ext783
  %217 = load double* %add.ptr784, align 8, !tbaa !17
  %add.ptr784.sum608 = or i64 %idx.ext783, 4
  %add.ptr791 = getelementptr inbounds double* %7, i64 %add.ptr784.sum608
  %218 = load double* %add.ptr791, align 8, !tbaa !17
  %add.ptr784.sum609 = or i64 %idx.ext783, 8
  %add.ptr798 = getelementptr inbounds double* %7, i64 %add.ptr784.sum609
  %219 = load double* %add.ptr798, align 8, !tbaa !17
  %and802 = and i32 %213, -131072
  %charge804 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext744, i32 1
  %220 = load float* %charge804, align 4, !tbaa !63
  %conv805 = fpext float %220 to double
  %mul806 = fmul double %mul373, %conv805
  %221 = bitcast i32 %and802 to float
  %conv809 = fpext float %221 to double
  %sub810 = fsub double %add763, %conv809
  %bf.lshr814 = lshr i32 %bf.load773, 28
  %idxprom815 = zext i32 %bf.lshr814 to i64
  %add.ptr369.sum610 = add i64 %idxprom815, %idx.ext368
  %arrayidx816 = getelementptr inbounds double* %95, i64 %add.ptr369.sum610
  %222 = load double* %arrayidx816, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr779.sum607, %idx.ext.i
  %A818 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 0
  %223 = load double* %A818, align 8, !tbaa !69
  %mul819 = fmul double %8, %223
  %B821 = getelementptr inbounds %"struct.LJTable::TableEntry"* %100, i64 %add.ptr.i.sum, i32 1
  %224 = load double* %B821, align 8, !tbaa !71
  %mul822 = fmul double %8, %224
  %mul824 = fmul double %217, %mul819
  %mul825 = fmul double %218, %mul822
  %sub826 = fsub double %mul824, %mul825
  %add.ptr784.sum611 = or i64 %idx.ext783, 3
  %arrayidx828 = getelementptr inbounds double* %7, i64 %add.ptr784.sum611
  %225 = load double* %arrayidx828, align 8, !tbaa !17
  %mul829 = fmul double %mul819, %225
  %add.ptr791.sum612 = or i64 %idx.ext783, 7
  %arrayidx830 = getelementptr inbounds double* %7, i64 %add.ptr791.sum612
  %226 = load double* %arrayidx830, align 8, !tbaa !17
  %mul831 = fmul double %mul822, %226
  %sub832 = fsub double %mul829, %mul831
  %add.ptr784.sum613 = or i64 %idx.ext783, 2
  %arrayidx834 = getelementptr inbounds double* %7, i64 %add.ptr784.sum613
  %227 = load double* %arrayidx834, align 8, !tbaa !17
  %mul835 = fmul double %mul819, %227
  %add.ptr791.sum614 = or i64 %idx.ext783, 6
  %arrayidx836 = getelementptr inbounds double* %7, i64 %add.ptr791.sum614
  %228 = load double* %arrayidx836, align 8, !tbaa !17
  %mul837 = fmul double %mul822, %228
  %sub838 = fsub double %mul835, %mul837
  %add.ptr784.sum615 = or i64 %idx.ext783, 1
  %arrayidx840 = getelementptr inbounds double* %7, i64 %add.ptr784.sum615
  %229 = load double* %arrayidx840, align 8, !tbaa !17
  %mul841 = fmul double %mul819, %229
  %add.ptr791.sum616 = or i64 %idx.ext783, 5
  %arrayidx842 = getelementptr inbounds double* %7, i64 %add.ptr791.sum616
  %230 = load double* %arrayidx842, align 8, !tbaa !17
  %mul843 = fmul double %mul822, %230
  %sub844 = fsub double %mul841, %mul843
  %mul846 = fmul double %sub810, %sub832
  %add847 = fadd double %mul846, %sub838
  %add.ptr798.sum617 = or i64 %idx.ext783, 9
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr798.sum617
  %231 = load double* %arrayidx855, align 8, !tbaa !17
  %add.ptr798.sum618 = or i64 %idx.ext783, 10
  %arrayidx857 = getelementptr inbounds double* %7, i64 %add.ptr798.sum618
  %232 = load double* %arrayidx857, align 8, !tbaa !17
  %add.ptr798.sum619 = or i64 %idx.ext783, 11
  %arrayidx859 = getelementptr inbounds double* %7, i64 %add.ptr798.sum619
  %233 = load double* %arrayidx859, align 8, !tbaa !17
  %add.ptr860.sum620 = or i64 %idx.ext783, 12
  %add.ptr863 = getelementptr inbounds double* %7, i64 %add.ptr860.sum620
  %234 = load double* %add.ptr863, align 8, !tbaa !17
  %mul865 = fmul double %sub, %234
  %sub866 = fsub double %219, %mul865
  %add.ptr863.sum621 = or i64 %idx.ext783, 13
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr863.sum621
  %235 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %sub, %235
  %sub869 = fsub double %231, %mul868
  %add.ptr863.sum622 = or i64 %idx.ext783, 14
  %arrayidx870 = getelementptr inbounds double* %7, i64 %add.ptr863.sum622
  %236 = load double* %arrayidx870, align 8, !tbaa !17
  %mul871 = fmul double %sub, %236
  %sub872 = fsub double %232, %mul871
  %add.ptr863.sum623 = or i64 %idx.ext783, 15
  %arrayidx873 = getelementptr inbounds double* %7, i64 %add.ptr863.sum623
  %237 = load double* %arrayidx873, align 8, !tbaa !17
  %mul874 = fmul double %sub, %237
  %sub875 = fsub double %233, %mul874
  %mul876 = fmul double %mul806, %sub875
  %mul877 = fmul double %mul806, %sub872
  %238 = insertelement <2 x double> undef, double %sub869, i32 0
  %239 = insertelement <2 x double> %238, double %add847, i32 1
  %240 = insertelement <2 x double> undef, double %mul806, i32 0
  %241 = insertelement <2 x double> %240, double %sub810, i32 1
  %242 = fmul <2 x double> %239, %241
  %mul879 = fmul double %mul806, %sub866
  %mul881 = fmul double %sub810, %mul876
  %add882 = fadd double %mul877, %mul881
  %mul883 = fmul double %sub810, %add882
  %243 = insertelement <2 x double> undef, double %mul883, i32 0
  %244 = insertelement <2 x double> %243, double %sub844, i32 1
  %245 = fadd <2 x double> %242, %244
  %246 = insertelement <2 x double> undef, double %sub810, i32 0
  %247 = insertelement <2 x double> %246, double %sub810, i32 1
  %248 = fmul <2 x double> %245, %247
  %249 = insertelement <2 x double> undef, double %mul879, i32 0
  %250 = insertelement <2 x double> %249, double %sub826, i32 1
  %251 = fadd <2 x double> %250, %248
  %252 = insertelement <2 x double> undef, double %222, i32 0
  %253 = insertelement <2 x double> %252, double %222, i32 1
  %254 = fmul <2 x double> %251, %253
  %255 = fadd <2 x double> %205, %254
  %add889 = fadd double %sub832, %mul876
  %add890 = fadd double %sub838, %mul877
  %256 = extractelement <2 x double> %242, i32 0
  %add891 = fadd double %sub844, %256
  %mul894 = fmul double %sub810, 3.000000e+00
  %mul895 = fmul double %mul894, %add889
  %mul896 = fmul double %add890, 2.000000e+00
  %add897 = fadd double %mul896, %mul895
  %mul898 = fmul double %sub810, %add897
  %add899 = fadd double %add891, %mul898
  %mul901 = fmul double %add899, -2.000000e+00
  %mul902 = fmul double %222, %mul901
  %mul907 = fmul double %sub749, %mul902
  %257 = insertelement <2 x double> undef, double %sub749, i32 0
  %258 = insertelement <2 x double> %257, double %sub755, i32 1
  %259 = insertelement <2 x double> undef, double %mul907, i32 0
  %260 = insertelement <2 x double> %259, double %mul907, i32 1
  %261 = fmul <2 x double> %258, %260
  %262 = fadd <2 x double> %206, %261
  %263 = load double* %x914, align 8, !tbaa !72
  %add915 = fadd double %263, %mul907
  store double %add915, double* %x914, align 8, !tbaa !72
  %x916 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext744, i32 0
  %mul919 = fmul double %sub755, %mul902
  %264 = insertelement <2 x double> undef, double %sub755, i32 0
  %265 = insertelement <2 x double> %264, double %sub761, i32 1
  %266 = insertelement <2 x double> undef, double %mul919, i32 0
  %267 = insertelement <2 x double> %266, double %mul919, i32 1
  %268 = fmul <2 x double> %265, %267
  %269 = fadd <2 x double> %207, %268
  %270 = load double* %y924, align 8, !tbaa !73
  %add925 = fadd double %270, %mul919
  store double %add925, double* %y924, align 8, !tbaa !73
  %271 = bitcast double* %x916 to <2 x double>*
  %272 = load <2 x double>* %271, align 8, !tbaa !17
  %273 = insertelement <2 x double> %259, double %mul919, i32 1
  %274 = fsub <2 x double> %272, %273
  %275 = bitcast double* %x916 to <2 x double>*
  store <2 x double> %274, <2 x double>* %275, align 8, !tbaa !17
  %mul929 = fmul double %sub761, %mul902
  %276 = insertelement <2 x double> undef, double %sub761, i32 0
  %277 = insertelement <2 x double> %276, double %sub761, i32 1
  %278 = insertelement <2 x double> %259, double %mul929, i32 1
  %279 = fmul <2 x double> %277, %278
  %280 = fadd <2 x double> %208, %279
  %281 = load double* %z932, align 8, !tbaa !74
  %add933 = fadd double %281, %mul929
  store double %add933, double* %z932, align 8, !tbaa !74
  %z934 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext744, i32 2
  %282 = load double* %z934, align 8, !tbaa !74
  %sub935 = fsub double %282, %mul929
  store double %sub935, double* %z934, align 8, !tbaa !74
  %indvars.iv.next873 = add nuw nsw i64 %indvars.iv872, 1
  %lftr.wideiv874 = trunc i64 %indvars.iv.next873 to i32
  %exitcond875 = icmp eq i32 %lftr.wideiv874, %conv736
  br i1 %exitcond875, label %for.end938, label %for.body739

for.end938:                                       ; preds = %for.body739, %for.end731
  %283 = phi <2 x double> [ %201, %for.end731 ], [ %255, %for.body739 ]
  %284 = phi <2 x double> [ %202, %for.end731 ], [ %262, %for.body739 ]
  %285 = phi <2 x double> [ %203, %for.end731 ], [ %269, %for.body739 ]
  %286 = phi <2 x double> [ %204, %for.end731 ], [ %280, %for.body739 ]
  %conv943 = trunc i64 %sub.ptr.div565 to i32
  %cmp945780 = icmp sgt i32 %conv943, 0
  br i1 %cmp945780, label %for.body946.lr.ph, label %for.inc1079

for.body946.lr.ph:                                ; preds = %for.end938
  %287 = extractelement <2 x double> %283, i32 0
  %x1054 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y1064 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z1072 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body946

for.body946:                                      ; preds = %for.body946, %for.body946.lr.ph
  %indvars.iv876 = phi i64 [ 0, %for.body946.lr.ph ], [ %indvars.iv.next877, %for.body946 ]
  %fullElectEnergy.3788 = phi double [ %287, %for.body946.lr.ph ], [ %add1032, %for.body946 ]
  %288 = phi <2 x double> [ %284, %for.body946.lr.ph ], [ %313, %for.body946 ]
  %289 = phi <2 x double> [ %285, %for.body946.lr.ph ], [ %320, %for.body946 ]
  %290 = phi <2 x double> [ %286, %for.body946.lr.ph ], [ %331, %for.body946 ]
  %arrayidx949 = getelementptr inbounds i32* %cond162688, i64 %indvars.iv876
  %291 = load i32* %arrayidx949, align 4, !tbaa !11
  %idx.ext951 = sext i32 %291 to i64
  %x955 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext951, i32 0, i32 0
  %292 = load double* %x955, align 8, !tbaa !59
  %sub956 = fsub double %70, %292
  %mul958 = fmul double %sub956, %sub956
  %y961 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext951, i32 0, i32 1
  %293 = load double* %y961, align 8, !tbaa !61
  %sub962 = fsub double %71, %293
  %mul963 = fmul double %sub962, %sub962
  %add964 = fadd double %mul958, %mul963
  %z967 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext951, i32 0, i32 2
  %294 = load double* %z967, align 8, !tbaa !62
  %sub968 = fsub double %72, %294
  %mul969 = fmul double %sub968, %sub968
  %add970 = fadd double %add964, %mul969
  %conv972 = fptrunc double %add970 to float
  %295 = bitcast float %conv972 to i32
  %shr976 = ashr i32 %295, 17
  %add977 = add nsw i32 %shr976, %mul
  %mul979 = shl nsw i32 %add977, 4
  %idx.ext980 = sext i32 %mul979 to i64
  %add.ptr981.sum598 = or i64 %idx.ext980, 8
  %add.ptr982 = getelementptr inbounds double* %7, i64 %add.ptr981.sum598
  %296 = load double* %add.ptr982, align 8, !tbaa !17
  %and986 = and i32 %295, -131072
  %charge988 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext951, i32 1
  %297 = load float* %charge988, align 4, !tbaa !63
  %conv989 = fpext float %297 to double
  %mul990 = fmul double %mul373, %conv989
  %298 = bitcast i32 %and986 to float
  %conv993 = fpext float %298 to double
  %sub994 = fsub double %add970, %conv993
  %partition996 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext951, i32 2
  %299 = bitcast [4 x i8]* %partition996 to i32*
  %bf.load997 = load i32* %299, align 4
  %bf.lshr998 = lshr i32 %bf.load997, 28
  %idxprom999 = zext i32 %bf.lshr998 to i64
  %add.ptr369.sum = add i64 %idxprom999, %idx.ext368
  %arrayidx1000 = getelementptr inbounds double* %95, i64 %add.ptr369.sum
  %300 = load double* %arrayidx1000, align 8, !tbaa !17
  %add.ptr982.sum599 = or i64 %idx.ext980, 9
  %arrayidx1002 = getelementptr inbounds double* %7, i64 %add.ptr982.sum599
  %301 = load double* %arrayidx1002, align 8, !tbaa !17
  %add.ptr982.sum600 = or i64 %idx.ext980, 10
  %arrayidx1004 = getelementptr inbounds double* %7, i64 %add.ptr982.sum600
  %302 = load double* %arrayidx1004, align 8, !tbaa !17
  %add.ptr982.sum601 = or i64 %idx.ext980, 11
  %arrayidx1006 = getelementptr inbounds double* %7, i64 %add.ptr982.sum601
  %303 = load double* %arrayidx1006, align 8, !tbaa !17
  %add.ptr1008.sum602 = or i64 %idx.ext980, 12
  %add.ptr1011 = getelementptr inbounds double* %7, i64 %add.ptr1008.sum602
  %304 = load double* %add.ptr1011, align 8, !tbaa !17
  %sub1013 = fsub double %296, %304
  %add.ptr1011.sum603 = or i64 %idx.ext980, 13
  %arrayidx1014 = getelementptr inbounds double* %7, i64 %add.ptr1011.sum603
  %305 = load double* %arrayidx1014, align 8, !tbaa !17
  %sub1015 = fsub double %301, %305
  %add.ptr1011.sum604 = or i64 %idx.ext980, 14
  %arrayidx1016 = getelementptr inbounds double* %7, i64 %add.ptr1011.sum604
  %306 = load double* %arrayidx1016, align 8, !tbaa !17
  %sub1017 = fsub double %302, %306
  %add.ptr1011.sum605 = or i64 %idx.ext980, 15
  %arrayidx1018 = getelementptr inbounds double* %7, i64 %add.ptr1011.sum605
  %307 = load double* %arrayidx1018, align 8, !tbaa !17
  %sub1019 = fsub double %303, %307
  %mul1020 = fmul double %mul990, %sub1019
  %mul1021 = fmul double %mul990, %sub1017
  %mul1022 = fmul double %mul990, %sub1015
  %mul1023 = fmul double %mul990, %sub1013
  %mul1025 = fmul double %sub994, %mul1020
  %add1026 = fadd double %mul1021, %mul1025
  %mul1027 = fmul double %sub994, %add1026
  %add1028 = fadd double %mul1022, %mul1027
  %mul1029 = fmul double %sub994, %add1028
  %add1030 = fadd double %mul1023, %mul1029
  %mul1031 = fmul double %300, %add1030
  %add1032 = fadd double %fullElectEnergy.3788, %mul1031
  %mul1034 = fmul double %sub994, 3.000000e+00
  %mul1035 = fmul double %mul1034, %mul1020
  %mul1036 = fmul double %mul1021, 2.000000e+00
  %add1037 = fadd double %mul1036, %mul1035
  %mul1038 = fmul double %sub994, %add1037
  %add1039 = fadd double %mul1022, %mul1038
  %mul1041 = fmul double %add1039, -2.000000e+00
  %mul1042 = fmul double %300, %mul1041
  %mul1047 = fmul double %sub956, %mul1042
  %308 = insertelement <2 x double> undef, double %sub956, i32 0
  %309 = insertelement <2 x double> %308, double %sub962, i32 1
  %310 = insertelement <2 x double> undef, double %mul1047, i32 0
  %311 = insertelement <2 x double> %310, double %mul1047, i32 1
  %312 = fmul <2 x double> %309, %311
  %313 = fadd <2 x double> %288, %312
  %314 = load double* %x1054, align 8, !tbaa !72
  %add1055 = fadd double %314, %mul1047
  store double %add1055, double* %x1054, align 8, !tbaa !72
  %x1056 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext951, i32 0
  %mul1059 = fmul double %sub962, %mul1042
  %315 = insertelement <2 x double> undef, double %sub962, i32 0
  %316 = insertelement <2 x double> %315, double %sub968, i32 1
  %317 = insertelement <2 x double> undef, double %mul1059, i32 0
  %318 = insertelement <2 x double> %317, double %mul1059, i32 1
  %319 = fmul <2 x double> %316, %318
  %320 = fadd <2 x double> %289, %319
  %321 = load double* %y1064, align 8, !tbaa !73
  %add1065 = fadd double %321, %mul1059
  store double %add1065, double* %y1064, align 8, !tbaa !73
  %322 = bitcast double* %x1056 to <2 x double>*
  %323 = load <2 x double>* %322, align 8, !tbaa !17
  %324 = insertelement <2 x double> %310, double %mul1059, i32 1
  %325 = fsub <2 x double> %323, %324
  %326 = bitcast double* %x1056 to <2 x double>*
  store <2 x double> %325, <2 x double>* %326, align 8, !tbaa !17
  %mul1069 = fmul double %sub968, %mul1042
  %327 = insertelement <2 x double> undef, double %sub968, i32 0
  %328 = insertelement <2 x double> %327, double %sub968, i32 1
  %329 = insertelement <2 x double> %310, double %mul1069, i32 1
  %330 = fmul <2 x double> %328, %329
  %331 = fadd <2 x double> %290, %330
  %332 = load double* %z1072, align 8, !tbaa !74
  %add1073 = fadd double %332, %mul1069
  store double %add1073, double* %z1072, align 8, !tbaa !74
  %z1074 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext951, i32 2
  %333 = load double* %z1074, align 8, !tbaa !74
  %sub1075 = fsub double %333, %mul1069
  store double %sub1075, double* %z1074, align 8, !tbaa !74
  %indvars.iv.next877 = add nuw nsw i64 %indvars.iv876, 1
  %lftr.wideiv878 = trunc i64 %indvars.iv.next877 to i32
  %exitcond879 = icmp eq i32 %lftr.wideiv878, %conv943
  br i1 %exitcond879, label %for.inc1079.loopexit, label %for.body946

for.inc1079.loopexit:                             ; preds = %for.body946
  %334 = insertelement <2 x double> undef, double %add1032, i32 0
  %335 = shufflevector <2 x double> %334, <2 x double> %283, <2 x i32> <i32 0, i32 3>
  br label %for.inc1079

for.inc1079:                                      ; preds = %for.inc1079.loopexit, %for.end938, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end938 ], [ %pairCount.2, %for.inc1079.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0800, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end938 ], [ %pairlistindex.1, %for.inc1079.loopexit ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1801, %for.end938 ], [ %i.1801, %for.inc1079.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0818, %if.then221 ], [ %exclChecksum.0818, %cond.end349 ], [ %conv575, %for.end938 ], [ %conv575, %for.inc1079.loopexit ]
  %336 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %283, %for.end938 ], [ %335, %for.inc1079.loopexit ]
  %337 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %284, %for.end938 ], [ %313, %for.inc1079.loopexit ]
  %338 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %285, %for.end938 ], [ %320, %for.inc1079.loopexit ]
  %339 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %286, %for.end938 ], [ %331, %for.inc1079.loopexit ]
  %inc1080 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc1080, %12
  br i1 %cmp183, label %for.body184, label %for.end1081

for.end1081:                                      ; preds = %for.inc1079, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1079 ]
  %340 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %336, %for.inc1079 ]
  %341 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %337, %for.inc1079 ]
  %342 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %338, %for.inc1079 ]
  %343 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %339, %for.inc1079 ]
  %344 = extractelement <2 x double> %343, i32 1
  %arraydecay1082 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1083 = icmp eq i32* %cond662664895901, %arraydecay1082
  br i1 %cmp1083, label %if.end1088, label %delete.notnull1086

delete.notnull1086:                               ; preds = %for.end1081
  %345 = bitcast i32* %cond662664895901 to i8*
  call void @_ZdaPv(i8* %345) #7
  br label %if.end1088

if.end1088:                                       ; preds = %delete.notnull1086, %for.end1081
  %arraydecay1089 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1090 = icmp eq i32* %cond19666893902, %arraydecay1089
  br i1 %cmp1090, label %if.end1095, label %delete.notnull1093

delete.notnull1093:                               ; preds = %if.end1088
  %346 = bitcast i32* %cond19666893902 to i8*
  call void @_ZdaPv(i8* %346) #7
  br label %if.end1095

if.end1095:                                       ; preds = %delete.notnull1093, %if.end1088
  %arraydecay1096 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1097 = icmp eq i32* %cond30897900, %arraydecay1096
  br i1 %cmp1097, label %if.end1102, label %delete.notnull1100

delete.notnull1100:                               ; preds = %if.end1095
  %347 = bitcast i32* %cond30897900 to i8*
  call void @_ZdaPv(i8* %347) #7
  br label %if.end1102

if.end1102:                                       ; preds = %delete.notnull1100, %if.end1095
  %arraydecay1103 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1104 = icmp eq i32* %cond129670672678684, %arraydecay1103
  br i1 %cmp1104, label %if.end1109, label %delete.notnull1107

delete.notnull1107:                               ; preds = %if.end1102
  %348 = bitcast i32* %cond129670672678684 to i8*
  call void @_ZdaPv(i8* %348) #7
  br label %if.end1109

if.end1109:                                       ; preds = %delete.notnull1107, %if.end1102
  %arraydecay1110 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1111 = icmp eq i32* %cond140674676686, %arraydecay1110
  br i1 %cmp1111, label %if.end1116, label %delete.notnull1114

delete.notnull1114:                               ; preds = %if.end1109
  %349 = bitcast i32* %cond140674676686 to i8*
  call void @_ZdaPv(i8* %349) #7
  br label %if.end1116

if.end1116:                                       ; preds = %delete.notnull1114, %if.end1109
  %arraydecay1117 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1118 = icmp eq i32* %cond151680682, %arraydecay1117
  br i1 %cmp1118, label %if.end1123, label %delete.notnull1121

delete.notnull1121:                               ; preds = %if.end1116
  %350 = bitcast i32* %cond151680682 to i8*
  call void @_ZdaPv(i8* %350) #7
  br label %if.end1123

if.end1123:                                       ; preds = %delete.notnull1121, %if.end1116
  %arraydecay1124 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1125 = icmp eq i32* %cond162688, %arraydecay1124
  br i1 %cmp1125, label %if.end1130, label %delete.notnull1128

delete.notnull1128:                               ; preds = %if.end1123
  %351 = bitcast i32* %cond162688 to i8*
  call void @_ZdaPv(i8* %351) #7
  br label %if.end1130

if.end1130:                                       ; preds = %delete.notnull1128, %if.end1123
  %arraydecay1131 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1132 = icmp eq i32* %cond173, %arraydecay1131
  br i1 %cmp1132, label %if.end1137, label %delete.notnull1135

delete.notnull1135:                               ; preds = %if.end1130
  %352 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %352) #7
  br label %if.end1137

if.end1137:                                       ; preds = %delete.notnull1135, %if.end1130
  %conv1138 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1139 = getelementptr inbounds double* %1, i64 22
  %353 = load double* %arrayidx1139, align 8, !tbaa !17
  %add1140 = fadd double %conv1138, %353
  store double %add1140, double* %arrayidx1139, align 8, !tbaa !17
  %arrayidx1143 = getelementptr inbounds double* %1, i64 1
  %354 = bitcast double* %arrayidx1143 to <2 x double>*
  %355 = load <2 x double>* %354, align 8, !tbaa !17
  %356 = fadd <2 x double> %340, %355
  %357 = bitcast double* %arrayidx1143 to <2 x double>*
  store <2 x double> %356, <2 x double>* %357, align 8, !tbaa !17
  %arrayidx1145 = getelementptr inbounds double* %1, i64 12
  %358 = bitcast double* %arrayidx1145 to <2 x double>*
  %359 = load <2 x double>* %358, align 8, !tbaa !17
  %360 = fadd <2 x double> %341, %359
  %361 = bitcast double* %arrayidx1145 to <2 x double>*
  store <2 x double> %360, <2 x double>* %361, align 8, !tbaa !17
  %arrayidx1149 = getelementptr inbounds double* %1, i64 14
  %362 = bitcast double* %arrayidx1149 to <2 x double>*
  %363 = load <2 x double>* %362, align 8, !tbaa !17
  %364 = shufflevector <2 x double> %343, <2 x double> %341, <2 x i32> <i32 0, i32 3>
  %365 = fadd <2 x double> %364, %363
  %366 = bitcast double* %arrayidx1149 to <2 x double>*
  store <2 x double> %365, <2 x double>* %366, align 8, !tbaa !17
  %arrayidx1153 = getelementptr inbounds double* %1, i64 16
  %367 = bitcast double* %arrayidx1153 to <2 x double>*
  %368 = load <2 x double>* %367, align 8, !tbaa !17
  %369 = fadd <2 x double> %342, %368
  %370 = bitcast double* %arrayidx1153 to <2 x double>*
  store <2 x double> %369, <2 x double>* %370, align 8, !tbaa !17
  %arrayidx1157 = getelementptr inbounds double* %1, i64 18
  %371 = bitcast double* %arrayidx1157 to <2 x double>*
  %372 = load <2 x double>* %371, align 8, !tbaa !17
  %373 = shufflevector <2 x double> %343, <2 x double> %342, <2 x i32> <i32 0, i32 3>
  %374 = fadd <2 x double> %373, %372
  %375 = bitcast double* %arrayidx1157 to <2 x double>*
  store <2 x double> %374, <2 x double>* %375, align 8, !tbaa !17
  %arrayidx1161 = getelementptr inbounds double* %1, i64 20
  %376 = load double* %arrayidx1161, align 8, !tbaa !17
  %add1162 = fadd double %344, %376
  store double %add1162, double* %arrayidx1161, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1137, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil29calc_self_merge_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31828 = icmp sgt i32 %13, 0
  br i1 %cmp31828, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30903 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond649651901 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19653899 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv891 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next892, %for.inc ]
  %g.0829 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv891, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0829, 1
  %idxprom41 = sext i32 %g.0829 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond649651901, i64 %idxprom41
  %30 = trunc i64 %indvars.iv891 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0829, %for.body ]
  %indvars.iv.next892 = add nuw nsw i64 %indvars.iv891, 1
  %lftr.wideiv893 = trunc i64 %indvars.iv.next892 to i32
  %exitcond894 = icmp eq i32 %lftr.wideiv893, %13
  br i1 %exitcond894, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond649651901, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond649651901, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa908 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19653898907 = phi i32* [ %cond19653899, %for.end ], [ %cond19653899, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond649651900906 = phi i32* [ %cond649651901, %for.end ], [ %cond649651901, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30902905 = phi i32* [ %cond30903, %for.end ], [ %cond30903, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56822 = icmp sgt i32 %g.0.lcssa908, 0
  br i1 %cmp56822, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv887 = phi i64 [ %indvars.iv.next888, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0824 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0823 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond649651900906, i64 %indvars.iv887
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0824, 1
  %idxprom68 = sext i32 %fixg.0824 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19653898907, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0823, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0824, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1
  %lftr.wideiv889 = trunc i64 %indvars.iv.next888 to i32
  %exitcond890 = icmp eq i32 %lftr.wideiv889, %g.0.lcssa908
  br i1 %exitcond890, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond649651900906, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond649651900906 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19653898907, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19653898907 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30902905, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30902905 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19653898907, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19653898907, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2656 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147675 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125661663673 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114657659665671 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136667669 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171800 = icmp sgt i32 %sub162, 0
  br i1 %cmp171800, label %for.body172.lr.ph, label %for.end1085

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i646 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125661663673 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147675 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30902905 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114657659665671 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1083, %for.body172.lr.ph
  %exclChecksum.0814 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1083 ]
  %i.0807 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1084, %for.inc1083 ]
  %j_hgroup.0806 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1083 ]
  %g_lower.0805 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1083 ]
  %fixg_lower.0804 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1083 ]
  %pairlistindex.0803 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1083 ]
  %pairlistoffset.0802 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1083 ]
  %pairCount.0801 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1083 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %299, %for.inc1083 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %300, %for.inc1083 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %301, %for.inc1083 ]
  %idxprom173 = sext i32 %i.0807 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i677 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i677, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i677, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i677, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0807
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0801
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0801, %div165
  %cmp214 = icmp slt i32 %pairCount.0801, %div168
  %or.cond635 = and i1 %cmp212, %cmp214
  br i1 %or.cond635, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0807
  br label %for.inc1083

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0801, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0807
  %cmp237684 = icmp slt i32 %g_lower.0805, %g.0.lcssa908
  br i1 %cmp237684, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0805 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa908
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1685 = phi i32 [ %g_lower.0805, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond649651900906, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1685, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0805, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1685, %land.rhs238 ]
  %cmp245686 = icmp slt i32 %fixg_lower.0804, %fixg.2656
  br i1 %cmp245686, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0804 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next837 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2656
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv836 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next837, %while.cond244 ]
  %fixg_lower.1687 = phi i32 [ %fixg_lower.0804, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19653898907, i64 %indvars.iv836
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next837 = add nsw i64 %indvars.iv836, 1
  %inc252 = add nsw i32 %fixg_lower.1687, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0804, %land.end ], [ %fixg_lower.0804, %while.cond244.loopexit ], [ %fixg_lower.1687, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0805, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0806, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1689 = add nsw i32 %i.0807, 1
  %cmp257690 = icmp slt i32 %j.1689, %j_hgroup.1
  br i1 %cmp257690, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0807
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0807
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1689
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1689, %86
  %broadcast.splatinsert936 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat937 = shufflevector <4 x i32> %broadcast.splatinsert936, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction938 = add <4 x i32> %broadcast.splat937, <i32 0, i32 1, i32 2, i32 3>
  %induction939 = add <4 x i32> %broadcast.splat937, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114657659665671, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction938, <4 x i32>* %88, align 4
  %.sum942 = or i64 %index, 4
  %89 = getelementptr i32* %cond114657659665671, i64 %.sum942
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction939, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !91

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val934 = phi i32 [ %j.1689, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv838 = phi i64 [ %indvars.iv.next839, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1692 = phi i32 [ %j.1, %for.body258 ], [ %resume.val934, %middle.block ]
  %indvars.iv.next839 = add nuw nsw i64 %indvars.iv838, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114657659665671, i64 %indvars.iv838
  store i32 %j.1692, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1692, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next839 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !92

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114657659665671, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19653898907, i32* %cond649651900906
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2656, i32 %g.0.lcssa908
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30902905, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv844 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next845, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv844 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next845 = add nsw i64 %indvars.iv844, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next845
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div632 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div632 to i32
  %cmp330698 = icmp sgt i32 %conv328, 0
  br i1 %cmp330698, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv846 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next847, %cond.end351 ]
  %pli.0700 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30902905, i64 %indvars.iv846
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp633 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp633, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0700, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0700, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0700, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0700, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0700, i64 %cond352
  %indvars.iv.next847 = add nuw nsw i64 %indvars.iv846, 1
  %lftr.wideiv848 = trunc i64 %indvars.iv.next847 to i32
  %exitcond849 = icmp eq i32 %lftr.wideiv848, %104
  br i1 %exitcond849, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369629 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369629 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext630 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext630, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114657659665671, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114657659665671, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0802, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0801, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0803, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0804, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0805, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0806, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load390.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %110 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %111 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %111, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %112 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %112 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %bf.clear401 = and i32 %bf.load390.pre, 4194303
  %idxprom.i645678 = zext i32 %bf.clear401 to i64
  %113 = load i32** %atomVdwType.i646, align 8, !tbaa !64
  %arrayidx.i647 = getelementptr inbounds i32* %113, i64 %idxprom.i645678
  %114 = load i32* %arrayidx.i647, align 4, !tbaa !11
  %115 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %116 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv403 = shl i32 %114, 1
  %mul.i = and i32 %conv403, 131070
  %mul2.i = mul i32 %mul.i, %116
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp409726 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409726, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %117 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv859 = phi i64 [ %117, %for.body410.lr.ph ], [ %indvars.iv.next860, %for.inc466 ]
  %exclChecksum.1730 = phi i32 [ %exclChecksum.0814, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0729 = phi i32* [ %cond125661663673, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0728 = phi i32* [ %cond136667669, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114657659665671, i64 %indvars.iv859
  %118 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %118 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %119 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %67, %119
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %120 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %68, %120
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %121 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %69, %121
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %122 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %122, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond636 = or i1 %tobool444, %cmp445
  br i1 %or.cond636, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1730, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1730, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %64
  %cmp459 = icmp sgt i32 %bf.clear456, %65
  %or.cond637 = or i1 %cmp457, %cmp459
  br i1 %or.cond637, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0729, i64 1
  store i32 %118, i32* %pli405.0729, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0728, i64 1
  store i32 %118, i32* %plin.0728, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0728, %for.body410 ], [ %plin.0728, %land.lhs.true448 ], [ %plin.0728, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0729, %for.body410 ], [ %pli405.0729, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0729, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1730, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next860 = add nsw i64 %indvars.iv859, 1
  %lftr.wideiv861 = trunc i64 %indvars.iv.next860 to i32
  %exitcond862 = icmp eq i32 %lftr.wideiv861, %pairlistindex.2
  br i1 %exitcond862, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409726, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114657659665671, i64 %idxprom474
  %123 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %123 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %124 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %125 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %126 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %126, %if.then472 ], [ %132, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %125, %if.then472 ], [ %131, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %124, %if.then472 ], [ %130, %if.else537 ]
  %j2473.0.ph = phi i32 [ %123, %if.then472 ], [ %129, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136667669, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125661663673, %if.then472 ], [ %pli405.2.ph709, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0814, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer702

while.cond497.outer702:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph703 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph704 = phi double [ %132, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph705 = phi double [ %131, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph706 = phi double [ %130, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph707 = phi i32 [ %129, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph708 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph709 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph710 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer711

while.cond497.outer711:                           ; preds = %land.lhs.true528, %while.cond497.outer702
  %idxprom477.pn.ph712 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph703, %while.cond497.outer702 ]
  %p_j_z486.0.ph713 = phi double [ %132, %land.lhs.true528 ], [ %p_j_z486.0.ph704, %while.cond497.outer702 ]
  %p_j_y481.0.ph714 = phi double [ %131, %land.lhs.true528 ], [ %p_j_y481.0.ph705, %while.cond497.outer702 ]
  %p_j_x476.0.ph715 = phi double [ %130, %land.lhs.true528 ], [ %p_j_x476.0.ph706, %while.cond497.outer702 ]
  %j2473.0.ph716 = phi i32 [ %129, %land.lhs.true528 ], [ %j2473.0.ph707, %while.cond497.outer702 ]
  %k470.0.ph717 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph708, %while.cond497.outer702 ]
  %exclChecksum.4.ph718 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph710, %while.cond497.outer702 ]
  %127 = sext i32 %k470.0.ph717 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer711
  %indvars.iv855 = phi i64 [ %127, %while.cond497.outer711 ], [ %indvars.iv.next856, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph712, %while.cond497.outer711 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph713, %while.cond497.outer711 ], [ %132, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph714, %while.cond497.outer711 ], [ %131, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph715, %while.cond497.outer711 ], [ %130, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph716, %while.cond497.outer711 ], [ %129, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph717, %while.cond497.outer711 ], [ %inc500, %while.body499 ]
  %128 = trunc i64 %indvars.iv855 to i32
  %cmp498 = icmp slt i32 %128, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next856 = add nsw i64 %indvars.iv855, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114657659665671, i64 %indvars.iv.next856
  %129 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %67, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %129 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %130 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %68, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %131 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %69, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %132 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph718, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer711

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph718, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %64
  %cmp534 = icmp sgt i32 %atom2491.0, %65
  %or.cond638 = or i1 %cmp532, %cmp534
  br i1 %or.cond638, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph709, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph709, align 4, !tbaa !11
  br label %while.cond497.outer702

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136667669, %if.else469 ], [ %cond136667669, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125661663673, %if.else469 ], [ %cond125661663673, %for.cond408.preheader ], [ %pli405.2.ph709, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0814, %if.else469 ], [ %exclChecksum.0814, %for.cond408.preheader ], [ %exclChecksum.4.ph718, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552583 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552583 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext627 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext627, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125661663673, i64 %idxprom557
  %133 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125661663673, i64 %idxprom559
  store i32 %133, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564734 = icmp ult i32* %cond136667669, %plin.4
  br i1 %cmp564734, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8737 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0736 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147675, %for.cond563.preheader ]
  %pln.0735 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136667669, %for.cond563.preheader ]
  %134 = load i32* %pln.0735, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %134, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0736, i64 1
  store i32 %134, i32* %plix.0736, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8737, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0735, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8737, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147675, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0736, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136667669, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0735, %land.lhs.true565 ]
  %cmp573741 = icmp sgt i32 %conv553, 0
  br i1 %cmp573741, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv869 = phi i64 [ %indvars.iv.next870, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9744 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1743 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0742 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125661663673, i64 %indvars.iv869
  %135 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1743, i64 1
  store i32 %135, i32* %plix.1743, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9744, -1
  %indvars.iv.next870 = add nuw nsw i64 %indvars.iv869, 1
  %inc584 = add nsw i32 %k562.0742, 1
  %136 = trunc i64 %indvars.iv.next870 to i32
  %cmp573 = icmp slt i32 %136, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9744, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1743, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0742, %land.lhs.true574 ]
  %cmp587748 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587748, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %137 = sext i32 %k562.0.lcssa to i64
  %138 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %139 = lshr i64 %138, 2
  %140 = trunc i64 %139 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv871 = phi i64 [ %137, %for.body588.lr.ph ], [ %indvars.iv.next872, %for.inc606 ]
  %plin.5752 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2751 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0750 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125661663673, i64 %indvars.iv871
  %141 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %141 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %142 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %142, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598626 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598626, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %143 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %143 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5752, i64 1
  store i32 %141, i32* %plin.5752, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2751, i64 1
  store i32 %141, i32* %plix.2751, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0750, i64 1
  store i32 %141, i32* %plim.0750, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0750, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0750, %sw.bb602 ], [ %plim.0750, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2751, %for.body588 ], [ %plix.2751, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2751, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5752, %for.body588 ], [ %plin.5752, %sw.bb604 ], [ %plin.5752, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next872 = add nsw i64 %indvars.iv871, 1
  %lftr.wideiv873 = trunc i64 %indvars.iv.next872 to i32
  %exitcond874 = icmp eq i32 %lftr.wideiv873, %140
  br i1 %exitcond874, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612 = ashr exact i64 %sub.ptr.sub611, 2
  %conv613584 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613584
  %add621 = add i64 %add614, %sub.ptr.div612
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626586 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626586 to i32
  %cmp629756 = icmp sgt i32 %conv627, 0
  br i1 %cmp629756, label %for.body630.lr.ph, label %for.end762

for.body630.lr.ph:                                ; preds = %for.end608
  %x740 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y749 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z756 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630.for.body630_crit_edge, %for.body630.lr.ph
  %144 = phi i32* [ %113, %for.body630.lr.ph ], [ %.pre, %for.body630.for.body630_crit_edge ]
  %indvars.iv875 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next876, %for.body630.for.body630_crit_edge ]
  %145 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %174, %for.body630.for.body630_crit_edge ]
  %146 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %181, %for.body630.for.body630_crit_edge ]
  %147 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %192, %for.body630.for.body630_crit_edge ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv875
  %148 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %148 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %149 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %67, %149
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %150 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %68, %150
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %151 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %69, %151
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %152 = bitcast float %conv651 to i32
  %shr = ashr i32 %152, 17
  %add653 = add nsw i32 %shr, %mul
  %id654 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %153 = bitcast [4 x i8]* %id654 to i32*
  %bf.load655 = load i32* %153, align 4
  %bf.clear656 = and i32 %bf.load655, 4194303
  %idxprom.i641681 = zext i32 %bf.clear656 to i64
  %arrayidx.i643 = getelementptr inbounds i32* %144, i64 %idxprom.i641681
  %154 = load i32* %arrayidx.i643, align 4, !tbaa !11
  %conv.i644 = zext i32 %154 to i64
  %conv658 = shl nuw nsw i64 %conv.i644, 1
  %mul659 = and i64 %conv658, 131070
  %mul662 = shl nsw i32 %add653, 4
  %idx.ext663 = sext i32 %mul662 to i64
  %and = and i32 %152, -131072
  %charge677 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %155 = load float* %charge677, align 4, !tbaa !63
  %conv678 = fpext float %155 to double
  %mul679 = fmul double %mul398, %conv678
  %156 = bitcast i32 %and to float
  %conv681 = fpext float %156 to double
  %sub682 = fsub double %add650, %conv681
  %bf.lshr685 = lshr i32 %bf.load655, 28
  %idxprom686 = zext i32 %bf.lshr685 to i64
  %add.ptr394.sum616 = add i64 %idxprom686, %idx.ext393
  %arrayidx687 = getelementptr inbounds double* %110, i64 %add.ptr394.sum616
  %157 = load double* %arrayidx687, align 8, !tbaa !17
  %add.ptr.i.sum682 = add i64 %mul659, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum682, i32 0
  %158 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %8, %158
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum682, i32 1
  %159 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %8, %159
  %add.ptr664.sum617 = or i64 %idx.ext663, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr664.sum617
  %160 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %160
  %add.ptr669.sum618 = or i64 %idx.ext663, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr669.sum618
  %161 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %161
  %sub701 = fsub double %mul698, %mul700
  %add.ptr664.sum619 = or i64 %idx.ext663, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr664.sum619
  %162 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %162
  %add.ptr669.sum620 = or i64 %idx.ext663, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr669.sum620
  %163 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %163
  %sub706 = fsub double %mul703, %mul705
  %add.ptr664.sum621 = or i64 %idx.ext663, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr664.sum621
  %164 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %164
  %add.ptr669.sum622 = or i64 %idx.ext663, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr669.sum622
  %165 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %165
  %sub711 = fsub double %mul708, %mul710
  %add.ptr674.sum623 = or i64 %idx.ext663, 9
  %arrayidx712 = getelementptr inbounds double* %7, i64 %add.ptr674.sum623
  %166 = load double* %arrayidx712, align 8, !tbaa !17
  %add.ptr674.sum624 = or i64 %idx.ext663, 10
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr674.sum624
  %167 = load double* %arrayidx713, align 8, !tbaa !17
  %add.ptr674.sum625 = or i64 %idx.ext663, 11
  %arrayidx714 = getelementptr inbounds double* %7, i64 %add.ptr674.sum625
  %168 = load double* %arrayidx714, align 8, !tbaa !17
  %mul715 = fmul double %mul679, %168
  %mul716 = fmul double %mul679, %167
  %mul717 = fmul double %mul679, %166
  %add719 = fadd double %sub701, %mul715
  %add720 = fadd double %sub706, %mul716
  %add721 = fadd double %mul717, %sub711
  %mul723 = fmul double %sub682, 3.000000e+00
  %mul724 = fmul double %mul723, %add719
  %mul725 = fmul double %add720, 2.000000e+00
  %add726 = fadd double %mul725, %mul724
  %mul727 = fmul double %sub682, %add726
  %add728 = fadd double %add721, %mul727
  %mul729 = fmul double %add728, -2.000000e+00
  %mul730 = fmul double %157, %mul729
  %mul733 = fmul double %sub638, %mul730
  %169 = insertelement <2 x double> undef, double %sub638, i32 0
  %170 = insertelement <2 x double> %169, double %sub643, i32 1
  %171 = insertelement <2 x double> undef, double %mul733, i32 0
  %172 = insertelement <2 x double> %171, double %mul733, i32 1
  %173 = fmul <2 x double> %170, %172
  %174 = fadd <2 x double> %145, %173
  %175 = load double* %x740, align 8, !tbaa !72
  %add741 = fadd double %175, %mul733
  store double %add741, double* %x740, align 8, !tbaa !72
  %x742 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul744 = fmul double %sub643, %mul730
  %176 = insertelement <2 x double> undef, double %sub643, i32 0
  %177 = insertelement <2 x double> %176, double %sub648, i32 1
  %178 = insertelement <2 x double> undef, double %mul744, i32 0
  %179 = insertelement <2 x double> %178, double %mul744, i32 1
  %180 = fmul <2 x double> %177, %179
  %181 = fadd <2 x double> %146, %180
  %182 = load double* %y749, align 8, !tbaa !73
  %add750 = fadd double %182, %mul744
  store double %add750, double* %y749, align 8, !tbaa !73
  %183 = bitcast double* %x742 to <2 x double>*
  %184 = load <2 x double>* %183, align 8, !tbaa !17
  %185 = insertelement <2 x double> %171, double %mul744, i32 1
  %186 = fsub <2 x double> %184, %185
  %187 = bitcast double* %x742 to <2 x double>*
  store <2 x double> %186, <2 x double>* %187, align 8, !tbaa !17
  %mul753 = fmul double %sub648, %mul730
  %188 = insertelement <2 x double> undef, double %sub648, i32 0
  %189 = insertelement <2 x double> %188, double %sub648, i32 1
  %190 = insertelement <2 x double> %171, double %mul753, i32 1
  %191 = fmul <2 x double> %189, %190
  %192 = fadd <2 x double> %147, %191
  %193 = load double* %z756, align 8, !tbaa !74
  %add757 = fadd double %193, %mul753
  store double %add757, double* %z756, align 8, !tbaa !74
  %z758 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %194 = load double* %z758, align 8, !tbaa !74
  %sub759 = fsub double %194, %mul753
  store double %sub759, double* %z758, align 8, !tbaa !74
  %indvars.iv.next876 = add nuw nsw i64 %indvars.iv875, 1
  %lftr.wideiv877 = trunc i64 %indvars.iv.next876 to i32
  %exitcond878 = icmp eq i32 %lftr.wideiv877, %conv627
  br i1 %exitcond878, label %for.end762, label %for.body630.for.body630_crit_edge

for.body630.for.body630_crit_edge:                ; preds = %for.body630
  %.pre = load i32** %atomVdwType.i646, align 8, !tbaa !64
  br label %for.body630

for.end762:                                       ; preds = %for.body630, %for.end608
  %195 = phi <2 x double> [ %59, %for.end608 ], [ %174, %for.body630 ]
  %196 = phi <2 x double> [ %60, %for.end608 ], [ %181, %for.body630 ]
  %197 = phi <2 x double> [ %61, %for.end608 ], [ %192, %for.body630 ]
  %conv767 = trunc i64 %sub.ptr.div619 to i32
  %cmp769770 = icmp sgt i32 %conv767, 0
  br i1 %cmp769770, label %for.body770.lr.ph, label %for.end951

for.body770.lr.ph:                                ; preds = %for.end762
  %x927 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y937 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z945 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body770

for.body770:                                      ; preds = %for.body770, %for.body770.lr.ph
  %indvars.iv879 = phi i64 [ 0, %for.body770.lr.ph ], [ %indvars.iv.next880, %for.body770 ]
  %198 = phi <2 x double> [ %195, %for.body770.lr.ph ], [ %231, %for.body770 ]
  %199 = phi <2 x double> [ %196, %for.body770.lr.ph ], [ %238, %for.body770 ]
  %200 = phi <2 x double> [ %197, %for.body770.lr.ph ], [ %249, %for.body770 ]
  %arrayidx773 = getelementptr inbounds i32* %cond158, i64 %indvars.iv879
  %201 = load i32* %arrayidx773, align 4, !tbaa !11
  %idx.ext775 = sext i32 %201 to i64
  %x779 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 0
  %202 = load double* %x779, align 8, !tbaa !59
  %sub780 = fsub double %67, %202
  %mul782 = fmul double %sub780, %sub780
  %y785 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 1
  %203 = load double* %y785, align 8, !tbaa !61
  %sub786 = fsub double %68, %203
  %mul787 = fmul double %sub786, %sub786
  %add788 = fadd double %mul782, %mul787
  %z791 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 0, i32 2
  %204 = load double* %z791, align 8, !tbaa !62
  %sub792 = fsub double %69, %204
  %mul793 = fmul double %sub792, %sub792
  %add794 = fadd double %add788, %mul793
  %conv796 = fptrunc double %add794 to float
  %205 = bitcast float %conv796 to i32
  %shr800 = ashr i32 %205, 17
  %add801 = add nsw i32 %shr800, %mul
  %id803 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 2
  %206 = bitcast [4 x i8]* %id803 to i32*
  %bf.load804 = load i32* %206, align 4
  %bf.clear805 = and i32 %bf.load804, 4194303
  %idxprom.i639679 = zext i32 %bf.clear805 to i64
  %207 = load i32** %atomVdwType.i646, align 8, !tbaa !64
  %arrayidx.i640 = getelementptr inbounds i32* %207, i64 %idxprom.i639679
  %208 = load i32* %arrayidx.i640, align 4, !tbaa !11
  %conv.i = zext i32 %208 to i64
  %conv807 = shl nuw nsw i64 %conv.i, 1
  %mul808 = and i64 %conv807, 131070
  %add.ptr810.sum596 = or i64 %mul808, 1
  %mul813 = shl nsw i32 %add801, 4
  %idx.ext814 = sext i32 %mul813 to i64
  %and833 = and i32 %205, -131072
  %charge835 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext775, i32 1
  %209 = load float* %charge835, align 4, !tbaa !63
  %conv836 = fpext float %209 to double
  %mul837 = fmul double %mul398, %conv836
  %210 = bitcast i32 %and833 to float
  %conv840 = fpext float %210 to double
  %sub841 = fsub double %add794, %conv840
  %bf.lshr845 = lshr i32 %bf.load804, 28
  %idxprom846 = zext i32 %bf.lshr845 to i64
  %add.ptr394.sum599 = add i64 %idxprom846, %idx.ext393
  %arrayidx847 = getelementptr inbounds double* %110, i64 %add.ptr394.sum599
  %211 = load double* %arrayidx847, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr810.sum596, %idx.ext.i
  %A849 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum, i32 0
  %212 = load double* %A849, align 8, !tbaa !69
  %mul850 = fmul double %8, %212
  %B852 = getelementptr inbounds %"struct.LJTable::TableEntry"* %115, i64 %add.ptr.i.sum, i32 1
  %213 = load double* %B852, align 8, !tbaa !71
  %mul853 = fmul double %8, %213
  %add.ptr815.sum600 = or i64 %idx.ext814, 3
  %arrayidx859 = getelementptr inbounds double* %7, i64 %add.ptr815.sum600
  %214 = load double* %arrayidx859, align 8, !tbaa !17
  %mul860 = fmul double %mul850, %214
  %add.ptr822.sum601 = or i64 %idx.ext814, 7
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr822.sum601
  %215 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul853, %215
  %sub863 = fsub double %mul860, %mul862
  %add.ptr815.sum602 = or i64 %idx.ext814, 2
  %arrayidx865 = getelementptr inbounds double* %7, i64 %add.ptr815.sum602
  %216 = load double* %arrayidx865, align 8, !tbaa !17
  %mul866 = fmul double %mul850, %216
  %add.ptr822.sum603 = or i64 %idx.ext814, 6
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr822.sum603
  %217 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %mul853, %217
  %sub869 = fsub double %mul866, %mul868
  %add.ptr815.sum604 = or i64 %idx.ext814, 1
  %arrayidx871 = getelementptr inbounds double* %7, i64 %add.ptr815.sum604
  %218 = load double* %arrayidx871, align 8, !tbaa !17
  %mul872 = fmul double %mul850, %218
  %add.ptr822.sum605 = or i64 %idx.ext814, 5
  %arrayidx873 = getelementptr inbounds double* %7, i64 %add.ptr822.sum605
  %219 = load double* %arrayidx873, align 8, !tbaa !17
  %mul874 = fmul double %mul853, %219
  %sub875 = fsub double %mul872, %mul874
  %add.ptr829.sum606 = or i64 %idx.ext814, 9
  %arrayidx877 = getelementptr inbounds double* %7, i64 %add.ptr829.sum606
  %220 = load double* %arrayidx877, align 8, !tbaa !17
  %add.ptr829.sum607 = or i64 %idx.ext814, 10
  %arrayidx879 = getelementptr inbounds double* %7, i64 %add.ptr829.sum607
  %221 = load double* %arrayidx879, align 8, !tbaa !17
  %add.ptr829.sum608 = or i64 %idx.ext814, 11
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr829.sum608
  %222 = load double* %arrayidx881, align 8, !tbaa !17
  %add.ptr885.sum610 = or i64 %idx.ext814, 13
  %arrayidx889 = getelementptr inbounds double* %7, i64 %add.ptr885.sum610
  %223 = load double* %arrayidx889, align 8, !tbaa !17
  %mul890 = fmul double %sub, %223
  %sub891 = fsub double %220, %mul890
  %add.ptr885.sum611 = or i64 %idx.ext814, 14
  %arrayidx892 = getelementptr inbounds double* %7, i64 %add.ptr885.sum611
  %224 = load double* %arrayidx892, align 8, !tbaa !17
  %mul893 = fmul double %sub, %224
  %sub894 = fsub double %221, %mul893
  %add.ptr885.sum612 = or i64 %idx.ext814, 15
  %arrayidx895 = getelementptr inbounds double* %7, i64 %add.ptr885.sum612
  %225 = load double* %arrayidx895, align 8, !tbaa !17
  %mul896 = fmul double %sub, %225
  %sub897 = fsub double %222, %mul896
  %mul898 = fmul double %mul837, %sub897
  %mul899 = fmul double %mul837, %sub894
  %mul900 = fmul double %mul837, %sub891
  %add902 = fadd double %sub863, %mul898
  %add903 = fadd double %sub869, %mul899
  %add904 = fadd double %sub875, %mul900
  %mul907 = fmul double %sub841, 3.000000e+00
  %mul908 = fmul double %mul907, %add902
  %mul909 = fmul double %add903, 2.000000e+00
  %add910 = fadd double %mul909, %mul908
  %mul911 = fmul double %sub841, %add910
  %add912 = fadd double %add904, %mul911
  %mul914 = fmul double %add912, -2.000000e+00
  %mul915 = fmul double %211, %mul914
  %mul920 = fmul double %sub780, %mul915
  %226 = insertelement <2 x double> undef, double %sub780, i32 0
  %227 = insertelement <2 x double> %226, double %sub786, i32 1
  %228 = insertelement <2 x double> undef, double %mul920, i32 0
  %229 = insertelement <2 x double> %228, double %mul920, i32 1
  %230 = fmul <2 x double> %227, %229
  %231 = fadd <2 x double> %198, %230
  %232 = load double* %x927, align 8, !tbaa !72
  %add928 = fadd double %232, %mul920
  store double %add928, double* %x927, align 8, !tbaa !72
  %x929 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext775, i32 0
  %mul932 = fmul double %sub786, %mul915
  %233 = insertelement <2 x double> undef, double %sub786, i32 0
  %234 = insertelement <2 x double> %233, double %sub792, i32 1
  %235 = insertelement <2 x double> undef, double %mul932, i32 0
  %236 = insertelement <2 x double> %235, double %mul932, i32 1
  %237 = fmul <2 x double> %234, %236
  %238 = fadd <2 x double> %199, %237
  %239 = load double* %y937, align 8, !tbaa !73
  %add938 = fadd double %239, %mul932
  store double %add938, double* %y937, align 8, !tbaa !73
  %240 = bitcast double* %x929 to <2 x double>*
  %241 = load <2 x double>* %240, align 8, !tbaa !17
  %242 = insertelement <2 x double> %228, double %mul932, i32 1
  %243 = fsub <2 x double> %241, %242
  %244 = bitcast double* %x929 to <2 x double>*
  store <2 x double> %243, <2 x double>* %244, align 8, !tbaa !17
  %mul942 = fmul double %sub792, %mul915
  %245 = insertelement <2 x double> undef, double %sub792, i32 0
  %246 = insertelement <2 x double> %245, double %sub792, i32 1
  %247 = insertelement <2 x double> %228, double %mul942, i32 1
  %248 = fmul <2 x double> %246, %247
  %249 = fadd <2 x double> %200, %248
  %250 = load double* %z945, align 8, !tbaa !74
  %add946 = fadd double %250, %mul942
  store double %add946, double* %z945, align 8, !tbaa !74
  %z947 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext775, i32 2
  %251 = load double* %z947, align 8, !tbaa !74
  %sub948 = fsub double %251, %mul942
  store double %sub948, double* %z947, align 8, !tbaa !74
  %indvars.iv.next880 = add nuw nsw i64 %indvars.iv879, 1
  %lftr.wideiv881 = trunc i64 %indvars.iv.next880 to i32
  %exitcond882 = icmp eq i32 %lftr.wideiv881, %conv767
  br i1 %exitcond882, label %for.end951, label %for.body770

for.end951:                                       ; preds = %for.body770, %for.end762
  %252 = phi <2 x double> [ %195, %for.end762 ], [ %231, %for.body770 ]
  %253 = phi <2 x double> [ %196, %for.end762 ], [ %238, %for.body770 ]
  %254 = phi <2 x double> [ %197, %for.end762 ], [ %249, %for.body770 ]
  %conv956 = trunc i64 %sub.ptr.div612 to i32
  %cmp958784 = icmp sgt i32 %conv956, 0
  br i1 %cmp958784, label %for.body959.lr.ph, label %for.inc1083

for.body959.lr.ph:                                ; preds = %for.end951
  %x1058 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1068 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1076 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body959

for.body959:                                      ; preds = %for.body959, %for.body959.lr.ph
  %indvars.iv883 = phi i64 [ 0, %for.body959.lr.ph ], [ %indvars.iv.next884, %for.body959 ]
  %255 = phi <2 x double> [ %252, %for.body959.lr.ph ], [ %278, %for.body959 ]
  %256 = phi <2 x double> [ %253, %for.body959.lr.ph ], [ %285, %for.body959 ]
  %257 = phi <2 x double> [ %254, %for.body959.lr.ph ], [ %296, %for.body959 ]
  %arrayidx962 = getelementptr inbounds i32* %cond147675, i64 %indvars.iv883
  %258 = load i32* %arrayidx962, align 4, !tbaa !11
  %idx.ext964 = sext i32 %258 to i64
  %x968 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext964, i32 0, i32 0
  %259 = load double* %x968, align 8, !tbaa !59
  %sub969 = fsub double %67, %259
  %mul971 = fmul double %sub969, %sub969
  %y974 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext964, i32 0, i32 1
  %260 = load double* %y974, align 8, !tbaa !61
  %sub975 = fsub double %68, %260
  %mul976 = fmul double %sub975, %sub975
  %add977 = fadd double %mul971, %mul976
  %z980 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext964, i32 0, i32 2
  %261 = load double* %z980, align 8, !tbaa !62
  %sub981 = fsub double %69, %261
  %mul982 = fmul double %sub981, %sub981
  %add983 = fadd double %add977, %mul982
  %conv985 = fptrunc double %add983 to float
  %262 = bitcast float %conv985 to i32
  %shr989 = ashr i32 %262, 17
  %add990 = add nsw i32 %shr989, %mul
  %mul992 = shl nsw i32 %add990, 4
  %idx.ext993 = sext i32 %mul992 to i64
  %and999 = and i32 %262, -131072
  %charge1001 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext964, i32 1
  %263 = load float* %charge1001, align 4, !tbaa !63
  %conv1002 = fpext float %263 to double
  %mul1003 = fmul double %mul398, %conv1002
  %264 = bitcast i32 %and999 to float
  %conv1006 = fpext float %264 to double
  %sub1007 = fsub double %add983, %conv1006
  %partition1009 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext964, i32 2
  %265 = bitcast [4 x i8]* %partition1009 to i32*
  %bf.load1010 = load i32* %265, align 4
  %bf.lshr1011 = lshr i32 %bf.load1010, 28
  %idxprom1012 = zext i32 %bf.lshr1011 to i64
  %add.ptr394.sum = add i64 %idxprom1012, %idx.ext393
  %arrayidx1013 = getelementptr inbounds double* %110, i64 %add.ptr394.sum
  %266 = load double* %arrayidx1013, align 8, !tbaa !17
  %add.ptr995.sum588 = or i64 %idx.ext993, 9
  %arrayidx1015 = getelementptr inbounds double* %7, i64 %add.ptr995.sum588
  %267 = load double* %arrayidx1015, align 8, !tbaa !17
  %add.ptr995.sum589 = or i64 %idx.ext993, 10
  %arrayidx1017 = getelementptr inbounds double* %7, i64 %add.ptr995.sum589
  %268 = load double* %arrayidx1017, align 8, !tbaa !17
  %add.ptr995.sum590 = or i64 %idx.ext993, 11
  %arrayidx1019 = getelementptr inbounds double* %7, i64 %add.ptr995.sum590
  %269 = load double* %arrayidx1019, align 8, !tbaa !17
  %add.ptr1024.sum592 = or i64 %idx.ext993, 13
  %arrayidx1027 = getelementptr inbounds double* %7, i64 %add.ptr1024.sum592
  %270 = load double* %arrayidx1027, align 8, !tbaa !17
  %sub1028 = fsub double %267, %270
  %add.ptr1024.sum593 = or i64 %idx.ext993, 14
  %arrayidx1029 = getelementptr inbounds double* %7, i64 %add.ptr1024.sum593
  %271 = load double* %arrayidx1029, align 8, !tbaa !17
  %sub1030 = fsub double %268, %271
  %add.ptr1024.sum594 = or i64 %idx.ext993, 15
  %arrayidx1031 = getelementptr inbounds double* %7, i64 %add.ptr1024.sum594
  %272 = load double* %arrayidx1031, align 8, !tbaa !17
  %sub1032 = fsub double %269, %272
  %mul1033 = fmul double %mul1003, %sub1032
  %mul1034 = fmul double %mul1003, %sub1030
  %mul1035 = fmul double %mul1003, %sub1028
  %mul1038 = fmul double %sub1007, 3.000000e+00
  %mul1039 = fmul double %mul1038, %mul1033
  %mul1040 = fmul double %mul1034, 2.000000e+00
  %add1041 = fadd double %mul1040, %mul1039
  %mul1042 = fmul double %sub1007, %add1041
  %add1043 = fadd double %mul1035, %mul1042
  %mul1045 = fmul double %add1043, -2.000000e+00
  %mul1046 = fmul double %266, %mul1045
  %mul1051 = fmul double %sub969, %mul1046
  %273 = insertelement <2 x double> undef, double %sub969, i32 0
  %274 = insertelement <2 x double> %273, double %sub975, i32 1
  %275 = insertelement <2 x double> undef, double %mul1051, i32 0
  %276 = insertelement <2 x double> %275, double %mul1051, i32 1
  %277 = fmul <2 x double> %274, %276
  %278 = fadd <2 x double> %255, %277
  %279 = load double* %x1058, align 8, !tbaa !72
  %add1059 = fadd double %279, %mul1051
  store double %add1059, double* %x1058, align 8, !tbaa !72
  %x1060 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext964, i32 0
  %mul1063 = fmul double %sub975, %mul1046
  %280 = insertelement <2 x double> undef, double %sub975, i32 0
  %281 = insertelement <2 x double> %280, double %sub981, i32 1
  %282 = insertelement <2 x double> undef, double %mul1063, i32 0
  %283 = insertelement <2 x double> %282, double %mul1063, i32 1
  %284 = fmul <2 x double> %281, %283
  %285 = fadd <2 x double> %256, %284
  %286 = load double* %y1068, align 8, !tbaa !73
  %add1069 = fadd double %286, %mul1063
  store double %add1069, double* %y1068, align 8, !tbaa !73
  %287 = bitcast double* %x1060 to <2 x double>*
  %288 = load <2 x double>* %287, align 8, !tbaa !17
  %289 = insertelement <2 x double> %275, double %mul1063, i32 1
  %290 = fsub <2 x double> %288, %289
  %291 = bitcast double* %x1060 to <2 x double>*
  store <2 x double> %290, <2 x double>* %291, align 8, !tbaa !17
  %mul1073 = fmul double %sub981, %mul1046
  %292 = insertelement <2 x double> undef, double %sub981, i32 0
  %293 = insertelement <2 x double> %292, double %sub981, i32 1
  %294 = insertelement <2 x double> %275, double %mul1073, i32 1
  %295 = fmul <2 x double> %293, %294
  %296 = fadd <2 x double> %257, %295
  %297 = load double* %z1076, align 8, !tbaa !74
  %add1077 = fadd double %297, %mul1073
  store double %add1077, double* %z1076, align 8, !tbaa !74
  %z1078 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext964, i32 2
  %298 = load double* %z1078, align 8, !tbaa !74
  %sub1079 = fsub double %298, %mul1073
  store double %sub1079, double* %z1078, align 8, !tbaa !74
  %indvars.iv.next884 = add nuw nsw i64 %indvars.iv883, 1
  %lftr.wideiv885 = trunc i64 %indvars.iv.next884 to i32
  %exitcond886 = icmp eq i32 %lftr.wideiv885, %conv956
  br i1 %exitcond886, label %for.inc1083, label %for.body959

for.inc1083:                                      ; preds = %for.body959, %for.end951, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end951 ], [ %pairCount.2, %for.body959 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0802, %if.then215 ], [ %pairlistoffset.1, %for.end951 ], [ %pairlistoffset.1, %for.body959 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0803, %if.then215 ], [ %pairlistindex.2, %for.end951 ], [ %pairlistindex.2, %for.body959 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0804, %if.then215 ], [ %fixg_lower.3, %for.end951 ], [ %fixg_lower.3, %for.body959 ]
  %g_lower.4 = phi i32 [ %g_lower.0805, %if.then215 ], [ %g_lower.3, %for.end951 ], [ %g_lower.3, %for.body959 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0806, %if.then215 ], [ %j_hgroup.2, %for.end951 ], [ %j_hgroup.2, %for.body959 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0807, %for.end951 ], [ %i.0807, %for.body959 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0814, %if.then215 ], [ %conv622, %for.end951 ], [ %conv622, %for.body959 ]
  %299 = phi <2 x double> [ %59, %if.then215 ], [ %252, %for.end951 ], [ %278, %for.body959 ]
  %300 = phi <2 x double> [ %60, %if.then215 ], [ %253, %for.end951 ], [ %285, %for.body959 ]
  %301 = phi <2 x double> [ %61, %if.then215 ], [ %254, %for.end951 ], [ %296, %for.body959 ]
  %inc1084 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1084
  br i1 %cmp171, label %for.body172, label %for.end1085

for.end1085:                                      ; preds = %for.inc1083, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1083 ]
  %302 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %299, %for.inc1083 ]
  %303 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %300, %for.inc1083 ]
  %304 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %301, %for.inc1083 ]
  %305 = extractelement <2 x double> %304, i32 1
  %arraydecay1086 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1087 = icmp eq i32* %cond649651900906, %arraydecay1086
  br i1 %cmp1087, label %if.end1092, label %delete.notnull1090

delete.notnull1090:                               ; preds = %for.end1085
  %306 = bitcast i32* %cond649651900906 to i8*
  call void @_ZdaPv(i8* %306) #7
  br label %if.end1092

if.end1092:                                       ; preds = %delete.notnull1090, %for.end1085
  %arraydecay1093 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1094 = icmp eq i32* %cond19653898907, %arraydecay1093
  br i1 %cmp1094, label %if.end1099, label %delete.notnull1097

delete.notnull1097:                               ; preds = %if.end1092
  %307 = bitcast i32* %cond19653898907 to i8*
  call void @_ZdaPv(i8* %307) #7
  br label %if.end1099

if.end1099:                                       ; preds = %delete.notnull1097, %if.end1092
  %arraydecay1100 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1101 = icmp eq i32* %cond30902905, %arraydecay1100
  br i1 %cmp1101, label %if.end1106, label %delete.notnull1104

delete.notnull1104:                               ; preds = %if.end1099
  %308 = bitcast i32* %cond30902905 to i8*
  call void @_ZdaPv(i8* %308) #7
  br label %if.end1106

if.end1106:                                       ; preds = %delete.notnull1104, %if.end1099
  %arraydecay1107 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1108 = icmp eq i32* %cond114657659665671, %arraydecay1107
  br i1 %cmp1108, label %if.end1113, label %delete.notnull1111

delete.notnull1111:                               ; preds = %if.end1106
  %309 = bitcast i32* %cond114657659665671 to i8*
  call void @_ZdaPv(i8* %309) #7
  br label %if.end1113

if.end1113:                                       ; preds = %delete.notnull1111, %if.end1106
  %arraydecay1114 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1115 = icmp eq i32* %cond125661663673, %arraydecay1114
  br i1 %cmp1115, label %if.end1120, label %delete.notnull1118

delete.notnull1118:                               ; preds = %if.end1113
  %310 = bitcast i32* %cond125661663673 to i8*
  call void @_ZdaPv(i8* %310) #7
  br label %if.end1120

if.end1120:                                       ; preds = %delete.notnull1118, %if.end1113
  %arraydecay1121 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1122 = icmp eq i32* %cond136667669, %arraydecay1121
  br i1 %cmp1122, label %if.end1127, label %delete.notnull1125

delete.notnull1125:                               ; preds = %if.end1120
  %311 = bitcast i32* %cond136667669 to i8*
  call void @_ZdaPv(i8* %311) #7
  br label %if.end1127

if.end1127:                                       ; preds = %delete.notnull1125, %if.end1120
  %arraydecay1128 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1129 = icmp eq i32* %cond147675, %arraydecay1128
  br i1 %cmp1129, label %if.end1134, label %delete.notnull1132

delete.notnull1132:                               ; preds = %if.end1127
  %312 = bitcast i32* %cond147675 to i8*
  call void @_ZdaPv(i8* %312) #7
  br label %if.end1134

if.end1134:                                       ; preds = %delete.notnull1132, %if.end1127
  %arraydecay1135 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1136 = icmp eq i32* %cond158, %arraydecay1135
  br i1 %cmp1136, label %if.end1141, label %delete.notnull1139

delete.notnull1139:                               ; preds = %if.end1134
  %313 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %313) #7
  br label %if.end1141

if.end1141:                                       ; preds = %delete.notnull1139, %if.end1134
  %conv1142 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1143 = getelementptr inbounds double* %1, i64 22
  %314 = load double* %arrayidx1143, align 8, !tbaa !17
  %add1144 = fadd double %conv1142, %314
  store double %add1144, double* %arrayidx1143, align 8, !tbaa !17
  %arrayidx1145 = getelementptr inbounds double* %1, i64 12
  %315 = bitcast double* %arrayidx1145 to <2 x double>*
  %316 = load <2 x double>* %315, align 8, !tbaa !17
  %317 = fadd <2 x double> %302, %316
  %318 = bitcast double* %arrayidx1145 to <2 x double>*
  store <2 x double> %317, <2 x double>* %318, align 8, !tbaa !17
  %arrayidx1149 = getelementptr inbounds double* %1, i64 14
  %319 = bitcast double* %arrayidx1149 to <2 x double>*
  %320 = load <2 x double>* %319, align 8, !tbaa !17
  %321 = shufflevector <2 x double> %304, <2 x double> %302, <2 x i32> <i32 0, i32 3>
  %322 = fadd <2 x double> %321, %320
  %323 = bitcast double* %arrayidx1149 to <2 x double>*
  store <2 x double> %322, <2 x double>* %323, align 8, !tbaa !17
  %arrayidx1153 = getelementptr inbounds double* %1, i64 16
  %324 = bitcast double* %arrayidx1153 to <2 x double>*
  %325 = load <2 x double>* %324, align 8, !tbaa !17
  %326 = fadd <2 x double> %303, %325
  %327 = bitcast double* %arrayidx1153 to <2 x double>*
  store <2 x double> %326, <2 x double>* %327, align 8, !tbaa !17
  %arrayidx1157 = getelementptr inbounds double* %1, i64 18
  %328 = bitcast double* %arrayidx1157 to <2 x double>*
  %329 = load <2 x double>* %328, align 8, !tbaa !17
  %330 = shufflevector <2 x double> %304, <2 x double> %303, <2 x i32> <i32 0, i32 3>
  %331 = fadd <2 x double> %330, %329
  %332 = bitcast double* %arrayidx1157 to <2 x double>*
  store <2 x double> %331, <2 x double>* %332, align 8, !tbaa !17
  %arrayidx1161 = getelementptr inbounds double* %1, i64 20
  %333 = load double* %arrayidx1161, align 8, !tbaa !17
  %add1162 = fadd double %305, %333
  store double %add1162, double* %arrayidx1161, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1141, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil36calc_self_energy_merge_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31889 = icmp sgt i32 %13, 0
  br i1 %cmp31889, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30964 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond696698962 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19700960 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv952 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next953, %for.inc ]
  %g.0890 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv952, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0890, 1
  %idxprom41 = sext i32 %g.0890 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond696698962, i64 %idxprom41
  %30 = trunc i64 %indvars.iv952 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0890, %for.body ]
  %indvars.iv.next953 = add nuw nsw i64 %indvars.iv952, 1
  %lftr.wideiv954 = trunc i64 %indvars.iv.next953 to i32
  %exitcond955 = icmp eq i32 %lftr.wideiv954, %13
  br i1 %exitcond955, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond696698962, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond696698962, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa969 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19700959968 = phi i32* [ %cond19700960, %for.end ], [ %cond19700960, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond696698961967 = phi i32* [ %cond696698962, %for.end ], [ %cond696698962, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30963966 = phi i32* [ %cond30964, %for.end ], [ %cond30964, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56883 = icmp sgt i32 %g.0.lcssa969, 0
  br i1 %cmp56883, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv948 = phi i64 [ %indvars.iv.next949, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0885 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0884 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond696698961967, i64 %indvars.iv948
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0885, 1
  %idxprom68 = sext i32 %fixg.0885 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19700959968, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0884, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0885, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next949 = add nuw nsw i64 %indvars.iv948, 1
  %lftr.wideiv950 = trunc i64 %indvars.iv.next949 to i32
  %exitcond951 = icmp eq i32 %lftr.wideiv950, %g.0.lcssa969
  br i1 %exitcond951, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond696698961967, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond696698961967 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19700959968, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19700959968 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30963966, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30963966 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19700959968, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19700959968, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2703 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147722 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125708710720 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114704706712718 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136714716 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171857 = icmp sgt i32 %sub162, 0
  br i1 %cmp171857, label %for.body172.lr.ph, label %for.end1128

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i693 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125708710720 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147722 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30963966 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114704706712718 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1126, %for.body172.lr.ph
  %exclChecksum.0873 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1126 ]
  %i.0864 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1127, %for.inc1126 ]
  %j_hgroup.0863 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1126 ]
  %g_lower.0862 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1126 ]
  %fixg_lower.0861 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1126 ]
  %pairlistindex.0860 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1126 ]
  %pairlistoffset.0859 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1126 ]
  %pairCount.0858 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1126 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %354, %for.inc1126 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %355, %for.inc1126 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %356, %for.inc1126 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %357, %for.inc1126 ]
  %idxprom173 = sext i32 %i.0864 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %63 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %63, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i724 = zext i32 %bf.clear176 to i64
  %64 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i724, i32 0
  %65 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i724, i32 1
  %66 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i724, i32 2
  %67 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %65 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %68 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %69 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %70 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %71 = and i32 %bf.load175, 62914560
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0864
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0858
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0858, %div165
  %cmp214 = icmp slt i32 %pairCount.0858, %div168
  %or.cond682 = and i1 %cmp212, %cmp214
  br i1 %or.cond682, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0864
  br label %for.inc1126

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0858, %if.then193 ], [ %sub211, %if.then199 ]
  %73 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %73, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %74 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0864
  %cmp237731 = icmp slt i32 %g_lower.0862, %g.0.lcssa969
  br i1 %cmp237731, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %75 = sext i32 %g_lower.0862 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %76, %g.0.lcssa969
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %75, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1732 = phi i32 [ %g_lower.0862, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond696698961967, i64 %indvars.iv
  %77 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %77, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1732, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0862, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1732, %land.rhs238 ]
  %cmp245733 = icmp slt i32 %fixg_lower.0861, %fixg.2703
  br i1 %cmp245733, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %78 = sext i32 %fixg_lower.0861 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %79 = trunc i64 %indvars.iv.next898 to i32
  %cmp245 = icmp slt i32 %79, %fixg.2703
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv897 = phi i64 [ %78, %land.rhs246.lr.ph ], [ %indvars.iv.next898, %while.cond244 ]
  %fixg_lower.1734 = phi i32 [ %fixg_lower.0861, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19700959968, i64 %indvars.iv897
  %80 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %80, %add236
  %indvars.iv.next898 = add nsw i64 %indvars.iv897, 1
  %inc252 = add nsw i32 %fixg_lower.1734, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0861, %land.end ], [ %fixg_lower.0861, %while.cond244.loopexit ], [ %fixg_lower.1734, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0862, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0863, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1736 = add nsw i32 %i.0864, 1
  %cmp257737 = icmp slt i32 %j.1736, %j_hgroup.1
  br i1 %cmp257737, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %81 = add i32 %j_hgroup.1, -1
  %82 = sub i32 %81, %i.0864
  %83 = add i32 %j_hgroup.1, -2
  %84 = sub i32 %83, %i.0864
  %85 = zext i32 %84 to i64
  %86 = add i64 %85, 1
  %end.idx = add i64 %85, 1
  %n.vec = and i64 %86, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1736
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %87 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1736, %87
  %broadcast.splatinsert1001 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1002 = shufflevector <4 x i32> %broadcast.splatinsert1001, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1003 = add <4 x i32> %broadcast.splat1002, <i32 0, i32 1, i32 2, i32 3>
  %induction1004 = add <4 x i32> %broadcast.splat1002, <i32 4, i32 5, i32 6, i32 7>
  %88 = getelementptr inbounds i32* %cond114704706712718, i64 %index
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %induction1003, <4 x i32>* %89, align 4
  %.sum1007 = or i64 %index, 4
  %90 = getelementptr i32* %cond114704706712718, i64 %.sum1007
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %induction1004, <4 x i32>* %91, align 4
  %index.next = add i64 %index, 8
  %92 = icmp eq i64 %index.next, %n.vec
  br i1 %92, label %middle.block, label %vector.body, !llvm.loop !93

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val999 = phi i32 [ %j.1736, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv899 = phi i64 [ %indvars.iv.next900, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1739 = phi i32 [ %j.1, %for.body258 ], [ %resume.val999, %middle.block ]
  %indvars.iv.next900 = add nuw nsw i64 %indvars.iv899, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114704706712718, i64 %indvars.iv899
  store i32 %j.1739, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1739, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next900 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %82
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !94

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %82 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114704706712718, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %74, i32* %cond19700959968, i32* %cond696698961967
  %cond276 = select i1 %74, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %74, i32 %fixg.2703, i32 %g.0.lcssa969
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %93 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %93 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %94 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %95 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %96 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_y.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_x.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %j2.0.ph = phi i32 [ %93, %if.then283 ], [ %99, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30963966, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %97 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv905 = phi i64 [ %97, %while.cond298.outer ], [ %indvars.iv.next906, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %98 = trunc i64 %indvars.iv905 to i32
  %cmp299 = icmp slt i32 %98, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next906 = add nsw i64 %indvars.iv905, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next906
  %99 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %68, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %99 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %100 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %69, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %101 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %70, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %102 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div679 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div679 to i32
  %cmp330745 = icmp sgt i32 %conv328, 0
  br i1 %cmp330745, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %103 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %104 = lshr i64 %103, 2
  %105 = trunc i64 %104 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv907 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next908, %cond.end351 ]
  %pli.0747 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30963966, i64 %indvars.iv907
  %106 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %106 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %107 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %107, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp680 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp680, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %106, i32* %pli.0747, align 4, !tbaa !11
  %add354 = add nsw i32 %106, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0747, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %106, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0747, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %106, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0747, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0747, i64 %cond352
  %indvars.iv.next908 = add nuw nsw i64 %indvars.iv907, 1
  %lftr.wideiv909 = trunc i64 %indvars.iv.next908 to i32
  %exitcond910 = icmp eq i32 %lftr.wideiv909, %105
  br i1 %exitcond910, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369676 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369676 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext677 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext677, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114704706712718, i64 %idxprom374
  %108 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114704706712718, i64 %idxprom376
  store i32 %108, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0859, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0858, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0860, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0861, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0862, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0863, %if.else ]
  %109 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %109, 0
  %bf.load390.pre = load i32* %63, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %110 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %111 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %112 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %112, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %113 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %113 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %bf.clear401 = and i32 %bf.load390.pre, 4194303
  %idxprom.i692725 = zext i32 %bf.clear401 to i64
  %114 = load i32** %atomVdwType.i693, align 8, !tbaa !64
  %arrayidx.i694 = getelementptr inbounds i32* %114, i64 %idxprom.i692725
  %115 = load i32* %arrayidx.i694, align 4, !tbaa !11
  %116 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %117 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv403 = shl i32 %115, 1
  %mul.i = and i32 %conv403, 131070
  %mul2.i = mul i32 %mul.i, %117
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp409773 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %110, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409773, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %118 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv920 = phi i64 [ %118, %for.body410.lr.ph ], [ %indvars.iv.next921, %for.inc466 ]
  %exclChecksum.1777 = phi i32 [ %exclChecksum.0873, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0776 = phi i32* [ %cond125708710720, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0775 = phi i32* [ %cond136714716, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114704706712718, i64 %indvars.iv920
  %119 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %119 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %120 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %68, %120
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %121 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %69, %121
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %122 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %70, %122
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %123 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %123, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond683 = or i1 %tobool444, %cmp445
  br i1 %or.cond683, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1777, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1777, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %65
  %cmp459 = icmp sgt i32 %bf.clear456, %66
  %or.cond684 = or i1 %cmp457, %cmp459
  br i1 %or.cond684, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0776, i64 1
  store i32 %119, i32* %pli405.0776, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0775, i64 1
  store i32 %119, i32* %plin.0775, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0775, %for.body410 ], [ %plin.0775, %land.lhs.true448 ], [ %plin.0775, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0776, %for.body410 ], [ %pli405.0776, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0776, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1777, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next921 = add nsw i64 %indvars.iv920, 1
  %lftr.wideiv922 = trunc i64 %indvars.iv.next921 to i32
  %exitcond923 = icmp eq i32 %lftr.wideiv922, %pairlistindex.2
  br i1 %exitcond923, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409773, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114704706712718, i64 %idxprom474
  %124 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %124 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %125 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %126 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %127 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %127, %if.then472 ], [ %133, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %126, %if.then472 ], [ %132, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %125, %if.then472 ], [ %131, %if.else537 ]
  %j2473.0.ph = phi i32 [ %124, %if.then472 ], [ %130, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136714716, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125708710720, %if.then472 ], [ %pli405.2.ph756, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0873, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer749

while.cond497.outer749:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph750 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph751 = phi double [ %133, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph752 = phi double [ %132, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph753 = phi double [ %131, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph754 = phi i32 [ %130, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph755 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph756 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph757 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer758

while.cond497.outer758:                           ; preds = %land.lhs.true528, %while.cond497.outer749
  %idxprom477.pn.ph759 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph750, %while.cond497.outer749 ]
  %p_j_z486.0.ph760 = phi double [ %133, %land.lhs.true528 ], [ %p_j_z486.0.ph751, %while.cond497.outer749 ]
  %p_j_y481.0.ph761 = phi double [ %132, %land.lhs.true528 ], [ %p_j_y481.0.ph752, %while.cond497.outer749 ]
  %p_j_x476.0.ph762 = phi double [ %131, %land.lhs.true528 ], [ %p_j_x476.0.ph753, %while.cond497.outer749 ]
  %j2473.0.ph763 = phi i32 [ %130, %land.lhs.true528 ], [ %j2473.0.ph754, %while.cond497.outer749 ]
  %k470.0.ph764 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph755, %while.cond497.outer749 ]
  %exclChecksum.4.ph765 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph757, %while.cond497.outer749 ]
  %128 = sext i32 %k470.0.ph764 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer758
  %indvars.iv916 = phi i64 [ %128, %while.cond497.outer758 ], [ %indvars.iv.next917, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph759, %while.cond497.outer758 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph760, %while.cond497.outer758 ], [ %133, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph761, %while.cond497.outer758 ], [ %132, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph762, %while.cond497.outer758 ], [ %131, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph763, %while.cond497.outer758 ], [ %130, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph764, %while.cond497.outer758 ], [ %inc500, %while.body499 ]
  %129 = trunc i64 %indvars.iv916 to i32
  %cmp498 = icmp slt i32 %129, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next917 = add nsw i64 %indvars.iv916, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114704706712718, i64 %indvars.iv.next917
  %130 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %68, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %130 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %131 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %69, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %132 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %70, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %133 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph765, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer758

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph765, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %65
  %cmp534 = icmp sgt i32 %atom2491.0, %66
  %or.cond685 = or i1 %cmp532, %cmp534
  br i1 %or.cond685, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph756, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph756, align 4, !tbaa !11
  br label %while.cond497.outer749

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136714716, %if.else469 ], [ %cond136714716, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125708710720, %if.else469 ], [ %cond125708710720, %for.cond408.preheader ], [ %pli405.2.ph756, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0873, %if.else469 ], [ %exclChecksum.0873, %for.cond408.preheader ], [ %exclChecksum.4.ph765, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552630 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552630 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext674 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext674, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125708710720, i64 %idxprom557
  %134 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125708710720, i64 %idxprom559
  store i32 %134, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564781 = icmp ult i32* %cond136714716, %plin.4
  br i1 %cmp564781, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8784 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0783 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147722, %for.cond563.preheader ]
  %pln.0782 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136714716, %for.cond563.preheader ]
  %135 = load i32* %pln.0782, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %135, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0783, i64 1
  store i32 %135, i32* %plix.0783, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8784, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0782, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8784, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147722, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0783, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136714716, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0782, %land.lhs.true565 ]
  %cmp573788 = icmp sgt i32 %conv553, 0
  br i1 %cmp573788, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv930 = phi i64 [ %indvars.iv.next931, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9791 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1790 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0789 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125708710720, i64 %indvars.iv930
  %136 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %136, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1790, i64 1
  store i32 %136, i32* %plix.1790, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9791, -1
  %indvars.iv.next931 = add nuw nsw i64 %indvars.iv930, 1
  %inc584 = add nsw i32 %k562.0789, 1
  %137 = trunc i64 %indvars.iv.next931 to i32
  %cmp573 = icmp slt i32 %137, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9791, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1790, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0789, %land.lhs.true574 ]
  %cmp587795 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587795, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %138 = sext i32 %k562.0.lcssa to i64
  %139 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %140 = lshr i64 %139, 2
  %141 = trunc i64 %140 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv932 = phi i64 [ %138, %for.body588.lr.ph ], [ %indvars.iv.next933, %for.inc606 ]
  %plin.5799 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2798 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0797 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125708710720, i64 %indvars.iv932
  %142 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %142 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %143 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %143, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598673 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598673, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %67, i64 %add.ptr.sum
  %144 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %144 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5799, i64 1
  store i32 %142, i32* %plin.5799, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2798, i64 1
  store i32 %142, i32* %plix.2798, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0797, i64 1
  store i32 %142, i32* %plim.0797, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0797, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0797, %sw.bb602 ], [ %plim.0797, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2798, %for.body588 ], [ %plix.2798, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2798, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5799, %for.body588 ], [ %plin.5799, %sw.bb604 ], [ %plin.5799, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next933 = add nsw i64 %indvars.iv932, 1
  %lftr.wideiv934 = trunc i64 %indvars.iv.next933 to i32
  %exitcond935 = icmp eq i32 %lftr.wideiv934, %141
  br i1 %exitcond935, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612 = ashr exact i64 %sub.ptr.sub611, 2
  %conv613631 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613631
  %add621 = add i64 %add614, %sub.ptr.div612
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626633 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626633 to i32
  %cmp629803 = icmp sgt i32 %conv627, 0
  br i1 %cmp629803, label %for.body630.lr.ph, label %for.end778

for.body630.lr.ph:                                ; preds = %for.end608
  %x756 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y765 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z772 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630.for.body630_crit_edge, %for.body630.lr.ph
  %145 = phi i32* [ %114, %for.body630.lr.ph ], [ %.pre, %for.body630.for.body630_crit_edge ]
  %indvars.iv936 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next937, %for.body630.for.body630_crit_edge ]
  %146 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %191, %for.body630.for.body630_crit_edge ]
  %147 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %198, %for.body630.for.body630_crit_edge ]
  %148 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %205, %for.body630.for.body630_crit_edge ]
  %149 = phi <2 x double> [ %62, %for.body630.lr.ph ], [ %216, %for.body630.for.body630_crit_edge ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv936
  %150 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %150 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %151 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %68, %151
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %152 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %69, %152
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %153 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %70, %153
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %154 = bitcast float %conv651 to i32
  %shr = ashr i32 %154, 17
  %add653 = add nsw i32 %shr, %mul
  %id654 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %155 = bitcast [4 x i8]* %id654 to i32*
  %bf.load655 = load i32* %155, align 4
  %bf.clear656 = and i32 %bf.load655, 4194303
  %idxprom.i688728 = zext i32 %bf.clear656 to i64
  %arrayidx.i690 = getelementptr inbounds i32* %145, i64 %idxprom.i688728
  %156 = load i32* %arrayidx.i690, align 4, !tbaa !11
  %conv.i691 = zext i32 %156 to i64
  %conv658 = shl nuw nsw i64 %conv.i691, 1
  %mul659 = and i64 %conv658, 131070
  %mul662 = shl nsw i32 %add653, 4
  %idx.ext663 = sext i32 %mul662 to i64
  %add.ptr664 = getelementptr inbounds double* %7, i64 %idx.ext663
  %157 = load double* %add.ptr664, align 8, !tbaa !17
  %add.ptr664.sum661 = or i64 %idx.ext663, 4
  %add.ptr669 = getelementptr inbounds double* %7, i64 %add.ptr664.sum661
  %158 = load double* %add.ptr669, align 8, !tbaa !17
  %add.ptr664.sum662 = or i64 %idx.ext663, 8
  %add.ptr674 = getelementptr inbounds double* %7, i64 %add.ptr664.sum662
  %159 = load double* %add.ptr674, align 8, !tbaa !17
  %and = and i32 %154, -131072
  %charge677 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %160 = load float* %charge677, align 4, !tbaa !63
  %conv678 = fpext float %160 to double
  %mul679 = fmul double %mul398, %conv678
  %161 = bitcast i32 %and to float
  %conv681 = fpext float %161 to double
  %sub682 = fsub double %add650, %conv681
  %bf.lshr685 = lshr i32 %bf.load655, 28
  %idxprom686 = zext i32 %bf.lshr685 to i64
  %add.ptr394.sum663 = add i64 %idxprom686, %idx.ext393
  %arrayidx687 = getelementptr inbounds double* %111, i64 %add.ptr394.sum663
  %162 = load double* %arrayidx687, align 8, !tbaa !17
  %add.ptr.i.sum729 = add i64 %mul659, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum729, i32 0
  %163 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %8, %163
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum729, i32 1
  %164 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %8, %164
  %mul694 = fmul double %157, %mul690
  %mul695 = fmul double %158, %mul693
  %sub696 = fsub double %mul694, %mul695
  %add.ptr664.sum664 = or i64 %idx.ext663, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr664.sum664
  %165 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %165
  %add.ptr669.sum665 = or i64 %idx.ext663, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr669.sum665
  %166 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %166
  %sub701 = fsub double %mul698, %mul700
  %add.ptr664.sum666 = or i64 %idx.ext663, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr664.sum666
  %167 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %167
  %add.ptr669.sum667 = or i64 %idx.ext663, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr669.sum667
  %168 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %168
  %sub706 = fsub double %mul703, %mul705
  %add.ptr664.sum668 = or i64 %idx.ext663, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr664.sum668
  %169 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %169
  %add.ptr669.sum669 = or i64 %idx.ext663, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr669.sum669
  %170 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %170
  %sub711 = fsub double %mul708, %mul710
  %mul712 = fmul double %sub682, %sub701
  %add713 = fadd double %mul712, %sub706
  %add.ptr674.sum670 = or i64 %idx.ext663, 9
  %arrayidx720 = getelementptr inbounds double* %7, i64 %add.ptr674.sum670
  %171 = load double* %arrayidx720, align 8, !tbaa !17
  %add.ptr674.sum671 = or i64 %idx.ext663, 10
  %arrayidx721 = getelementptr inbounds double* %7, i64 %add.ptr674.sum671
  %172 = load double* %arrayidx721, align 8, !tbaa !17
  %add.ptr674.sum672 = or i64 %idx.ext663, 11
  %arrayidx722 = getelementptr inbounds double* %7, i64 %add.ptr674.sum672
  %173 = load double* %arrayidx722, align 8, !tbaa !17
  %mul723 = fmul double %mul679, %173
  %mul724 = fmul double %mul679, %172
  %174 = insertelement <2 x double> undef, double %mul679, i32 0
  %175 = insertelement <2 x double> %174, double %add713, i32 1
  %176 = insertelement <2 x double> undef, double %171, i32 0
  %177 = insertelement <2 x double> %176, double %sub682, i32 1
  %178 = fmul <2 x double> %175, %177
  %mul726 = fmul double %159, %mul679
  %mul727 = fmul double %sub682, %mul723
  %add728 = fadd double %mul724, %mul727
  %mul729 = fmul double %sub682, %add728
  %179 = insertelement <2 x double> undef, double %mul729, i32 0
  %180 = insertelement <2 x double> %179, double %sub711, i32 1
  %181 = fadd <2 x double> %178, %180
  %182 = insertelement <2 x double> undef, double %sub682, i32 0
  %183 = insertelement <2 x double> %182, double %sub682, i32 1
  %184 = fmul <2 x double> %181, %183
  %185 = insertelement <2 x double> undef, double %mul726, i32 0
  %186 = insertelement <2 x double> %185, double %sub696, i32 1
  %187 = fadd <2 x double> %186, %184
  %188 = insertelement <2 x double> undef, double %162, i32 0
  %189 = insertelement <2 x double> %188, double %162, i32 1
  %190 = fmul <2 x double> %187, %189
  %191 = fadd <2 x double> %146, %190
  %add735 = fadd double %sub701, %mul723
  %add736 = fadd double %sub706, %mul724
  %192 = extractelement <2 x double> %178, i32 0
  %add737 = fadd double %192, %sub711
  %mul739 = fmul double %sub682, 3.000000e+00
  %mul740 = fmul double %mul739, %add735
  %mul741 = fmul double %add736, 2.000000e+00
  %add742 = fadd double %mul741, %mul740
  %mul743 = fmul double %sub682, %add742
  %add744 = fadd double %add737, %mul743
  %mul745 = fmul double %add744, -2.000000e+00
  %mul746 = fmul double %162, %mul745
  %mul749 = fmul double %sub638, %mul746
  %193 = insertelement <2 x double> undef, double %sub638, i32 0
  %194 = insertelement <2 x double> %193, double %sub643, i32 1
  %195 = insertelement <2 x double> undef, double %mul749, i32 0
  %196 = insertelement <2 x double> %195, double %mul749, i32 1
  %197 = fmul <2 x double> %194, %196
  %198 = fadd <2 x double> %147, %197
  %199 = load double* %x756, align 8, !tbaa !72
  %add757 = fadd double %199, %mul749
  store double %add757, double* %x756, align 8, !tbaa !72
  %x758 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul760 = fmul double %sub643, %mul746
  %200 = insertelement <2 x double> undef, double %sub643, i32 0
  %201 = insertelement <2 x double> %200, double %sub648, i32 1
  %202 = insertelement <2 x double> undef, double %mul760, i32 0
  %203 = insertelement <2 x double> %202, double %mul760, i32 1
  %204 = fmul <2 x double> %201, %203
  %205 = fadd <2 x double> %148, %204
  %206 = load double* %y765, align 8, !tbaa !73
  %add766 = fadd double %206, %mul760
  store double %add766, double* %y765, align 8, !tbaa !73
  %207 = bitcast double* %x758 to <2 x double>*
  %208 = load <2 x double>* %207, align 8, !tbaa !17
  %209 = insertelement <2 x double> %195, double %mul760, i32 1
  %210 = fsub <2 x double> %208, %209
  %211 = bitcast double* %x758 to <2 x double>*
  store <2 x double> %210, <2 x double>* %211, align 8, !tbaa !17
  %mul769 = fmul double %sub648, %mul746
  %212 = insertelement <2 x double> undef, double %sub648, i32 0
  %213 = insertelement <2 x double> %212, double %sub648, i32 1
  %214 = insertelement <2 x double> %195, double %mul769, i32 1
  %215 = fmul <2 x double> %213, %214
  %216 = fadd <2 x double> %149, %215
  %217 = load double* %z772, align 8, !tbaa !74
  %add773 = fadd double %217, %mul769
  store double %add773, double* %z772, align 8, !tbaa !74
  %z774 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %218 = load double* %z774, align 8, !tbaa !74
  %sub775 = fsub double %218, %mul769
  store double %sub775, double* %z774, align 8, !tbaa !74
  %indvars.iv.next937 = add nuw nsw i64 %indvars.iv936, 1
  %lftr.wideiv938 = trunc i64 %indvars.iv.next937 to i32
  %exitcond939 = icmp eq i32 %lftr.wideiv938, %conv627
  br i1 %exitcond939, label %for.end778, label %for.body630.for.body630_crit_edge

for.body630.for.body630_crit_edge:                ; preds = %for.body630
  %.pre = load i32** %atomVdwType.i693, align 8, !tbaa !64
  br label %for.body630

for.end778:                                       ; preds = %for.body630, %for.end608
  %219 = phi <2 x double> [ %59, %for.end608 ], [ %191, %for.body630 ]
  %220 = phi <2 x double> [ %60, %for.end608 ], [ %198, %for.body630 ]
  %221 = phi <2 x double> [ %61, %for.end608 ], [ %205, %for.body630 ]
  %222 = phi <2 x double> [ %62, %for.end608 ], [ %216, %for.body630 ]
  %conv783 = trunc i64 %sub.ptr.div619 to i32
  %cmp785821 = icmp sgt i32 %conv783, 0
  br i1 %cmp785821, label %for.body786.lr.ph, label %for.end985

for.body786.lr.ph:                                ; preds = %for.end778
  %x961 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y971 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z979 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body786

for.body786:                                      ; preds = %for.body786, %for.body786.lr.ph
  %indvars.iv940 = phi i64 [ 0, %for.body786.lr.ph ], [ %indvars.iv.next941, %for.body786 ]
  %223 = phi <2 x double> [ %219, %for.body786.lr.ph ], [ %273, %for.body786 ]
  %224 = phi <2 x double> [ %220, %for.body786.lr.ph ], [ %280, %for.body786 ]
  %225 = phi <2 x double> [ %221, %for.body786.lr.ph ], [ %287, %for.body786 ]
  %226 = phi <2 x double> [ %222, %for.body786.lr.ph ], [ %298, %for.body786 ]
  %arrayidx789 = getelementptr inbounds i32* %cond158, i64 %indvars.iv940
  %227 = load i32* %arrayidx789, align 4, !tbaa !11
  %idx.ext791 = sext i32 %227 to i64
  %x795 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 0
  %228 = load double* %x795, align 8, !tbaa !59
  %sub796 = fsub double %68, %228
  %mul798 = fmul double %sub796, %sub796
  %y801 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 1
  %229 = load double* %y801, align 8, !tbaa !61
  %sub802 = fsub double %69, %229
  %mul803 = fmul double %sub802, %sub802
  %add804 = fadd double %mul798, %mul803
  %z807 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 0, i32 2
  %230 = load double* %z807, align 8, !tbaa !62
  %sub808 = fsub double %70, %230
  %mul809 = fmul double %sub808, %sub808
  %add810 = fadd double %add804, %mul809
  %conv812 = fptrunc double %add810 to float
  %231 = bitcast float %conv812 to i32
  %shr816 = ashr i32 %231, 17
  %add817 = add nsw i32 %shr816, %mul
  %id819 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 2
  %232 = bitcast [4 x i8]* %id819 to i32*
  %bf.load820 = load i32* %232, align 4
  %bf.clear821 = and i32 %bf.load820, 4194303
  %idxprom.i686726 = zext i32 %bf.clear821 to i64
  %233 = load i32** %atomVdwType.i693, align 8, !tbaa !64
  %arrayidx.i687 = getelementptr inbounds i32* %233, i64 %idxprom.i686726
  %234 = load i32* %arrayidx.i687, align 4, !tbaa !11
  %conv.i = zext i32 %234 to i64
  %conv823 = shl nuw nsw i64 %conv.i, 1
  %mul824 = and i64 %conv823, 131070
  %add.ptr826.sum643 = or i64 %mul824, 1
  %mul829 = shl nsw i32 %add817, 4
  %idx.ext830 = sext i32 %mul829 to i64
  %add.ptr831 = getelementptr inbounds double* %7, i64 %idx.ext830
  %235 = load double* %add.ptr831, align 8, !tbaa !17
  %add.ptr831.sum644 = or i64 %idx.ext830, 4
  %add.ptr838 = getelementptr inbounds double* %7, i64 %add.ptr831.sum644
  %236 = load double* %add.ptr838, align 8, !tbaa !17
  %add.ptr831.sum645 = or i64 %idx.ext830, 8
  %add.ptr845 = getelementptr inbounds double* %7, i64 %add.ptr831.sum645
  %237 = load double* %add.ptr845, align 8, !tbaa !17
  %and849 = and i32 %231, -131072
  %charge851 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext791, i32 1
  %238 = load float* %charge851, align 4, !tbaa !63
  %conv852 = fpext float %238 to double
  %mul853 = fmul double %mul398, %conv852
  %239 = bitcast i32 %and849 to float
  %conv856 = fpext float %239 to double
  %sub857 = fsub double %add810, %conv856
  %bf.lshr861 = lshr i32 %bf.load820, 28
  %idxprom862 = zext i32 %bf.lshr861 to i64
  %add.ptr394.sum646 = add i64 %idxprom862, %idx.ext393
  %arrayidx863 = getelementptr inbounds double* %111, i64 %add.ptr394.sum646
  %240 = load double* %arrayidx863, align 8, !tbaa !17
  %add.ptr.i.sum = add i64 %add.ptr826.sum643, %idx.ext.i
  %A865 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 0
  %241 = load double* %A865, align 8, !tbaa !69
  %mul866 = fmul double %8, %241
  %B868 = getelementptr inbounds %"struct.LJTable::TableEntry"* %116, i64 %add.ptr.i.sum, i32 1
  %242 = load double* %B868, align 8, !tbaa !71
  %mul869 = fmul double %8, %242
  %mul871 = fmul double %235, %mul866
  %mul872 = fmul double %236, %mul869
  %sub873 = fsub double %mul871, %mul872
  %add.ptr831.sum647 = or i64 %idx.ext830, 3
  %arrayidx875 = getelementptr inbounds double* %7, i64 %add.ptr831.sum647
  %243 = load double* %arrayidx875, align 8, !tbaa !17
  %mul876 = fmul double %mul866, %243
  %add.ptr838.sum648 = or i64 %idx.ext830, 7
  %arrayidx877 = getelementptr inbounds double* %7, i64 %add.ptr838.sum648
  %244 = load double* %arrayidx877, align 8, !tbaa !17
  %mul878 = fmul double %mul869, %244
  %sub879 = fsub double %mul876, %mul878
  %add.ptr831.sum649 = or i64 %idx.ext830, 2
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr831.sum649
  %245 = load double* %arrayidx881, align 8, !tbaa !17
  %mul882 = fmul double %mul866, %245
  %add.ptr838.sum650 = or i64 %idx.ext830, 6
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr838.sum650
  %246 = load double* %arrayidx883, align 8, !tbaa !17
  %mul884 = fmul double %mul869, %246
  %sub885 = fsub double %mul882, %mul884
  %add.ptr831.sum651 = or i64 %idx.ext830, 1
  %arrayidx887 = getelementptr inbounds double* %7, i64 %add.ptr831.sum651
  %247 = load double* %arrayidx887, align 8, !tbaa !17
  %mul888 = fmul double %mul866, %247
  %add.ptr838.sum652 = or i64 %idx.ext830, 5
  %arrayidx889 = getelementptr inbounds double* %7, i64 %add.ptr838.sum652
  %248 = load double* %arrayidx889, align 8, !tbaa !17
  %mul890 = fmul double %mul869, %248
  %sub891 = fsub double %mul888, %mul890
  %mul893 = fmul double %sub857, %sub879
  %add894 = fadd double %mul893, %sub885
  %add.ptr845.sum653 = or i64 %idx.ext830, 9
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr845.sum653
  %249 = load double* %arrayidx902, align 8, !tbaa !17
  %add.ptr845.sum654 = or i64 %idx.ext830, 10
  %arrayidx904 = getelementptr inbounds double* %7, i64 %add.ptr845.sum654
  %250 = load double* %arrayidx904, align 8, !tbaa !17
  %add.ptr845.sum655 = or i64 %idx.ext830, 11
  %arrayidx906 = getelementptr inbounds double* %7, i64 %add.ptr845.sum655
  %251 = load double* %arrayidx906, align 8, !tbaa !17
  %add.ptr907.sum656 = or i64 %idx.ext830, 12
  %add.ptr910 = getelementptr inbounds double* %7, i64 %add.ptr907.sum656
  %252 = load double* %add.ptr910, align 8, !tbaa !17
  %mul912 = fmul double %sub, %252
  %sub913 = fsub double %237, %mul912
  %add.ptr910.sum657 = or i64 %idx.ext830, 13
  %arrayidx914 = getelementptr inbounds double* %7, i64 %add.ptr910.sum657
  %253 = load double* %arrayidx914, align 8, !tbaa !17
  %mul915 = fmul double %sub, %253
  %sub916 = fsub double %249, %mul915
  %add.ptr910.sum658 = or i64 %idx.ext830, 14
  %arrayidx917 = getelementptr inbounds double* %7, i64 %add.ptr910.sum658
  %254 = load double* %arrayidx917, align 8, !tbaa !17
  %mul918 = fmul double %sub, %254
  %sub919 = fsub double %250, %mul918
  %add.ptr910.sum659 = or i64 %idx.ext830, 15
  %arrayidx920 = getelementptr inbounds double* %7, i64 %add.ptr910.sum659
  %255 = load double* %arrayidx920, align 8, !tbaa !17
  %mul921 = fmul double %sub, %255
  %sub922 = fsub double %251, %mul921
  %mul923 = fmul double %mul853, %sub922
  %mul924 = fmul double %mul853, %sub919
  %256 = insertelement <2 x double> undef, double %sub916, i32 0
  %257 = insertelement <2 x double> %256, double %add894, i32 1
  %258 = insertelement <2 x double> undef, double %mul853, i32 0
  %259 = insertelement <2 x double> %258, double %sub857, i32 1
  %260 = fmul <2 x double> %257, %259
  %mul926 = fmul double %mul853, %sub913
  %mul928 = fmul double %sub857, %mul923
  %add929 = fadd double %mul924, %mul928
  %mul930 = fmul double %sub857, %add929
  %261 = insertelement <2 x double> undef, double %mul930, i32 0
  %262 = insertelement <2 x double> %261, double %sub891, i32 1
  %263 = fadd <2 x double> %260, %262
  %264 = insertelement <2 x double> undef, double %sub857, i32 0
  %265 = insertelement <2 x double> %264, double %sub857, i32 1
  %266 = fmul <2 x double> %263, %265
  %267 = insertelement <2 x double> undef, double %mul926, i32 0
  %268 = insertelement <2 x double> %267, double %sub873, i32 1
  %269 = fadd <2 x double> %268, %266
  %270 = insertelement <2 x double> undef, double %240, i32 0
  %271 = insertelement <2 x double> %270, double %240, i32 1
  %272 = fmul <2 x double> %269, %271
  %273 = fadd <2 x double> %223, %272
  %add936 = fadd double %sub879, %mul923
  %add937 = fadd double %sub885, %mul924
  %274 = extractelement <2 x double> %260, i32 0
  %add938 = fadd double %sub891, %274
  %mul941 = fmul double %sub857, 3.000000e+00
  %mul942 = fmul double %mul941, %add936
  %mul943 = fmul double %add937, 2.000000e+00
  %add944 = fadd double %mul943, %mul942
  %mul945 = fmul double %sub857, %add944
  %add946 = fadd double %add938, %mul945
  %mul948 = fmul double %add946, -2.000000e+00
  %mul949 = fmul double %240, %mul948
  %mul954 = fmul double %sub796, %mul949
  %275 = insertelement <2 x double> undef, double %sub796, i32 0
  %276 = insertelement <2 x double> %275, double %sub802, i32 1
  %277 = insertelement <2 x double> undef, double %mul954, i32 0
  %278 = insertelement <2 x double> %277, double %mul954, i32 1
  %279 = fmul <2 x double> %276, %278
  %280 = fadd <2 x double> %224, %279
  %281 = load double* %x961, align 8, !tbaa !72
  %add962 = fadd double %281, %mul954
  store double %add962, double* %x961, align 8, !tbaa !72
  %x963 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext791, i32 0
  %mul966 = fmul double %sub802, %mul949
  %282 = insertelement <2 x double> undef, double %sub802, i32 0
  %283 = insertelement <2 x double> %282, double %sub808, i32 1
  %284 = insertelement <2 x double> undef, double %mul966, i32 0
  %285 = insertelement <2 x double> %284, double %mul966, i32 1
  %286 = fmul <2 x double> %283, %285
  %287 = fadd <2 x double> %225, %286
  %288 = load double* %y971, align 8, !tbaa !73
  %add972 = fadd double %288, %mul966
  store double %add972, double* %y971, align 8, !tbaa !73
  %289 = bitcast double* %x963 to <2 x double>*
  %290 = load <2 x double>* %289, align 8, !tbaa !17
  %291 = insertelement <2 x double> %277, double %mul966, i32 1
  %292 = fsub <2 x double> %290, %291
  %293 = bitcast double* %x963 to <2 x double>*
  store <2 x double> %292, <2 x double>* %293, align 8, !tbaa !17
  %mul976 = fmul double %sub808, %mul949
  %294 = insertelement <2 x double> undef, double %sub808, i32 0
  %295 = insertelement <2 x double> %294, double %sub808, i32 1
  %296 = insertelement <2 x double> %277, double %mul976, i32 1
  %297 = fmul <2 x double> %295, %296
  %298 = fadd <2 x double> %226, %297
  %299 = load double* %z979, align 8, !tbaa !74
  %add980 = fadd double %299, %mul976
  store double %add980, double* %z979, align 8, !tbaa !74
  %z981 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext791, i32 2
  %300 = load double* %z981, align 8, !tbaa !74
  %sub982 = fsub double %300, %mul976
  store double %sub982, double* %z981, align 8, !tbaa !74
  %indvars.iv.next941 = add nuw nsw i64 %indvars.iv940, 1
  %lftr.wideiv942 = trunc i64 %indvars.iv.next941 to i32
  %exitcond943 = icmp eq i32 %lftr.wideiv942, %conv783
  br i1 %exitcond943, label %for.end985, label %for.body786

for.end985:                                       ; preds = %for.body786, %for.end778
  %301 = phi <2 x double> [ %219, %for.end778 ], [ %273, %for.body786 ]
  %302 = phi <2 x double> [ %220, %for.end778 ], [ %280, %for.body786 ]
  %303 = phi <2 x double> [ %221, %for.end778 ], [ %287, %for.body786 ]
  %304 = phi <2 x double> [ %222, %for.end778 ], [ %298, %for.body786 ]
  %conv990 = trunc i64 %sub.ptr.div612 to i32
  %cmp992839 = icmp sgt i32 %conv990, 0
  br i1 %cmp992839, label %for.body993.lr.ph, label %for.inc1126

for.body993.lr.ph:                                ; preds = %for.end985
  %305 = extractelement <2 x double> %301, i32 0
  %x1101 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1111 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1119 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body993

for.body993:                                      ; preds = %for.body993, %for.body993.lr.ph
  %indvars.iv944 = phi i64 [ 0, %for.body993.lr.ph ], [ %indvars.iv.next945, %for.body993 ]
  %fullElectEnergy.3847 = phi double [ %305, %for.body993.lr.ph ], [ %add1079, %for.body993 ]
  %306 = phi <2 x double> [ %302, %for.body993.lr.ph ], [ %331, %for.body993 ]
  %307 = phi <2 x double> [ %303, %for.body993.lr.ph ], [ %338, %for.body993 ]
  %308 = phi <2 x double> [ %304, %for.body993.lr.ph ], [ %349, %for.body993 ]
  %arrayidx996 = getelementptr inbounds i32* %cond147722, i64 %indvars.iv944
  %309 = load i32* %arrayidx996, align 4, !tbaa !11
  %idx.ext998 = sext i32 %309 to i64
  %x1002 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext998, i32 0, i32 0
  %310 = load double* %x1002, align 8, !tbaa !59
  %sub1003 = fsub double %68, %310
  %mul1005 = fmul double %sub1003, %sub1003
  %y1008 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext998, i32 0, i32 1
  %311 = load double* %y1008, align 8, !tbaa !61
  %sub1009 = fsub double %69, %311
  %mul1010 = fmul double %sub1009, %sub1009
  %add1011 = fadd double %mul1005, %mul1010
  %z1014 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext998, i32 0, i32 2
  %312 = load double* %z1014, align 8, !tbaa !62
  %sub1015 = fsub double %70, %312
  %mul1016 = fmul double %sub1015, %sub1015
  %add1017 = fadd double %add1011, %mul1016
  %conv1019 = fptrunc double %add1017 to float
  %313 = bitcast float %conv1019 to i32
  %shr1023 = ashr i32 %313, 17
  %add1024 = add nsw i32 %shr1023, %mul
  %mul1026 = shl nsw i32 %add1024, 4
  %idx.ext1027 = sext i32 %mul1026 to i64
  %add.ptr1028.sum634 = or i64 %idx.ext1027, 8
  %add.ptr1029 = getelementptr inbounds double* %7, i64 %add.ptr1028.sum634
  %314 = load double* %add.ptr1029, align 8, !tbaa !17
  %and1033 = and i32 %313, -131072
  %charge1035 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext998, i32 1
  %315 = load float* %charge1035, align 4, !tbaa !63
  %conv1036 = fpext float %315 to double
  %mul1037 = fmul double %mul398, %conv1036
  %316 = bitcast i32 %and1033 to float
  %conv1040 = fpext float %316 to double
  %sub1041 = fsub double %add1017, %conv1040
  %partition1043 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext998, i32 2
  %317 = bitcast [4 x i8]* %partition1043 to i32*
  %bf.load1044 = load i32* %317, align 4
  %bf.lshr1045 = lshr i32 %bf.load1044, 28
  %idxprom1046 = zext i32 %bf.lshr1045 to i64
  %add.ptr394.sum = add i64 %idxprom1046, %idx.ext393
  %arrayidx1047 = getelementptr inbounds double* %111, i64 %add.ptr394.sum
  %318 = load double* %arrayidx1047, align 8, !tbaa !17
  %add.ptr1029.sum635 = or i64 %idx.ext1027, 9
  %arrayidx1049 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum635
  %319 = load double* %arrayidx1049, align 8, !tbaa !17
  %add.ptr1029.sum636 = or i64 %idx.ext1027, 10
  %arrayidx1051 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum636
  %320 = load double* %arrayidx1051, align 8, !tbaa !17
  %add.ptr1029.sum637 = or i64 %idx.ext1027, 11
  %arrayidx1053 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum637
  %321 = load double* %arrayidx1053, align 8, !tbaa !17
  %add.ptr1055.sum638 = or i64 %idx.ext1027, 12
  %add.ptr1058 = getelementptr inbounds double* %7, i64 %add.ptr1055.sum638
  %322 = load double* %add.ptr1058, align 8, !tbaa !17
  %sub1060 = fsub double %314, %322
  %add.ptr1058.sum639 = or i64 %idx.ext1027, 13
  %arrayidx1061 = getelementptr inbounds double* %7, i64 %add.ptr1058.sum639
  %323 = load double* %arrayidx1061, align 8, !tbaa !17
  %sub1062 = fsub double %319, %323
  %add.ptr1058.sum640 = or i64 %idx.ext1027, 14
  %arrayidx1063 = getelementptr inbounds double* %7, i64 %add.ptr1058.sum640
  %324 = load double* %arrayidx1063, align 8, !tbaa !17
  %sub1064 = fsub double %320, %324
  %add.ptr1058.sum641 = or i64 %idx.ext1027, 15
  %arrayidx1065 = getelementptr inbounds double* %7, i64 %add.ptr1058.sum641
  %325 = load double* %arrayidx1065, align 8, !tbaa !17
  %sub1066 = fsub double %321, %325
  %mul1067 = fmul double %mul1037, %sub1066
  %mul1068 = fmul double %mul1037, %sub1064
  %mul1069 = fmul double %mul1037, %sub1062
  %mul1070 = fmul double %mul1037, %sub1060
  %mul1072 = fmul double %sub1041, %mul1067
  %add1073 = fadd double %mul1068, %mul1072
  %mul1074 = fmul double %sub1041, %add1073
  %add1075 = fadd double %mul1069, %mul1074
  %mul1076 = fmul double %sub1041, %add1075
  %add1077 = fadd double %mul1070, %mul1076
  %mul1078 = fmul double %318, %add1077
  %add1079 = fadd double %fullElectEnergy.3847, %mul1078
  %mul1081 = fmul double %sub1041, 3.000000e+00
  %mul1082 = fmul double %mul1081, %mul1067
  %mul1083 = fmul double %mul1068, 2.000000e+00
  %add1084 = fadd double %mul1083, %mul1082
  %mul1085 = fmul double %sub1041, %add1084
  %add1086 = fadd double %mul1069, %mul1085
  %mul1088 = fmul double %add1086, -2.000000e+00
  %mul1089 = fmul double %318, %mul1088
  %mul1094 = fmul double %sub1003, %mul1089
  %326 = insertelement <2 x double> undef, double %sub1003, i32 0
  %327 = insertelement <2 x double> %326, double %sub1009, i32 1
  %328 = insertelement <2 x double> undef, double %mul1094, i32 0
  %329 = insertelement <2 x double> %328, double %mul1094, i32 1
  %330 = fmul <2 x double> %327, %329
  %331 = fadd <2 x double> %306, %330
  %332 = load double* %x1101, align 8, !tbaa !72
  %add1102 = fadd double %332, %mul1094
  store double %add1102, double* %x1101, align 8, !tbaa !72
  %x1103 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext998, i32 0
  %mul1106 = fmul double %sub1009, %mul1089
  %333 = insertelement <2 x double> undef, double %sub1009, i32 0
  %334 = insertelement <2 x double> %333, double %sub1015, i32 1
  %335 = insertelement <2 x double> undef, double %mul1106, i32 0
  %336 = insertelement <2 x double> %335, double %mul1106, i32 1
  %337 = fmul <2 x double> %334, %336
  %338 = fadd <2 x double> %307, %337
  %339 = load double* %y1111, align 8, !tbaa !73
  %add1112 = fadd double %339, %mul1106
  store double %add1112, double* %y1111, align 8, !tbaa !73
  %340 = bitcast double* %x1103 to <2 x double>*
  %341 = load <2 x double>* %340, align 8, !tbaa !17
  %342 = insertelement <2 x double> %328, double %mul1106, i32 1
  %343 = fsub <2 x double> %341, %342
  %344 = bitcast double* %x1103 to <2 x double>*
  store <2 x double> %343, <2 x double>* %344, align 8, !tbaa !17
  %mul1116 = fmul double %sub1015, %mul1089
  %345 = insertelement <2 x double> undef, double %sub1015, i32 0
  %346 = insertelement <2 x double> %345, double %sub1015, i32 1
  %347 = insertelement <2 x double> %328, double %mul1116, i32 1
  %348 = fmul <2 x double> %346, %347
  %349 = fadd <2 x double> %308, %348
  %350 = load double* %z1119, align 8, !tbaa !74
  %add1120 = fadd double %350, %mul1116
  store double %add1120, double* %z1119, align 8, !tbaa !74
  %z1121 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext998, i32 2
  %351 = load double* %z1121, align 8, !tbaa !74
  %sub1122 = fsub double %351, %mul1116
  store double %sub1122, double* %z1121, align 8, !tbaa !74
  %indvars.iv.next945 = add nuw nsw i64 %indvars.iv944, 1
  %lftr.wideiv946 = trunc i64 %indvars.iv.next945 to i32
  %exitcond947 = icmp eq i32 %lftr.wideiv946, %conv990
  br i1 %exitcond947, label %for.inc1126.loopexit, label %for.body993

for.inc1126.loopexit:                             ; preds = %for.body993
  %352 = insertelement <2 x double> undef, double %add1079, i32 0
  %353 = shufflevector <2 x double> %352, <2 x double> %301, <2 x i32> <i32 0, i32 3>
  br label %for.inc1126

for.inc1126:                                      ; preds = %for.inc1126.loopexit, %for.end985, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end985 ], [ %pairCount.2, %for.inc1126.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0859, %if.then215 ], [ %pairlistoffset.1, %for.end985 ], [ %pairlistoffset.1, %for.inc1126.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0860, %if.then215 ], [ %pairlistindex.2, %for.end985 ], [ %pairlistindex.2, %for.inc1126.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0861, %if.then215 ], [ %fixg_lower.3, %for.end985 ], [ %fixg_lower.3, %for.inc1126.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.0862, %if.then215 ], [ %g_lower.3, %for.end985 ], [ %g_lower.3, %for.inc1126.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0863, %if.then215 ], [ %j_hgroup.2, %for.end985 ], [ %j_hgroup.2, %for.inc1126.loopexit ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0864, %for.end985 ], [ %i.0864, %for.inc1126.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0873, %if.then215 ], [ %conv622, %for.end985 ], [ %conv622, %for.inc1126.loopexit ]
  %354 = phi <2 x double> [ %59, %if.then215 ], [ %301, %for.end985 ], [ %353, %for.inc1126.loopexit ]
  %355 = phi <2 x double> [ %60, %if.then215 ], [ %302, %for.end985 ], [ %331, %for.inc1126.loopexit ]
  %356 = phi <2 x double> [ %61, %if.then215 ], [ %303, %for.end985 ], [ %338, %for.inc1126.loopexit ]
  %357 = phi <2 x double> [ %62, %if.then215 ], [ %304, %for.end985 ], [ %349, %for.inc1126.loopexit ]
  %inc1127 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1127
  br i1 %cmp171, label %for.body172, label %for.end1128

for.end1128:                                      ; preds = %for.inc1126, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1126 ]
  %358 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %354, %for.inc1126 ]
  %359 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %355, %for.inc1126 ]
  %360 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %356, %for.inc1126 ]
  %361 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %357, %for.inc1126 ]
  %362 = extractelement <2 x double> %361, i32 1
  %arraydecay1129 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1130 = icmp eq i32* %cond696698961967, %arraydecay1129
  br i1 %cmp1130, label %if.end1135, label %delete.notnull1133

delete.notnull1133:                               ; preds = %for.end1128
  %363 = bitcast i32* %cond696698961967 to i8*
  call void @_ZdaPv(i8* %363) #7
  br label %if.end1135

if.end1135:                                       ; preds = %delete.notnull1133, %for.end1128
  %arraydecay1136 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1137 = icmp eq i32* %cond19700959968, %arraydecay1136
  br i1 %cmp1137, label %if.end1142, label %delete.notnull1140

delete.notnull1140:                               ; preds = %if.end1135
  %364 = bitcast i32* %cond19700959968 to i8*
  call void @_ZdaPv(i8* %364) #7
  br label %if.end1142

if.end1142:                                       ; preds = %delete.notnull1140, %if.end1135
  %arraydecay1143 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1144 = icmp eq i32* %cond30963966, %arraydecay1143
  br i1 %cmp1144, label %if.end1149, label %delete.notnull1147

delete.notnull1147:                               ; preds = %if.end1142
  %365 = bitcast i32* %cond30963966 to i8*
  call void @_ZdaPv(i8* %365) #7
  br label %if.end1149

if.end1149:                                       ; preds = %delete.notnull1147, %if.end1142
  %arraydecay1150 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1151 = icmp eq i32* %cond114704706712718, %arraydecay1150
  br i1 %cmp1151, label %if.end1156, label %delete.notnull1154

delete.notnull1154:                               ; preds = %if.end1149
  %366 = bitcast i32* %cond114704706712718 to i8*
  call void @_ZdaPv(i8* %366) #7
  br label %if.end1156

if.end1156:                                       ; preds = %delete.notnull1154, %if.end1149
  %arraydecay1157 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1158 = icmp eq i32* %cond125708710720, %arraydecay1157
  br i1 %cmp1158, label %if.end1163, label %delete.notnull1161

delete.notnull1161:                               ; preds = %if.end1156
  %367 = bitcast i32* %cond125708710720 to i8*
  call void @_ZdaPv(i8* %367) #7
  br label %if.end1163

if.end1163:                                       ; preds = %delete.notnull1161, %if.end1156
  %arraydecay1164 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1165 = icmp eq i32* %cond136714716, %arraydecay1164
  br i1 %cmp1165, label %if.end1170, label %delete.notnull1168

delete.notnull1168:                               ; preds = %if.end1163
  %368 = bitcast i32* %cond136714716 to i8*
  call void @_ZdaPv(i8* %368) #7
  br label %if.end1170

if.end1170:                                       ; preds = %delete.notnull1168, %if.end1163
  %arraydecay1171 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1172 = icmp eq i32* %cond147722, %arraydecay1171
  br i1 %cmp1172, label %if.end1177, label %delete.notnull1175

delete.notnull1175:                               ; preds = %if.end1170
  %369 = bitcast i32* %cond147722 to i8*
  call void @_ZdaPv(i8* %369) #7
  br label %if.end1177

if.end1177:                                       ; preds = %delete.notnull1175, %if.end1170
  %arraydecay1178 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1179 = icmp eq i32* %cond158, %arraydecay1178
  br i1 %cmp1179, label %if.end1184, label %delete.notnull1182

delete.notnull1182:                               ; preds = %if.end1177
  %370 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %370) #7
  br label %if.end1184

if.end1184:                                       ; preds = %delete.notnull1182, %if.end1177
  %conv1185 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1186 = getelementptr inbounds double* %1, i64 22
  %371 = load double* %arrayidx1186, align 8, !tbaa !17
  %add1187 = fadd double %conv1185, %371
  store double %add1187, double* %arrayidx1186, align 8, !tbaa !17
  %arrayidx1190 = getelementptr inbounds double* %1, i64 1
  %372 = bitcast double* %arrayidx1190 to <2 x double>*
  %373 = load <2 x double>* %372, align 8, !tbaa !17
  %374 = fadd <2 x double> %358, %373
  %375 = bitcast double* %arrayidx1190 to <2 x double>*
  store <2 x double> %374, <2 x double>* %375, align 8, !tbaa !17
  %arrayidx1192 = getelementptr inbounds double* %1, i64 12
  %376 = bitcast double* %arrayidx1192 to <2 x double>*
  %377 = load <2 x double>* %376, align 8, !tbaa !17
  %378 = fadd <2 x double> %359, %377
  %379 = bitcast double* %arrayidx1192 to <2 x double>*
  store <2 x double> %378, <2 x double>* %379, align 8, !tbaa !17
  %arrayidx1196 = getelementptr inbounds double* %1, i64 14
  %380 = bitcast double* %arrayidx1196 to <2 x double>*
  %381 = load <2 x double>* %380, align 8, !tbaa !17
  %382 = shufflevector <2 x double> %361, <2 x double> %359, <2 x i32> <i32 0, i32 3>
  %383 = fadd <2 x double> %382, %381
  %384 = bitcast double* %arrayidx1196 to <2 x double>*
  store <2 x double> %383, <2 x double>* %384, align 8, !tbaa !17
  %arrayidx1200 = getelementptr inbounds double* %1, i64 16
  %385 = bitcast double* %arrayidx1200 to <2 x double>*
  %386 = load <2 x double>* %385, align 8, !tbaa !17
  %387 = fadd <2 x double> %360, %386
  %388 = bitcast double* %arrayidx1200 to <2 x double>*
  store <2 x double> %387, <2 x double>* %388, align 8, !tbaa !17
  %arrayidx1204 = getelementptr inbounds double* %1, i64 18
  %389 = bitcast double* %arrayidx1204 to <2 x double>*
  %390 = load <2 x double>* %389, align 8, !tbaa !17
  %391 = shufflevector <2 x double> %361, <2 x double> %360, <2 x i32> <i32 0, i32 3>
  %392 = fadd <2 x double> %391, %390
  %393 = bitcast double* %arrayidx1204 to <2 x double>*
  store <2 x double> %392, <2 x double>* %393, align 8, !tbaa !17
  %arrayidx1208 = getelementptr inbounds double* %1, i64 20
  %394 = load double* %arrayidx1208, align 8, !tbaa !17
  %add1209 = fadd double %362, %394
  store double %add1209, double* %arrayidx1208, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1184, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil28calc_pair_slow_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31698 = icmp sgt i32 %13, 0
  br i1 %cmp31698, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30755 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond540542753 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19544751 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv744 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next745, %for.inc ]
  %g.0699 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv744, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0699, 1
  %idxprom41 = sext i32 %g.0699 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond540542753, i64 %idxprom41
  %30 = trunc i64 %indvars.iv744 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0699, %for.body ]
  %indvars.iv.next745 = add nuw nsw i64 %indvars.iv744, 1
  %lftr.wideiv746 = trunc i64 %indvars.iv.next745 to i32
  %exitcond747 = icmp eq i32 %lftr.wideiv746, %13
  br i1 %exitcond747, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond540542753, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond540542753, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa760 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19544750759 = phi i32* [ %cond19544751, %for.end ], [ %cond19544751, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond540542752758 = phi i32* [ %cond540542753, %for.end ], [ %cond540542753, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30754757 = phi i32* [ %cond30755, %for.end ], [ %cond30755, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56692 = icmp sgt i32 %g.0.lcssa760, 0
  br i1 %cmp56692, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75686 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76687 = icmp sgt i32 %12, 0
  %or.cond532688 = and i1 %tobool75686, %cmp76687
  br i1 %or.cond532688, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv740 = phi i64 [ %indvars.iv.next741, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0694 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0693 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond540542752758, i64 %indvars.iv740
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0694, 1
  %idxprom68 = sext i32 %fixg.0694 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19544750759, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0693, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0694, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next741 = add nuw nsw i64 %indvars.iv740, 1
  %lftr.wideiv742 = trunc i64 %indvars.iv.next741 to i32
  %exitcond743 = icmp eq i32 %lftr.wideiv742, %g.0.lcssa760
  br i1 %exitcond743, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv738 = phi i64 [ %indvars.iv.next739, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2689 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv738, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2689
  %indvars.iv.next739 = add nuw nsw i64 %indvars.iv738, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next739 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond532 = and i1 %tobool75, %cmp76
  br i1 %or.cond532, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75686, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond540542752758, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond540542752758 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19544750759, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19544750759 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30754757, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30754757 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19544750759, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19544750759, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2547 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162566 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140552554564 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129548550556562 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151558560 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183661 = icmp sgt i32 %12, 0
  br i1 %cmp183661, label %for.body184.lr.ph, label %for.end939

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140552554564 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162566 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151558560 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30754757 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129548550556562 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc937, %for.body184.lr.ph
  %exclChecksum.0677 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc937 ]
  %i.1664 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc938, %for.inc937 ]
  %pairlistindex.0663 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc937 ]
  %pairCount.0662 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc937 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %257, %for.inc937 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %258, %for.inc937 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %259, %for.inc937 ]
  %idxprom185 = sext i32 %i.1664 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i568 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i568, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i568, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i568, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0662
  %cmp218 = icmp sge i32 %pairCount.0662, %div
  %cmp220 = icmp slt i32 %pairCount.0662, %div181
  %or.cond534 = and i1 %cmp218, %cmp220
  br i1 %or.cond534, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1664, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc937

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0662, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19544750759, i32* %cond540542752758
  %cond243 = select i1 %75, i32 %fixg.2547, i32 %g.0.lcssa760
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30754757, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div529 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div529 to i32
  %cmp289574 = icmp sgt i32 %conv287, 0
  br i1 %cmp289574, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv706 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next707, %cond.end310 ]
  %pli.0576 = phi i32* [ %cond129548550556562, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30754757, i64 %indvars.iv706
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp530531 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp530531, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0576, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0576, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0576, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0576, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0576, i64 %cond311
  %indvars.iv.next707 = add nuw nsw i64 %indvars.iv706, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next707 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129548550556562, %land.end ], [ %cond129548550556562, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328525 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328525 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext526 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext526, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129548550556562, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129548550556562, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1664
  br label %for.inc937

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0662, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0663, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load365.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %94 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %95 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %95, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %96 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %96 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %cmp384601 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384601, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv717 = phi i64 [ %indvars.iv.next718, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1605 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0677, %for.cond383.preheader ]
  %pli380.0604 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140552554564, %for.cond383.preheader ]
  %plin.0603 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151558560, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129548550556562, i64 %indvars.iv717
  %97 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %97 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %98 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %69, %98
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %99 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %70, %99
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %100 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %71, %100
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %101 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %101, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond535 = or i1 %tobool419, %cmp421
  br i1 %or.cond535, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1605, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1605, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %66
  %cmp435 = icmp sgt i32 %bf.clear432, %67
  %or.cond536 = or i1 %cmp433, %cmp435
  br i1 %or.cond536, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0604, i64 1
  store i32 %97, i32* %pli380.0604, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0603, i64 1
  store i32 %97, i32* %plin.0603, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0603, %for.body385 ], [ %plin.0603, %land.lhs.true424 ], [ %plin.0603, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0604, %for.body385 ], [ %pli380.0604, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0604, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1605, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next718 = add nuw nsw i64 %indvars.iv717, 1
  %lftr.wideiv719 = trunc i64 %indvars.iv.next718 to i32
  %exitcond720 = icmp eq i32 %lftr.wideiv719, %pairlistindex.1
  br i1 %exitcond720, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384601, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %102 = load i32* %cond129548550556562, align 4, !tbaa !11
  %idxprom453 = sext i32 %102 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %103 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %104 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %105 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %105, %if.then448 ], [ %111, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %104, %if.then448 ], [ %110, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %103, %if.then448 ], [ %109, %if.else513 ]
  %j2449.0.ph = phi i32 [ %102, %if.then448 ], [ %108, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151558560, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140552554564, %if.then448 ], [ %pli380.2.ph584, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0677, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer577

while.cond473.outer577:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph578 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph579 = phi double [ %111, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph580 = phi double [ %110, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph581 = phi double [ %109, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph582 = phi i32 [ %108, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph583 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph584 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph585 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer586

while.cond473.outer586:                           ; preds = %land.lhs.true504, %while.cond473.outer577
  %idxprom453.pn.ph587 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph578, %while.cond473.outer577 ]
  %p_j_z462.0.ph588 = phi double [ %111, %land.lhs.true504 ], [ %p_j_z462.0.ph579, %while.cond473.outer577 ]
  %p_j_y457.0.ph589 = phi double [ %110, %land.lhs.true504 ], [ %p_j_y457.0.ph580, %while.cond473.outer577 ]
  %p_j_x452.0.ph590 = phi double [ %109, %land.lhs.true504 ], [ %p_j_x452.0.ph581, %while.cond473.outer577 ]
  %j2449.0.ph591 = phi i32 [ %108, %land.lhs.true504 ], [ %j2449.0.ph582, %while.cond473.outer577 ]
  %k446.0.ph592 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph583, %while.cond473.outer577 ]
  %exclChecksum.4.ph593 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph585, %while.cond473.outer577 ]
  %106 = sext i32 %k446.0.ph592 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer586
  %indvars.iv713 = phi i64 [ %106, %while.cond473.outer586 ], [ %indvars.iv.next714, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph587, %while.cond473.outer586 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph588, %while.cond473.outer586 ], [ %111, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph589, %while.cond473.outer586 ], [ %110, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph590, %while.cond473.outer586 ], [ %109, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph591, %while.cond473.outer586 ], [ %108, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph592, %while.cond473.outer586 ], [ %inc476, %while.body475 ]
  %107 = trunc i64 %indvars.iv713 to i32
  %cmp474 = icmp slt i32 %107, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next714 = add nsw i64 %indvars.iv713, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129548550556562, i64 %indvars.iv.next714
  %108 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %69, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %108 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %109 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %70, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %110 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %71, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %111 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph593, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer586

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph593, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %66
  %cmp510 = icmp sgt i32 %atom2467.0, %67
  %or.cond537 = or i1 %cmp508, %cmp510
  br i1 %or.cond537, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph584, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph584, align 4, !tbaa !11
  br label %while.cond473.outer577

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151558560, %if.else445 ], [ %cond151558560, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140552554564, %if.else445 ], [ %cond140552554564, %for.cond383.preheader ], [ %pli380.2.ph584, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0677, %if.else445 ], [ %exclChecksum.0677, %for.cond383.preheader ], [ %exclChecksum.4.ph593, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528495 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528495 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext523 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext523, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140552554564, i64 %idxprom533
  %112 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140552554564, i64 %idxprom535
  store i32 %112, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540609 = icmp sgt i32 %conv529, 0
  br i1 %cmp540609, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %113 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %114 = lshr i64 %113, 2
  %115 = trunc i64 %114 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv721 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next722, %for.inc559 ]
  %plin.5613 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0612 = phi i32* [ %cond162566, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0611 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140552554564, i64 %indvars.iv721
  %116 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %116 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %117 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %117, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551522 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551522, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %118 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %118 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5613, i64 1
  store i32 %116, i32* %plin.5613, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0612, i64 1
  store i32 %116, i32* %plix.0612, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0611, i64 1
  store i32 %116, i32* %plim.0611, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0611, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0611, %sw.bb555 ], [ %plim.0611, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0612, %for.body541 ], [ %plix.0612, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0612, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5613, %for.body541 ], [ %plin.5613, %sw.bb557 ], [ %plin.5613, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next722 = add nuw nsw i64 %indvars.iv721, 1
  %lftr.wideiv723 = trunc i64 %indvars.iv.next722 to i32
  %exitcond724 = icmp eq i32 %lftr.wideiv723, %115
  br i1 %exitcond724, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162566, %for.cond539.preheader ], [ %cond162566, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565 = ashr exact i64 %sub.ptr.sub564, 2
  %conv566496 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566496
  %add574 = add i64 %add567, %sub.ptr.div565
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579498 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579498 to i32
  %cmp582617 = icmp sgt i32 %conv580, 0
  br i1 %cmp582617, label %for.body583.lr.ph, label %for.end671

for.body583.lr.ph:                                ; preds = %for.end561
  %x649 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y658 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z665 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %119 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %120 = lshr i64 %119, 2
  %121 = trunc i64 %120 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583, %for.body583.lr.ph
  %indvars.iv725 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next726, %for.body583 ]
  %122 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %142, %for.body583 ]
  %123 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %149, %for.body583 ]
  %124 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %160, %for.body583 ]
  %arrayidx586 = getelementptr inbounds i32* %cond151558560, i64 %indvars.iv725
  %125 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %125 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %126 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %69, %126
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %127 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %70, %127
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %128 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %71, %128
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %129 = bitcast float %conv604 to i32
  %shr = ashr i32 %129, 17
  %add606 = add nsw i32 %shr, %mul
  %mul607 = shl nsw i32 %add606, 4
  %idx.ext608 = sext i32 %mul607 to i64
  %and = and i32 %129, -131072
  %charge614 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %130 = load float* %charge614, align 4, !tbaa !63
  %conv615 = fpext float %130 to double
  %mul616 = fmul double %mul373, %conv615
  %131 = bitcast i32 %and to float
  %conv618 = fpext float %131 to double
  %sub619 = fsub double %add603, %conv618
  %partition620 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %132 = bitcast [4 x i8]* %partition620 to i32*
  %bf.load621 = load i32* %132, align 4
  %bf.lshr622 = lshr i32 %bf.load621, 28
  %idxprom623 = zext i32 %bf.lshr622 to i64
  %add.ptr369.sum518 = add i64 %idxprom623, %idx.ext368
  %arrayidx624 = getelementptr inbounds double* %94, i64 %add.ptr369.sum518
  %133 = load double* %arrayidx624, align 8, !tbaa !17
  %add.ptr611.sum519 = or i64 %idx.ext608, 13
  %arrayidx625 = getelementptr inbounds double* %6, i64 %add.ptr611.sum519
  %134 = load double* %arrayidx625, align 8, !tbaa !17
  %add.ptr611.sum520 = or i64 %idx.ext608, 14
  %arrayidx626 = getelementptr inbounds double* %6, i64 %add.ptr611.sum520
  %135 = load double* %arrayidx626, align 8, !tbaa !17
  %add.ptr611.sum521 = or i64 %idx.ext608, 15
  %arrayidx627 = getelementptr inbounds double* %6, i64 %add.ptr611.sum521
  %136 = load double* %arrayidx627, align 8, !tbaa !17
  %mul628 = fmul double %mul616, %136
  %mul629 = fmul double %mul616, %135
  %mul630 = fmul double %mul616, %134
  %mul632 = fmul double %sub619, 3.000000e+00
  %mul633 = fmul double %mul628, %mul632
  %mul634 = fmul double %mul629, 2.000000e+00
  %add635 = fadd double %mul634, %mul633
  %mul636 = fmul double %sub619, %add635
  %add637 = fadd double %mul630, %mul636
  %mul638 = fmul double %add637, -2.000000e+00
  %mul639 = fmul double %133, %mul638
  %mul642 = fmul double %sub591, %mul639
  %137 = insertelement <2 x double> undef, double %sub591, i32 0
  %138 = insertelement <2 x double> %137, double %sub596, i32 1
  %139 = insertelement <2 x double> undef, double %mul642, i32 0
  %140 = insertelement <2 x double> %139, double %mul642, i32 1
  %141 = fmul <2 x double> %138, %140
  %142 = fadd <2 x double> %122, %141
  %143 = load double* %x649, align 8, !tbaa !72
  %add650 = fadd double %143, %mul642
  store double %add650, double* %x649, align 8, !tbaa !72
  %x651 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul653 = fmul double %sub596, %mul639
  %144 = insertelement <2 x double> undef, double %sub596, i32 0
  %145 = insertelement <2 x double> %144, double %sub601, i32 1
  %146 = insertelement <2 x double> undef, double %mul653, i32 0
  %147 = insertelement <2 x double> %146, double %mul653, i32 1
  %148 = fmul <2 x double> %145, %147
  %149 = fadd <2 x double> %123, %148
  %150 = load double* %y658, align 8, !tbaa !73
  %add659 = fadd double %150, %mul653
  store double %add659, double* %y658, align 8, !tbaa !73
  %151 = bitcast double* %x651 to <2 x double>*
  %152 = load <2 x double>* %151, align 8, !tbaa !17
  %153 = insertelement <2 x double> %139, double %mul653, i32 1
  %154 = fsub <2 x double> %152, %153
  %155 = bitcast double* %x651 to <2 x double>*
  store <2 x double> %154, <2 x double>* %155, align 8, !tbaa !17
  %mul662 = fmul double %sub601, %mul639
  %156 = insertelement <2 x double> undef, double %sub601, i32 0
  %157 = insertelement <2 x double> %156, double %sub601, i32 1
  %158 = insertelement <2 x double> %139, double %mul662, i32 1
  %159 = fmul <2 x double> %157, %158
  %160 = fadd <2 x double> %124, %159
  %161 = load double* %z665, align 8, !tbaa !74
  %add666 = fadd double %161, %mul662
  store double %add666, double* %z665, align 8, !tbaa !74
  %z667 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %162 = load double* %z667, align 8, !tbaa !74
  %sub668 = fsub double %162, %mul662
  store double %sub668, double* %z667, align 8, !tbaa !74
  %indvars.iv.next726 = add nuw nsw i64 %indvars.iv725, 1
  %lftr.wideiv727 = trunc i64 %indvars.iv.next726 to i32
  %exitcond728 = icmp eq i32 %lftr.wideiv727, %121
  br i1 %exitcond728, label %for.end671, label %for.body583

for.end671:                                       ; preds = %for.body583, %for.end561
  %163 = phi <2 x double> [ %61, %for.end561 ], [ %142, %for.body583 ]
  %164 = phi <2 x double> [ %62, %for.end561 ], [ %149, %for.body583 ]
  %165 = phi <2 x double> [ %63, %for.end561 ], [ %160, %for.body583 ]
  %conv676 = trunc i64 %sub.ptr.div572 to i32
  %cmp678631 = icmp sgt i32 %conv676, 0
  br i1 %cmp678631, label %for.body679.lr.ph, label %for.end805

for.body679.lr.ph:                                ; preds = %for.end671
  %x781 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y791 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z799 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body679

for.body679:                                      ; preds = %for.body679, %for.body679.lr.ph
  %indvars.iv729 = phi i64 [ 0, %for.body679.lr.ph ], [ %indvars.iv.next730, %for.body679 ]
  %166 = phi <2 x double> [ %163, %for.body679.lr.ph ], [ %189, %for.body679 ]
  %167 = phi <2 x double> [ %164, %for.body679.lr.ph ], [ %196, %for.body679 ]
  %168 = phi <2 x double> [ %165, %for.body679.lr.ph ], [ %207, %for.body679 ]
  %arrayidx682 = getelementptr inbounds i32* %cond173, i64 %indvars.iv729
  %169 = load i32* %arrayidx682, align 4, !tbaa !11
  %idx.ext684 = sext i32 %169 to i64
  %x688 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext684, i32 0, i32 0
  %170 = load double* %x688, align 8, !tbaa !59
  %sub689 = fsub double %69, %170
  %mul691 = fmul double %sub689, %sub689
  %y694 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext684, i32 0, i32 1
  %171 = load double* %y694, align 8, !tbaa !61
  %sub695 = fsub double %70, %171
  %mul696 = fmul double %sub695, %sub695
  %add697 = fadd double %mul691, %mul696
  %z700 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext684, i32 0, i32 2
  %172 = load double* %z700, align 8, !tbaa !62
  %sub701 = fsub double %71, %172
  %mul702 = fmul double %sub701, %sub701
  %add703 = fadd double %add697, %mul702
  %conv705 = fptrunc double %add703 to float
  %173 = bitcast float %conv705 to i32
  %shr709 = ashr i32 %173, 17
  %add710 = add nsw i32 %shr709, %mul
  %mul712 = shl nsw i32 %add710, 4
  %idx.ext713 = sext i32 %mul712 to i64
  %and720 = and i32 %173, -131072
  %charge722 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext684, i32 1
  %174 = load float* %charge722, align 4, !tbaa !63
  %conv723 = fpext float %174 to double
  %mul724 = fmul double %mul373, %conv723
  %175 = bitcast i32 %and720 to float
  %conv727 = fpext float %175 to double
  %sub728 = fsub double %add703, %conv727
  %partition730 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext684, i32 2
  %176 = bitcast [4 x i8]* %partition730 to i32*
  %bf.load731 = load i32* %176, align 4
  %bf.lshr732 = lshr i32 %bf.load731, 28
  %idxprom733 = zext i32 %bf.lshr732 to i64
  %add.ptr369.sum509 = add i64 %idxprom733, %idx.ext368
  %arrayidx734 = getelementptr inbounds double* %94, i64 %add.ptr369.sum509
  %177 = load double* %arrayidx734, align 8, !tbaa !17
  %add.ptr716.sum510 = or i64 %idx.ext713, 13
  %arrayidx736 = getelementptr inbounds double* %6, i64 %add.ptr716.sum510
  %178 = load double* %arrayidx736, align 8, !tbaa !17
  %add.ptr716.sum511 = or i64 %idx.ext713, 14
  %arrayidx738 = getelementptr inbounds double* %6, i64 %add.ptr716.sum511
  %179 = load double* %arrayidx738, align 8, !tbaa !17
  %add.ptr716.sum512 = or i64 %idx.ext713, 15
  %arrayidx740 = getelementptr inbounds double* %6, i64 %add.ptr716.sum512
  %180 = load double* %arrayidx740, align 8, !tbaa !17
  %mul741 = shl nsw i32 %add710, 2
  %idx.ext742 = sext i32 %mul741 to i64
  %add.ptr743.sum513 = or i64 %idx.ext742, 1
  %arrayidx747 = getelementptr inbounds double* %7, i64 %add.ptr743.sum513
  %181 = load double* %arrayidx747, align 8, !tbaa !17
  %mul748 = fmul double %sub, %181
  %sub749 = fsub double %178, %mul748
  %add.ptr743.sum514 = or i64 %idx.ext742, 2
  %arrayidx750 = getelementptr inbounds double* %7, i64 %add.ptr743.sum514
  %182 = load double* %arrayidx750, align 8, !tbaa !17
  %mul751 = fmul double %sub, %182
  %sub752 = fsub double %179, %mul751
  %add.ptr743.sum515 = or i64 %idx.ext742, 3
  %arrayidx753 = getelementptr inbounds double* %7, i64 %add.ptr743.sum515
  %183 = load double* %arrayidx753, align 8, !tbaa !17
  %mul754 = fmul double %sub, %183
  %sub755 = fsub double %180, %mul754
  %mul756 = fmul double %mul724, %sub755
  %mul757 = fmul double %mul724, %sub752
  %mul758 = fmul double %mul724, %sub749
  %mul761 = fmul double %sub728, 3.000000e+00
  %mul762 = fmul double %mul761, %mul756
  %mul763 = fmul double %mul757, 2.000000e+00
  %add764 = fadd double %mul763, %mul762
  %mul765 = fmul double %sub728, %add764
  %add766 = fadd double %mul758, %mul765
  %mul768 = fmul double %add766, -2.000000e+00
  %mul769 = fmul double %177, %mul768
  %mul774 = fmul double %sub689, %mul769
  %184 = insertelement <2 x double> undef, double %sub689, i32 0
  %185 = insertelement <2 x double> %184, double %sub695, i32 1
  %186 = insertelement <2 x double> undef, double %mul774, i32 0
  %187 = insertelement <2 x double> %186, double %mul774, i32 1
  %188 = fmul <2 x double> %185, %187
  %189 = fadd <2 x double> %166, %188
  %190 = load double* %x781, align 8, !tbaa !72
  %add782 = fadd double %190, %mul774
  store double %add782, double* %x781, align 8, !tbaa !72
  %x783 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext684, i32 0
  %mul786 = fmul double %sub695, %mul769
  %191 = insertelement <2 x double> undef, double %sub695, i32 0
  %192 = insertelement <2 x double> %191, double %sub701, i32 1
  %193 = insertelement <2 x double> undef, double %mul786, i32 0
  %194 = insertelement <2 x double> %193, double %mul786, i32 1
  %195 = fmul <2 x double> %192, %194
  %196 = fadd <2 x double> %167, %195
  %197 = load double* %y791, align 8, !tbaa !73
  %add792 = fadd double %197, %mul786
  store double %add792, double* %y791, align 8, !tbaa !73
  %198 = bitcast double* %x783 to <2 x double>*
  %199 = load <2 x double>* %198, align 8, !tbaa !17
  %200 = insertelement <2 x double> %186, double %mul786, i32 1
  %201 = fsub <2 x double> %199, %200
  %202 = bitcast double* %x783 to <2 x double>*
  store <2 x double> %201, <2 x double>* %202, align 8, !tbaa !17
  %mul796 = fmul double %sub701, %mul769
  %203 = insertelement <2 x double> undef, double %sub701, i32 0
  %204 = insertelement <2 x double> %203, double %sub701, i32 1
  %205 = insertelement <2 x double> %186, double %mul796, i32 1
  %206 = fmul <2 x double> %204, %205
  %207 = fadd <2 x double> %168, %206
  %208 = load double* %z799, align 8, !tbaa !74
  %add800 = fadd double %208, %mul796
  store double %add800, double* %z799, align 8, !tbaa !74
  %z801 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext684, i32 2
  %209 = load double* %z801, align 8, !tbaa !74
  %sub802 = fsub double %209, %mul796
  store double %sub802, double* %z801, align 8, !tbaa !74
  %indvars.iv.next730 = add nuw nsw i64 %indvars.iv729, 1
  %lftr.wideiv731 = trunc i64 %indvars.iv.next730 to i32
  %exitcond732 = icmp eq i32 %lftr.wideiv731, %conv676
  br i1 %exitcond732, label %for.end805, label %for.body679

for.end805:                                       ; preds = %for.body679, %for.end671
  %210 = phi <2 x double> [ %163, %for.end671 ], [ %189, %for.body679 ]
  %211 = phi <2 x double> [ %164, %for.end671 ], [ %196, %for.body679 ]
  %212 = phi <2 x double> [ %165, %for.end671 ], [ %207, %for.body679 ]
  %conv810 = trunc i64 %sub.ptr.div565 to i32
  %cmp812645 = icmp sgt i32 %conv810, 0
  br i1 %cmp812645, label %for.body813.lr.ph, label %for.inc937

for.body813.lr.ph:                                ; preds = %for.end805
  %x912 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y922 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z930 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body813

for.body813:                                      ; preds = %for.body813, %for.body813.lr.ph
  %indvars.iv733 = phi i64 [ 0, %for.body813.lr.ph ], [ %indvars.iv.next734, %for.body813 ]
  %213 = phi <2 x double> [ %210, %for.body813.lr.ph ], [ %236, %for.body813 ]
  %214 = phi <2 x double> [ %211, %for.body813.lr.ph ], [ %243, %for.body813 ]
  %215 = phi <2 x double> [ %212, %for.body813.lr.ph ], [ %254, %for.body813 ]
  %arrayidx816 = getelementptr inbounds i32* %cond162566, i64 %indvars.iv733
  %216 = load i32* %arrayidx816, align 4, !tbaa !11
  %idx.ext818 = sext i32 %216 to i64
  %x822 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext818, i32 0, i32 0
  %217 = load double* %x822, align 8, !tbaa !59
  %sub823 = fsub double %69, %217
  %mul825 = fmul double %sub823, %sub823
  %y828 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext818, i32 0, i32 1
  %218 = load double* %y828, align 8, !tbaa !61
  %sub829 = fsub double %70, %218
  %mul830 = fmul double %sub829, %sub829
  %add831 = fadd double %mul825, %mul830
  %z834 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext818, i32 0, i32 2
  %219 = load double* %z834, align 8, !tbaa !62
  %sub835 = fsub double %71, %219
  %mul836 = fmul double %sub835, %sub835
  %add837 = fadd double %add831, %mul836
  %conv839 = fptrunc double %add837 to float
  %220 = bitcast float %conv839 to i32
  %shr843 = ashr i32 %220, 17
  %add844 = add nsw i32 %shr843, %mul
  %mul846 = shl nsw i32 %add844, 4
  %idx.ext847 = sext i32 %mul846 to i64
  %and854 = and i32 %220, -131072
  %charge856 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext818, i32 1
  %221 = load float* %charge856, align 4, !tbaa !63
  %conv857 = fpext float %221 to double
  %mul858 = fmul double %mul373, %conv857
  %222 = bitcast i32 %and854 to float
  %conv861 = fpext float %222 to double
  %sub862 = fsub double %add837, %conv861
  %partition864 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext818, i32 2
  %223 = bitcast [4 x i8]* %partition864 to i32*
  %bf.load865 = load i32* %223, align 4
  %bf.lshr866 = lshr i32 %bf.load865, 28
  %idxprom867 = zext i32 %bf.lshr866 to i64
  %add.ptr369.sum = add i64 %idxprom867, %idx.ext368
  %arrayidx868 = getelementptr inbounds double* %94, i64 %add.ptr369.sum
  %224 = load double* %arrayidx868, align 8, !tbaa !17
  %add.ptr850.sum501 = or i64 %idx.ext847, 13
  %arrayidx870 = getelementptr inbounds double* %6, i64 %add.ptr850.sum501
  %225 = load double* %arrayidx870, align 8, !tbaa !17
  %add.ptr850.sum502 = or i64 %idx.ext847, 14
  %arrayidx872 = getelementptr inbounds double* %6, i64 %add.ptr850.sum502
  %226 = load double* %arrayidx872, align 8, !tbaa !17
  %add.ptr850.sum503 = or i64 %idx.ext847, 15
  %arrayidx874 = getelementptr inbounds double* %6, i64 %add.ptr850.sum503
  %227 = load double* %arrayidx874, align 8, !tbaa !17
  %mul876 = shl nsw i32 %add844, 2
  %idx.ext877 = sext i32 %mul876 to i64
  %add.ptr878.sum504 = or i64 %idx.ext877, 1
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr878.sum504
  %228 = load double* %arrayidx881, align 8, !tbaa !17
  %sub882 = fsub double %225, %228
  %add.ptr878.sum505 = or i64 %idx.ext877, 2
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr878.sum505
  %229 = load double* %arrayidx883, align 8, !tbaa !17
  %sub884 = fsub double %226, %229
  %add.ptr878.sum506 = or i64 %idx.ext877, 3
  %arrayidx885 = getelementptr inbounds double* %7, i64 %add.ptr878.sum506
  %230 = load double* %arrayidx885, align 8, !tbaa !17
  %sub886 = fsub double %227, %230
  %mul887 = fmul double %mul858, %sub886
  %mul888 = fmul double %mul858, %sub884
  %mul889 = fmul double %mul858, %sub882
  %mul892 = fmul double %sub862, 3.000000e+00
  %mul893 = fmul double %mul892, %mul887
  %mul894 = fmul double %mul888, 2.000000e+00
  %add895 = fadd double %mul894, %mul893
  %mul896 = fmul double %sub862, %add895
  %add897 = fadd double %mul889, %mul896
  %mul899 = fmul double %add897, -2.000000e+00
  %mul900 = fmul double %224, %mul899
  %mul905 = fmul double %sub823, %mul900
  %231 = insertelement <2 x double> undef, double %sub823, i32 0
  %232 = insertelement <2 x double> %231, double %sub829, i32 1
  %233 = insertelement <2 x double> undef, double %mul905, i32 0
  %234 = insertelement <2 x double> %233, double %mul905, i32 1
  %235 = fmul <2 x double> %232, %234
  %236 = fadd <2 x double> %213, %235
  %237 = load double* %x912, align 8, !tbaa !72
  %add913 = fadd double %237, %mul905
  store double %add913, double* %x912, align 8, !tbaa !72
  %x914 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext818, i32 0
  %mul917 = fmul double %sub829, %mul900
  %238 = insertelement <2 x double> undef, double %sub829, i32 0
  %239 = insertelement <2 x double> %238, double %sub835, i32 1
  %240 = insertelement <2 x double> undef, double %mul917, i32 0
  %241 = insertelement <2 x double> %240, double %mul917, i32 1
  %242 = fmul <2 x double> %239, %241
  %243 = fadd <2 x double> %214, %242
  %244 = load double* %y922, align 8, !tbaa !73
  %add923 = fadd double %244, %mul917
  store double %add923, double* %y922, align 8, !tbaa !73
  %245 = bitcast double* %x914 to <2 x double>*
  %246 = load <2 x double>* %245, align 8, !tbaa !17
  %247 = insertelement <2 x double> %233, double %mul917, i32 1
  %248 = fsub <2 x double> %246, %247
  %249 = bitcast double* %x914 to <2 x double>*
  store <2 x double> %248, <2 x double>* %249, align 8, !tbaa !17
  %mul927 = fmul double %sub835, %mul900
  %250 = insertelement <2 x double> undef, double %sub835, i32 0
  %251 = insertelement <2 x double> %250, double %sub835, i32 1
  %252 = insertelement <2 x double> %233, double %mul927, i32 1
  %253 = fmul <2 x double> %251, %252
  %254 = fadd <2 x double> %215, %253
  %255 = load double* %z930, align 8, !tbaa !74
  %add931 = fadd double %255, %mul927
  store double %add931, double* %z930, align 8, !tbaa !74
  %z932 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext818, i32 2
  %256 = load double* %z932, align 8, !tbaa !74
  %sub933 = fsub double %256, %mul927
  store double %sub933, double* %z932, align 8, !tbaa !74
  %indvars.iv.next734 = add nuw nsw i64 %indvars.iv733, 1
  %lftr.wideiv735 = trunc i64 %indvars.iv.next734 to i32
  %exitcond736 = icmp eq i32 %lftr.wideiv735, %conv810
  br i1 %exitcond736, label %for.inc937, label %for.body813

for.inc937:                                       ; preds = %for.body813, %for.end805, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end805 ], [ %pairCount.2, %for.body813 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0663, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end805 ], [ %pairlistindex.1, %for.body813 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1664, %for.end805 ], [ %i.1664, %for.body813 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0677, %if.then221 ], [ %exclChecksum.0677, %cond.end349 ], [ %conv575, %for.end805 ], [ %conv575, %for.body813 ]
  %257 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %210, %for.end805 ], [ %236, %for.body813 ]
  %258 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %211, %for.end805 ], [ %243, %for.body813 ]
  %259 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %212, %for.end805 ], [ %254, %for.body813 ]
  %inc938 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc938, %12
  br i1 %cmp183, label %for.body184, label %for.end939

for.end939:                                       ; preds = %for.inc937, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc937 ]
  %260 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %257, %for.inc937 ]
  %261 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %258, %for.inc937 ]
  %262 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %259, %for.inc937 ]
  %263 = extractelement <2 x double> %262, i32 1
  %arraydecay940 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp941 = icmp eq i32* %cond540542752758, %arraydecay940
  br i1 %cmp941, label %if.end946, label %delete.notnull944

delete.notnull944:                                ; preds = %for.end939
  %264 = bitcast i32* %cond540542752758 to i8*
  call void @_ZdaPv(i8* %264) #7
  br label %if.end946

if.end946:                                        ; preds = %delete.notnull944, %for.end939
  %arraydecay947 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp948 = icmp eq i32* %cond19544750759, %arraydecay947
  br i1 %cmp948, label %if.end953, label %delete.notnull951

delete.notnull951:                                ; preds = %if.end946
  %265 = bitcast i32* %cond19544750759 to i8*
  call void @_ZdaPv(i8* %265) #7
  br label %if.end953

if.end953:                                        ; preds = %delete.notnull951, %if.end946
  %arraydecay954 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp955 = icmp eq i32* %cond30754757, %arraydecay954
  br i1 %cmp955, label %if.end960, label %delete.notnull958

delete.notnull958:                                ; preds = %if.end953
  %266 = bitcast i32* %cond30754757 to i8*
  call void @_ZdaPv(i8* %266) #7
  br label %if.end960

if.end960:                                        ; preds = %delete.notnull958, %if.end953
  %arraydecay961 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp962 = icmp eq i32* %cond129548550556562, %arraydecay961
  br i1 %cmp962, label %if.end967, label %delete.notnull965

delete.notnull965:                                ; preds = %if.end960
  %267 = bitcast i32* %cond129548550556562 to i8*
  call void @_ZdaPv(i8* %267) #7
  br label %if.end967

if.end967:                                        ; preds = %delete.notnull965, %if.end960
  %arraydecay968 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp969 = icmp eq i32* %cond140552554564, %arraydecay968
  br i1 %cmp969, label %if.end974, label %delete.notnull972

delete.notnull972:                                ; preds = %if.end967
  %268 = bitcast i32* %cond140552554564 to i8*
  call void @_ZdaPv(i8* %268) #7
  br label %if.end974

if.end974:                                        ; preds = %delete.notnull972, %if.end967
  %arraydecay975 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp976 = icmp eq i32* %cond151558560, %arraydecay975
  br i1 %cmp976, label %if.end981, label %delete.notnull979

delete.notnull979:                                ; preds = %if.end974
  %269 = bitcast i32* %cond151558560 to i8*
  call void @_ZdaPv(i8* %269) #7
  br label %if.end981

if.end981:                                        ; preds = %delete.notnull979, %if.end974
  %arraydecay982 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp983 = icmp eq i32* %cond162566, %arraydecay982
  br i1 %cmp983, label %if.end988, label %delete.notnull986

delete.notnull986:                                ; preds = %if.end981
  %270 = bitcast i32* %cond162566 to i8*
  call void @_ZdaPv(i8* %270) #7
  br label %if.end988

if.end988:                                        ; preds = %delete.notnull986, %if.end981
  %arraydecay989 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp990 = icmp eq i32* %cond173, %arraydecay989
  br i1 %cmp990, label %if.end995, label %delete.notnull993

delete.notnull993:                                ; preds = %if.end988
  %271 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %271) #7
  br label %if.end995

if.end995:                                        ; preds = %delete.notnull993, %if.end988
  %conv996 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx997 = getelementptr inbounds double* %1, i64 22
  %272 = load double* %arrayidx997, align 8, !tbaa !17
  %add998 = fadd double %conv996, %272
  store double %add998, double* %arrayidx997, align 8, !tbaa !17
  %arrayidx999 = getelementptr inbounds double* %1, i64 12
  %273 = bitcast double* %arrayidx999 to <2 x double>*
  %274 = load <2 x double>* %273, align 8, !tbaa !17
  %275 = fadd <2 x double> %260, %274
  %276 = bitcast double* %arrayidx999 to <2 x double>*
  store <2 x double> %275, <2 x double>* %276, align 8, !tbaa !17
  %arrayidx1003 = getelementptr inbounds double* %1, i64 14
  %277 = bitcast double* %arrayidx1003 to <2 x double>*
  %278 = load <2 x double>* %277, align 8, !tbaa !17
  %279 = shufflevector <2 x double> %262, <2 x double> %260, <2 x i32> <i32 0, i32 3>
  %280 = fadd <2 x double> %279, %278
  %281 = bitcast double* %arrayidx1003 to <2 x double>*
  store <2 x double> %280, <2 x double>* %281, align 8, !tbaa !17
  %arrayidx1007 = getelementptr inbounds double* %1, i64 16
  %282 = bitcast double* %arrayidx1007 to <2 x double>*
  %283 = load <2 x double>* %282, align 8, !tbaa !17
  %284 = fadd <2 x double> %261, %283
  %285 = bitcast double* %arrayidx1007 to <2 x double>*
  store <2 x double> %284, <2 x double>* %285, align 8, !tbaa !17
  %arrayidx1011 = getelementptr inbounds double* %1, i64 18
  %286 = bitcast double* %arrayidx1011 to <2 x double>*
  %287 = load <2 x double>* %286, align 8, !tbaa !17
  %288 = shufflevector <2 x double> %262, <2 x double> %261, <2 x i32> <i32 0, i32 3>
  %289 = fadd <2 x double> %288, %287
  %290 = bitcast double* %arrayidx1011 to <2 x double>*
  store <2 x double> %289, <2 x double>* %290, align 8, !tbaa !17
  %arrayidx1015 = getelementptr inbounds double* %1, i64 20
  %291 = load double* %arrayidx1015, align 8, !tbaa !17
  %add1016 = fadd double %263, %291
  store double %add1016, double* %arrayidx1015, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end995, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil35calc_pair_energy_slow_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31734 = icmp sgt i32 %13, 0
  br i1 %cmp31734, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30791 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond567569789 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19571787 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv780 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next781, %for.inc ]
  %g.0735 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv780, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0735, 1
  %idxprom41 = sext i32 %g.0735 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond567569789, i64 %idxprom41
  %30 = trunc i64 %indvars.iv780 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0735, %for.body ]
  %indvars.iv.next781 = add nuw nsw i64 %indvars.iv780, 1
  %lftr.wideiv782 = trunc i64 %indvars.iv.next781 to i32
  %exitcond783 = icmp eq i32 %lftr.wideiv782, %13
  br i1 %exitcond783, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond567569789, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond567569789, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa796 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19571786795 = phi i32* [ %cond19571787, %for.end ], [ %cond19571787, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond567569788794 = phi i32* [ %cond567569789, %for.end ], [ %cond567569789, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30790793 = phi i32* [ %cond30791, %for.end ], [ %cond30791, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56728 = icmp sgt i32 %g.0.lcssa796, 0
  br i1 %cmp56728, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75722 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76723 = icmp sgt i32 %12, 0
  %or.cond559724 = and i1 %tobool75722, %cmp76723
  br i1 %or.cond559724, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv776 = phi i64 [ %indvars.iv.next777, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0730 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0729 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond567569788794, i64 %indvars.iv776
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0730, 1
  %idxprom68 = sext i32 %fixg.0730 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19571786795, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0729, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0730, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next777 = add nuw nsw i64 %indvars.iv776, 1
  %lftr.wideiv778 = trunc i64 %indvars.iv.next777 to i32
  %exitcond779 = icmp eq i32 %lftr.wideiv778, %g.0.lcssa796
  br i1 %exitcond779, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv774 = phi i64 [ %indvars.iv.next775, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2725 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv774, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2725
  %indvars.iv.next775 = add nuw nsw i64 %indvars.iv774, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next775 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond559 = and i1 %tobool75, %cmp76
  br i1 %or.cond559, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75722, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond567569788794, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond567569788794 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19571786795, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19571786795 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30790793, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30790793 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19571786795, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19571786795, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2574 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162593 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140579581591 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129575577583589 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151585587 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183694 = icmp sgt i32 %12, 0
  br i1 %cmp183694, label %for.body184.lr.ph, label %for.end965

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast526 = ptrtoint i32* %cond140579581591 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i32* %cond162593 to i64
  %sub.ptr.rhs.cast570 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast577 = ptrtoint i32* %cond151585587 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30790793 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129575577583589 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc963, %for.body184.lr.ph
  %exclChecksum.0712 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc963 ]
  %fullElectVirial_zz.0698 = phi double [ 0.000000e+00, %for.body184.lr.ph ], [ %fullElectVirial_zz.4, %for.inc963 ]
  %i.1697 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc964, %for.inc963 ]
  %pairlistindex.0696 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc963 ]
  %pairCount.0695 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc963 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %265, %for.inc963 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %266, %for.inc963 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %267, %for.inc963 ]
  %idxprom185 = sext i32 %i.1697 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i595 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i595, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i595, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i595, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0695
  %cmp218 = icmp sge i32 %pairCount.0695, %div
  %cmp220 = icmp slt i32 %pairCount.0695, %div181
  %or.cond561 = and i1 %cmp218, %cmp220
  br i1 %or.cond561, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1697, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc963

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0695, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19571786795, i32* %cond567569788794
  %cond243 = select i1 %75, i32 %fixg.2574, i32 %g.0.lcssa796
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30790793, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div556 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div556 to i32
  %cmp289601 = icmp sgt i32 %conv287, 0
  br i1 %cmp289601, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv742 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next743, %cond.end310 ]
  %pli.0603 = phi i32* [ %cond129575577583589, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30790793, i64 %indvars.iv742
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp557558 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp557558, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0603, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0603, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0603, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0603, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0603, i64 %cond311
  %indvars.iv.next743 = add nuw nsw i64 %indvars.iv742, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next743 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129575577583589, %land.end ], [ %cond129575577583589, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328553 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328553 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext554 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext554, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129575577583589, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129575577583589, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1697
  br label %for.inc963

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0695, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0696, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load365.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load365.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %94 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %95 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add364 = add nsw i32 %95, 1
  %bf.lshr366 = lshr i32 %bf.load365.pre, 28
  %mul367 = mul nsw i32 %bf.lshr366, %add364
  %idx.ext368 = sext i32 %mul367 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %96 = load float* %charge, align 4, !tbaa !63
  %conv370 = fpext float %96 to double
  %mul371 = fmul double %conv370, 3.320636e+02
  %mul372 = fmul double %8, %mul371
  %mul373 = fmul double %4, %mul372
  %cmp384628 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond383.preheader, label %if.else445

for.cond383.preheader:                            ; preds = %land.end362
  br i1 %cmp384628, label %for.body385, label %if.end524

for.body385:                                      ; preds = %for.inc442, %for.cond383.preheader
  %indvars.iv753 = phi i64 [ %indvars.iv.next754, %for.inc442 ], [ 0, %for.cond383.preheader ]
  %exclChecksum.1632 = phi i32 [ %exclChecksum.3, %for.inc442 ], [ %exclChecksum.0712, %for.cond383.preheader ]
  %pli380.0631 = phi i32* [ %pli380.1, %for.inc442 ], [ %cond140579581591, %for.cond383.preheader ]
  %plin.0630 = phi i32* [ %plin.1, %for.inc442 ], [ %cond151585587, %for.cond383.preheader ]
  %arrayidx387 = getelementptr inbounds i32* %cond129575577583589, i64 %indvars.iv753
  %97 = load i32* %arrayidx387, align 4, !tbaa !11
  %idxprom389 = sext i32 %97 to i64
  %x392 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 0
  %98 = load double* %x392, align 8, !tbaa !59
  %sub394 = fsub double %69, %98
  %mul395 = fmul double %sub394, %sub394
  %y400 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 1
  %99 = load double* %y400, align 8, !tbaa !61
  %sub402 = fsub double %70, %99
  %mul403 = fmul double %sub402, %sub402
  %add404 = fadd double %mul395, %mul403
  %z409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 0, i32 2
  %100 = load double* %z409, align 8, !tbaa !62
  %sub410 = fsub double %71, %100
  %mul411 = fmul double %sub410, %sub410
  %add412 = fadd double %add404, %mul411
  %atomFixed415 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom389, i32 2
  %101 = bitcast [4 x i8]* %atomFixed415 to i32*
  %bf.load416 = load i32* %101, align 4
  %bf.clear418 = and i32 %bf.load416, 67108864
  %tobool419 = icmp ne i32 %bf.clear418, 0
  %cmp421 = fcmp ugt double %add412, %2
  %or.cond562 = or i1 %tobool419, %cmp421
  br i1 %or.cond562, label %for.inc442, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %for.body385
  %cmp423 = fcmp ugt double %add412, %10
  br i1 %cmp423, label %if.then427, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %inc425 = add nsw i32 %exclChecksum.1632, 1
  %tobool426 = icmp eq i32 %inc425, 0
  br i1 %tobool426, label %if.then427, label %for.inc442

if.then427:                                       ; preds = %land.lhs.true424, %land.lhs.true422
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true424 ], [ %exclChecksum.1632, %land.lhs.true422 ]
  %bf.clear432 = and i32 %bf.load416, 4194303
  %cmp433 = icmp slt i32 %bf.clear432, %66
  %cmp435 = icmp sgt i32 %bf.clear432, %67
  %or.cond563 = or i1 %cmp433, %cmp435
  br i1 %or.cond563, label %if.else438, label %if.then436

if.then436:                                       ; preds = %if.then427
  %incdec.ptr437 = getelementptr inbounds i32* %pli380.0631, i64 1
  store i32 %97, i32* %pli380.0631, align 4, !tbaa !11
  br label %for.inc442

if.else438:                                       ; preds = %if.then427
  %incdec.ptr439 = getelementptr inbounds i32* %plin.0630, i64 1
  store i32 %97, i32* %plin.0630, align 4, !tbaa !11
  br label %for.inc442

for.inc442:                                       ; preds = %if.else438, %if.then436, %land.lhs.true424, %for.body385
  %plin.1 = phi i32* [ %plin.0630, %for.body385 ], [ %plin.0630, %land.lhs.true424 ], [ %plin.0630, %if.then436 ], [ %incdec.ptr439, %if.else438 ]
  %pli380.1 = phi i32* [ %pli380.0631, %for.body385 ], [ %pli380.0631, %land.lhs.true424 ], [ %incdec.ptr437, %if.then436 ], [ %pli380.0631, %if.else438 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1632, %for.body385 ], [ %inc425, %land.lhs.true424 ], [ %exclChecksum.2, %if.then436 ], [ %exclChecksum.2, %if.else438 ]
  %indvars.iv.next754 = add nuw nsw i64 %indvars.iv753, 1
  %lftr.wideiv755 = trunc i64 %indvars.iv.next754 to i32
  %exitcond756 = icmp eq i32 %lftr.wideiv755, %pairlistindex.1
  br i1 %exitcond756, label %if.end524, label %for.body385

if.else445:                                       ; preds = %land.end362
  br i1 %cmp384628, label %if.then448, label %if.end524

if.then448:                                       ; preds = %if.else445
  %102 = load i32* %cond129575577583589, align 4, !tbaa !11
  %idxprom453 = sext i32 %102 to i64
  %x456 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 0
  %103 = load double* %x456, align 8, !tbaa !59
  %y461 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 1
  %104 = load double* %y461, align 8, !tbaa !61
  %z466 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453, i32 0, i32 2
  %105 = load double* %z466, align 8, !tbaa !62
  br label %while.cond473.outer

while.cond473.outer:                              ; preds = %if.else513, %if.then448
  %idxprom453.pn.ph = phi i64 [ %idxprom453, %if.then448 ], [ %idxprom482, %if.else513 ]
  %p_j_z462.0.ph = phi double [ %105, %if.then448 ], [ %111, %if.else513 ]
  %p_j_y457.0.ph = phi double [ %104, %if.then448 ], [ %110, %if.else513 ]
  %p_j_x452.0.ph = phi double [ %103, %if.then448 ], [ %109, %if.else513 ]
  %j2449.0.ph = phi i32 [ %102, %if.then448 ], [ %108, %if.else513 ]
  %k446.0.ph = phi i32 [ 0, %if.then448 ], [ %inc476, %if.else513 ]
  %plin.2.ph = phi i32* [ %cond151585587, %if.then448 ], [ %incdec.ptr514, %if.else513 ]
  %pli380.2.ph = phi i32* [ %cond140579581591, %if.then448 ], [ %pli380.2.ph611, %if.else513 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0712, %if.then448 ], [ %exclChecksum.5, %if.else513 ]
  br label %while.cond473.outer604

while.cond473.outer604:                           ; preds = %if.then511, %while.cond473.outer
  %idxprom453.pn.ph605 = phi i64 [ %idxprom482, %if.then511 ], [ %idxprom453.pn.ph, %while.cond473.outer ]
  %p_j_z462.0.ph606 = phi double [ %111, %if.then511 ], [ %p_j_z462.0.ph, %while.cond473.outer ]
  %p_j_y457.0.ph607 = phi double [ %110, %if.then511 ], [ %p_j_y457.0.ph, %while.cond473.outer ]
  %p_j_x452.0.ph608 = phi double [ %109, %if.then511 ], [ %p_j_x452.0.ph, %while.cond473.outer ]
  %j2449.0.ph609 = phi i32 [ %108, %if.then511 ], [ %j2449.0.ph, %while.cond473.outer ]
  %k446.0.ph610 = phi i32 [ %inc476, %if.then511 ], [ %k446.0.ph, %while.cond473.outer ]
  %pli380.2.ph611 = phi i32* [ %incdec.ptr512, %if.then511 ], [ %pli380.2.ph, %while.cond473.outer ]
  %exclChecksum.4.ph612 = phi i32 [ %exclChecksum.5, %if.then511 ], [ %exclChecksum.4.ph, %while.cond473.outer ]
  br label %while.cond473.outer613

while.cond473.outer613:                           ; preds = %land.lhs.true504, %while.cond473.outer604
  %idxprom453.pn.ph614 = phi i64 [ %idxprom482, %land.lhs.true504 ], [ %idxprom453.pn.ph605, %while.cond473.outer604 ]
  %p_j_z462.0.ph615 = phi double [ %111, %land.lhs.true504 ], [ %p_j_z462.0.ph606, %while.cond473.outer604 ]
  %p_j_y457.0.ph616 = phi double [ %110, %land.lhs.true504 ], [ %p_j_y457.0.ph607, %while.cond473.outer604 ]
  %p_j_x452.0.ph617 = phi double [ %109, %land.lhs.true504 ], [ %p_j_x452.0.ph608, %while.cond473.outer604 ]
  %j2449.0.ph618 = phi i32 [ %108, %land.lhs.true504 ], [ %j2449.0.ph609, %while.cond473.outer604 ]
  %k446.0.ph619 = phi i32 [ %inc476, %land.lhs.true504 ], [ %k446.0.ph610, %while.cond473.outer604 ]
  %exclChecksum.4.ph620 = phi i32 [ %inc505, %land.lhs.true504 ], [ %exclChecksum.4.ph612, %while.cond473.outer604 ]
  %106 = sext i32 %k446.0.ph619 to i64
  br label %while.cond473

while.cond473:                                    ; preds = %while.body475, %while.cond473.outer613
  %indvars.iv749 = phi i64 [ %106, %while.cond473.outer613 ], [ %indvars.iv.next750, %while.body475 ]
  %idxprom453.pn = phi i64 [ %idxprom453.pn.ph614, %while.cond473.outer613 ], [ %idxprom482, %while.body475 ]
  %p_j_z462.0 = phi double [ %p_j_z462.0.ph615, %while.cond473.outer613 ], [ %111, %while.body475 ]
  %p_j_y457.0 = phi double [ %p_j_y457.0.ph616, %while.cond473.outer613 ], [ %110, %while.body475 ]
  %p_j_x452.0 = phi double [ %p_j_x452.0.ph617, %while.cond473.outer613 ], [ %109, %while.body475 ]
  %j2449.0 = phi i32 [ %j2449.0.ph618, %while.cond473.outer613 ], [ %108, %while.body475 ]
  %k446.0 = phi i32 [ %k446.0.ph619, %while.cond473.outer613 ], [ %inc476, %while.body475 ]
  %107 = trunc i64 %indvars.iv749 to i32
  %cmp474 = icmp slt i32 %107, %pairlistindex.1
  br i1 %cmp474, label %while.body475, label %if.end524

while.body475:                                    ; preds = %while.cond473
  %atom2467.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom453.pn, i32 2
  %atom2467.0.in.in = bitcast [4 x i8]* %atom2467.0.in.in.in to i32*
  %atom2467.0.in = load i32* %atom2467.0.in.in, align 4
  %atom2467.0 = and i32 %atom2467.0.in, 4194303
  %indvars.iv.next750 = add nsw i64 %indvars.iv749, 1
  %inc476 = add nsw i32 %k446.0, 1
  %arrayidx478 = getelementptr inbounds i32* %cond129575577583589, i64 %indvars.iv.next750
  %108 = load i32* %arrayidx478, align 4, !tbaa !11
  %sub480 = fsub double %69, %p_j_x452.0
  %mul481 = fmul double %sub480, %sub480
  %idxprom482 = sext i32 %108 to i64
  %x485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 0
  %109 = load double* %x485, align 8, !tbaa !59
  %sub487 = fsub double %70, %p_j_y457.0
  %mul488 = fmul double %sub487, %sub487
  %add489 = fadd double %mul488, %mul481
  %y493 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 1
  %110 = load double* %y493, align 8, !tbaa !61
  %sub494 = fsub double %71, %p_j_z462.0
  %mul495 = fmul double %sub494, %sub494
  %add496 = fadd double %mul495, %add489
  %z500 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom482, i32 0, i32 2
  %111 = load double* %z500, align 8, !tbaa !62
  %cmp501 = fcmp ugt double %add496, %2
  br i1 %cmp501, label %while.cond473, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %while.body475
  %cmp503 = fcmp ugt double %add496, %10
  br i1 %cmp503, label %if.then507, label %land.lhs.true504

land.lhs.true504:                                 ; preds = %land.lhs.true502
  %inc505 = add nsw i32 %exclChecksum.4.ph620, 1
  %tobool506 = icmp eq i32 %inc505, 0
  br i1 %tobool506, label %if.then507, label %while.cond473.outer613

if.then507:                                       ; preds = %land.lhs.true504, %land.lhs.true502
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true504 ], [ %exclChecksum.4.ph620, %land.lhs.true502 ]
  %cmp508 = icmp slt i32 %atom2467.0, %66
  %cmp510 = icmp sgt i32 %atom2467.0, %67
  %or.cond564 = or i1 %cmp508, %cmp510
  br i1 %or.cond564, label %if.else513, label %if.then511

if.then511:                                       ; preds = %if.then507
  %incdec.ptr512 = getelementptr inbounds i32* %pli380.2.ph611, i64 1
  store i32 %j2449.0, i32* %pli380.2.ph611, align 4, !tbaa !11
  br label %while.cond473.outer604

if.else513:                                       ; preds = %if.then507
  %incdec.ptr514 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2449.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond473.outer

if.end524:                                        ; preds = %while.cond473, %if.else445, %for.inc442, %for.cond383.preheader
  %plin.4 = phi i32* [ %cond151585587, %if.else445 ], [ %cond151585587, %for.cond383.preheader ], [ %plin.2.ph, %while.cond473 ], [ %plin.1, %for.inc442 ]
  %pli380.4 = phi i32* [ %cond140579581591, %if.else445 ], [ %cond140579581591, %for.cond383.preheader ], [ %pli380.2.ph611, %while.cond473 ], [ %pli380.1, %for.inc442 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0712, %if.else445 ], [ %exclChecksum.0712, %for.cond383.preheader ], [ %exclChecksum.4.ph620, %while.cond473 ], [ %exclChecksum.3, %for.inc442 ]
  %sub.ptr.lhs.cast525 = ptrtoint i32* %pli380.4 to i64
  %sub.ptr.sub527 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %sub.ptr.div528523 = lshr exact i64 %sub.ptr.sub527, 2
  %conv529 = trunc i64 %sub.ptr.div528523 to i32
  %tobool530 = icmp eq i32 %conv529, 0
  br i1 %tobool530, label %for.end561, label %for.cond539.preheader

for.cond539.preheader:                            ; preds = %if.end524
  %sub532 = shl i64 %sub.ptr.sub527, 30
  %sext551 = add i64 %sub532, -4294967296
  %idxprom533 = ashr exact i64 %sext551, 32
  %arrayidx534 = getelementptr inbounds i32* %cond140579581591, i64 %idxprom533
  %112 = load i32* %arrayidx534, align 4, !tbaa !11
  %idxprom535 = ashr exact i64 %sub532, 32
  %arrayidx536 = getelementptr inbounds i32* %cond140579581591, i64 %idxprom535
  store i32 %112, i32* %arrayidx536, align 4, !tbaa !11
  %cmp540636 = icmp sgt i32 %conv529, 0
  br i1 %cmp540636, label %for.body541.lr.ph, label %for.end561

for.body541.lr.ph:                                ; preds = %for.cond539.preheader
  %113 = sub i64 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %114 = lshr i64 %113, 2
  %115 = trunc i64 %114 to i32
  br label %for.body541

for.body541:                                      ; preds = %for.inc559, %for.body541.lr.ph
  %indvars.iv757 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next758, %for.inc559 ]
  %plin.5640 = phi i32* [ %plin.4, %for.body541.lr.ph ], [ %plin.6, %for.inc559 ]
  %plix.0639 = phi i32* [ %cond162593, %for.body541.lr.ph ], [ %plix.1, %for.inc559 ]
  %plim.0638 = phi i32* [ %cond173, %for.body541.lr.ph ], [ %plim.1, %for.inc559 ]
  %arrayidx544 = getelementptr inbounds i32* %cond140579581591, i64 %indvars.iv757
  %116 = load i32* %arrayidx544, align 4, !tbaa !11
  %idxprom546 = sext i32 %116 to i64
  %id548 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom546, i32 2
  %117 = bitcast [4 x i8]* %id548 to i32*
  %bf.load549 = load i32* %117, align 4
  %bf.clear550 = and i32 %bf.load549, 4194303
  %idxprom551550 = zext i32 %bf.clear550 to i64
  %add.ptr.sum = sub i64 %idxprom551550, %idx.ext
  %arrayidx552 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %118 = load i8* %arrayidx552, align 1, !tbaa !68
  %conv553 = sext i8 %118 to i32
  switch i32 %conv553, label %for.inc559 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb555
    i32 2, label %sw.bb557
  ]

sw.bb:                                            ; preds = %for.body541
  %incdec.ptr554 = getelementptr inbounds i32* %plin.5640, i64 1
  store i32 %116, i32* %plin.5640, align 4, !tbaa !11
  br label %for.inc559

sw.bb555:                                         ; preds = %for.body541
  %incdec.ptr556 = getelementptr inbounds i32* %plix.0639, i64 1
  store i32 %116, i32* %plix.0639, align 4, !tbaa !11
  br label %for.inc559

sw.bb557:                                         ; preds = %for.body541
  %incdec.ptr558 = getelementptr inbounds i32* %plim.0638, i64 1
  store i32 %116, i32* %plim.0638, align 4, !tbaa !11
  br label %for.inc559

for.inc559:                                       ; preds = %sw.bb557, %sw.bb555, %sw.bb, %for.body541
  %plim.1 = phi i32* [ %plim.0638, %for.body541 ], [ %incdec.ptr558, %sw.bb557 ], [ %plim.0638, %sw.bb555 ], [ %plim.0638, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0639, %for.body541 ], [ %plix.0639, %sw.bb557 ], [ %incdec.ptr556, %sw.bb555 ], [ %plix.0639, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5640, %for.body541 ], [ %plin.5640, %sw.bb557 ], [ %plin.5640, %sw.bb555 ], [ %incdec.ptr554, %sw.bb ]
  %indvars.iv.next758 = add nuw nsw i64 %indvars.iv757, 1
  %lftr.wideiv759 = trunc i64 %indvars.iv.next758 to i32
  %exitcond760 = icmp eq i32 %lftr.wideiv759, %115
  br i1 %exitcond760, label %for.end561, label %for.body541

for.end561:                                       ; preds = %for.inc559, %for.cond539.preheader, %if.end524
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond539.preheader ], [ %plin.4, %if.end524 ], [ %plin.6, %for.inc559 ]
  %plix.0.lcssa = phi i32* [ %cond162593, %for.cond539.preheader ], [ %cond162593, %if.end524 ], [ %plix.1, %for.inc559 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond539.preheader ], [ %cond173, %if.end524 ], [ %plim.1, %for.inc559 ]
  %sub.ptr.lhs.cast562 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %sub.ptr.div565 = ashr exact i64 %sub.ptr.sub564, 2
  %conv566524 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast569 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub571 = sub i64 %sub.ptr.lhs.cast569, %sub.ptr.rhs.cast570
  %sub.ptr.div572 = ashr exact i64 %sub.ptr.sub571, 2
  %add567 = add i64 %sub.ptr.div572, %conv566524
  %add574 = add i64 %add567, %sub.ptr.div565
  %conv575 = trunc i64 %add574 to i32
  %sub.ptr.lhs.cast576 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub578 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %sub.ptr.div579526 = lshr exact i64 %sub.ptr.sub578, 2
  %conv580 = trunc i64 %sub.ptr.div579526 to i32
  %cmp582644 = icmp sgt i32 %conv580, 0
  br i1 %cmp582644, label %for.body583.lr.ph, label %for.end679

for.body583.lr.ph:                                ; preds = %for.end561
  %x657 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y666 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z673 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %119 = sub i64 %sub.ptr.lhs.cast576, %sub.ptr.rhs.cast577
  %120 = lshr i64 %119, 2
  %121 = trunc i64 %120 to i32
  br label %for.body583

for.body583:                                      ; preds = %for.body583, %for.body583.lr.ph
  %indvars.iv761 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next762, %for.body583 ]
  %fullElectVirial_zz.1646 = phi double [ %fullElectVirial_zz.0698, %for.body583.lr.ph ], [ %add672, %for.body583 ]
  %122 = phi <2 x double> [ %61, %for.body583.lr.ph ], [ %143, %for.body583 ]
  %123 = phi <2 x double> [ %62, %for.body583.lr.ph ], [ %156, %for.body583 ]
  %124 = phi <2 x double> [ %63, %for.body583.lr.ph ], [ %149, %for.body583 ]
  %arrayidx586 = getelementptr inbounds i32* %cond151585587, i64 %indvars.iv761
  %125 = load i32* %arrayidx586, align 4, !tbaa !11
  %idx.ext587 = sext i32 %125 to i64
  %x590 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 0
  %126 = load double* %x590, align 8, !tbaa !59
  %sub591 = fsub double %69, %126
  %mul593 = fmul double %sub591, %sub591
  %y595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 1
  %127 = load double* %y595, align 8, !tbaa !61
  %sub596 = fsub double %70, %127
  %mul597 = fmul double %sub596, %sub596
  %add598 = fadd double %mul593, %mul597
  %z600 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 0, i32 2
  %128 = load double* %z600, align 8, !tbaa !62
  %sub601 = fsub double %71, %128
  %mul602 = fmul double %sub601, %sub601
  %add603 = fadd double %add598, %mul602
  %conv604 = fptrunc double %add603 to float
  %129 = bitcast float %conv604 to i32
  %shr = ashr i32 %129, 17
  %add606 = add nsw i32 %shr, %mul
  %mul607 = shl nsw i32 %add606, 4
  %idx.ext608 = sext i32 %mul607 to i64
  %add.ptr610.sum545 = or i64 %idx.ext608, 12
  %add.ptr611 = getelementptr inbounds double* %6, i64 %add.ptr610.sum545
  %130 = load double* %add.ptr611, align 8, !tbaa !17
  %and = and i32 %129, -131072
  %charge614 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 1
  %131 = load float* %charge614, align 4, !tbaa !63
  %conv615 = fpext float %131 to double
  %mul616 = fmul double %mul373, %conv615
  %132 = bitcast i32 %and to float
  %conv618 = fpext float %132 to double
  %sub619 = fsub double %add603, %conv618
  %partition620 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext587, i32 2
  %133 = bitcast [4 x i8]* %partition620 to i32*
  %bf.load621 = load i32* %133, align 4
  %bf.lshr622 = lshr i32 %bf.load621, 28
  %idxprom623 = zext i32 %bf.lshr622 to i64
  %add.ptr369.sum546 = add i64 %idxprom623, %idx.ext368
  %arrayidx624 = getelementptr inbounds double* %94, i64 %add.ptr369.sum546
  %134 = load double* %arrayidx624, align 8, !tbaa !17
  %add.ptr611.sum547 = or i64 %idx.ext608, 13
  %arrayidx625 = getelementptr inbounds double* %6, i64 %add.ptr611.sum547
  %135 = load double* %arrayidx625, align 8, !tbaa !17
  %add.ptr611.sum548 = or i64 %idx.ext608, 14
  %arrayidx626 = getelementptr inbounds double* %6, i64 %add.ptr611.sum548
  %136 = load double* %arrayidx626, align 8, !tbaa !17
  %add.ptr611.sum549 = or i64 %idx.ext608, 15
  %arrayidx627 = getelementptr inbounds double* %6, i64 %add.ptr611.sum549
  %137 = load double* %arrayidx627, align 8, !tbaa !17
  %mul628 = fmul double %mul616, %137
  %mul629 = fmul double %mul616, %136
  %mul630 = fmul double %mul616, %135
  %mul631 = fmul double %130, %mul616
  %mul632 = fmul double %mul628, %sub619
  %add633 = fadd double %mul629, %mul632
  %mul634 = fmul double %sub619, %add633
  %add635 = fadd double %mul630, %mul634
  %mul636 = fmul double %sub619, %add635
  %add637 = fadd double %mul631, %mul636
  %mul640 = fmul double %sub619, 3.000000e+00
  %mul641 = fmul double %mul628, %mul640
  %mul642 = fmul double %mul629, 2.000000e+00
  %add643 = fadd double %mul642, %mul641
  %mul644 = fmul double %sub619, %add643
  %add645 = fadd double %mul630, %mul644
  %mul646 = fmul double %add645, -2.000000e+00
  %mul647 = fmul double %134, %mul646
  %mul650 = fmul double %sub591, %mul647
  %138 = insertelement <2 x double> undef, double %sub591, i32 0
  %139 = insertelement <2 x double> %138, double %sub596, i32 1
  %140 = insertelement <2 x double> undef, double %mul650, i32 0
  %141 = insertelement <2 x double> %140, double %mul650, i32 1
  %142 = fmul <2 x double> %139, %141
  %143 = fadd <2 x double> %122, %142
  %144 = insertelement <2 x double> undef, double %add637, i32 0
  %145 = insertelement <2 x double> %144, double %sub601, i32 1
  %146 = insertelement <2 x double> undef, double %134, i32 0
  %147 = insertelement <2 x double> %146, double %mul650, i32 1
  %148 = fmul <2 x double> %145, %147
  %149 = fadd <2 x double> %124, %148
  %150 = load double* %x657, align 8, !tbaa !72
  %add658 = fadd double %150, %mul650
  store double %add658, double* %x657, align 8, !tbaa !72
  %x659 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 0
  %mul661 = fmul double %sub596, %mul647
  %151 = insertelement <2 x double> undef, double %sub596, i32 0
  %152 = insertelement <2 x double> %151, double %sub601, i32 1
  %153 = insertelement <2 x double> undef, double %mul661, i32 0
  %154 = insertelement <2 x double> %153, double %mul661, i32 1
  %155 = fmul <2 x double> %152, %154
  %156 = fadd <2 x double> %123, %155
  %157 = load double* %y666, align 8, !tbaa !73
  %add667 = fadd double %157, %mul661
  store double %add667, double* %y666, align 8, !tbaa !73
  %158 = bitcast double* %x659 to <2 x double>*
  %159 = load <2 x double>* %158, align 8, !tbaa !17
  %160 = insertelement <2 x double> %140, double %mul661, i32 1
  %161 = fsub <2 x double> %159, %160
  %162 = bitcast double* %x659 to <2 x double>*
  store <2 x double> %161, <2 x double>* %162, align 8, !tbaa !17
  %mul670 = fmul double %sub601, %mul647
  %mul671 = fmul double %sub601, %mul670
  %add672 = fadd double %fullElectVirial_zz.1646, %mul671
  %163 = load double* %z673, align 8, !tbaa !74
  %add674 = fadd double %163, %mul670
  store double %add674, double* %z673, align 8, !tbaa !74
  %z675 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext587, i32 2
  %164 = load double* %z675, align 8, !tbaa !74
  %sub676 = fsub double %164, %mul670
  store double %sub676, double* %z675, align 8, !tbaa !74
  %indvars.iv.next762 = add nuw nsw i64 %indvars.iv761, 1
  %lftr.wideiv763 = trunc i64 %indvars.iv.next762 to i32
  %exitcond764 = icmp eq i32 %lftr.wideiv763, %121
  br i1 %exitcond764, label %for.end679, label %for.body583

for.end679:                                       ; preds = %for.body583, %for.end561
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0698, %for.end561 ], [ %add672, %for.body583 ]
  %165 = phi <2 x double> [ %61, %for.end561 ], [ %143, %for.body583 ]
  %166 = phi <2 x double> [ %62, %for.end561 ], [ %156, %for.body583 ]
  %167 = phi <2 x double> [ %63, %for.end561 ], [ %149, %for.body583 ]
  %conv684 = trunc i64 %sub.ptr.div572 to i32
  %cmp686660 = icmp sgt i32 %conv684, 0
  br i1 %cmp686660, label %for.body687.lr.ph, label %for.end822

for.body687.lr.ph:                                ; preds = %for.end679
  %x798 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y808 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z816 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body687

for.body687:                                      ; preds = %for.body687, %for.body687.lr.ph
  %indvars.iv765 = phi i64 [ 0, %for.body687.lr.ph ], [ %indvars.iv.next766, %for.body687 ]
  %fullElectVirial_zz.2662 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body687.lr.ph ], [ %add815, %for.body687 ]
  %168 = phi <2 x double> [ %165, %for.body687.lr.ph ], [ %193, %for.body687 ]
  %169 = phi <2 x double> [ %166, %for.body687.lr.ph ], [ %206, %for.body687 ]
  %170 = phi <2 x double> [ %167, %for.body687.lr.ph ], [ %199, %for.body687 ]
  %arrayidx690 = getelementptr inbounds i32* %cond173, i64 %indvars.iv765
  %171 = load i32* %arrayidx690, align 4, !tbaa !11
  %idx.ext692 = sext i32 %171 to i64
  %x696 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext692, i32 0, i32 0
  %172 = load double* %x696, align 8, !tbaa !59
  %sub697 = fsub double %69, %172
  %mul699 = fmul double %sub697, %sub697
  %y702 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext692, i32 0, i32 1
  %173 = load double* %y702, align 8, !tbaa !61
  %sub703 = fsub double %70, %173
  %mul704 = fmul double %sub703, %sub703
  %add705 = fadd double %mul699, %mul704
  %z708 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext692, i32 0, i32 2
  %174 = load double* %z708, align 8, !tbaa !62
  %sub709 = fsub double %71, %174
  %mul710 = fmul double %sub709, %sub709
  %add711 = fadd double %add705, %mul710
  %conv713 = fptrunc double %add711 to float
  %175 = bitcast float %conv713 to i32
  %shr717 = ashr i32 %175, 17
  %add718 = add nsw i32 %shr717, %mul
  %mul720 = shl nsw i32 %add718, 4
  %idx.ext721 = sext i32 %mul720 to i64
  %add.ptr723.sum536 = or i64 %idx.ext721, 12
  %add.ptr724 = getelementptr inbounds double* %6, i64 %add.ptr723.sum536
  %176 = load double* %add.ptr724, align 8, !tbaa !17
  %and728 = and i32 %175, -131072
  %charge730 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext692, i32 1
  %177 = load float* %charge730, align 4, !tbaa !63
  %conv731 = fpext float %177 to double
  %mul732 = fmul double %mul373, %conv731
  %178 = bitcast i32 %and728 to float
  %conv735 = fpext float %178 to double
  %sub736 = fsub double %add711, %conv735
  %partition738 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext692, i32 2
  %179 = bitcast [4 x i8]* %partition738 to i32*
  %bf.load739 = load i32* %179, align 4
  %bf.lshr740 = lshr i32 %bf.load739, 28
  %idxprom741 = zext i32 %bf.lshr740 to i64
  %add.ptr369.sum537 = add i64 %idxprom741, %idx.ext368
  %arrayidx742 = getelementptr inbounds double* %94, i64 %add.ptr369.sum537
  %180 = load double* %arrayidx742, align 8, !tbaa !17
  %add.ptr724.sum538 = or i64 %idx.ext721, 13
  %arrayidx744 = getelementptr inbounds double* %6, i64 %add.ptr724.sum538
  %181 = load double* %arrayidx744, align 8, !tbaa !17
  %add.ptr724.sum539 = or i64 %idx.ext721, 14
  %arrayidx746 = getelementptr inbounds double* %6, i64 %add.ptr724.sum539
  %182 = load double* %arrayidx746, align 8, !tbaa !17
  %add.ptr724.sum540 = or i64 %idx.ext721, 15
  %arrayidx748 = getelementptr inbounds double* %6, i64 %add.ptr724.sum540
  %183 = load double* %arrayidx748, align 8, !tbaa !17
  %mul749 = shl nsw i32 %add718, 2
  %idx.ext750 = sext i32 %mul749 to i64
  %add.ptr751 = getelementptr inbounds double* %7, i64 %idx.ext750
  %184 = load double* %add.ptr751, align 8, !tbaa !17
  %mul753 = fmul double %sub, %184
  %sub754 = fsub double %176, %mul753
  %add.ptr751.sum541 = or i64 %idx.ext750, 1
  %arrayidx755 = getelementptr inbounds double* %7, i64 %add.ptr751.sum541
  %185 = load double* %arrayidx755, align 8, !tbaa !17
  %mul756 = fmul double %sub, %185
  %sub757 = fsub double %181, %mul756
  %add.ptr751.sum542 = or i64 %idx.ext750, 2
  %arrayidx758 = getelementptr inbounds double* %7, i64 %add.ptr751.sum542
  %186 = load double* %arrayidx758, align 8, !tbaa !17
  %mul759 = fmul double %sub, %186
  %sub760 = fsub double %182, %mul759
  %add.ptr751.sum543 = or i64 %idx.ext750, 3
  %arrayidx761 = getelementptr inbounds double* %7, i64 %add.ptr751.sum543
  %187 = load double* %arrayidx761, align 8, !tbaa !17
  %mul762 = fmul double %sub, %187
  %sub763 = fsub double %183, %mul762
  %mul764 = fmul double %mul732, %sub763
  %mul765 = fmul double %mul732, %sub760
  %mul766 = fmul double %mul732, %sub757
  %mul767 = fmul double %mul732, %sub754
  %mul769 = fmul double %sub736, %mul764
  %add770 = fadd double %mul765, %mul769
  %mul771 = fmul double %sub736, %add770
  %add772 = fadd double %mul766, %mul771
  %mul773 = fmul double %sub736, %add772
  %add774 = fadd double %mul767, %mul773
  %mul778 = fmul double %sub736, 3.000000e+00
  %mul779 = fmul double %mul778, %mul764
  %mul780 = fmul double %mul765, 2.000000e+00
  %add781 = fadd double %mul780, %mul779
  %mul782 = fmul double %sub736, %add781
  %add783 = fadd double %mul766, %mul782
  %mul785 = fmul double %add783, -2.000000e+00
  %mul786 = fmul double %180, %mul785
  %mul791 = fmul double %sub697, %mul786
  %188 = insertelement <2 x double> undef, double %sub697, i32 0
  %189 = insertelement <2 x double> %188, double %sub703, i32 1
  %190 = insertelement <2 x double> undef, double %mul791, i32 0
  %191 = insertelement <2 x double> %190, double %mul791, i32 1
  %192 = fmul <2 x double> %189, %191
  %193 = fadd <2 x double> %168, %192
  %194 = insertelement <2 x double> undef, double %add774, i32 0
  %195 = insertelement <2 x double> %194, double %sub709, i32 1
  %196 = insertelement <2 x double> undef, double %180, i32 0
  %197 = insertelement <2 x double> %196, double %mul791, i32 1
  %198 = fmul <2 x double> %195, %197
  %199 = fadd <2 x double> %170, %198
  %200 = load double* %x798, align 8, !tbaa !72
  %add799 = fadd double %200, %mul791
  store double %add799, double* %x798, align 8, !tbaa !72
  %x800 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext692, i32 0
  %mul803 = fmul double %sub703, %mul786
  %201 = insertelement <2 x double> undef, double %sub703, i32 0
  %202 = insertelement <2 x double> %201, double %sub709, i32 1
  %203 = insertelement <2 x double> undef, double %mul803, i32 0
  %204 = insertelement <2 x double> %203, double %mul803, i32 1
  %205 = fmul <2 x double> %202, %204
  %206 = fadd <2 x double> %169, %205
  %207 = load double* %y808, align 8, !tbaa !73
  %add809 = fadd double %207, %mul803
  store double %add809, double* %y808, align 8, !tbaa !73
  %208 = bitcast double* %x800 to <2 x double>*
  %209 = load <2 x double>* %208, align 8, !tbaa !17
  %210 = insertelement <2 x double> %190, double %mul803, i32 1
  %211 = fsub <2 x double> %209, %210
  %212 = bitcast double* %x800 to <2 x double>*
  store <2 x double> %211, <2 x double>* %212, align 8, !tbaa !17
  %mul813 = fmul double %sub709, %mul786
  %mul814 = fmul double %sub709, %mul813
  %add815 = fadd double %fullElectVirial_zz.2662, %mul814
  %213 = load double* %z816, align 8, !tbaa !74
  %add817 = fadd double %213, %mul813
  store double %add817, double* %z816, align 8, !tbaa !74
  %z818 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext692, i32 2
  %214 = load double* %z818, align 8, !tbaa !74
  %sub819 = fsub double %214, %mul813
  store double %sub819, double* %z818, align 8, !tbaa !74
  %indvars.iv.next766 = add nuw nsw i64 %indvars.iv765, 1
  %lftr.wideiv767 = trunc i64 %indvars.iv.next766 to i32
  %exitcond768 = icmp eq i32 %lftr.wideiv767, %conv684
  br i1 %exitcond768, label %for.end822, label %for.body687

for.end822:                                       ; preds = %for.body687, %for.end679
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end679 ], [ %add815, %for.body687 ]
  %215 = phi <2 x double> [ %165, %for.end679 ], [ %193, %for.body687 ]
  %216 = phi <2 x double> [ %166, %for.end679 ], [ %206, %for.body687 ]
  %217 = phi <2 x double> [ %167, %for.end679 ], [ %199, %for.body687 ]
  %conv827 = trunc i64 %sub.ptr.div565 to i32
  %cmp829676 = icmp sgt i32 %conv827, 0
  br i1 %cmp829676, label %for.body830.lr.ph, label %for.inc963

for.body830.lr.ph:                                ; preds = %for.end822
  %x938 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y948 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z956 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body830

for.body830:                                      ; preds = %for.body830, %for.body830.lr.ph
  %indvars.iv769 = phi i64 [ 0, %for.body830.lr.ph ], [ %indvars.iv.next770, %for.body830 ]
  %fullElectVirial_zz.3678 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body830.lr.ph ], [ %add955, %for.body830 ]
  %218 = phi <2 x double> [ %215, %for.body830.lr.ph ], [ %243, %for.body830 ]
  %219 = phi <2 x double> [ %216, %for.body830.lr.ph ], [ %256, %for.body830 ]
  %220 = phi <2 x double> [ %217, %for.body830.lr.ph ], [ %249, %for.body830 ]
  %arrayidx833 = getelementptr inbounds i32* %cond162593, i64 %indvars.iv769
  %221 = load i32* %arrayidx833, align 4, !tbaa !11
  %idx.ext835 = sext i32 %221 to i64
  %x839 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext835, i32 0, i32 0
  %222 = load double* %x839, align 8, !tbaa !59
  %sub840 = fsub double %69, %222
  %mul842 = fmul double %sub840, %sub840
  %y845 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext835, i32 0, i32 1
  %223 = load double* %y845, align 8, !tbaa !61
  %sub846 = fsub double %70, %223
  %mul847 = fmul double %sub846, %sub846
  %add848 = fadd double %mul842, %mul847
  %z851 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext835, i32 0, i32 2
  %224 = load double* %z851, align 8, !tbaa !62
  %sub852 = fsub double %71, %224
  %mul853 = fmul double %sub852, %sub852
  %add854 = fadd double %add848, %mul853
  %conv856 = fptrunc double %add854 to float
  %225 = bitcast float %conv856 to i32
  %shr860 = ashr i32 %225, 17
  %add861 = add nsw i32 %shr860, %mul
  %mul863 = shl nsw i32 %add861, 4
  %idx.ext864 = sext i32 %mul863 to i64
  %add.ptr866.sum528 = or i64 %idx.ext864, 12
  %add.ptr867 = getelementptr inbounds double* %6, i64 %add.ptr866.sum528
  %226 = load double* %add.ptr867, align 8, !tbaa !17
  %and871 = and i32 %225, -131072
  %charge873 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext835, i32 1
  %227 = load float* %charge873, align 4, !tbaa !63
  %conv874 = fpext float %227 to double
  %mul875 = fmul double %mul373, %conv874
  %228 = bitcast i32 %and871 to float
  %conv878 = fpext float %228 to double
  %sub879 = fsub double %add854, %conv878
  %partition881 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext835, i32 2
  %229 = bitcast [4 x i8]* %partition881 to i32*
  %bf.load882 = load i32* %229, align 4
  %bf.lshr883 = lshr i32 %bf.load882, 28
  %idxprom884 = zext i32 %bf.lshr883 to i64
  %add.ptr369.sum = add i64 %idxprom884, %idx.ext368
  %arrayidx885 = getelementptr inbounds double* %94, i64 %add.ptr369.sum
  %230 = load double* %arrayidx885, align 8, !tbaa !17
  %add.ptr867.sum529 = or i64 %idx.ext864, 13
  %arrayidx887 = getelementptr inbounds double* %6, i64 %add.ptr867.sum529
  %231 = load double* %arrayidx887, align 8, !tbaa !17
  %add.ptr867.sum530 = or i64 %idx.ext864, 14
  %arrayidx889 = getelementptr inbounds double* %6, i64 %add.ptr867.sum530
  %232 = load double* %arrayidx889, align 8, !tbaa !17
  %add.ptr867.sum531 = or i64 %idx.ext864, 15
  %arrayidx891 = getelementptr inbounds double* %6, i64 %add.ptr867.sum531
  %233 = load double* %arrayidx891, align 8, !tbaa !17
  %mul893 = shl nsw i32 %add861, 2
  %idx.ext894 = sext i32 %mul893 to i64
  %add.ptr895 = getelementptr inbounds double* %7, i64 %idx.ext894
  %234 = load double* %add.ptr895, align 8, !tbaa !17
  %sub897 = fsub double %226, %234
  %add.ptr895.sum532 = or i64 %idx.ext894, 1
  %arrayidx898 = getelementptr inbounds double* %7, i64 %add.ptr895.sum532
  %235 = load double* %arrayidx898, align 8, !tbaa !17
  %sub899 = fsub double %231, %235
  %add.ptr895.sum533 = or i64 %idx.ext894, 2
  %arrayidx900 = getelementptr inbounds double* %7, i64 %add.ptr895.sum533
  %236 = load double* %arrayidx900, align 8, !tbaa !17
  %sub901 = fsub double %232, %236
  %add.ptr895.sum534 = or i64 %idx.ext894, 3
  %arrayidx902 = getelementptr inbounds double* %7, i64 %add.ptr895.sum534
  %237 = load double* %arrayidx902, align 8, !tbaa !17
  %sub903 = fsub double %233, %237
  %mul904 = fmul double %mul875, %sub903
  %mul905 = fmul double %mul875, %sub901
  %mul906 = fmul double %mul875, %sub899
  %mul907 = fmul double %mul875, %sub897
  %mul909 = fmul double %sub879, %mul904
  %add910 = fadd double %mul905, %mul909
  %mul911 = fmul double %sub879, %add910
  %add912 = fadd double %mul906, %mul911
  %mul913 = fmul double %sub879, %add912
  %add914 = fadd double %mul907, %mul913
  %mul918 = fmul double %sub879, 3.000000e+00
  %mul919 = fmul double %mul918, %mul904
  %mul920 = fmul double %mul905, 2.000000e+00
  %add921 = fadd double %mul920, %mul919
  %mul922 = fmul double %sub879, %add921
  %add923 = fadd double %mul906, %mul922
  %mul925 = fmul double %add923, -2.000000e+00
  %mul926 = fmul double %230, %mul925
  %mul931 = fmul double %sub840, %mul926
  %238 = insertelement <2 x double> undef, double %sub840, i32 0
  %239 = insertelement <2 x double> %238, double %sub846, i32 1
  %240 = insertelement <2 x double> undef, double %mul931, i32 0
  %241 = insertelement <2 x double> %240, double %mul931, i32 1
  %242 = fmul <2 x double> %239, %241
  %243 = fadd <2 x double> %218, %242
  %244 = insertelement <2 x double> undef, double %add914, i32 0
  %245 = insertelement <2 x double> %244, double %sub852, i32 1
  %246 = insertelement <2 x double> undef, double %230, i32 0
  %247 = insertelement <2 x double> %246, double %mul931, i32 1
  %248 = fmul <2 x double> %245, %247
  %249 = fadd <2 x double> %220, %248
  %250 = load double* %x938, align 8, !tbaa !72
  %add939 = fadd double %250, %mul931
  store double %add939, double* %x938, align 8, !tbaa !72
  %x940 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext835, i32 0
  %mul943 = fmul double %sub846, %mul926
  %251 = insertelement <2 x double> undef, double %sub846, i32 0
  %252 = insertelement <2 x double> %251, double %sub852, i32 1
  %253 = insertelement <2 x double> undef, double %mul943, i32 0
  %254 = insertelement <2 x double> %253, double %mul943, i32 1
  %255 = fmul <2 x double> %252, %254
  %256 = fadd <2 x double> %219, %255
  %257 = load double* %y948, align 8, !tbaa !73
  %add949 = fadd double %257, %mul943
  store double %add949, double* %y948, align 8, !tbaa !73
  %258 = bitcast double* %x940 to <2 x double>*
  %259 = load <2 x double>* %258, align 8, !tbaa !17
  %260 = insertelement <2 x double> %240, double %mul943, i32 1
  %261 = fsub <2 x double> %259, %260
  %262 = bitcast double* %x940 to <2 x double>*
  store <2 x double> %261, <2 x double>* %262, align 8, !tbaa !17
  %mul953 = fmul double %sub852, %mul926
  %mul954 = fmul double %sub852, %mul953
  %add955 = fadd double %fullElectVirial_zz.3678, %mul954
  %263 = load double* %z956, align 8, !tbaa !74
  %add957 = fadd double %263, %mul953
  store double %add957, double* %z956, align 8, !tbaa !74
  %z958 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext835, i32 2
  %264 = load double* %z958, align 8, !tbaa !74
  %sub959 = fsub double %264, %mul953
  store double %sub959, double* %z958, align 8, !tbaa !74
  %indvars.iv.next770 = add nuw nsw i64 %indvars.iv769, 1
  %lftr.wideiv771 = trunc i64 %indvars.iv.next770 to i32
  %exitcond772 = icmp eq i32 %lftr.wideiv771, %conv827
  br i1 %exitcond772, label %for.inc963, label %for.body830

for.inc963:                                       ; preds = %for.body830, %for.end822, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end822 ], [ %pairCount.2, %for.body830 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0696, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end822 ], [ %pairlistindex.1, %for.body830 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1697, %for.end822 ], [ %i.1697, %for.body830 ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0698, %if.then221 ], [ %fullElectVirial_zz.0698, %cond.end349 ], [ %fullElectVirial_zz.2.lcssa, %for.end822 ], [ %add955, %for.body830 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0712, %if.then221 ], [ %exclChecksum.0712, %cond.end349 ], [ %conv575, %for.end822 ], [ %conv575, %for.body830 ]
  %265 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %215, %for.end822 ], [ %243, %for.body830 ]
  %266 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %216, %for.end822 ], [ %256, %for.body830 ]
  %267 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %217, %for.end822 ], [ %249, %for.body830 ]
  %inc964 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc964, %12
  br i1 %cmp183, label %for.body184, label %for.end965

for.end965:                                       ; preds = %for.inc963, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc963 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end172 ], [ %fullElectVirial_zz.4, %for.inc963 ]
  %268 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %265, %for.inc963 ]
  %269 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %266, %for.inc963 ]
  %270 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %267, %for.inc963 ]
  %271 = extractelement <2 x double> %270, i32 0
  %arraydecay966 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp967 = icmp eq i32* %cond567569788794, %arraydecay966
  br i1 %cmp967, label %if.end972, label %delete.notnull970

delete.notnull970:                                ; preds = %for.end965
  %272 = bitcast i32* %cond567569788794 to i8*
  call void @_ZdaPv(i8* %272) #7
  br label %if.end972

if.end972:                                        ; preds = %delete.notnull970, %for.end965
  %arraydecay973 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp974 = icmp eq i32* %cond19571786795, %arraydecay973
  br i1 %cmp974, label %if.end979, label %delete.notnull977

delete.notnull977:                                ; preds = %if.end972
  %273 = bitcast i32* %cond19571786795 to i8*
  call void @_ZdaPv(i8* %273) #7
  br label %if.end979

if.end979:                                        ; preds = %delete.notnull977, %if.end972
  %arraydecay980 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp981 = icmp eq i32* %cond30790793, %arraydecay980
  br i1 %cmp981, label %if.end986, label %delete.notnull984

delete.notnull984:                                ; preds = %if.end979
  %274 = bitcast i32* %cond30790793 to i8*
  call void @_ZdaPv(i8* %274) #7
  br label %if.end986

if.end986:                                        ; preds = %delete.notnull984, %if.end979
  %arraydecay987 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp988 = icmp eq i32* %cond129575577583589, %arraydecay987
  br i1 %cmp988, label %if.end993, label %delete.notnull991

delete.notnull991:                                ; preds = %if.end986
  %275 = bitcast i32* %cond129575577583589 to i8*
  call void @_ZdaPv(i8* %275) #7
  br label %if.end993

if.end993:                                        ; preds = %delete.notnull991, %if.end986
  %arraydecay994 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp995 = icmp eq i32* %cond140579581591, %arraydecay994
  br i1 %cmp995, label %if.end1000, label %delete.notnull998

delete.notnull998:                                ; preds = %if.end993
  %276 = bitcast i32* %cond140579581591 to i8*
  call void @_ZdaPv(i8* %276) #7
  br label %if.end1000

if.end1000:                                       ; preds = %delete.notnull998, %if.end993
  %arraydecay1001 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1002 = icmp eq i32* %cond151585587, %arraydecay1001
  br i1 %cmp1002, label %if.end1007, label %delete.notnull1005

delete.notnull1005:                               ; preds = %if.end1000
  %277 = bitcast i32* %cond151585587 to i8*
  call void @_ZdaPv(i8* %277) #7
  br label %if.end1007

if.end1007:                                       ; preds = %delete.notnull1005, %if.end1000
  %arraydecay1008 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1009 = icmp eq i32* %cond162593, %arraydecay1008
  br i1 %cmp1009, label %if.end1014, label %delete.notnull1012

delete.notnull1012:                               ; preds = %if.end1007
  %278 = bitcast i32* %cond162593 to i8*
  call void @_ZdaPv(i8* %278) #7
  br label %if.end1014

if.end1014:                                       ; preds = %delete.notnull1012, %if.end1007
  %arraydecay1015 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1016 = icmp eq i32* %cond173, %arraydecay1015
  br i1 %cmp1016, label %if.end1021, label %delete.notnull1019

delete.notnull1019:                               ; preds = %if.end1014
  %279 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %279) #7
  br label %if.end1021

if.end1021:                                       ; preds = %delete.notnull1019, %if.end1014
  %conv1022 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1023 = getelementptr inbounds double* %1, i64 22
  %280 = load double* %arrayidx1023, align 8, !tbaa !17
  %add1024 = fadd double %conv1022, %280
  store double %add1024, double* %arrayidx1023, align 8, !tbaa !17
  %arrayidx1025 = getelementptr inbounds double* %1, i64 1
  %281 = load double* %arrayidx1025, align 8, !tbaa !17
  %add1026 = fadd double %271, %281
  store double %add1026, double* %arrayidx1025, align 8, !tbaa !17
  %arrayidx1027 = getelementptr inbounds double* %1, i64 12
  %282 = bitcast double* %arrayidx1027 to <2 x double>*
  %283 = load <2 x double>* %282, align 8, !tbaa !17
  %284 = fadd <2 x double> %268, %283
  %285 = bitcast double* %arrayidx1027 to <2 x double>*
  store <2 x double> %284, <2 x double>* %285, align 8, !tbaa !17
  %arrayidx1031 = getelementptr inbounds double* %1, i64 14
  %286 = bitcast double* %arrayidx1031 to <2 x double>*
  %287 = load <2 x double>* %286, align 8, !tbaa !17
  %288 = shufflevector <2 x double> %270, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %289 = shufflevector <2 x double> %288, <2 x double> %268, <2 x i32> <i32 0, i32 3>
  %290 = fadd <2 x double> %289, %287
  %291 = bitcast double* %arrayidx1031 to <2 x double>*
  store <2 x double> %290, <2 x double>* %291, align 8, !tbaa !17
  %arrayidx1035 = getelementptr inbounds double* %1, i64 16
  %292 = bitcast double* %arrayidx1035 to <2 x double>*
  %293 = load <2 x double>* %292, align 8, !tbaa !17
  %294 = fadd <2 x double> %269, %293
  %295 = bitcast double* %arrayidx1035 to <2 x double>*
  store <2 x double> %294, <2 x double>* %295, align 8, !tbaa !17
  %arrayidx1039 = getelementptr inbounds double* %1, i64 18
  %296 = bitcast double* %arrayidx1039 to <2 x double>*
  %297 = load <2 x double>* %296, align 8, !tbaa !17
  %298 = shufflevector <2 x double> %288, <2 x double> %269, <2 x i32> <i32 0, i32 3>
  %299 = fadd <2 x double> %298, %297
  %300 = bitcast double* %arrayidx1039 to <2 x double>*
  store <2 x double> %299, <2 x double>* %300, align 8, !tbaa !17
  %arrayidx1043 = getelementptr inbounds double* %1, i64 20
  %301 = load double* %arrayidx1043, align 8, !tbaa !17
  %add1044 = fadd double %fullElectVirial_zz.0.lcssa, %301
  store double %add1044, double* %arrayidx1043, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1021, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil28calc_self_slow_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31747 = icmp sgt i32 %13, 0
  br i1 %cmp31747, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30822 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond573575820 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19577818 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv810 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next811, %for.inc ]
  %g.0748 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv810, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0748, 1
  %idxprom41 = sext i32 %g.0748 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond573575820, i64 %idxprom41
  %30 = trunc i64 %indvars.iv810 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0748, %for.body ]
  %indvars.iv.next811 = add nuw nsw i64 %indvars.iv810, 1
  %lftr.wideiv812 = trunc i64 %indvars.iv.next811 to i32
  %exitcond813 = icmp eq i32 %lftr.wideiv812, %13
  br i1 %exitcond813, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond573575820, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond573575820, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa827 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19577817826 = phi i32* [ %cond19577818, %for.end ], [ %cond19577818, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond573575819825 = phi i32* [ %cond573575820, %for.end ], [ %cond573575820, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30821824 = phi i32* [ %cond30822, %for.end ], [ %cond30822, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56741 = icmp sgt i32 %g.0.lcssa827, 0
  br i1 %cmp56741, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv806 = phi i64 [ %indvars.iv.next807, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0743 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0742 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond573575819825, i64 %indvars.iv806
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0743, 1
  %idxprom68 = sext i32 %fixg.0743 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19577817826, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0742, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0743, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next807 = add nuw nsw i64 %indvars.iv806, 1
  %lftr.wideiv808 = trunc i64 %indvars.iv.next807 to i32
  %exitcond809 = icmp eq i32 %lftr.wideiv808, %g.0.lcssa827
  br i1 %exitcond809, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond573575819825, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond573575819825 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19577817826, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19577817826 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30821824, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30821824 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19577817826, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19577817826, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2580 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147599 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125585587597 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114581583589595 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136591593 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171719 = icmp sgt i32 %sub162, 0
  br i1 %cmp171719, label %for.body172.lr.ph, label %for.end986

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125585587597 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147599 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30821824 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114581583589595 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc984, %for.body172.lr.ph
  %exclChecksum.0733 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc984 ]
  %i.0726 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc985, %for.inc984 ]
  %j_hgroup.0725 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc984 ]
  %g_lower.0724 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc984 ]
  %fixg_lower.0723 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc984 ]
  %pairlistindex.0722 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc984 ]
  %pairlistoffset.0721 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc984 ]
  %pairCount.0720 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc984 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %275, %for.inc984 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %276, %for.inc984 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %277, %for.inc984 ]
  %idxprom173 = sext i32 %i.0726 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i601 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i601, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i601, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i601, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0726
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0720
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0720, %div165
  %cmp214 = icmp slt i32 %pairCount.0720, %div168
  %or.cond567 = and i1 %cmp212, %cmp214
  br i1 %or.cond567, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0726
  br label %for.inc984

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0720, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0726
  %cmp237603 = icmp slt i32 %g_lower.0724, %g.0.lcssa827
  br i1 %cmp237603, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0724 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa827
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1604 = phi i32 [ %g_lower.0724, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond573575819825, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1604, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0724, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1604, %land.rhs238 ]
  %cmp245605 = icmp slt i32 %fixg_lower.0723, %fixg.2580
  br i1 %cmp245605, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0723 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next756 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2580
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv755 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next756, %while.cond244 ]
  %fixg_lower.1606 = phi i32 [ %fixg_lower.0723, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19577817826, i64 %indvars.iv755
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next756 = add nsw i64 %indvars.iv755, 1
  %inc252 = add nsw i32 %fixg_lower.1606, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0723, %land.end ], [ %fixg_lower.0723, %while.cond244.loopexit ], [ %fixg_lower.1606, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0724, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0725, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1608 = add nsw i32 %i.0726, 1
  %cmp257609 = icmp slt i32 %j.1608, %j_hgroup.1
  br i1 %cmp257609, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0726
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0726
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1608
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1608, %86
  %broadcast.splatinsert855 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat856 = shufflevector <4 x i32> %broadcast.splatinsert855, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction857 = add <4 x i32> %broadcast.splat856, <i32 0, i32 1, i32 2, i32 3>
  %induction858 = add <4 x i32> %broadcast.splat856, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114581583589595, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction857, <4 x i32>* %88, align 4
  %.sum861 = or i64 %index, 4
  %89 = getelementptr i32* %cond114581583589595, i64 %.sum861
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction858, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !95

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val853 = phi i32 [ %j.1608, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv757 = phi i64 [ %indvars.iv.next758, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1611 = phi i32 [ %j.1, %for.body258 ], [ %resume.val853, %middle.block ]
  %indvars.iv.next758 = add nuw nsw i64 %indvars.iv757, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114581583589595, i64 %indvars.iv757
  store i32 %j.1611, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1611, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next758 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !96

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114581583589595, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19577817826, i32* %cond573575819825
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2580, i32 %g.0.lcssa827
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30821824, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv763 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next764, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv763 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next764 = add nsw i64 %indvars.iv763, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next764
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div564 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div564 to i32
  %cmp330617 = icmp sgt i32 %conv328, 0
  br i1 %cmp330617, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv765 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next766, %cond.end351 ]
  %pli.0619 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30821824, i64 %indvars.iv765
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp565 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp565, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0619, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0619, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0619, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0619, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0619, i64 %cond352
  %indvars.iv.next766 = add nuw nsw i64 %indvars.iv765, 1
  %lftr.wideiv767 = trunc i64 %indvars.iv.next766 to i32
  %exitcond768 = icmp eq i32 %lftr.wideiv767, %104
  br i1 %exitcond768, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369561 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369561 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext562 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext562, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114581583589595, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114581583589595, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0721, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0720, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0722, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0723, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0724, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0725, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load390.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %110 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %111 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %111, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %112 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %112 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %cmp409645 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409645, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %113 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv778 = phi i64 [ %113, %for.body410.lr.ph ], [ %indvars.iv.next779, %for.inc466 ]
  %exclChecksum.1649 = phi i32 [ %exclChecksum.0733, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0648 = phi i32* [ %cond125585587597, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0647 = phi i32* [ %cond136591593, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114581583589595, i64 %indvars.iv778
  %114 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %114 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %115 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %67, %115
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %116 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %68, %116
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %117 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %69, %117
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %118 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %118, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond568 = or i1 %tobool444, %cmp445
  br i1 %or.cond568, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1649, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1649, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %64
  %cmp459 = icmp sgt i32 %bf.clear456, %65
  %or.cond569 = or i1 %cmp457, %cmp459
  br i1 %or.cond569, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0648, i64 1
  store i32 %114, i32* %pli405.0648, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0647, i64 1
  store i32 %114, i32* %plin.0647, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0647, %for.body410 ], [ %plin.0647, %land.lhs.true448 ], [ %plin.0647, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0648, %for.body410 ], [ %pli405.0648, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0648, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1649, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next779 = add nsw i64 %indvars.iv778, 1
  %lftr.wideiv780 = trunc i64 %indvars.iv.next779 to i32
  %exitcond781 = icmp eq i32 %lftr.wideiv780, %pairlistindex.2
  br i1 %exitcond781, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409645, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114581583589595, i64 %idxprom474
  %119 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %119 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %120 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %121 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %122 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %122, %if.then472 ], [ %128, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %121, %if.then472 ], [ %127, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %120, %if.then472 ], [ %126, %if.else537 ]
  %j2473.0.ph = phi i32 [ %119, %if.then472 ], [ %125, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136591593, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125585587597, %if.then472 ], [ %pli405.2.ph628, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0733, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer621

while.cond497.outer621:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph622 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph623 = phi double [ %128, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph624 = phi double [ %127, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph625 = phi double [ %126, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph626 = phi i32 [ %125, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph627 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph628 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph629 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer630

while.cond497.outer630:                           ; preds = %land.lhs.true528, %while.cond497.outer621
  %idxprom477.pn.ph631 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph622, %while.cond497.outer621 ]
  %p_j_z486.0.ph632 = phi double [ %128, %land.lhs.true528 ], [ %p_j_z486.0.ph623, %while.cond497.outer621 ]
  %p_j_y481.0.ph633 = phi double [ %127, %land.lhs.true528 ], [ %p_j_y481.0.ph624, %while.cond497.outer621 ]
  %p_j_x476.0.ph634 = phi double [ %126, %land.lhs.true528 ], [ %p_j_x476.0.ph625, %while.cond497.outer621 ]
  %j2473.0.ph635 = phi i32 [ %125, %land.lhs.true528 ], [ %j2473.0.ph626, %while.cond497.outer621 ]
  %k470.0.ph636 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph627, %while.cond497.outer621 ]
  %exclChecksum.4.ph637 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph629, %while.cond497.outer621 ]
  %123 = sext i32 %k470.0.ph636 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer630
  %indvars.iv774 = phi i64 [ %123, %while.cond497.outer630 ], [ %indvars.iv.next775, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph631, %while.cond497.outer630 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph632, %while.cond497.outer630 ], [ %128, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph633, %while.cond497.outer630 ], [ %127, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph634, %while.cond497.outer630 ], [ %126, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph635, %while.cond497.outer630 ], [ %125, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph636, %while.cond497.outer630 ], [ %inc500, %while.body499 ]
  %124 = trunc i64 %indvars.iv774 to i32
  %cmp498 = icmp slt i32 %124, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next775 = add nsw i64 %indvars.iv774, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114581583589595, i64 %indvars.iv.next775
  %125 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %67, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %125 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %126 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %68, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %127 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %69, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %128 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph637, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer630

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph637, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %64
  %cmp534 = icmp sgt i32 %atom2491.0, %65
  %or.cond570 = or i1 %cmp532, %cmp534
  br i1 %or.cond570, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph628, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph628, align 4, !tbaa !11
  br label %while.cond497.outer621

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136591593, %if.else469 ], [ %cond136591593, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125585587597, %if.else469 ], [ %cond125585587597, %for.cond408.preheader ], [ %pli405.2.ph628, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0733, %if.else469 ], [ %exclChecksum.0733, %for.cond408.preheader ], [ %exclChecksum.4.ph637, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552531 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552531 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext559 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext559, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125585587597, i64 %idxprom557
  %129 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125585587597, i64 %idxprom559
  store i32 %129, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564653 = icmp ult i32* %cond136591593, %plin.4
  br i1 %cmp564653, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8656 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0655 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147599, %for.cond563.preheader ]
  %pln.0654 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136591593, %for.cond563.preheader ]
  %130 = load i32* %pln.0654, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %130, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0655, i64 1
  store i32 %130, i32* %plix.0655, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8656, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0654, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8656, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147599, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0655, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136591593, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0654, %land.lhs.true565 ]
  %cmp573660 = icmp sgt i32 %conv553, 0
  br i1 %cmp573660, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv788 = phi i64 [ %indvars.iv.next789, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9663 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1662 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0661 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125585587597, i64 %indvars.iv788
  %131 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %131, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1662, i64 1
  store i32 %131, i32* %plix.1662, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9663, -1
  %indvars.iv.next789 = add nuw nsw i64 %indvars.iv788, 1
  %inc584 = add nsw i32 %k562.0661, 1
  %132 = trunc i64 %indvars.iv.next789 to i32
  %cmp573 = icmp slt i32 %132, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9663, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1662, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0661, %land.lhs.true574 ]
  %cmp587667 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587667, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %133 = sext i32 %k562.0.lcssa to i64
  %134 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %135 = lshr i64 %134, 2
  %136 = trunc i64 %135 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv790 = phi i64 [ %133, %for.body588.lr.ph ], [ %indvars.iv.next791, %for.inc606 ]
  %plin.5671 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2670 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0669 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125585587597, i64 %indvars.iv790
  %137 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %137 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %138 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %138, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598558 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598558, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %139 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %139 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5671, i64 1
  store i32 %137, i32* %plin.5671, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2670, i64 1
  store i32 %137, i32* %plix.2670, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0669, i64 1
  store i32 %137, i32* %plim.0669, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0669, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0669, %sw.bb602 ], [ %plim.0669, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2670, %for.body588 ], [ %plix.2670, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2670, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5671, %for.body588 ], [ %plin.5671, %sw.bb604 ], [ %plin.5671, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next791 = add nsw i64 %indvars.iv790, 1
  %lftr.wideiv792 = trunc i64 %indvars.iv.next791 to i32
  %exitcond793 = icmp eq i32 %lftr.wideiv792, %136
  br i1 %exitcond793, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612 = ashr exact i64 %sub.ptr.sub611, 2
  %conv613532 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613532
  %add621 = add i64 %add614, %sub.ptr.div612
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626534 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626534 to i32
  %cmp629675 = icmp sgt i32 %conv627, 0
  br i1 %cmp629675, label %for.body630.lr.ph, label %for.end718

for.body630.lr.ph:                                ; preds = %for.end608
  %x696 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y705 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z712 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630, %for.body630.lr.ph
  %indvars.iv794 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next795, %for.body630 ]
  %140 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %160, %for.body630 ]
  %141 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %167, %for.body630 ]
  %142 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %178, %for.body630 ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv794
  %143 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %143 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %144 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %67, %144
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %145 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %68, %145
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %146 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %69, %146
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %147 = bitcast float %conv651 to i32
  %shr = ashr i32 %147, 17
  %add653 = add nsw i32 %shr, %mul
  %mul654 = shl nsw i32 %add653, 4
  %idx.ext655 = sext i32 %mul654 to i64
  %and = and i32 %147, -131072
  %charge661 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %148 = load float* %charge661, align 4, !tbaa !63
  %conv662 = fpext float %148 to double
  %mul663 = fmul double %mul398, %conv662
  %149 = bitcast i32 %and to float
  %conv665 = fpext float %149 to double
  %sub666 = fsub double %add650, %conv665
  %partition667 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %150 = bitcast [4 x i8]* %partition667 to i32*
  %bf.load668 = load i32* %150, align 4
  %bf.lshr669 = lshr i32 %bf.load668, 28
  %idxprom670 = zext i32 %bf.lshr669 to i64
  %add.ptr394.sum554 = add i64 %idxprom670, %idx.ext393
  %arrayidx671 = getelementptr inbounds double* %110, i64 %add.ptr394.sum554
  %151 = load double* %arrayidx671, align 8, !tbaa !17
  %add.ptr658.sum555 = or i64 %idx.ext655, 13
  %arrayidx672 = getelementptr inbounds double* %6, i64 %add.ptr658.sum555
  %152 = load double* %arrayidx672, align 8, !tbaa !17
  %add.ptr658.sum556 = or i64 %idx.ext655, 14
  %arrayidx673 = getelementptr inbounds double* %6, i64 %add.ptr658.sum556
  %153 = load double* %arrayidx673, align 8, !tbaa !17
  %add.ptr658.sum557 = or i64 %idx.ext655, 15
  %arrayidx674 = getelementptr inbounds double* %6, i64 %add.ptr658.sum557
  %154 = load double* %arrayidx674, align 8, !tbaa !17
  %mul675 = fmul double %mul663, %154
  %mul676 = fmul double %mul663, %153
  %mul677 = fmul double %mul663, %152
  %mul679 = fmul double %sub666, 3.000000e+00
  %mul680 = fmul double %mul675, %mul679
  %mul681 = fmul double %mul676, 2.000000e+00
  %add682 = fadd double %mul681, %mul680
  %mul683 = fmul double %sub666, %add682
  %add684 = fadd double %mul677, %mul683
  %mul685 = fmul double %add684, -2.000000e+00
  %mul686 = fmul double %151, %mul685
  %mul689 = fmul double %sub638, %mul686
  %155 = insertelement <2 x double> undef, double %sub638, i32 0
  %156 = insertelement <2 x double> %155, double %sub643, i32 1
  %157 = insertelement <2 x double> undef, double %mul689, i32 0
  %158 = insertelement <2 x double> %157, double %mul689, i32 1
  %159 = fmul <2 x double> %156, %158
  %160 = fadd <2 x double> %140, %159
  %161 = load double* %x696, align 8, !tbaa !72
  %add697 = fadd double %161, %mul689
  store double %add697, double* %x696, align 8, !tbaa !72
  %x698 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul700 = fmul double %sub643, %mul686
  %162 = insertelement <2 x double> undef, double %sub643, i32 0
  %163 = insertelement <2 x double> %162, double %sub648, i32 1
  %164 = insertelement <2 x double> undef, double %mul700, i32 0
  %165 = insertelement <2 x double> %164, double %mul700, i32 1
  %166 = fmul <2 x double> %163, %165
  %167 = fadd <2 x double> %141, %166
  %168 = load double* %y705, align 8, !tbaa !73
  %add706 = fadd double %168, %mul700
  store double %add706, double* %y705, align 8, !tbaa !73
  %169 = bitcast double* %x698 to <2 x double>*
  %170 = load <2 x double>* %169, align 8, !tbaa !17
  %171 = insertelement <2 x double> %157, double %mul700, i32 1
  %172 = fsub <2 x double> %170, %171
  %173 = bitcast double* %x698 to <2 x double>*
  store <2 x double> %172, <2 x double>* %173, align 8, !tbaa !17
  %mul709 = fmul double %sub648, %mul686
  %174 = insertelement <2 x double> undef, double %sub648, i32 0
  %175 = insertelement <2 x double> %174, double %sub648, i32 1
  %176 = insertelement <2 x double> %157, double %mul709, i32 1
  %177 = fmul <2 x double> %175, %176
  %178 = fadd <2 x double> %142, %177
  %179 = load double* %z712, align 8, !tbaa !74
  %add713 = fadd double %179, %mul709
  store double %add713, double* %z712, align 8, !tbaa !74
  %z714 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %180 = load double* %z714, align 8, !tbaa !74
  %sub715 = fsub double %180, %mul709
  store double %sub715, double* %z714, align 8, !tbaa !74
  %indvars.iv.next795 = add nuw nsw i64 %indvars.iv794, 1
  %lftr.wideiv796 = trunc i64 %indvars.iv.next795 to i32
  %exitcond797 = icmp eq i32 %lftr.wideiv796, %conv627
  br i1 %exitcond797, label %for.end718, label %for.body630

for.end718:                                       ; preds = %for.body630, %for.end608
  %181 = phi <2 x double> [ %59, %for.end608 ], [ %160, %for.body630 ]
  %182 = phi <2 x double> [ %60, %for.end608 ], [ %167, %for.body630 ]
  %183 = phi <2 x double> [ %61, %for.end608 ], [ %178, %for.body630 ]
  %conv723 = trunc i64 %sub.ptr.div619 to i32
  %cmp725689 = icmp sgt i32 %conv723, 0
  br i1 %cmp725689, label %for.body726.lr.ph, label %for.end852

for.body726.lr.ph:                                ; preds = %for.end718
  %x828 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y838 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z846 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body726

for.body726:                                      ; preds = %for.body726, %for.body726.lr.ph
  %indvars.iv798 = phi i64 [ 0, %for.body726.lr.ph ], [ %indvars.iv.next799, %for.body726 ]
  %184 = phi <2 x double> [ %181, %for.body726.lr.ph ], [ %207, %for.body726 ]
  %185 = phi <2 x double> [ %182, %for.body726.lr.ph ], [ %214, %for.body726 ]
  %186 = phi <2 x double> [ %183, %for.body726.lr.ph ], [ %225, %for.body726 ]
  %arrayidx729 = getelementptr inbounds i32* %cond158, i64 %indvars.iv798
  %187 = load i32* %arrayidx729, align 4, !tbaa !11
  %idx.ext731 = sext i32 %187 to i64
  %x735 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext731, i32 0, i32 0
  %188 = load double* %x735, align 8, !tbaa !59
  %sub736 = fsub double %67, %188
  %mul738 = fmul double %sub736, %sub736
  %y741 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext731, i32 0, i32 1
  %189 = load double* %y741, align 8, !tbaa !61
  %sub742 = fsub double %68, %189
  %mul743 = fmul double %sub742, %sub742
  %add744 = fadd double %mul738, %mul743
  %z747 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext731, i32 0, i32 2
  %190 = load double* %z747, align 8, !tbaa !62
  %sub748 = fsub double %69, %190
  %mul749 = fmul double %sub748, %sub748
  %add750 = fadd double %add744, %mul749
  %conv752 = fptrunc double %add750 to float
  %191 = bitcast float %conv752 to i32
  %shr756 = ashr i32 %191, 17
  %add757 = add nsw i32 %shr756, %mul
  %mul759 = shl nsw i32 %add757, 4
  %idx.ext760 = sext i32 %mul759 to i64
  %and767 = and i32 %191, -131072
  %charge769 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext731, i32 1
  %192 = load float* %charge769, align 4, !tbaa !63
  %conv770 = fpext float %192 to double
  %mul771 = fmul double %mul398, %conv770
  %193 = bitcast i32 %and767 to float
  %conv774 = fpext float %193 to double
  %sub775 = fsub double %add750, %conv774
  %partition777 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext731, i32 2
  %194 = bitcast [4 x i8]* %partition777 to i32*
  %bf.load778 = load i32* %194, align 4
  %bf.lshr779 = lshr i32 %bf.load778, 28
  %idxprom780 = zext i32 %bf.lshr779 to i64
  %add.ptr394.sum545 = add i64 %idxprom780, %idx.ext393
  %arrayidx781 = getelementptr inbounds double* %110, i64 %add.ptr394.sum545
  %195 = load double* %arrayidx781, align 8, !tbaa !17
  %add.ptr763.sum546 = or i64 %idx.ext760, 13
  %arrayidx783 = getelementptr inbounds double* %6, i64 %add.ptr763.sum546
  %196 = load double* %arrayidx783, align 8, !tbaa !17
  %add.ptr763.sum547 = or i64 %idx.ext760, 14
  %arrayidx785 = getelementptr inbounds double* %6, i64 %add.ptr763.sum547
  %197 = load double* %arrayidx785, align 8, !tbaa !17
  %add.ptr763.sum548 = or i64 %idx.ext760, 15
  %arrayidx787 = getelementptr inbounds double* %6, i64 %add.ptr763.sum548
  %198 = load double* %arrayidx787, align 8, !tbaa !17
  %mul788 = shl nsw i32 %add757, 2
  %idx.ext789 = sext i32 %mul788 to i64
  %add.ptr790.sum549 = or i64 %idx.ext789, 1
  %arrayidx794 = getelementptr inbounds double* %7, i64 %add.ptr790.sum549
  %199 = load double* %arrayidx794, align 8, !tbaa !17
  %mul795 = fmul double %sub, %199
  %sub796 = fsub double %196, %mul795
  %add.ptr790.sum550 = or i64 %idx.ext789, 2
  %arrayidx797 = getelementptr inbounds double* %7, i64 %add.ptr790.sum550
  %200 = load double* %arrayidx797, align 8, !tbaa !17
  %mul798 = fmul double %sub, %200
  %sub799 = fsub double %197, %mul798
  %add.ptr790.sum551 = or i64 %idx.ext789, 3
  %arrayidx800 = getelementptr inbounds double* %7, i64 %add.ptr790.sum551
  %201 = load double* %arrayidx800, align 8, !tbaa !17
  %mul801 = fmul double %sub, %201
  %sub802 = fsub double %198, %mul801
  %mul803 = fmul double %mul771, %sub802
  %mul804 = fmul double %mul771, %sub799
  %mul805 = fmul double %mul771, %sub796
  %mul808 = fmul double %sub775, 3.000000e+00
  %mul809 = fmul double %mul808, %mul803
  %mul810 = fmul double %mul804, 2.000000e+00
  %add811 = fadd double %mul810, %mul809
  %mul812 = fmul double %sub775, %add811
  %add813 = fadd double %mul805, %mul812
  %mul815 = fmul double %add813, -2.000000e+00
  %mul816 = fmul double %195, %mul815
  %mul821 = fmul double %sub736, %mul816
  %202 = insertelement <2 x double> undef, double %sub736, i32 0
  %203 = insertelement <2 x double> %202, double %sub742, i32 1
  %204 = insertelement <2 x double> undef, double %mul821, i32 0
  %205 = insertelement <2 x double> %204, double %mul821, i32 1
  %206 = fmul <2 x double> %203, %205
  %207 = fadd <2 x double> %184, %206
  %208 = load double* %x828, align 8, !tbaa !72
  %add829 = fadd double %208, %mul821
  store double %add829, double* %x828, align 8, !tbaa !72
  %x830 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext731, i32 0
  %mul833 = fmul double %sub742, %mul816
  %209 = insertelement <2 x double> undef, double %sub742, i32 0
  %210 = insertelement <2 x double> %209, double %sub748, i32 1
  %211 = insertelement <2 x double> undef, double %mul833, i32 0
  %212 = insertelement <2 x double> %211, double %mul833, i32 1
  %213 = fmul <2 x double> %210, %212
  %214 = fadd <2 x double> %185, %213
  %215 = load double* %y838, align 8, !tbaa !73
  %add839 = fadd double %215, %mul833
  store double %add839, double* %y838, align 8, !tbaa !73
  %216 = bitcast double* %x830 to <2 x double>*
  %217 = load <2 x double>* %216, align 8, !tbaa !17
  %218 = insertelement <2 x double> %204, double %mul833, i32 1
  %219 = fsub <2 x double> %217, %218
  %220 = bitcast double* %x830 to <2 x double>*
  store <2 x double> %219, <2 x double>* %220, align 8, !tbaa !17
  %mul843 = fmul double %sub748, %mul816
  %221 = insertelement <2 x double> undef, double %sub748, i32 0
  %222 = insertelement <2 x double> %221, double %sub748, i32 1
  %223 = insertelement <2 x double> %204, double %mul843, i32 1
  %224 = fmul <2 x double> %222, %223
  %225 = fadd <2 x double> %186, %224
  %226 = load double* %z846, align 8, !tbaa !74
  %add847 = fadd double %226, %mul843
  store double %add847, double* %z846, align 8, !tbaa !74
  %z848 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext731, i32 2
  %227 = load double* %z848, align 8, !tbaa !74
  %sub849 = fsub double %227, %mul843
  store double %sub849, double* %z848, align 8, !tbaa !74
  %indvars.iv.next799 = add nuw nsw i64 %indvars.iv798, 1
  %lftr.wideiv800 = trunc i64 %indvars.iv.next799 to i32
  %exitcond801 = icmp eq i32 %lftr.wideiv800, %conv723
  br i1 %exitcond801, label %for.end852, label %for.body726

for.end852:                                       ; preds = %for.body726, %for.end718
  %228 = phi <2 x double> [ %181, %for.end718 ], [ %207, %for.body726 ]
  %229 = phi <2 x double> [ %182, %for.end718 ], [ %214, %for.body726 ]
  %230 = phi <2 x double> [ %183, %for.end718 ], [ %225, %for.body726 ]
  %conv857 = trunc i64 %sub.ptr.div612 to i32
  %cmp859703 = icmp sgt i32 %conv857, 0
  br i1 %cmp859703, label %for.body860.lr.ph, label %for.inc984

for.body860.lr.ph:                                ; preds = %for.end852
  %x959 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y969 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z977 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body860

for.body860:                                      ; preds = %for.body860, %for.body860.lr.ph
  %indvars.iv802 = phi i64 [ 0, %for.body860.lr.ph ], [ %indvars.iv.next803, %for.body860 ]
  %231 = phi <2 x double> [ %228, %for.body860.lr.ph ], [ %254, %for.body860 ]
  %232 = phi <2 x double> [ %229, %for.body860.lr.ph ], [ %261, %for.body860 ]
  %233 = phi <2 x double> [ %230, %for.body860.lr.ph ], [ %272, %for.body860 ]
  %arrayidx863 = getelementptr inbounds i32* %cond147599, i64 %indvars.iv802
  %234 = load i32* %arrayidx863, align 4, !tbaa !11
  %idx.ext865 = sext i32 %234 to i64
  %x869 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext865, i32 0, i32 0
  %235 = load double* %x869, align 8, !tbaa !59
  %sub870 = fsub double %67, %235
  %mul872 = fmul double %sub870, %sub870
  %y875 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext865, i32 0, i32 1
  %236 = load double* %y875, align 8, !tbaa !61
  %sub876 = fsub double %68, %236
  %mul877 = fmul double %sub876, %sub876
  %add878 = fadd double %mul872, %mul877
  %z881 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext865, i32 0, i32 2
  %237 = load double* %z881, align 8, !tbaa !62
  %sub882 = fsub double %69, %237
  %mul883 = fmul double %sub882, %sub882
  %add884 = fadd double %add878, %mul883
  %conv886 = fptrunc double %add884 to float
  %238 = bitcast float %conv886 to i32
  %shr890 = ashr i32 %238, 17
  %add891 = add nsw i32 %shr890, %mul
  %mul893 = shl nsw i32 %add891, 4
  %idx.ext894 = sext i32 %mul893 to i64
  %and901 = and i32 %238, -131072
  %charge903 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext865, i32 1
  %239 = load float* %charge903, align 4, !tbaa !63
  %conv904 = fpext float %239 to double
  %mul905 = fmul double %mul398, %conv904
  %240 = bitcast i32 %and901 to float
  %conv908 = fpext float %240 to double
  %sub909 = fsub double %add884, %conv908
  %partition911 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext865, i32 2
  %241 = bitcast [4 x i8]* %partition911 to i32*
  %bf.load912 = load i32* %241, align 4
  %bf.lshr913 = lshr i32 %bf.load912, 28
  %idxprom914 = zext i32 %bf.lshr913 to i64
  %add.ptr394.sum = add i64 %idxprom914, %idx.ext393
  %arrayidx915 = getelementptr inbounds double* %110, i64 %add.ptr394.sum
  %242 = load double* %arrayidx915, align 8, !tbaa !17
  %add.ptr897.sum537 = or i64 %idx.ext894, 13
  %arrayidx917 = getelementptr inbounds double* %6, i64 %add.ptr897.sum537
  %243 = load double* %arrayidx917, align 8, !tbaa !17
  %add.ptr897.sum538 = or i64 %idx.ext894, 14
  %arrayidx919 = getelementptr inbounds double* %6, i64 %add.ptr897.sum538
  %244 = load double* %arrayidx919, align 8, !tbaa !17
  %add.ptr897.sum539 = or i64 %idx.ext894, 15
  %arrayidx921 = getelementptr inbounds double* %6, i64 %add.ptr897.sum539
  %245 = load double* %arrayidx921, align 8, !tbaa !17
  %mul923 = shl nsw i32 %add891, 2
  %idx.ext924 = sext i32 %mul923 to i64
  %add.ptr925.sum540 = or i64 %idx.ext924, 1
  %arrayidx928 = getelementptr inbounds double* %7, i64 %add.ptr925.sum540
  %246 = load double* %arrayidx928, align 8, !tbaa !17
  %sub929 = fsub double %243, %246
  %add.ptr925.sum541 = or i64 %idx.ext924, 2
  %arrayidx930 = getelementptr inbounds double* %7, i64 %add.ptr925.sum541
  %247 = load double* %arrayidx930, align 8, !tbaa !17
  %sub931 = fsub double %244, %247
  %add.ptr925.sum542 = or i64 %idx.ext924, 3
  %arrayidx932 = getelementptr inbounds double* %7, i64 %add.ptr925.sum542
  %248 = load double* %arrayidx932, align 8, !tbaa !17
  %sub933 = fsub double %245, %248
  %mul934 = fmul double %mul905, %sub933
  %mul935 = fmul double %mul905, %sub931
  %mul936 = fmul double %mul905, %sub929
  %mul939 = fmul double %sub909, 3.000000e+00
  %mul940 = fmul double %mul939, %mul934
  %mul941 = fmul double %mul935, 2.000000e+00
  %add942 = fadd double %mul941, %mul940
  %mul943 = fmul double %sub909, %add942
  %add944 = fadd double %mul936, %mul943
  %mul946 = fmul double %add944, -2.000000e+00
  %mul947 = fmul double %242, %mul946
  %mul952 = fmul double %sub870, %mul947
  %249 = insertelement <2 x double> undef, double %sub870, i32 0
  %250 = insertelement <2 x double> %249, double %sub876, i32 1
  %251 = insertelement <2 x double> undef, double %mul952, i32 0
  %252 = insertelement <2 x double> %251, double %mul952, i32 1
  %253 = fmul <2 x double> %250, %252
  %254 = fadd <2 x double> %231, %253
  %255 = load double* %x959, align 8, !tbaa !72
  %add960 = fadd double %255, %mul952
  store double %add960, double* %x959, align 8, !tbaa !72
  %x961 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext865, i32 0
  %mul964 = fmul double %sub876, %mul947
  %256 = insertelement <2 x double> undef, double %sub876, i32 0
  %257 = insertelement <2 x double> %256, double %sub882, i32 1
  %258 = insertelement <2 x double> undef, double %mul964, i32 0
  %259 = insertelement <2 x double> %258, double %mul964, i32 1
  %260 = fmul <2 x double> %257, %259
  %261 = fadd <2 x double> %232, %260
  %262 = load double* %y969, align 8, !tbaa !73
  %add970 = fadd double %262, %mul964
  store double %add970, double* %y969, align 8, !tbaa !73
  %263 = bitcast double* %x961 to <2 x double>*
  %264 = load <2 x double>* %263, align 8, !tbaa !17
  %265 = insertelement <2 x double> %251, double %mul964, i32 1
  %266 = fsub <2 x double> %264, %265
  %267 = bitcast double* %x961 to <2 x double>*
  store <2 x double> %266, <2 x double>* %267, align 8, !tbaa !17
  %mul974 = fmul double %sub882, %mul947
  %268 = insertelement <2 x double> undef, double %sub882, i32 0
  %269 = insertelement <2 x double> %268, double %sub882, i32 1
  %270 = insertelement <2 x double> %251, double %mul974, i32 1
  %271 = fmul <2 x double> %269, %270
  %272 = fadd <2 x double> %233, %271
  %273 = load double* %z977, align 8, !tbaa !74
  %add978 = fadd double %273, %mul974
  store double %add978, double* %z977, align 8, !tbaa !74
  %z979 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext865, i32 2
  %274 = load double* %z979, align 8, !tbaa !74
  %sub980 = fsub double %274, %mul974
  store double %sub980, double* %z979, align 8, !tbaa !74
  %indvars.iv.next803 = add nuw nsw i64 %indvars.iv802, 1
  %lftr.wideiv804 = trunc i64 %indvars.iv.next803 to i32
  %exitcond805 = icmp eq i32 %lftr.wideiv804, %conv857
  br i1 %exitcond805, label %for.inc984, label %for.body860

for.inc984:                                       ; preds = %for.body860, %for.end852, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end852 ], [ %pairCount.2, %for.body860 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0721, %if.then215 ], [ %pairlistoffset.1, %for.end852 ], [ %pairlistoffset.1, %for.body860 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0722, %if.then215 ], [ %pairlistindex.2, %for.end852 ], [ %pairlistindex.2, %for.body860 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0723, %if.then215 ], [ %fixg_lower.3, %for.end852 ], [ %fixg_lower.3, %for.body860 ]
  %g_lower.4 = phi i32 [ %g_lower.0724, %if.then215 ], [ %g_lower.3, %for.end852 ], [ %g_lower.3, %for.body860 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0725, %if.then215 ], [ %j_hgroup.2, %for.end852 ], [ %j_hgroup.2, %for.body860 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0726, %for.end852 ], [ %i.0726, %for.body860 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0733, %if.then215 ], [ %conv622, %for.end852 ], [ %conv622, %for.body860 ]
  %275 = phi <2 x double> [ %59, %if.then215 ], [ %228, %for.end852 ], [ %254, %for.body860 ]
  %276 = phi <2 x double> [ %60, %if.then215 ], [ %229, %for.end852 ], [ %261, %for.body860 ]
  %277 = phi <2 x double> [ %61, %if.then215 ], [ %230, %for.end852 ], [ %272, %for.body860 ]
  %inc985 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc985
  br i1 %cmp171, label %for.body172, label %for.end986

for.end986:                                       ; preds = %for.inc984, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc984 ]
  %278 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %275, %for.inc984 ]
  %279 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %276, %for.inc984 ]
  %280 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %277, %for.inc984 ]
  %281 = extractelement <2 x double> %280, i32 1
  %arraydecay987 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp988 = icmp eq i32* %cond573575819825, %arraydecay987
  br i1 %cmp988, label %if.end993, label %delete.notnull991

delete.notnull991:                                ; preds = %for.end986
  %282 = bitcast i32* %cond573575819825 to i8*
  call void @_ZdaPv(i8* %282) #7
  br label %if.end993

if.end993:                                        ; preds = %delete.notnull991, %for.end986
  %arraydecay994 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp995 = icmp eq i32* %cond19577817826, %arraydecay994
  br i1 %cmp995, label %if.end1000, label %delete.notnull998

delete.notnull998:                                ; preds = %if.end993
  %283 = bitcast i32* %cond19577817826 to i8*
  call void @_ZdaPv(i8* %283) #7
  br label %if.end1000

if.end1000:                                       ; preds = %delete.notnull998, %if.end993
  %arraydecay1001 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1002 = icmp eq i32* %cond30821824, %arraydecay1001
  br i1 %cmp1002, label %if.end1007, label %delete.notnull1005

delete.notnull1005:                               ; preds = %if.end1000
  %284 = bitcast i32* %cond30821824 to i8*
  call void @_ZdaPv(i8* %284) #7
  br label %if.end1007

if.end1007:                                       ; preds = %delete.notnull1005, %if.end1000
  %arraydecay1008 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1009 = icmp eq i32* %cond114581583589595, %arraydecay1008
  br i1 %cmp1009, label %if.end1014, label %delete.notnull1012

delete.notnull1012:                               ; preds = %if.end1007
  %285 = bitcast i32* %cond114581583589595 to i8*
  call void @_ZdaPv(i8* %285) #7
  br label %if.end1014

if.end1014:                                       ; preds = %delete.notnull1012, %if.end1007
  %arraydecay1015 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1016 = icmp eq i32* %cond125585587597, %arraydecay1015
  br i1 %cmp1016, label %if.end1021, label %delete.notnull1019

delete.notnull1019:                               ; preds = %if.end1014
  %286 = bitcast i32* %cond125585587597 to i8*
  call void @_ZdaPv(i8* %286) #7
  br label %if.end1021

if.end1021:                                       ; preds = %delete.notnull1019, %if.end1014
  %arraydecay1022 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1023 = icmp eq i32* %cond136591593, %arraydecay1022
  br i1 %cmp1023, label %if.end1028, label %delete.notnull1026

delete.notnull1026:                               ; preds = %if.end1021
  %287 = bitcast i32* %cond136591593 to i8*
  call void @_ZdaPv(i8* %287) #7
  br label %if.end1028

if.end1028:                                       ; preds = %delete.notnull1026, %if.end1021
  %arraydecay1029 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1030 = icmp eq i32* %cond147599, %arraydecay1029
  br i1 %cmp1030, label %if.end1035, label %delete.notnull1033

delete.notnull1033:                               ; preds = %if.end1028
  %288 = bitcast i32* %cond147599 to i8*
  call void @_ZdaPv(i8* %288) #7
  br label %if.end1035

if.end1035:                                       ; preds = %delete.notnull1033, %if.end1028
  %arraydecay1036 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1037 = icmp eq i32* %cond158, %arraydecay1036
  br i1 %cmp1037, label %if.end1042, label %delete.notnull1040

delete.notnull1040:                               ; preds = %if.end1035
  %289 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %289) #7
  br label %if.end1042

if.end1042:                                       ; preds = %delete.notnull1040, %if.end1035
  %conv1043 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1044 = getelementptr inbounds double* %1, i64 22
  %290 = load double* %arrayidx1044, align 8, !tbaa !17
  %add1045 = fadd double %conv1043, %290
  store double %add1045, double* %arrayidx1044, align 8, !tbaa !17
  %arrayidx1046 = getelementptr inbounds double* %1, i64 12
  %291 = bitcast double* %arrayidx1046 to <2 x double>*
  %292 = load <2 x double>* %291, align 8, !tbaa !17
  %293 = fadd <2 x double> %278, %292
  %294 = bitcast double* %arrayidx1046 to <2 x double>*
  store <2 x double> %293, <2 x double>* %294, align 8, !tbaa !17
  %arrayidx1050 = getelementptr inbounds double* %1, i64 14
  %295 = bitcast double* %arrayidx1050 to <2 x double>*
  %296 = load <2 x double>* %295, align 8, !tbaa !17
  %297 = shufflevector <2 x double> %280, <2 x double> %278, <2 x i32> <i32 0, i32 3>
  %298 = fadd <2 x double> %297, %296
  %299 = bitcast double* %arrayidx1050 to <2 x double>*
  store <2 x double> %298, <2 x double>* %299, align 8, !tbaa !17
  %arrayidx1054 = getelementptr inbounds double* %1, i64 16
  %300 = bitcast double* %arrayidx1054 to <2 x double>*
  %301 = load <2 x double>* %300, align 8, !tbaa !17
  %302 = fadd <2 x double> %279, %301
  %303 = bitcast double* %arrayidx1054 to <2 x double>*
  store <2 x double> %302, <2 x double>* %303, align 8, !tbaa !17
  %arrayidx1058 = getelementptr inbounds double* %1, i64 18
  %304 = bitcast double* %arrayidx1058 to <2 x double>*
  %305 = load <2 x double>* %304, align 8, !tbaa !17
  %306 = shufflevector <2 x double> %280, <2 x double> %279, <2 x i32> <i32 0, i32 3>
  %307 = fadd <2 x double> %306, %305
  %308 = bitcast double* %arrayidx1058 to <2 x double>*
  store <2 x double> %307, <2 x double>* %308, align 8, !tbaa !17
  %arrayidx1062 = getelementptr inbounds double* %1, i64 20
  %309 = load double* %arrayidx1062, align 8, !tbaa !17
  %add1063 = fadd double %281, %309
  store double %add1063, double* %arrayidx1062, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1042, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil35calc_self_energy_slow_fullelect_lesEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31783 = icmp sgt i32 %13, 0
  br i1 %cmp31783, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30858 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond601603856 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19605854 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv846 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next847, %for.inc ]
  %g.0784 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv846, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0784, 1
  %idxprom41 = sext i32 %g.0784 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond601603856, i64 %idxprom41
  %30 = trunc i64 %indvars.iv846 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0784, %for.body ]
  %indvars.iv.next847 = add nuw nsw i64 %indvars.iv846, 1
  %lftr.wideiv848 = trunc i64 %indvars.iv.next847 to i32
  %exitcond849 = icmp eq i32 %lftr.wideiv848, %13
  br i1 %exitcond849, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond601603856, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond601603856, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa863 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19605853862 = phi i32* [ %cond19605854, %for.end ], [ %cond19605854, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond601603855861 = phi i32* [ %cond601603856, %for.end ], [ %cond601603856, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30857860 = phi i32* [ %cond30858, %for.end ], [ %cond30858, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56777 = icmp sgt i32 %g.0.lcssa863, 0
  br i1 %cmp56777, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv842 = phi i64 [ %indvars.iv.next843, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0779 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0778 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond601603855861, i64 %indvars.iv842
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0779, 1
  %idxprom68 = sext i32 %fixg.0779 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19605853862, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0778, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0779, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next843 = add nuw nsw i64 %indvars.iv842, 1
  %lftr.wideiv844 = trunc i64 %indvars.iv.next843 to i32
  %exitcond845 = icmp eq i32 %lftr.wideiv844, %g.0.lcssa863
  br i1 %exitcond845, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond601603855861, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond601603855861 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19605853862, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19605853862 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30857860, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30857860 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19605853862, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19605853862, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2608 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147627 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125613615625 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114609611617623 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136619621 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171753 = icmp sgt i32 %sub162, 0
  br i1 %cmp171753, label %for.body172.lr.ph, label %for.end1012

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast550 = ptrtoint i32* %cond125613615625 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i32* %cond147627 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30857860 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114609611617623 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1010, %for.body172.lr.ph
  %exclChecksum.0768 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1010 ]
  %fullElectVirial_zz.0761 = phi double [ 0.000000e+00, %for.body172.lr.ph ], [ %fullElectVirial_zz.4, %for.inc1010 ]
  %i.0760 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1011, %for.inc1010 ]
  %j_hgroup.0759 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1010 ]
  %g_lower.0758 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1010 ]
  %fixg_lower.0757 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1010 ]
  %pairlistindex.0756 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1010 ]
  %pairlistoffset.0755 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1010 ]
  %pairCount.0754 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1010 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %283, %for.inc1010 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %284, %for.inc1010 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %285, %for.inc1010 ]
  %idxprom173 = sext i32 %i.0760 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i629 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i629, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i629, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i629, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0760
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0754
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0754, %div165
  %cmp214 = icmp slt i32 %pairCount.0754, %div168
  %or.cond595 = and i1 %cmp212, %cmp214
  br i1 %or.cond595, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0760
  br label %for.inc1010

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0754, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0760
  %cmp237631 = icmp slt i32 %g_lower.0758, %g.0.lcssa863
  br i1 %cmp237631, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0758 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa863
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1632 = phi i32 [ %g_lower.0758, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond601603855861, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1632, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0758, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1632, %land.rhs238 ]
  %cmp245633 = icmp slt i32 %fixg_lower.0757, %fixg.2608
  br i1 %cmp245633, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0757 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next792 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2608
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv791 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next792, %while.cond244 ]
  %fixg_lower.1634 = phi i32 [ %fixg_lower.0757, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19605853862, i64 %indvars.iv791
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next792 = add nsw i64 %indvars.iv791, 1
  %inc252 = add nsw i32 %fixg_lower.1634, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0757, %land.end ], [ %fixg_lower.0757, %while.cond244.loopexit ], [ %fixg_lower.1634, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0758, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0759, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1636 = add nsw i32 %i.0760, 1
  %cmp257637 = icmp slt i32 %j.1636, %j_hgroup.1
  br i1 %cmp257637, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0760
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0760
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1636
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1636, %86
  %broadcast.splatinsert891 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat892 = shufflevector <4 x i32> %broadcast.splatinsert891, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction893 = add <4 x i32> %broadcast.splat892, <i32 0, i32 1, i32 2, i32 3>
  %induction894 = add <4 x i32> %broadcast.splat892, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114609611617623, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction893, <4 x i32>* %88, align 4
  %.sum897 = or i64 %index, 4
  %89 = getelementptr i32* %cond114609611617623, i64 %.sum897
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction894, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !97

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val889 = phi i32 [ %j.1636, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv793 = phi i64 [ %indvars.iv.next794, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1639 = phi i32 [ %j.1, %for.body258 ], [ %resume.val889, %middle.block ]
  %indvars.iv.next794 = add nuw nsw i64 %indvars.iv793, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114609611617623, i64 %indvars.iv793
  store i32 %j.1639, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1639, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next794 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !98

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114609611617623, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19605853862, i32* %cond601603855861
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2608, i32 %g.0.lcssa863
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30857860, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv799 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next800, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv799 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next800 = add nsw i64 %indvars.iv799, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next800
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div592 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div592 to i32
  %cmp330645 = icmp sgt i32 %conv328, 0
  br i1 %cmp330645, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv801 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next802, %cond.end351 ]
  %pli.0647 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30857860, i64 %indvars.iv801
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp593 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp593, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0647, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0647, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0647, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0647, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0647, i64 %cond352
  %indvars.iv.next802 = add nuw nsw i64 %indvars.iv801, 1
  %lftr.wideiv803 = trunc i64 %indvars.iv.next802 to i32
  %exitcond804 = icmp eq i32 %lftr.wideiv803, %104
  br i1 %exitcond804, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369589 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369589 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext590 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext590, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114609611617623, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114609611617623, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0755, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0754, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0756, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0757, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0758, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0759, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load390.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load390.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %110 = load double** @_ZN20ComputeNonbondedUtil12lambda_tableE, align 8, !tbaa !1
  %111 = load i32* @_ZN20ComputeNonbondedUtil9lesFactorE, align 4, !tbaa !11
  %add389 = add nsw i32 %111, 1
  %bf.lshr391 = lshr i32 %bf.load390.pre, 28
  %mul392 = mul nsw i32 %bf.lshr391, %add389
  %idx.ext393 = sext i32 %mul392 to i64
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %112 = load float* %charge, align 4, !tbaa !63
  %conv395 = fpext float %112 to double
  %mul396 = fmul double %conv395, 3.320636e+02
  %mul397 = fmul double %8, %mul396
  %mul398 = fmul double %4, %mul397
  %cmp409673 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond408.preheader, label %if.else469

for.cond408.preheader:                            ; preds = %land.end387
  br i1 %cmp409673, label %for.body410.lr.ph, label %if.end548

for.body410.lr.ph:                                ; preds = %for.cond408.preheader
  %113 = sext i32 %pairlistoffset.1 to i64
  br label %for.body410

for.body410:                                      ; preds = %for.inc466, %for.body410.lr.ph
  %indvars.iv814 = phi i64 [ %113, %for.body410.lr.ph ], [ %indvars.iv.next815, %for.inc466 ]
  %exclChecksum.1677 = phi i32 [ %exclChecksum.0768, %for.body410.lr.ph ], [ %exclChecksum.3, %for.inc466 ]
  %pli405.0676 = phi i32* [ %cond125613615625, %for.body410.lr.ph ], [ %pli405.1, %for.inc466 ]
  %plin.0675 = phi i32* [ %cond136619621, %for.body410.lr.ph ], [ %plin.1, %for.inc466 ]
  %arrayidx412 = getelementptr inbounds i32* %cond114609611617623, i64 %indvars.iv814
  %114 = load i32* %arrayidx412, align 4, !tbaa !11
  %idxprom414 = sext i32 %114 to i64
  %x417 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 0
  %115 = load double* %x417, align 8, !tbaa !59
  %sub419 = fsub double %67, %115
  %mul420 = fmul double %sub419, %sub419
  %y425 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 1
  %116 = load double* %y425, align 8, !tbaa !61
  %sub427 = fsub double %68, %116
  %mul428 = fmul double %sub427, %sub427
  %add429 = fadd double %mul420, %mul428
  %z434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 0, i32 2
  %117 = load double* %z434, align 8, !tbaa !62
  %sub435 = fsub double %69, %117
  %mul436 = fmul double %sub435, %sub435
  %add437 = fadd double %add429, %mul436
  %atomFixed440 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom414, i32 2
  %118 = bitcast [4 x i8]* %atomFixed440 to i32*
  %bf.load441 = load i32* %118, align 4
  %bf.clear443 = and i32 %bf.load441, 67108864
  %tobool444 = icmp ne i32 %bf.clear443, 0
  %cmp445 = fcmp ugt double %add437, %2
  %or.cond596 = or i1 %tobool444, %cmp445
  br i1 %or.cond596, label %for.inc466, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %for.body410
  %cmp447 = fcmp ugt double %add437, %10
  br i1 %cmp447, label %if.then451, label %land.lhs.true448

land.lhs.true448:                                 ; preds = %land.lhs.true446
  %inc449 = add nsw i32 %exclChecksum.1677, 1
  %tobool450 = icmp eq i32 %inc449, 0
  br i1 %tobool450, label %if.then451, label %for.inc466

if.then451:                                       ; preds = %land.lhs.true448, %land.lhs.true446
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true448 ], [ %exclChecksum.1677, %land.lhs.true446 ]
  %bf.clear456 = and i32 %bf.load441, 4194303
  %cmp457 = icmp slt i32 %bf.clear456, %64
  %cmp459 = icmp sgt i32 %bf.clear456, %65
  %or.cond597 = or i1 %cmp457, %cmp459
  br i1 %or.cond597, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then451
  %incdec.ptr461 = getelementptr inbounds i32* %pli405.0676, i64 1
  store i32 %114, i32* %pli405.0676, align 4, !tbaa !11
  br label %for.inc466

if.else462:                                       ; preds = %if.then451
  %incdec.ptr463 = getelementptr inbounds i32* %plin.0675, i64 1
  store i32 %114, i32* %plin.0675, align 4, !tbaa !11
  br label %for.inc466

for.inc466:                                       ; preds = %if.else462, %if.then460, %land.lhs.true448, %for.body410
  %plin.1 = phi i32* [ %plin.0675, %for.body410 ], [ %plin.0675, %land.lhs.true448 ], [ %plin.0675, %if.then460 ], [ %incdec.ptr463, %if.else462 ]
  %pli405.1 = phi i32* [ %pli405.0676, %for.body410 ], [ %pli405.0676, %land.lhs.true448 ], [ %incdec.ptr461, %if.then460 ], [ %pli405.0676, %if.else462 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1677, %for.body410 ], [ %inc449, %land.lhs.true448 ], [ %exclChecksum.2, %if.then460 ], [ %exclChecksum.2, %if.else462 ]
  %indvars.iv.next815 = add nsw i64 %indvars.iv814, 1
  %lftr.wideiv816 = trunc i64 %indvars.iv.next815 to i32
  %exitcond817 = icmp eq i32 %lftr.wideiv816, %pairlistindex.2
  br i1 %exitcond817, label %if.end548, label %for.body410

if.else469:                                       ; preds = %land.end387
  br i1 %cmp409673, label %if.then472, label %if.end548

if.then472:                                       ; preds = %if.else469
  %idxprom474 = sext i32 %pairlistoffset.1 to i64
  %arrayidx475 = getelementptr inbounds i32* %cond114609611617623, i64 %idxprom474
  %119 = load i32* %arrayidx475, align 4, !tbaa !11
  %idxprom477 = sext i32 %119 to i64
  %x480 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 0
  %120 = load double* %x480, align 8, !tbaa !59
  %y485 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 1
  %121 = load double* %y485, align 8, !tbaa !61
  %z490 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477, i32 0, i32 2
  %122 = load double* %z490, align 8, !tbaa !62
  br label %while.cond497.outer

while.cond497.outer:                              ; preds = %if.else537, %if.then472
  %idxprom477.pn.ph = phi i64 [ %idxprom477, %if.then472 ], [ %idxprom506, %if.else537 ]
  %p_j_z486.0.ph = phi double [ %122, %if.then472 ], [ %128, %if.else537 ]
  %p_j_y481.0.ph = phi double [ %121, %if.then472 ], [ %127, %if.else537 ]
  %p_j_x476.0.ph = phi double [ %120, %if.then472 ], [ %126, %if.else537 ]
  %j2473.0.ph = phi i32 [ %119, %if.then472 ], [ %125, %if.else537 ]
  %k470.0.ph = phi i32 [ %pairlistoffset.1, %if.then472 ], [ %inc500, %if.else537 ]
  %plin.2.ph = phi i32* [ %cond136619621, %if.then472 ], [ %incdec.ptr538, %if.else537 ]
  %pli405.2.ph = phi i32* [ %cond125613615625, %if.then472 ], [ %pli405.2.ph656, %if.else537 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0768, %if.then472 ], [ %exclChecksum.5, %if.else537 ]
  br label %while.cond497.outer649

while.cond497.outer649:                           ; preds = %if.then535, %while.cond497.outer
  %idxprom477.pn.ph650 = phi i64 [ %idxprom506, %if.then535 ], [ %idxprom477.pn.ph, %while.cond497.outer ]
  %p_j_z486.0.ph651 = phi double [ %128, %if.then535 ], [ %p_j_z486.0.ph, %while.cond497.outer ]
  %p_j_y481.0.ph652 = phi double [ %127, %if.then535 ], [ %p_j_y481.0.ph, %while.cond497.outer ]
  %p_j_x476.0.ph653 = phi double [ %126, %if.then535 ], [ %p_j_x476.0.ph, %while.cond497.outer ]
  %j2473.0.ph654 = phi i32 [ %125, %if.then535 ], [ %j2473.0.ph, %while.cond497.outer ]
  %k470.0.ph655 = phi i32 [ %inc500, %if.then535 ], [ %k470.0.ph, %while.cond497.outer ]
  %pli405.2.ph656 = phi i32* [ %incdec.ptr536, %if.then535 ], [ %pli405.2.ph, %while.cond497.outer ]
  %exclChecksum.4.ph657 = phi i32 [ %exclChecksum.5, %if.then535 ], [ %exclChecksum.4.ph, %while.cond497.outer ]
  br label %while.cond497.outer658

while.cond497.outer658:                           ; preds = %land.lhs.true528, %while.cond497.outer649
  %idxprom477.pn.ph659 = phi i64 [ %idxprom506, %land.lhs.true528 ], [ %idxprom477.pn.ph650, %while.cond497.outer649 ]
  %p_j_z486.0.ph660 = phi double [ %128, %land.lhs.true528 ], [ %p_j_z486.0.ph651, %while.cond497.outer649 ]
  %p_j_y481.0.ph661 = phi double [ %127, %land.lhs.true528 ], [ %p_j_y481.0.ph652, %while.cond497.outer649 ]
  %p_j_x476.0.ph662 = phi double [ %126, %land.lhs.true528 ], [ %p_j_x476.0.ph653, %while.cond497.outer649 ]
  %j2473.0.ph663 = phi i32 [ %125, %land.lhs.true528 ], [ %j2473.0.ph654, %while.cond497.outer649 ]
  %k470.0.ph664 = phi i32 [ %inc500, %land.lhs.true528 ], [ %k470.0.ph655, %while.cond497.outer649 ]
  %exclChecksum.4.ph665 = phi i32 [ %inc529, %land.lhs.true528 ], [ %exclChecksum.4.ph657, %while.cond497.outer649 ]
  %123 = sext i32 %k470.0.ph664 to i64
  br label %while.cond497

while.cond497:                                    ; preds = %while.body499, %while.cond497.outer658
  %indvars.iv810 = phi i64 [ %123, %while.cond497.outer658 ], [ %indvars.iv.next811, %while.body499 ]
  %idxprom477.pn = phi i64 [ %idxprom477.pn.ph659, %while.cond497.outer658 ], [ %idxprom506, %while.body499 ]
  %p_j_z486.0 = phi double [ %p_j_z486.0.ph660, %while.cond497.outer658 ], [ %128, %while.body499 ]
  %p_j_y481.0 = phi double [ %p_j_y481.0.ph661, %while.cond497.outer658 ], [ %127, %while.body499 ]
  %p_j_x476.0 = phi double [ %p_j_x476.0.ph662, %while.cond497.outer658 ], [ %126, %while.body499 ]
  %j2473.0 = phi i32 [ %j2473.0.ph663, %while.cond497.outer658 ], [ %125, %while.body499 ]
  %k470.0 = phi i32 [ %k470.0.ph664, %while.cond497.outer658 ], [ %inc500, %while.body499 ]
  %124 = trunc i64 %indvars.iv810 to i32
  %cmp498 = icmp slt i32 %124, %pairlistindex.2
  br i1 %cmp498, label %while.body499, label %if.end548

while.body499:                                    ; preds = %while.cond497
  %atom2491.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom477.pn, i32 2
  %atom2491.0.in.in = bitcast [4 x i8]* %atom2491.0.in.in.in to i32*
  %atom2491.0.in = load i32* %atom2491.0.in.in, align 4
  %atom2491.0 = and i32 %atom2491.0.in, 4194303
  %indvars.iv.next811 = add nsw i64 %indvars.iv810, 1
  %inc500 = add nsw i32 %k470.0, 1
  %arrayidx502 = getelementptr inbounds i32* %cond114609611617623, i64 %indvars.iv.next811
  %125 = load i32* %arrayidx502, align 4, !tbaa !11
  %sub504 = fsub double %67, %p_j_x476.0
  %mul505 = fmul double %sub504, %sub504
  %idxprom506 = sext i32 %125 to i64
  %x509 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 0
  %126 = load double* %x509, align 8, !tbaa !59
  %sub511 = fsub double %68, %p_j_y481.0
  %mul512 = fmul double %sub511, %sub511
  %add513 = fadd double %mul512, %mul505
  %y517 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 1
  %127 = load double* %y517, align 8, !tbaa !61
  %sub518 = fsub double %69, %p_j_z486.0
  %mul519 = fmul double %sub518, %sub518
  %add520 = fadd double %mul519, %add513
  %z524 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom506, i32 0, i32 2
  %128 = load double* %z524, align 8, !tbaa !62
  %cmp525 = fcmp ugt double %add520, %2
  br i1 %cmp525, label %while.cond497, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %while.body499
  %cmp527 = fcmp ugt double %add520, %10
  br i1 %cmp527, label %if.then531, label %land.lhs.true528

land.lhs.true528:                                 ; preds = %land.lhs.true526
  %inc529 = add nsw i32 %exclChecksum.4.ph665, 1
  %tobool530 = icmp eq i32 %inc529, 0
  br i1 %tobool530, label %if.then531, label %while.cond497.outer658

if.then531:                                       ; preds = %land.lhs.true528, %land.lhs.true526
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true528 ], [ %exclChecksum.4.ph665, %land.lhs.true526 ]
  %cmp532 = icmp slt i32 %atom2491.0, %64
  %cmp534 = icmp sgt i32 %atom2491.0, %65
  %or.cond598 = or i1 %cmp532, %cmp534
  br i1 %or.cond598, label %if.else537, label %if.then535

if.then535:                                       ; preds = %if.then531
  %incdec.ptr536 = getelementptr inbounds i32* %pli405.2.ph656, i64 1
  store i32 %j2473.0, i32* %pli405.2.ph656, align 4, !tbaa !11
  br label %while.cond497.outer649

if.else537:                                       ; preds = %if.then531
  %incdec.ptr538 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2473.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond497.outer

if.end548:                                        ; preds = %while.cond497, %if.else469, %for.inc466, %for.cond408.preheader
  %plin.4 = phi i32* [ %cond136619621, %if.else469 ], [ %cond136619621, %for.cond408.preheader ], [ %plin.2.ph, %while.cond497 ], [ %plin.1, %for.inc466 ]
  %pli405.4 = phi i32* [ %cond125613615625, %if.else469 ], [ %cond125613615625, %for.cond408.preheader ], [ %pli405.2.ph656, %while.cond497 ], [ %pli405.1, %for.inc466 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0768, %if.else469 ], [ %exclChecksum.0768, %for.cond408.preheader ], [ %exclChecksum.4.ph665, %while.cond497 ], [ %exclChecksum.3, %for.inc466 ]
  %sub.ptr.lhs.cast549 = ptrtoint i32* %pli405.4 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552559 = lshr exact i64 %sub.ptr.sub551, 2
  %conv553 = trunc i64 %sub.ptr.div552559 to i32
  %tobool554 = icmp eq i32 %conv553, 0
  br i1 %tobool554, label %for.cond563.preheader, label %if.then555

if.then555:                                       ; preds = %if.end548
  %sub556 = shl i64 %sub.ptr.sub551, 30
  %sext587 = add i64 %sub556, -4294967296
  %idxprom557 = ashr exact i64 %sext587, 32
  %arrayidx558 = getelementptr inbounds i32* %cond125613615625, i64 %idxprom557
  %129 = load i32* %arrayidx558, align 4, !tbaa !11
  %idxprom559 = ashr exact i64 %sub556, 32
  %arrayidx560 = getelementptr inbounds i32* %cond125613615625, i64 %idxprom559
  store i32 %129, i32* %arrayidx560, align 4, !tbaa !11
  br label %for.cond563.preheader

for.cond563.preheader:                            ; preds = %if.then555, %if.end548
  %cmp564681 = icmp ult i32* %cond136619621, %plin.4
  br i1 %cmp564681, label %land.lhs.true565, label %for.cond572.loopexit

land.lhs.true565:                                 ; preds = %for.body567, %for.cond563.preheader
  %exclChecksum.8684 = phi i32 [ %dec, %for.body567 ], [ %exclChecksum.7, %for.cond563.preheader ]
  %plix.0683 = phi i32* [ %incdec.ptr568, %for.body567 ], [ %cond147627, %for.cond563.preheader ]
  %pln.0682 = phi i32* [ %incdec.ptr570, %for.body567 ], [ %cond136619621, %for.cond563.preheader ]
  %130 = load i32* %pln.0682, align 4, !tbaa !11
  %cmp566 = icmp slt i32 %130, %j_hgroup.2
  br i1 %cmp566, label %for.body567, label %for.cond572.loopexit

for.body567:                                      ; preds = %land.lhs.true565
  %incdec.ptr568 = getelementptr inbounds i32* %plix.0683, i64 1
  store i32 %130, i32* %plix.0683, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8684, -1
  %incdec.ptr570 = getelementptr inbounds i32* %pln.0682, i64 1
  %cmp564 = icmp ult i32* %incdec.ptr570, %plin.4
  br i1 %cmp564, label %land.lhs.true565, label %for.cond572.loopexit

for.cond572.loopexit:                             ; preds = %for.body567, %land.lhs.true565, %for.cond563.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond563.preheader ], [ %dec, %for.body567 ], [ %exclChecksum.8684, %land.lhs.true565 ]
  %plix.0.lcssa = phi i32* [ %cond147627, %for.cond563.preheader ], [ %incdec.ptr568, %for.body567 ], [ %plix.0683, %land.lhs.true565 ]
  %pln.0.lcssa = phi i32* [ %cond136619621, %for.cond563.preheader ], [ %incdec.ptr570, %for.body567 ], [ %pln.0682, %land.lhs.true565 ]
  %cmp573688 = icmp sgt i32 %conv553, 0
  br i1 %cmp573688, label %land.lhs.true574, label %for.cond586.loopexit

land.lhs.true574:                                 ; preds = %for.body578, %for.cond572.loopexit
  %indvars.iv824 = phi i64 [ %indvars.iv.next825, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %exclChecksum.9691 = phi i32 [ %dec582, %for.body578 ], [ %exclChecksum.8.lcssa, %for.cond572.loopexit ]
  %plix.1690 = phi i32* [ %incdec.ptr581, %for.body578 ], [ %plix.0.lcssa, %for.cond572.loopexit ]
  %k562.0689 = phi i32 [ %inc584, %for.body578 ], [ 0, %for.cond572.loopexit ]
  %arrayidx576 = getelementptr inbounds i32* %cond125613615625, i64 %indvars.iv824
  %131 = load i32* %arrayidx576, align 4, !tbaa !11
  %cmp577 = icmp slt i32 %131, %j_hgroup.2
  br i1 %cmp577, label %for.body578, label %for.cond586.loopexit

for.body578:                                      ; preds = %land.lhs.true574
  %incdec.ptr581 = getelementptr inbounds i32* %plix.1690, i64 1
  store i32 %131, i32* %plix.1690, align 4, !tbaa !11
  %dec582 = add nsw i32 %exclChecksum.9691, -1
  %indvars.iv.next825 = add nuw nsw i64 %indvars.iv824, 1
  %inc584 = add nsw i32 %k562.0689, 1
  %132 = trunc i64 %indvars.iv.next825 to i32
  %cmp573 = icmp slt i32 %132, %conv553
  br i1 %cmp573, label %land.lhs.true574, label %for.cond586.loopexit

for.cond586.loopexit:                             ; preds = %for.body578, %land.lhs.true574, %for.cond572.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond572.loopexit ], [ %dec582, %for.body578 ], [ %exclChecksum.9691, %land.lhs.true574 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond572.loopexit ], [ %incdec.ptr581, %for.body578 ], [ %plix.1690, %land.lhs.true574 ]
  %k562.0.lcssa = phi i32 [ 0, %for.cond572.loopexit ], [ %inc584, %for.body578 ], [ %k562.0689, %land.lhs.true574 ]
  %cmp587695 = icmp slt i32 %k562.0.lcssa, %conv553
  br i1 %cmp587695, label %for.body588.lr.ph, label %for.end608

for.body588.lr.ph:                                ; preds = %for.cond586.loopexit
  %133 = sext i32 %k562.0.lcssa to i64
  %134 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %135 = lshr i64 %134, 2
  %136 = trunc i64 %135 to i32
  br label %for.body588

for.body588:                                      ; preds = %for.inc606, %for.body588.lr.ph
  %indvars.iv826 = phi i64 [ %133, %for.body588.lr.ph ], [ %indvars.iv.next827, %for.inc606 ]
  %plin.5699 = phi i32* [ %plin.4, %for.body588.lr.ph ], [ %plin.6, %for.inc606 ]
  %plix.2698 = phi i32* [ %plix.1.lcssa, %for.body588.lr.ph ], [ %plix.3, %for.inc606 ]
  %plim.0697 = phi i32* [ %cond158, %for.body588.lr.ph ], [ %plim.1, %for.inc606 ]
  %arrayidx591 = getelementptr inbounds i32* %cond125613615625, i64 %indvars.iv826
  %137 = load i32* %arrayidx591, align 4, !tbaa !11
  %idxprom593 = sext i32 %137 to i64
  %id595 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom593, i32 2
  %138 = bitcast [4 x i8]* %id595 to i32*
  %bf.load596 = load i32* %138, align 4
  %bf.clear597 = and i32 %bf.load596, 4194303
  %idxprom598586 = zext i32 %bf.clear597 to i64
  %add.ptr.sum = sub i64 %idxprom598586, %idx.ext
  %arrayidx599 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %139 = load i8* %arrayidx599, align 1, !tbaa !68
  %conv600 = sext i8 %139 to i32
  switch i32 %conv600, label %for.inc606 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb602
    i32 2, label %sw.bb604
  ]

sw.bb:                                            ; preds = %for.body588
  %incdec.ptr601 = getelementptr inbounds i32* %plin.5699, i64 1
  store i32 %137, i32* %plin.5699, align 4, !tbaa !11
  br label %for.inc606

sw.bb602:                                         ; preds = %for.body588
  %incdec.ptr603 = getelementptr inbounds i32* %plix.2698, i64 1
  store i32 %137, i32* %plix.2698, align 4, !tbaa !11
  br label %for.inc606

sw.bb604:                                         ; preds = %for.body588
  %incdec.ptr605 = getelementptr inbounds i32* %plim.0697, i64 1
  store i32 %137, i32* %plim.0697, align 4, !tbaa !11
  br label %for.inc606

for.inc606:                                       ; preds = %sw.bb604, %sw.bb602, %sw.bb, %for.body588
  %plim.1 = phi i32* [ %plim.0697, %for.body588 ], [ %incdec.ptr605, %sw.bb604 ], [ %plim.0697, %sw.bb602 ], [ %plim.0697, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2698, %for.body588 ], [ %plix.2698, %sw.bb604 ], [ %incdec.ptr603, %sw.bb602 ], [ %plix.2698, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5699, %for.body588 ], [ %plin.5699, %sw.bb604 ], [ %plin.5699, %sw.bb602 ], [ %incdec.ptr601, %sw.bb ]
  %indvars.iv.next827 = add nsw i64 %indvars.iv826, 1
  %lftr.wideiv828 = trunc i64 %indvars.iv.next827 to i32
  %exitcond829 = icmp eq i32 %lftr.wideiv828, %136
  br i1 %exitcond829, label %for.end608, label %for.body588

for.end608:                                       ; preds = %for.inc606, %for.cond586.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond586.loopexit ], [ %plin.6, %for.inc606 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond586.loopexit ], [ %plix.3, %for.inc606 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond586.loopexit ], [ %plim.1, %for.inc606 ]
  %sub.ptr.lhs.cast609 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %sub.ptr.div612 = ashr exact i64 %sub.ptr.sub611, 2
  %conv613560 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast616 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %sub.ptr.div619 = ashr exact i64 %sub.ptr.sub618, 2
  %add614 = add i64 %sub.ptr.div619, %conv613560
  %add621 = add i64 %add614, %sub.ptr.div612
  %conv622 = trunc i64 %add621 to i32
  %sub.ptr.lhs.cast623 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast624 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub625 = sub i64 %sub.ptr.lhs.cast623, %sub.ptr.rhs.cast624
  %sub.ptr.div626562 = lshr exact i64 %sub.ptr.sub625, 2
  %conv627 = trunc i64 %sub.ptr.div626562 to i32
  %cmp629703 = icmp sgt i32 %conv627, 0
  br i1 %cmp629703, label %for.body630.lr.ph, label %for.end726

for.body630.lr.ph:                                ; preds = %for.end608
  %x704 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y713 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z720 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body630

for.body630:                                      ; preds = %for.body630, %for.body630.lr.ph
  %indvars.iv830 = phi i64 [ 0, %for.body630.lr.ph ], [ %indvars.iv.next831, %for.body630 ]
  %fullElectVirial_zz.1705 = phi double [ %fullElectVirial_zz.0761, %for.body630.lr.ph ], [ %add719, %for.body630 ]
  %140 = phi <2 x double> [ %59, %for.body630.lr.ph ], [ %161, %for.body630 ]
  %141 = phi <2 x double> [ %60, %for.body630.lr.ph ], [ %174, %for.body630 ]
  %142 = phi <2 x double> [ %61, %for.body630.lr.ph ], [ %167, %for.body630 ]
  %arrayidx633 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv830
  %143 = load i32* %arrayidx633, align 4, !tbaa !11
  %idx.ext634 = sext i32 %143 to i64
  %x637 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 0
  %144 = load double* %x637, align 8, !tbaa !59
  %sub638 = fsub double %67, %144
  %mul640 = fmul double %sub638, %sub638
  %y642 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 1
  %145 = load double* %y642, align 8, !tbaa !61
  %sub643 = fsub double %68, %145
  %mul644 = fmul double %sub643, %sub643
  %add645 = fadd double %mul640, %mul644
  %z647 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 0, i32 2
  %146 = load double* %z647, align 8, !tbaa !62
  %sub648 = fsub double %69, %146
  %mul649 = fmul double %sub648, %sub648
  %add650 = fadd double %add645, %mul649
  %conv651 = fptrunc double %add650 to float
  %147 = bitcast float %conv651 to i32
  %shr = ashr i32 %147, 17
  %add653 = add nsw i32 %shr, %mul
  %mul654 = shl nsw i32 %add653, 4
  %idx.ext655 = sext i32 %mul654 to i64
  %add.ptr657.sum581 = or i64 %idx.ext655, 12
  %add.ptr658 = getelementptr inbounds double* %6, i64 %add.ptr657.sum581
  %148 = load double* %add.ptr658, align 8, !tbaa !17
  %and = and i32 %147, -131072
  %charge661 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 1
  %149 = load float* %charge661, align 4, !tbaa !63
  %conv662 = fpext float %149 to double
  %mul663 = fmul double %mul398, %conv662
  %150 = bitcast i32 %and to float
  %conv665 = fpext float %150 to double
  %sub666 = fsub double %add650, %conv665
  %partition667 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext634, i32 2
  %151 = bitcast [4 x i8]* %partition667 to i32*
  %bf.load668 = load i32* %151, align 4
  %bf.lshr669 = lshr i32 %bf.load668, 28
  %idxprom670 = zext i32 %bf.lshr669 to i64
  %add.ptr394.sum582 = add i64 %idxprom670, %idx.ext393
  %arrayidx671 = getelementptr inbounds double* %110, i64 %add.ptr394.sum582
  %152 = load double* %arrayidx671, align 8, !tbaa !17
  %add.ptr658.sum583 = or i64 %idx.ext655, 13
  %arrayidx672 = getelementptr inbounds double* %6, i64 %add.ptr658.sum583
  %153 = load double* %arrayidx672, align 8, !tbaa !17
  %add.ptr658.sum584 = or i64 %idx.ext655, 14
  %arrayidx673 = getelementptr inbounds double* %6, i64 %add.ptr658.sum584
  %154 = load double* %arrayidx673, align 8, !tbaa !17
  %add.ptr658.sum585 = or i64 %idx.ext655, 15
  %arrayidx674 = getelementptr inbounds double* %6, i64 %add.ptr658.sum585
  %155 = load double* %arrayidx674, align 8, !tbaa !17
  %mul675 = fmul double %mul663, %155
  %mul676 = fmul double %mul663, %154
  %mul677 = fmul double %mul663, %153
  %mul678 = fmul double %148, %mul663
  %mul679 = fmul double %mul675, %sub666
  %add680 = fadd double %mul676, %mul679
  %mul681 = fmul double %sub666, %add680
  %add682 = fadd double %mul677, %mul681
  %mul683 = fmul double %sub666, %add682
  %add684 = fadd double %mul678, %mul683
  %mul687 = fmul double %sub666, 3.000000e+00
  %mul688 = fmul double %mul675, %mul687
  %mul689 = fmul double %mul676, 2.000000e+00
  %add690 = fadd double %mul689, %mul688
  %mul691 = fmul double %sub666, %add690
  %add692 = fadd double %mul677, %mul691
  %mul693 = fmul double %add692, -2.000000e+00
  %mul694 = fmul double %152, %mul693
  %mul697 = fmul double %sub638, %mul694
  %156 = insertelement <2 x double> undef, double %sub638, i32 0
  %157 = insertelement <2 x double> %156, double %sub643, i32 1
  %158 = insertelement <2 x double> undef, double %mul697, i32 0
  %159 = insertelement <2 x double> %158, double %mul697, i32 1
  %160 = fmul <2 x double> %157, %159
  %161 = fadd <2 x double> %140, %160
  %162 = insertelement <2 x double> undef, double %add684, i32 0
  %163 = insertelement <2 x double> %162, double %sub648, i32 1
  %164 = insertelement <2 x double> undef, double %152, i32 0
  %165 = insertelement <2 x double> %164, double %mul697, i32 1
  %166 = fmul <2 x double> %163, %165
  %167 = fadd <2 x double> %142, %166
  %168 = load double* %x704, align 8, !tbaa !72
  %add705 = fadd double %168, %mul697
  store double %add705, double* %x704, align 8, !tbaa !72
  %x706 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 0
  %mul708 = fmul double %sub643, %mul694
  %169 = insertelement <2 x double> undef, double %sub643, i32 0
  %170 = insertelement <2 x double> %169, double %sub648, i32 1
  %171 = insertelement <2 x double> undef, double %mul708, i32 0
  %172 = insertelement <2 x double> %171, double %mul708, i32 1
  %173 = fmul <2 x double> %170, %172
  %174 = fadd <2 x double> %141, %173
  %175 = load double* %y713, align 8, !tbaa !73
  %add714 = fadd double %175, %mul708
  store double %add714, double* %y713, align 8, !tbaa !73
  %176 = bitcast double* %x706 to <2 x double>*
  %177 = load <2 x double>* %176, align 8, !tbaa !17
  %178 = insertelement <2 x double> %158, double %mul708, i32 1
  %179 = fsub <2 x double> %177, %178
  %180 = bitcast double* %x706 to <2 x double>*
  store <2 x double> %179, <2 x double>* %180, align 8, !tbaa !17
  %mul717 = fmul double %sub648, %mul694
  %mul718 = fmul double %sub648, %mul717
  %add719 = fadd double %fullElectVirial_zz.1705, %mul718
  %181 = load double* %z720, align 8, !tbaa !74
  %add721 = fadd double %181, %mul717
  store double %add721, double* %z720, align 8, !tbaa !74
  %z722 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext634, i32 2
  %182 = load double* %z722, align 8, !tbaa !74
  %sub723 = fsub double %182, %mul717
  store double %sub723, double* %z722, align 8, !tbaa !74
  %indvars.iv.next831 = add nuw nsw i64 %indvars.iv830, 1
  %lftr.wideiv832 = trunc i64 %indvars.iv.next831 to i32
  %exitcond833 = icmp eq i32 %lftr.wideiv832, %conv627
  br i1 %exitcond833, label %for.end726, label %for.body630

for.end726:                                       ; preds = %for.body630, %for.end608
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0761, %for.end608 ], [ %add719, %for.body630 ]
  %183 = phi <2 x double> [ %59, %for.end608 ], [ %161, %for.body630 ]
  %184 = phi <2 x double> [ %60, %for.end608 ], [ %174, %for.body630 ]
  %185 = phi <2 x double> [ %61, %for.end608 ], [ %167, %for.body630 ]
  %conv731 = trunc i64 %sub.ptr.div619 to i32
  %cmp733719 = icmp sgt i32 %conv731, 0
  br i1 %cmp733719, label %for.body734.lr.ph, label %for.end869

for.body734.lr.ph:                                ; preds = %for.end726
  %x845 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y855 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z863 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body734

for.body734:                                      ; preds = %for.body734, %for.body734.lr.ph
  %indvars.iv834 = phi i64 [ 0, %for.body734.lr.ph ], [ %indvars.iv.next835, %for.body734 ]
  %fullElectVirial_zz.2721 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body734.lr.ph ], [ %add862, %for.body734 ]
  %186 = phi <2 x double> [ %183, %for.body734.lr.ph ], [ %211, %for.body734 ]
  %187 = phi <2 x double> [ %184, %for.body734.lr.ph ], [ %224, %for.body734 ]
  %188 = phi <2 x double> [ %185, %for.body734.lr.ph ], [ %217, %for.body734 ]
  %arrayidx737 = getelementptr inbounds i32* %cond158, i64 %indvars.iv834
  %189 = load i32* %arrayidx737, align 4, !tbaa !11
  %idx.ext739 = sext i32 %189 to i64
  %x743 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext739, i32 0, i32 0
  %190 = load double* %x743, align 8, !tbaa !59
  %sub744 = fsub double %67, %190
  %mul746 = fmul double %sub744, %sub744
  %y749 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext739, i32 0, i32 1
  %191 = load double* %y749, align 8, !tbaa !61
  %sub750 = fsub double %68, %191
  %mul751 = fmul double %sub750, %sub750
  %add752 = fadd double %mul746, %mul751
  %z755 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext739, i32 0, i32 2
  %192 = load double* %z755, align 8, !tbaa !62
  %sub756 = fsub double %69, %192
  %mul757 = fmul double %sub756, %sub756
  %add758 = fadd double %add752, %mul757
  %conv760 = fptrunc double %add758 to float
  %193 = bitcast float %conv760 to i32
  %shr764 = ashr i32 %193, 17
  %add765 = add nsw i32 %shr764, %mul
  %mul767 = shl nsw i32 %add765, 4
  %idx.ext768 = sext i32 %mul767 to i64
  %add.ptr770.sum572 = or i64 %idx.ext768, 12
  %add.ptr771 = getelementptr inbounds double* %6, i64 %add.ptr770.sum572
  %194 = load double* %add.ptr771, align 8, !tbaa !17
  %and775 = and i32 %193, -131072
  %charge777 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext739, i32 1
  %195 = load float* %charge777, align 4, !tbaa !63
  %conv778 = fpext float %195 to double
  %mul779 = fmul double %mul398, %conv778
  %196 = bitcast i32 %and775 to float
  %conv782 = fpext float %196 to double
  %sub783 = fsub double %add758, %conv782
  %partition785 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext739, i32 2
  %197 = bitcast [4 x i8]* %partition785 to i32*
  %bf.load786 = load i32* %197, align 4
  %bf.lshr787 = lshr i32 %bf.load786, 28
  %idxprom788 = zext i32 %bf.lshr787 to i64
  %add.ptr394.sum573 = add i64 %idxprom788, %idx.ext393
  %arrayidx789 = getelementptr inbounds double* %110, i64 %add.ptr394.sum573
  %198 = load double* %arrayidx789, align 8, !tbaa !17
  %add.ptr771.sum574 = or i64 %idx.ext768, 13
  %arrayidx791 = getelementptr inbounds double* %6, i64 %add.ptr771.sum574
  %199 = load double* %arrayidx791, align 8, !tbaa !17
  %add.ptr771.sum575 = or i64 %idx.ext768, 14
  %arrayidx793 = getelementptr inbounds double* %6, i64 %add.ptr771.sum575
  %200 = load double* %arrayidx793, align 8, !tbaa !17
  %add.ptr771.sum576 = or i64 %idx.ext768, 15
  %arrayidx795 = getelementptr inbounds double* %6, i64 %add.ptr771.sum576
  %201 = load double* %arrayidx795, align 8, !tbaa !17
  %mul796 = shl nsw i32 %add765, 2
  %idx.ext797 = sext i32 %mul796 to i64
  %add.ptr798 = getelementptr inbounds double* %7, i64 %idx.ext797
  %202 = load double* %add.ptr798, align 8, !tbaa !17
  %mul800 = fmul double %sub, %202
  %sub801 = fsub double %194, %mul800
  %add.ptr798.sum577 = or i64 %idx.ext797, 1
  %arrayidx802 = getelementptr inbounds double* %7, i64 %add.ptr798.sum577
  %203 = load double* %arrayidx802, align 8, !tbaa !17
  %mul803 = fmul double %sub, %203
  %sub804 = fsub double %199, %mul803
  %add.ptr798.sum578 = or i64 %idx.ext797, 2
  %arrayidx805 = getelementptr inbounds double* %7, i64 %add.ptr798.sum578
  %204 = load double* %arrayidx805, align 8, !tbaa !17
  %mul806 = fmul double %sub, %204
  %sub807 = fsub double %200, %mul806
  %add.ptr798.sum579 = or i64 %idx.ext797, 3
  %arrayidx808 = getelementptr inbounds double* %7, i64 %add.ptr798.sum579
  %205 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = fmul double %sub, %205
  %sub810 = fsub double %201, %mul809
  %mul811 = fmul double %mul779, %sub810
  %mul812 = fmul double %mul779, %sub807
  %mul813 = fmul double %mul779, %sub804
  %mul814 = fmul double %mul779, %sub801
  %mul816 = fmul double %sub783, %mul811
  %add817 = fadd double %mul812, %mul816
  %mul818 = fmul double %sub783, %add817
  %add819 = fadd double %mul813, %mul818
  %mul820 = fmul double %sub783, %add819
  %add821 = fadd double %mul814, %mul820
  %mul825 = fmul double %sub783, 3.000000e+00
  %mul826 = fmul double %mul825, %mul811
  %mul827 = fmul double %mul812, 2.000000e+00
  %add828 = fadd double %mul827, %mul826
  %mul829 = fmul double %sub783, %add828
  %add830 = fadd double %mul813, %mul829
  %mul832 = fmul double %add830, -2.000000e+00
  %mul833 = fmul double %198, %mul832
  %mul838 = fmul double %sub744, %mul833
  %206 = insertelement <2 x double> undef, double %sub744, i32 0
  %207 = insertelement <2 x double> %206, double %sub750, i32 1
  %208 = insertelement <2 x double> undef, double %mul838, i32 0
  %209 = insertelement <2 x double> %208, double %mul838, i32 1
  %210 = fmul <2 x double> %207, %209
  %211 = fadd <2 x double> %186, %210
  %212 = insertelement <2 x double> undef, double %add821, i32 0
  %213 = insertelement <2 x double> %212, double %sub756, i32 1
  %214 = insertelement <2 x double> undef, double %198, i32 0
  %215 = insertelement <2 x double> %214, double %mul838, i32 1
  %216 = fmul <2 x double> %213, %215
  %217 = fadd <2 x double> %188, %216
  %218 = load double* %x845, align 8, !tbaa !72
  %add846 = fadd double %218, %mul838
  store double %add846, double* %x845, align 8, !tbaa !72
  %x847 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext739, i32 0
  %mul850 = fmul double %sub750, %mul833
  %219 = insertelement <2 x double> undef, double %sub750, i32 0
  %220 = insertelement <2 x double> %219, double %sub756, i32 1
  %221 = insertelement <2 x double> undef, double %mul850, i32 0
  %222 = insertelement <2 x double> %221, double %mul850, i32 1
  %223 = fmul <2 x double> %220, %222
  %224 = fadd <2 x double> %187, %223
  %225 = load double* %y855, align 8, !tbaa !73
  %add856 = fadd double %225, %mul850
  store double %add856, double* %y855, align 8, !tbaa !73
  %226 = bitcast double* %x847 to <2 x double>*
  %227 = load <2 x double>* %226, align 8, !tbaa !17
  %228 = insertelement <2 x double> %208, double %mul850, i32 1
  %229 = fsub <2 x double> %227, %228
  %230 = bitcast double* %x847 to <2 x double>*
  store <2 x double> %229, <2 x double>* %230, align 8, !tbaa !17
  %mul860 = fmul double %sub756, %mul833
  %mul861 = fmul double %sub756, %mul860
  %add862 = fadd double %fullElectVirial_zz.2721, %mul861
  %231 = load double* %z863, align 8, !tbaa !74
  %add864 = fadd double %231, %mul860
  store double %add864, double* %z863, align 8, !tbaa !74
  %z865 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext739, i32 2
  %232 = load double* %z865, align 8, !tbaa !74
  %sub866 = fsub double %232, %mul860
  store double %sub866, double* %z865, align 8, !tbaa !74
  %indvars.iv.next835 = add nuw nsw i64 %indvars.iv834, 1
  %lftr.wideiv836 = trunc i64 %indvars.iv.next835 to i32
  %exitcond837 = icmp eq i32 %lftr.wideiv836, %conv731
  br i1 %exitcond837, label %for.end869, label %for.body734

for.end869:                                       ; preds = %for.body734, %for.end726
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end726 ], [ %add862, %for.body734 ]
  %233 = phi <2 x double> [ %183, %for.end726 ], [ %211, %for.body734 ]
  %234 = phi <2 x double> [ %184, %for.end726 ], [ %224, %for.body734 ]
  %235 = phi <2 x double> [ %185, %for.end726 ], [ %217, %for.body734 ]
  %conv874 = trunc i64 %sub.ptr.div612 to i32
  %cmp876735 = icmp sgt i32 %conv874, 0
  br i1 %cmp876735, label %for.body877.lr.ph, label %for.inc1010

for.body877.lr.ph:                                ; preds = %for.end869
  %x985 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y995 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1003 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body877

for.body877:                                      ; preds = %for.body877, %for.body877.lr.ph
  %indvars.iv838 = phi i64 [ 0, %for.body877.lr.ph ], [ %indvars.iv.next839, %for.body877 ]
  %fullElectVirial_zz.3737 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body877.lr.ph ], [ %add1002, %for.body877 ]
  %236 = phi <2 x double> [ %233, %for.body877.lr.ph ], [ %261, %for.body877 ]
  %237 = phi <2 x double> [ %234, %for.body877.lr.ph ], [ %274, %for.body877 ]
  %238 = phi <2 x double> [ %235, %for.body877.lr.ph ], [ %267, %for.body877 ]
  %arrayidx880 = getelementptr inbounds i32* %cond147627, i64 %indvars.iv838
  %239 = load i32* %arrayidx880, align 4, !tbaa !11
  %idx.ext882 = sext i32 %239 to i64
  %x886 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext882, i32 0, i32 0
  %240 = load double* %x886, align 8, !tbaa !59
  %sub887 = fsub double %67, %240
  %mul889 = fmul double %sub887, %sub887
  %y892 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext882, i32 0, i32 1
  %241 = load double* %y892, align 8, !tbaa !61
  %sub893 = fsub double %68, %241
  %mul894 = fmul double %sub893, %sub893
  %add895 = fadd double %mul889, %mul894
  %z898 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext882, i32 0, i32 2
  %242 = load double* %z898, align 8, !tbaa !62
  %sub899 = fsub double %69, %242
  %mul900 = fmul double %sub899, %sub899
  %add901 = fadd double %add895, %mul900
  %conv903 = fptrunc double %add901 to float
  %243 = bitcast float %conv903 to i32
  %shr907 = ashr i32 %243, 17
  %add908 = add nsw i32 %shr907, %mul
  %mul910 = shl nsw i32 %add908, 4
  %idx.ext911 = sext i32 %mul910 to i64
  %add.ptr913.sum564 = or i64 %idx.ext911, 12
  %add.ptr914 = getelementptr inbounds double* %6, i64 %add.ptr913.sum564
  %244 = load double* %add.ptr914, align 8, !tbaa !17
  %and918 = and i32 %243, -131072
  %charge920 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext882, i32 1
  %245 = load float* %charge920, align 4, !tbaa !63
  %conv921 = fpext float %245 to double
  %mul922 = fmul double %mul398, %conv921
  %246 = bitcast i32 %and918 to float
  %conv925 = fpext float %246 to double
  %sub926 = fsub double %add901, %conv925
  %partition928 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext882, i32 2
  %247 = bitcast [4 x i8]* %partition928 to i32*
  %bf.load929 = load i32* %247, align 4
  %bf.lshr930 = lshr i32 %bf.load929, 28
  %idxprom931 = zext i32 %bf.lshr930 to i64
  %add.ptr394.sum = add i64 %idxprom931, %idx.ext393
  %arrayidx932 = getelementptr inbounds double* %110, i64 %add.ptr394.sum
  %248 = load double* %arrayidx932, align 8, !tbaa !17
  %add.ptr914.sum565 = or i64 %idx.ext911, 13
  %arrayidx934 = getelementptr inbounds double* %6, i64 %add.ptr914.sum565
  %249 = load double* %arrayidx934, align 8, !tbaa !17
  %add.ptr914.sum566 = or i64 %idx.ext911, 14
  %arrayidx936 = getelementptr inbounds double* %6, i64 %add.ptr914.sum566
  %250 = load double* %arrayidx936, align 8, !tbaa !17
  %add.ptr914.sum567 = or i64 %idx.ext911, 15
  %arrayidx938 = getelementptr inbounds double* %6, i64 %add.ptr914.sum567
  %251 = load double* %arrayidx938, align 8, !tbaa !17
  %mul940 = shl nsw i32 %add908, 2
  %idx.ext941 = sext i32 %mul940 to i64
  %add.ptr942 = getelementptr inbounds double* %7, i64 %idx.ext941
  %252 = load double* %add.ptr942, align 8, !tbaa !17
  %sub944 = fsub double %244, %252
  %add.ptr942.sum568 = or i64 %idx.ext941, 1
  %arrayidx945 = getelementptr inbounds double* %7, i64 %add.ptr942.sum568
  %253 = load double* %arrayidx945, align 8, !tbaa !17
  %sub946 = fsub double %249, %253
  %add.ptr942.sum569 = or i64 %idx.ext941, 2
  %arrayidx947 = getelementptr inbounds double* %7, i64 %add.ptr942.sum569
  %254 = load double* %arrayidx947, align 8, !tbaa !17
  %sub948 = fsub double %250, %254
  %add.ptr942.sum570 = or i64 %idx.ext941, 3
  %arrayidx949 = getelementptr inbounds double* %7, i64 %add.ptr942.sum570
  %255 = load double* %arrayidx949, align 8, !tbaa !17
  %sub950 = fsub double %251, %255
  %mul951 = fmul double %mul922, %sub950
  %mul952 = fmul double %mul922, %sub948
  %mul953 = fmul double %mul922, %sub946
  %mul954 = fmul double %mul922, %sub944
  %mul956 = fmul double %sub926, %mul951
  %add957 = fadd double %mul952, %mul956
  %mul958 = fmul double %sub926, %add957
  %add959 = fadd double %mul953, %mul958
  %mul960 = fmul double %sub926, %add959
  %add961 = fadd double %mul954, %mul960
  %mul965 = fmul double %sub926, 3.000000e+00
  %mul966 = fmul double %mul965, %mul951
  %mul967 = fmul double %mul952, 2.000000e+00
  %add968 = fadd double %mul967, %mul966
  %mul969 = fmul double %sub926, %add968
  %add970 = fadd double %mul953, %mul969
  %mul972 = fmul double %add970, -2.000000e+00
  %mul973 = fmul double %248, %mul972
  %mul978 = fmul double %sub887, %mul973
  %256 = insertelement <2 x double> undef, double %sub887, i32 0
  %257 = insertelement <2 x double> %256, double %sub893, i32 1
  %258 = insertelement <2 x double> undef, double %mul978, i32 0
  %259 = insertelement <2 x double> %258, double %mul978, i32 1
  %260 = fmul <2 x double> %257, %259
  %261 = fadd <2 x double> %236, %260
  %262 = insertelement <2 x double> undef, double %add961, i32 0
  %263 = insertelement <2 x double> %262, double %sub899, i32 1
  %264 = insertelement <2 x double> undef, double %248, i32 0
  %265 = insertelement <2 x double> %264, double %mul978, i32 1
  %266 = fmul <2 x double> %263, %265
  %267 = fadd <2 x double> %238, %266
  %268 = load double* %x985, align 8, !tbaa !72
  %add986 = fadd double %268, %mul978
  store double %add986, double* %x985, align 8, !tbaa !72
  %x987 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext882, i32 0
  %mul990 = fmul double %sub893, %mul973
  %269 = insertelement <2 x double> undef, double %sub893, i32 0
  %270 = insertelement <2 x double> %269, double %sub899, i32 1
  %271 = insertelement <2 x double> undef, double %mul990, i32 0
  %272 = insertelement <2 x double> %271, double %mul990, i32 1
  %273 = fmul <2 x double> %270, %272
  %274 = fadd <2 x double> %237, %273
  %275 = load double* %y995, align 8, !tbaa !73
  %add996 = fadd double %275, %mul990
  store double %add996, double* %y995, align 8, !tbaa !73
  %276 = bitcast double* %x987 to <2 x double>*
  %277 = load <2 x double>* %276, align 8, !tbaa !17
  %278 = insertelement <2 x double> %258, double %mul990, i32 1
  %279 = fsub <2 x double> %277, %278
  %280 = bitcast double* %x987 to <2 x double>*
  store <2 x double> %279, <2 x double>* %280, align 8, !tbaa !17
  %mul1000 = fmul double %sub899, %mul973
  %mul1001 = fmul double %sub899, %mul1000
  %add1002 = fadd double %fullElectVirial_zz.3737, %mul1001
  %281 = load double* %z1003, align 8, !tbaa !74
  %add1004 = fadd double %281, %mul1000
  store double %add1004, double* %z1003, align 8, !tbaa !74
  %z1005 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext882, i32 2
  %282 = load double* %z1005, align 8, !tbaa !74
  %sub1006 = fsub double %282, %mul1000
  store double %sub1006, double* %z1005, align 8, !tbaa !74
  %indvars.iv.next839 = add nuw nsw i64 %indvars.iv838, 1
  %lftr.wideiv840 = trunc i64 %indvars.iv.next839 to i32
  %exitcond841 = icmp eq i32 %lftr.wideiv840, %conv874
  br i1 %exitcond841, label %for.inc1010, label %for.body877

for.inc1010:                                      ; preds = %for.body877, %for.end869, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end869 ], [ %pairCount.2, %for.body877 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0755, %if.then215 ], [ %pairlistoffset.1, %for.end869 ], [ %pairlistoffset.1, %for.body877 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0756, %if.then215 ], [ %pairlistindex.2, %for.end869 ], [ %pairlistindex.2, %for.body877 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0757, %if.then215 ], [ %fixg_lower.3, %for.end869 ], [ %fixg_lower.3, %for.body877 ]
  %g_lower.4 = phi i32 [ %g_lower.0758, %if.then215 ], [ %g_lower.3, %for.end869 ], [ %g_lower.3, %for.body877 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0759, %if.then215 ], [ %j_hgroup.2, %for.end869 ], [ %j_hgroup.2, %for.body877 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0760, %for.end869 ], [ %i.0760, %for.body877 ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0761, %if.then215 ], [ %fullElectVirial_zz.2.lcssa, %for.end869 ], [ %add1002, %for.body877 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0768, %if.then215 ], [ %conv622, %for.end869 ], [ %conv622, %for.body877 ]
  %283 = phi <2 x double> [ %59, %if.then215 ], [ %233, %for.end869 ], [ %261, %for.body877 ]
  %284 = phi <2 x double> [ %60, %if.then215 ], [ %234, %for.end869 ], [ %274, %for.body877 ]
  %285 = phi <2 x double> [ %61, %if.then215 ], [ %235, %for.end869 ], [ %267, %for.body877 ]
  %inc1011 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1011
  br i1 %cmp171, label %for.body172, label %for.end1012

for.end1012:                                      ; preds = %for.inc1010, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1010 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end157 ], [ %fullElectVirial_zz.4, %for.inc1010 ]
  %286 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %283, %for.inc1010 ]
  %287 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %284, %for.inc1010 ]
  %288 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %285, %for.inc1010 ]
  %289 = extractelement <2 x double> %288, i32 0
  %arraydecay1013 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1014 = icmp eq i32* %cond601603855861, %arraydecay1013
  br i1 %cmp1014, label %if.end1019, label %delete.notnull1017

delete.notnull1017:                               ; preds = %for.end1012
  %290 = bitcast i32* %cond601603855861 to i8*
  call void @_ZdaPv(i8* %290) #7
  br label %if.end1019

if.end1019:                                       ; preds = %delete.notnull1017, %for.end1012
  %arraydecay1020 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1021 = icmp eq i32* %cond19605853862, %arraydecay1020
  br i1 %cmp1021, label %if.end1026, label %delete.notnull1024

delete.notnull1024:                               ; preds = %if.end1019
  %291 = bitcast i32* %cond19605853862 to i8*
  call void @_ZdaPv(i8* %291) #7
  br label %if.end1026

if.end1026:                                       ; preds = %delete.notnull1024, %if.end1019
  %arraydecay1027 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1028 = icmp eq i32* %cond30857860, %arraydecay1027
  br i1 %cmp1028, label %if.end1033, label %delete.notnull1031

delete.notnull1031:                               ; preds = %if.end1026
  %292 = bitcast i32* %cond30857860 to i8*
  call void @_ZdaPv(i8* %292) #7
  br label %if.end1033

if.end1033:                                       ; preds = %delete.notnull1031, %if.end1026
  %arraydecay1034 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1035 = icmp eq i32* %cond114609611617623, %arraydecay1034
  br i1 %cmp1035, label %if.end1040, label %delete.notnull1038

delete.notnull1038:                               ; preds = %if.end1033
  %293 = bitcast i32* %cond114609611617623 to i8*
  call void @_ZdaPv(i8* %293) #7
  br label %if.end1040

if.end1040:                                       ; preds = %delete.notnull1038, %if.end1033
  %arraydecay1041 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1042 = icmp eq i32* %cond125613615625, %arraydecay1041
  br i1 %cmp1042, label %if.end1047, label %delete.notnull1045

delete.notnull1045:                               ; preds = %if.end1040
  %294 = bitcast i32* %cond125613615625 to i8*
  call void @_ZdaPv(i8* %294) #7
  br label %if.end1047

if.end1047:                                       ; preds = %delete.notnull1045, %if.end1040
  %arraydecay1048 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1049 = icmp eq i32* %cond136619621, %arraydecay1048
  br i1 %cmp1049, label %if.end1054, label %delete.notnull1052

delete.notnull1052:                               ; preds = %if.end1047
  %295 = bitcast i32* %cond136619621 to i8*
  call void @_ZdaPv(i8* %295) #7
  br label %if.end1054

if.end1054:                                       ; preds = %delete.notnull1052, %if.end1047
  %arraydecay1055 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1056 = icmp eq i32* %cond147627, %arraydecay1055
  br i1 %cmp1056, label %if.end1061, label %delete.notnull1059

delete.notnull1059:                               ; preds = %if.end1054
  %296 = bitcast i32* %cond147627 to i8*
  call void @_ZdaPv(i8* %296) #7
  br label %if.end1061

if.end1061:                                       ; preds = %delete.notnull1059, %if.end1054
  %arraydecay1062 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1063 = icmp eq i32* %cond158, %arraydecay1062
  br i1 %cmp1063, label %if.end1068, label %delete.notnull1066

delete.notnull1066:                               ; preds = %if.end1061
  %297 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %297) #7
  br label %if.end1068

if.end1068:                                       ; preds = %delete.notnull1066, %if.end1061
  %conv1069 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1070 = getelementptr inbounds double* %1, i64 22
  %298 = load double* %arrayidx1070, align 8, !tbaa !17
  %add1071 = fadd double %conv1069, %298
  store double %add1071, double* %arrayidx1070, align 8, !tbaa !17
  %arrayidx1072 = getelementptr inbounds double* %1, i64 1
  %299 = load double* %arrayidx1072, align 8, !tbaa !17
  %add1073 = fadd double %289, %299
  store double %add1073, double* %arrayidx1072, align 8, !tbaa !17
  %arrayidx1074 = getelementptr inbounds double* %1, i64 12
  %300 = bitcast double* %arrayidx1074 to <2 x double>*
  %301 = load <2 x double>* %300, align 8, !tbaa !17
  %302 = fadd <2 x double> %286, %301
  %303 = bitcast double* %arrayidx1074 to <2 x double>*
  store <2 x double> %302, <2 x double>* %303, align 8, !tbaa !17
  %arrayidx1078 = getelementptr inbounds double* %1, i64 14
  %304 = bitcast double* %arrayidx1078 to <2 x double>*
  %305 = load <2 x double>* %304, align 8, !tbaa !17
  %306 = shufflevector <2 x double> %288, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %307 = shufflevector <2 x double> %306, <2 x double> %286, <2 x i32> <i32 0, i32 3>
  %308 = fadd <2 x double> %307, %305
  %309 = bitcast double* %arrayidx1078 to <2 x double>*
  store <2 x double> %308, <2 x double>* %309, align 8, !tbaa !17
  %arrayidx1082 = getelementptr inbounds double* %1, i64 16
  %310 = bitcast double* %arrayidx1082 to <2 x double>*
  %311 = load <2 x double>* %310, align 8, !tbaa !17
  %312 = fadd <2 x double> %287, %311
  %313 = bitcast double* %arrayidx1082 to <2 x double>*
  store <2 x double> %312, <2 x double>* %313, align 8, !tbaa !17
  %arrayidx1086 = getelementptr inbounds double* %1, i64 18
  %314 = bitcast double* %arrayidx1086 to <2 x double>*
  %315 = load <2 x double>* %314, align 8, !tbaa !17
  %316 = shufflevector <2 x double> %306, <2 x double> %287, <2 x i32> <i32 0, i32 3>
  %317 = fadd <2 x double> %316, %315
  %318 = bitcast double* %arrayidx1086 to <2 x double>*
  store <2 x double> %317, <2 x double>* %318, align 8, !tbaa !17
  %arrayidx1090 = getelementptr inbounds double* %1, i64 20
  %319 = load double* %arrayidx1090, align 8, !tbaa !17
  %add1091 = fadd double %fullElectVirial_zz.0.lcssa, %319
  store double %add1091, double* %arrayidx1090, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1068, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil9calc_pairEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31649 = icmp sgt i32 %13, 0
  br i1 %cmp31649, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30702 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond500502700 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19504698 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv691 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next692, %for.inc ]
  %g.0650 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv691, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0650, 1
  %idxprom41 = sext i32 %g.0650 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond500502700, i64 %idxprom41
  %30 = trunc i64 %indvars.iv691 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0650, %for.body ]
  %indvars.iv.next692 = add nuw nsw i64 %indvars.iv691, 1
  %lftr.wideiv693 = trunc i64 %indvars.iv.next692 to i32
  %exitcond694 = icmp eq i32 %lftr.wideiv693, %13
  br i1 %exitcond694, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond500502700, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond500502700, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa707 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19504697706 = phi i32* [ %cond19504698, %for.end ], [ %cond19504698, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond500502699705 = phi i32* [ %cond500502700, %for.end ], [ %cond500502700, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30701704 = phi i32* [ %cond30702, %for.end ], [ %cond30702, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56643 = icmp sgt i32 %g.0.lcssa707, 0
  br i1 %cmp56643, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75637 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76638 = icmp sgt i32 %12, 0
  %or.cond484639 = and i1 %tobool75637, %cmp76638
  br i1 %or.cond484639, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv687 = phi i64 [ %indvars.iv.next688, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0645 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0644 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond500502699705, i64 %indvars.iv687
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0645, 1
  %idxprom68 = sext i32 %fixg.0645 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19504697706, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0644, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0645, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next688 = add nuw nsw i64 %indvars.iv687, 1
  %lftr.wideiv689 = trunc i64 %indvars.iv.next688 to i32
  %exitcond690 = icmp eq i32 %lftr.wideiv689, %g.0.lcssa707
  br i1 %exitcond690, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv685 = phi i64 [ %indvars.iv.next686, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2640 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv685, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2640
  %indvars.iv.next686 = add nuw nsw i64 %indvars.iv685, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next686 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond484 = and i1 %tobool75, %cmp76
  br i1 %or.cond484, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75637, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond500502699705, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond500502699705 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19504697706, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19504697706 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30701704, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30701704 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19504697706, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19504697706, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2507 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162526 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140512514524 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129508510516522 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151518520 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183612 = icmp sgt i32 %12, 0
  br i1 %cmp183612, label %for.body184.lr.ph, label %for.end874

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i497 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140512514524 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162526 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151518520 to i64
  %sub811 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30701704 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129508510516522 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc872, %for.body184.lr.ph
  %exclChecksum.0628 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc872 ]
  %i.1615 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc873, %for.inc872 ]
  %pairlistindex.0614 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc872 ]
  %pairCount.0613 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc872 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %227, %for.inc872 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %228, %for.inc872 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %229, %for.inc872 ]
  %idxprom185 = sext i32 %i.1615 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i528 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i528, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i528, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i528, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0613
  %cmp218 = icmp sge i32 %pairCount.0613, %div
  %cmp220 = icmp slt i32 %pairCount.0613, %div181
  %or.cond486 = and i1 %cmp218, %cmp220
  br i1 %or.cond486, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1615, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc872

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0613, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19504697706, i32* %cond500502699705
  %cond243 = select i1 %75, i32 %fixg.2507, i32 %g.0.lcssa707
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30701704, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div481 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div481 to i32
  %cmp289539 = icmp sgt i32 %conv287, 0
  br i1 %cmp289539, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv657 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next658, %cond.end310 ]
  %pli.0541 = phi i32* [ %cond129508510516522, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30701704, i64 %indvars.iv657
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp482483 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp482483, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0541, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0541, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0541, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0541, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0541, i64 %cond311
  %indvars.iv.next658 = add nuw nsw i64 %indvars.iv657, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next658 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129508510516522, %land.end ], [ %cond129508510516522, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328478 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328478 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext479 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext479, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129508510516522, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129508510516522, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1615
  br label %for.inc872

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0613, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0614, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load369.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load369.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %94 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %94 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  %bf.clear370 = and i32 %bf.load369.pre, 4194303
  %idxprom.i496529 = zext i32 %bf.clear370 to i64
  %95 = load i32** %atomVdwType.i497, align 8, !tbaa !64
  %arrayidx.i498 = getelementptr inbounds i32* %95, i64 %idxprom.i496529
  %96 = load i32* %arrayidx.i498, align 4, !tbaa !11
  %97 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %98 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv372 = shl i32 %96, 1
  %mul.i = and i32 %conv372, 131070
  %mul2.i = mul i32 %mul.i, %98
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp378566 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond377.preheader, label %if.else439

for.cond377.preheader:                            ; preds = %land.end362
  br i1 %cmp378566, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv668 = phi i64 [ %indvars.iv.next669, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1570 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0628, %for.cond377.preheader ]
  %pli374.0569 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140512514524, %for.cond377.preheader ]
  %plin.0568 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151518520, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129508510516522, i64 %indvars.iv668
  %99 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %99 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %100 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %69, %100
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %101 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %70, %101
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %102 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %71, %102
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %103 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %103, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond487 = or i1 %tobool413, %cmp415
  br i1 %or.cond487, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1570, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1570, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %66
  %cmp429 = icmp sgt i32 %bf.clear426, %67
  %or.cond488 = or i1 %cmp427, %cmp429
  br i1 %or.cond488, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0569, i64 1
  store i32 %99, i32* %pli374.0569, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0568, i64 1
  store i32 %99, i32* %plin.0568, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0568, %for.body379 ], [ %plin.0568, %land.lhs.true418 ], [ %plin.0568, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0569, %for.body379 ], [ %pli374.0569, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0569, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1570, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next669 = add nuw nsw i64 %indvars.iv668, 1
  %lftr.wideiv670 = trunc i64 %indvars.iv.next669 to i32
  %exitcond671 = icmp eq i32 %lftr.wideiv670, %pairlistindex.1
  br i1 %exitcond671, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362
  br i1 %cmp378566, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %104 = load i32* %cond129508510516522, align 4, !tbaa !11
  %idxprom447 = sext i32 %104 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %105 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %106 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %107 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %107, %if.then442 ], [ %113, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %106, %if.then442 ], [ %112, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %105, %if.then442 ], [ %111, %if.else507 ]
  %j2443.0.ph = phi i32 [ %104, %if.then442 ], [ %110, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151518520, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140512514524, %if.then442 ], [ %pli374.2.ph549, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0628, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer542

while.cond467.outer542:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph543 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph544 = phi double [ %113, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph545 = phi double [ %112, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph546 = phi double [ %111, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph547 = phi i32 [ %110, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph548 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph549 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph550 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer551

while.cond467.outer551:                           ; preds = %land.lhs.true498, %while.cond467.outer542
  %idxprom447.pn.ph552 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph543, %while.cond467.outer542 ]
  %p_j_z456.0.ph553 = phi double [ %113, %land.lhs.true498 ], [ %p_j_z456.0.ph544, %while.cond467.outer542 ]
  %p_j_y451.0.ph554 = phi double [ %112, %land.lhs.true498 ], [ %p_j_y451.0.ph545, %while.cond467.outer542 ]
  %p_j_x446.0.ph555 = phi double [ %111, %land.lhs.true498 ], [ %p_j_x446.0.ph546, %while.cond467.outer542 ]
  %j2443.0.ph556 = phi i32 [ %110, %land.lhs.true498 ], [ %j2443.0.ph547, %while.cond467.outer542 ]
  %k440.0.ph557 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph548, %while.cond467.outer542 ]
  %exclChecksum.4.ph558 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph550, %while.cond467.outer542 ]
  %108 = sext i32 %k440.0.ph557 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer551
  %indvars.iv664 = phi i64 [ %108, %while.cond467.outer551 ], [ %indvars.iv.next665, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph552, %while.cond467.outer551 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph553, %while.cond467.outer551 ], [ %113, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph554, %while.cond467.outer551 ], [ %112, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph555, %while.cond467.outer551 ], [ %111, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph556, %while.cond467.outer551 ], [ %110, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph557, %while.cond467.outer551 ], [ %inc470, %while.body469 ]
  %109 = trunc i64 %indvars.iv664 to i32
  %cmp468 = icmp slt i32 %109, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next665 = add nsw i64 %indvars.iv664, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129508510516522, i64 %indvars.iv.next665
  %110 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %69, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %110 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %111 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %70, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %112 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %71, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %113 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph558, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer551

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph558, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %66
  %cmp504 = icmp sgt i32 %atom2461.0, %67
  %or.cond489 = or i1 %cmp502, %cmp504
  br i1 %or.cond489, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph549, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph549, align 4, !tbaa !11
  br label %while.cond467.outer542

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %plin.4 = phi i32* [ %cond151518520, %if.else439 ], [ %cond151518520, %for.cond377.preheader ], [ %plin.2.ph, %while.cond467 ], [ %plin.1, %for.inc436 ]
  %pli374.4 = phi i32* [ %cond140512514524, %if.else439 ], [ %cond140512514524, %for.cond377.preheader ], [ %pli374.2.ph549, %while.cond467 ], [ %pli374.1, %for.inc436 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0628, %if.else439 ], [ %exclChecksum.0628, %for.cond377.preheader ], [ %exclChecksum.4.ph558, %while.cond467 ], [ %exclChecksum.3, %for.inc436 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522445 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522445 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext476 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext476, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140512514524, i64 %idxprom527
  %114 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140512514524, i64 %idxprom529
  store i32 %114, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534574 = icmp sgt i32 %conv523, 0
  br i1 %cmp534574, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %115 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %116 = lshr i64 %115, 2
  %117 = trunc i64 %116 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv672 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next673, %for.inc553 ]
  %plin.5578 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0577 = phi i32* [ %cond162526, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0576 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140512514524, i64 %indvars.iv672
  %118 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %118 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %119 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %119, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545475 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545475, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %120 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %120 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5578, i64 1
  store i32 %118, i32* %plin.5578, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0577, i64 1
  store i32 %118, i32* %plix.0577, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0576, i64 1
  store i32 %118, i32* %plim.0576, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0576, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0576, %sw.bb549 ], [ %plim.0576, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0577, %for.body535 ], [ %plix.0577, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0577, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5578, %for.body535 ], [ %plin.5578, %sw.bb551 ], [ %plin.5578, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next673 = add nuw nsw i64 %indvars.iv672, 1
  %lftr.wideiv674 = trunc i64 %indvars.iv.next673 to i32
  %exitcond675 = icmp eq i32 %lftr.wideiv674, %117
  br i1 %exitcond675, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162526, %for.cond533.preheader ], [ %cond162526, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559447 = lshr exact i64 %sub.ptr.sub558, 2
  %conv560446 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560446
  %add568 = add i64 %add561, %sub.ptr.div559447
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573449 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573449 to i32
  %cmp576582 = icmp sgt i32 %conv574, 0
  br i1 %cmp576582, label %for.body577.lr.ph, label %for.end703

for.body577.lr.ph:                                ; preds = %for.end555
  %x681 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y690 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z697 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %121 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %122 = lshr i64 %121, 2
  %123 = trunc i64 %122 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577.for.body577_crit_edge, %for.body577.lr.ph
  %124 = phi i32* [ %95, %for.body577.lr.ph ], [ %.pre, %for.body577.for.body577_crit_edge ]
  %indvars.iv676 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next677, %for.body577.for.body577_crit_edge ]
  %125 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %153, %for.body577.for.body577_crit_edge ]
  %126 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %160, %for.body577.for.body577_crit_edge ]
  %127 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %171, %for.body577.for.body577_crit_edge ]
  %arrayidx580 = getelementptr inbounds i32* %cond151518520, i64 %indvars.iv676
  %128 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %128 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %129 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %69, %129
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %130 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %70, %130
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %131 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %71, %131
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %132 = bitcast float %conv598 to i32
  %shr = ashr i32 %132, 17
  %add600 = add nsw i32 %shr, %mul
  %id601 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 2
  %133 = bitcast [4 x i8]* %id601 to i32*
  %bf.load602 = load i32* %133, align 4
  %bf.clear603 = and i32 %bf.load602, 4194303
  %idxprom.i492532 = zext i32 %bf.clear603 to i64
  %arrayidx.i494 = getelementptr inbounds i32* %124, i64 %idxprom.i492532
  %134 = load i32* %arrayidx.i494, align 4, !tbaa !11
  %conv.i495 = zext i32 %134 to i64
  %conv605 = shl nuw nsw i64 %conv.i495, 1
  %mul606 = and i64 %conv605, 131070
  %mul609 = shl nsw i32 %add600, 4
  %idx.ext610 = sext i32 %mul609 to i64
  %and = and i32 %132, -131072
  %charge624 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %135 = load float* %charge624, align 4, !tbaa !63
  %conv625 = fpext float %135 to double
  %mul626 = fmul double %mul367, %conv625
  %136 = bitcast i32 %and to float
  %conv628 = fpext float %136 to double
  %sub629 = fsub double %add597, %conv628
  %add.ptr.i.sum533 = add i64 %mul606, %idx.ext.i
  %A631 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum533, i32 0
  %137 = load double* %A631, align 8, !tbaa !69
  %mul632 = fmul double %8, %137
  %B634 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum533, i32 1
  %138 = load double* %B634, align 8, !tbaa !71
  %mul635 = fmul double %8, %138
  %add.ptr611.sum466 = or i64 %idx.ext610, 3
  %arrayidx639 = getelementptr inbounds double* %7, i64 %add.ptr611.sum466
  %139 = load double* %arrayidx639, align 8, !tbaa !17
  %mul640 = fmul double %mul632, %139
  %add.ptr616.sum467 = or i64 %idx.ext610, 7
  %arrayidx641 = getelementptr inbounds double* %7, i64 %add.ptr616.sum467
  %140 = load double* %arrayidx641, align 8, !tbaa !17
  %mul642 = fmul double %mul635, %140
  %sub643 = fsub double %mul640, %mul642
  %add.ptr611.sum468 = or i64 %idx.ext610, 2
  %arrayidx644 = getelementptr inbounds double* %7, i64 %add.ptr611.sum468
  %141 = load double* %arrayidx644, align 8, !tbaa !17
  %mul645 = fmul double %mul632, %141
  %add.ptr616.sum469 = or i64 %idx.ext610, 6
  %arrayidx646 = getelementptr inbounds double* %7, i64 %add.ptr616.sum469
  %142 = load double* %arrayidx646, align 8, !tbaa !17
  %mul647 = fmul double %mul635, %142
  %sub648 = fsub double %mul645, %mul647
  %add.ptr611.sum470 = or i64 %idx.ext610, 1
  %arrayidx649 = getelementptr inbounds double* %7, i64 %add.ptr611.sum470
  %143 = load double* %arrayidx649, align 8, !tbaa !17
  %mul650 = fmul double %mul632, %143
  %add.ptr616.sum471 = or i64 %idx.ext610, 5
  %arrayidx651 = getelementptr inbounds double* %7, i64 %add.ptr616.sum471
  %144 = load double* %arrayidx651, align 8, !tbaa !17
  %mul652 = fmul double %mul635, %144
  %sub653 = fsub double %mul650, %mul652
  %add.ptr621.sum472 = or i64 %idx.ext610, 11
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr621.sum472
  %145 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul626, %145
  %add.ptr621.sum473 = or i64 %idx.ext610, 10
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr621.sum473
  %146 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul626, %146
  %add.ptr621.sum474 = or i64 %idx.ext610, 9
  %arrayidx659 = getelementptr inbounds double* %7, i64 %add.ptr621.sum474
  %147 = load double* %arrayidx659, align 8, !tbaa !17
  %mul660 = fmul double %mul626, %147
  %add661 = fadd double %sub643, %mul656
  %add662 = fadd double %sub648, %mul658
  %add663 = fadd double %sub653, %mul660
  %mul665 = fmul double %sub629, 3.000000e+00
  %mul666 = fmul double %mul665, %add661
  %mul667 = fmul double %add662, 2.000000e+00
  %add668 = fadd double %mul666, %mul667
  %mul669 = fmul double %sub629, %add668
  %add670 = fadd double %add663, %mul669
  %mul671 = fmul double %add670, -2.000000e+00
  %mul674 = fmul double %sub585, %mul671
  %148 = insertelement <2 x double> undef, double %sub585, i32 0
  %149 = insertelement <2 x double> %148, double %sub590, i32 1
  %150 = insertelement <2 x double> undef, double %mul674, i32 0
  %151 = insertelement <2 x double> %150, double %mul674, i32 1
  %152 = fmul <2 x double> %149, %151
  %153 = fadd <2 x double> %125, %152
  %154 = load double* %x681, align 8, !tbaa !72
  %add682 = fadd double %154, %mul674
  store double %add682, double* %x681, align 8, !tbaa !72
  %x683 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul685 = fmul double %sub590, %mul671
  %155 = insertelement <2 x double> undef, double %sub590, i32 0
  %156 = insertelement <2 x double> %155, double %sub595, i32 1
  %157 = insertelement <2 x double> undef, double %mul685, i32 0
  %158 = insertelement <2 x double> %157, double %mul685, i32 1
  %159 = fmul <2 x double> %156, %158
  %160 = fadd <2 x double> %126, %159
  %161 = load double* %y690, align 8, !tbaa !73
  %add691 = fadd double %161, %mul685
  store double %add691, double* %y690, align 8, !tbaa !73
  %162 = bitcast double* %x683 to <2 x double>*
  %163 = load <2 x double>* %162, align 8, !tbaa !17
  %164 = insertelement <2 x double> %150, double %mul685, i32 1
  %165 = fsub <2 x double> %163, %164
  %166 = bitcast double* %x683 to <2 x double>*
  store <2 x double> %165, <2 x double>* %166, align 8, !tbaa !17
  %mul694 = fmul double %sub595, %mul671
  %167 = insertelement <2 x double> undef, double %sub595, i32 0
  %168 = insertelement <2 x double> %167, double %sub595, i32 1
  %169 = insertelement <2 x double> %150, double %mul694, i32 1
  %170 = fmul <2 x double> %168, %169
  %171 = fadd <2 x double> %127, %170
  %172 = load double* %z697, align 8, !tbaa !74
  %add698 = fadd double %172, %mul694
  store double %add698, double* %z697, align 8, !tbaa !74
  %z699 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %173 = load double* %z699, align 8, !tbaa !74
  %sub700 = fsub double %173, %mul694
  store double %sub700, double* %z699, align 8, !tbaa !74
  %indvars.iv.next677 = add nuw nsw i64 %indvars.iv676, 1
  %lftr.wideiv678 = trunc i64 %indvars.iv.next677 to i32
  %exitcond679 = icmp eq i32 %lftr.wideiv678, %123
  br i1 %exitcond679, label %for.end703, label %for.body577.for.body577_crit_edge

for.body577.for.body577_crit_edge:                ; preds = %for.body577
  %.pre = load i32** %atomVdwType.i497, align 8, !tbaa !64
  br label %for.body577

for.end703:                                       ; preds = %for.body577, %for.end555
  %174 = phi <2 x double> [ %61, %for.end555 ], [ %153, %for.body577 ]
  %175 = phi <2 x double> [ %62, %for.end555 ], [ %160, %for.body577 ]
  %176 = phi <2 x double> [ %63, %for.end555 ], [ %171, %for.body577 ]
  %conv708 = trunc i64 %sub.ptr.div566 to i32
  %cmp710596 = icmp sgt i32 %conv708, 0
  br i1 %cmp710596, label %for.body711.lr.ph, label %for.inc872

for.body711.lr.ph:                                ; preds = %for.end703
  %x847 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y857 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z865 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body711

for.body711:                                      ; preds = %for.body711, %for.body711.lr.ph
  %indvars.iv680 = phi i64 [ 0, %for.body711.lr.ph ], [ %indvars.iv.next681, %for.body711 ]
  %177 = phi <2 x double> [ %174, %for.body711.lr.ph ], [ %206, %for.body711 ]
  %178 = phi <2 x double> [ %175, %for.body711.lr.ph ], [ %213, %for.body711 ]
  %179 = phi <2 x double> [ %176, %for.body711.lr.ph ], [ %224, %for.body711 ]
  %arrayidx714 = getelementptr inbounds i32* %cond173, i64 %indvars.iv680
  %180 = load i32* %arrayidx714, align 4, !tbaa !11
  %idx.ext716 = sext i32 %180 to i64
  %x720 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 0
  %181 = load double* %x720, align 8, !tbaa !59
  %sub721 = fsub double %69, %181
  %mul723 = fmul double %sub721, %sub721
  %y726 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 1
  %182 = load double* %y726, align 8, !tbaa !61
  %sub727 = fsub double %70, %182
  %mul728 = fmul double %sub727, %sub727
  %add729 = fadd double %mul723, %mul728
  %z732 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 2
  %183 = load double* %z732, align 8, !tbaa !62
  %sub733 = fsub double %71, %183
  %mul734 = fmul double %sub733, %sub733
  %add735 = fadd double %add729, %mul734
  %conv737 = fptrunc double %add735 to float
  %184 = bitcast float %conv737 to i32
  %shr741 = ashr i32 %184, 17
  %add742 = add nsw i32 %shr741, %mul
  %id744 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 2
  %185 = bitcast [4 x i8]* %id744 to i32*
  %bf.load745 = load i32* %185, align 4
  %bf.clear746 = and i32 %bf.load745, 4194303
  %idxprom.i490530 = zext i32 %bf.clear746 to i64
  %186 = load i32** %atomVdwType.i497, align 8, !tbaa !64
  %arrayidx.i491 = getelementptr inbounds i32* %186, i64 %idxprom.i490530
  %187 = load i32* %arrayidx.i491, align 4, !tbaa !11
  %conv.i = zext i32 %187 to i64
  %conv748 = shl nuw nsw i64 %conv.i, 1
  %mul749 = and i64 %conv748, 131070
  %add.ptr751.sum451 = or i64 %mul749, 1
  %mul754 = shl nsw i32 %add742, 4
  %idx.ext755 = sext i32 %mul754 to i64
  %and774 = and i32 %184, -131072
  %charge776 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 1
  %188 = load float* %charge776, align 4, !tbaa !63
  %conv777 = fpext float %188 to double
  %mul778 = fmul double %mul367, %conv777
  %189 = bitcast i32 %and774 to float
  %conv781 = fpext float %189 to double
  %sub782 = fsub double %add735, %conv781
  %add.ptr.i.sum = add i64 %add.ptr751.sum451, %idx.ext.i
  %A784 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum, i32 0
  %190 = load double* %A784, align 8, !tbaa !69
  %mul785 = fmul double %8, %190
  %B787 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum, i32 1
  %191 = load double* %B787, align 8, !tbaa !71
  %mul788 = fmul double %8, %191
  %add.ptr756.sum454 = or i64 %idx.ext755, 3
  %arrayidx794 = getelementptr inbounds double* %7, i64 %add.ptr756.sum454
  %192 = load double* %arrayidx794, align 8, !tbaa !17
  %mul795 = fmul double %mul785, %192
  %add.ptr763.sum455 = or i64 %idx.ext755, 7
  %arrayidx796 = getelementptr inbounds double* %7, i64 %add.ptr763.sum455
  %193 = load double* %arrayidx796, align 8, !tbaa !17
  %mul797 = fmul double %mul788, %193
  %sub798 = fsub double %mul795, %mul797
  %add.ptr756.sum456 = or i64 %idx.ext755, 2
  %arrayidx800 = getelementptr inbounds double* %7, i64 %add.ptr756.sum456
  %194 = load double* %arrayidx800, align 8, !tbaa !17
  %mul801 = fmul double %mul785, %194
  %add.ptr763.sum457 = or i64 %idx.ext755, 6
  %arrayidx802 = getelementptr inbounds double* %7, i64 %add.ptr763.sum457
  %195 = load double* %arrayidx802, align 8, !tbaa !17
  %mul803 = fmul double %mul788, %195
  %sub804 = fsub double %mul801, %mul803
  %add.ptr756.sum458 = or i64 %idx.ext755, 1
  %arrayidx806 = getelementptr inbounds double* %7, i64 %add.ptr756.sum458
  %196 = load double* %arrayidx806, align 8, !tbaa !17
  %mul807 = fmul double %mul785, %196
  %add.ptr763.sum459 = or i64 %idx.ext755, 5
  %arrayidx808 = getelementptr inbounds double* %7, i64 %add.ptr763.sum459
  %197 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = fmul double %mul788, %197
  %sub810 = fsub double %mul807, %mul809
  %mul812 = fmul double %sub811, %mul778
  %add.ptr770.sum460 = or i64 %idx.ext755, 11
  %arrayidx815 = getelementptr inbounds double* %7, i64 %add.ptr770.sum460
  %198 = load double* %arrayidx815, align 8, !tbaa !17
  %mul816 = fmul double %mul812, %198
  %add.ptr770.sum461 = or i64 %idx.ext755, 10
  %arrayidx818 = getelementptr inbounds double* %7, i64 %add.ptr770.sum461
  %199 = load double* %arrayidx818, align 8, !tbaa !17
  %mul819 = fmul double %mul812, %199
  %add.ptr770.sum462 = or i64 %idx.ext755, 9
  %arrayidx821 = getelementptr inbounds double* %7, i64 %add.ptr770.sum462
  %200 = load double* %arrayidx821, align 8, !tbaa !17
  %mul822 = fmul double %mul812, %200
  %add823 = fadd double %sub798, %mul816
  %add824 = fadd double %sub804, %mul819
  %add825 = fadd double %sub810, %mul822
  %mul828 = fmul double %sub782, 3.000000e+00
  %mul829 = fmul double %mul828, %add823
  %mul830 = fmul double %add824, 2.000000e+00
  %add831 = fadd double %mul829, %mul830
  %mul832 = fmul double %sub782, %add831
  %add833 = fadd double %add825, %mul832
  %mul835 = fmul double %add833, -2.000000e+00
  %mul840 = fmul double %sub721, %mul835
  %201 = insertelement <2 x double> undef, double %sub721, i32 0
  %202 = insertelement <2 x double> %201, double %sub727, i32 1
  %203 = insertelement <2 x double> undef, double %mul840, i32 0
  %204 = insertelement <2 x double> %203, double %mul840, i32 1
  %205 = fmul <2 x double> %202, %204
  %206 = fadd <2 x double> %177, %205
  %207 = load double* %x847, align 8, !tbaa !72
  %add848 = fadd double %207, %mul840
  store double %add848, double* %x847, align 8, !tbaa !72
  %x849 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext716, i32 0
  %mul852 = fmul double %sub727, %mul835
  %208 = insertelement <2 x double> undef, double %sub727, i32 0
  %209 = insertelement <2 x double> %208, double %sub733, i32 1
  %210 = insertelement <2 x double> undef, double %mul852, i32 0
  %211 = insertelement <2 x double> %210, double %mul852, i32 1
  %212 = fmul <2 x double> %209, %211
  %213 = fadd <2 x double> %178, %212
  %214 = load double* %y857, align 8, !tbaa !73
  %add858 = fadd double %214, %mul852
  store double %add858, double* %y857, align 8, !tbaa !73
  %215 = bitcast double* %x849 to <2 x double>*
  %216 = load <2 x double>* %215, align 8, !tbaa !17
  %217 = insertelement <2 x double> %203, double %mul852, i32 1
  %218 = fsub <2 x double> %216, %217
  %219 = bitcast double* %x849 to <2 x double>*
  store <2 x double> %218, <2 x double>* %219, align 8, !tbaa !17
  %mul862 = fmul double %sub733, %mul835
  %220 = insertelement <2 x double> undef, double %sub733, i32 0
  %221 = insertelement <2 x double> %220, double %sub733, i32 1
  %222 = insertelement <2 x double> %203, double %mul862, i32 1
  %223 = fmul <2 x double> %221, %222
  %224 = fadd <2 x double> %179, %223
  %225 = load double* %z865, align 8, !tbaa !74
  %add866 = fadd double %225, %mul862
  store double %add866, double* %z865, align 8, !tbaa !74
  %z867 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext716, i32 2
  %226 = load double* %z867, align 8, !tbaa !74
  %sub868 = fsub double %226, %mul862
  store double %sub868, double* %z867, align 8, !tbaa !74
  %indvars.iv.next681 = add nuw nsw i64 %indvars.iv680, 1
  %lftr.wideiv682 = trunc i64 %indvars.iv.next681 to i32
  %exitcond683 = icmp eq i32 %lftr.wideiv682, %conv708
  br i1 %exitcond683, label %for.inc872, label %for.body711

for.inc872:                                       ; preds = %for.body711, %for.end703, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end703 ], [ %pairCount.2, %for.body711 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0614, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end703 ], [ %pairlistindex.1, %for.body711 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1615, %for.end703 ], [ %i.1615, %for.body711 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0628, %if.then221 ], [ %exclChecksum.0628, %cond.end349 ], [ %conv569, %for.end703 ], [ %conv569, %for.body711 ]
  %227 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %174, %for.end703 ], [ %206, %for.body711 ]
  %228 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %175, %for.end703 ], [ %213, %for.body711 ]
  %229 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %176, %for.end703 ], [ %224, %for.body711 ]
  %inc873 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc873, %12
  br i1 %cmp183, label %for.body184, label %for.end874

for.end874:                                       ; preds = %for.inc872, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc872 ]
  %230 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %227, %for.inc872 ]
  %231 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %228, %for.inc872 ]
  %232 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %229, %for.inc872 ]
  %233 = extractelement <2 x double> %232, i32 1
  %arraydecay875 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp876 = icmp eq i32* %cond500502699705, %arraydecay875
  br i1 %cmp876, label %if.end881, label %delete.notnull879

delete.notnull879:                                ; preds = %for.end874
  %234 = bitcast i32* %cond500502699705 to i8*
  call void @_ZdaPv(i8* %234) #7
  br label %if.end881

if.end881:                                        ; preds = %delete.notnull879, %for.end874
  %arraydecay882 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp883 = icmp eq i32* %cond19504697706, %arraydecay882
  br i1 %cmp883, label %if.end888, label %delete.notnull886

delete.notnull886:                                ; preds = %if.end881
  %235 = bitcast i32* %cond19504697706 to i8*
  call void @_ZdaPv(i8* %235) #7
  br label %if.end888

if.end888:                                        ; preds = %delete.notnull886, %if.end881
  %arraydecay889 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp890 = icmp eq i32* %cond30701704, %arraydecay889
  br i1 %cmp890, label %if.end895, label %delete.notnull893

delete.notnull893:                                ; preds = %if.end888
  %236 = bitcast i32* %cond30701704 to i8*
  call void @_ZdaPv(i8* %236) #7
  br label %if.end895

if.end895:                                        ; preds = %delete.notnull893, %if.end888
  %arraydecay896 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp897 = icmp eq i32* %cond129508510516522, %arraydecay896
  br i1 %cmp897, label %if.end902, label %delete.notnull900

delete.notnull900:                                ; preds = %if.end895
  %237 = bitcast i32* %cond129508510516522 to i8*
  call void @_ZdaPv(i8* %237) #7
  br label %if.end902

if.end902:                                        ; preds = %delete.notnull900, %if.end895
  %arraydecay903 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp904 = icmp eq i32* %cond140512514524, %arraydecay903
  br i1 %cmp904, label %if.end909, label %delete.notnull907

delete.notnull907:                                ; preds = %if.end902
  %238 = bitcast i32* %cond140512514524 to i8*
  call void @_ZdaPv(i8* %238) #7
  br label %if.end909

if.end909:                                        ; preds = %delete.notnull907, %if.end902
  %arraydecay910 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp911 = icmp eq i32* %cond151518520, %arraydecay910
  br i1 %cmp911, label %if.end916, label %delete.notnull914

delete.notnull914:                                ; preds = %if.end909
  %239 = bitcast i32* %cond151518520 to i8*
  call void @_ZdaPv(i8* %239) #7
  br label %if.end916

if.end916:                                        ; preds = %delete.notnull914, %if.end909
  %arraydecay917 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp918 = icmp eq i32* %cond162526, %arraydecay917
  br i1 %cmp918, label %if.end923, label %delete.notnull921

delete.notnull921:                                ; preds = %if.end916
  %240 = bitcast i32* %cond162526 to i8*
  call void @_ZdaPv(i8* %240) #7
  br label %if.end923

if.end923:                                        ; preds = %delete.notnull921, %if.end916
  %arraydecay924 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp925 = icmp eq i32* %cond173, %arraydecay924
  br i1 %cmp925, label %if.end930, label %delete.notnull928

delete.notnull928:                                ; preds = %if.end923
  %241 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %241) #7
  br label %if.end930

if.end930:                                        ; preds = %delete.notnull928, %if.end923
  %conv931 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx932 = getelementptr inbounds double* %1, i64 22
  %242 = load double* %arrayidx932, align 8, !tbaa !17
  %add933 = fadd double %conv931, %242
  store double %add933, double* %arrayidx932, align 8, !tbaa !17
  %arrayidx934 = getelementptr inbounds double* %1, i64 3
  %243 = bitcast double* %arrayidx934 to <2 x double>*
  %244 = load <2 x double>* %243, align 8, !tbaa !17
  %245 = fadd <2 x double> %230, %244
  %246 = bitcast double* %arrayidx934 to <2 x double>*
  store <2 x double> %245, <2 x double>* %246, align 8, !tbaa !17
  %arrayidx938 = getelementptr inbounds double* %1, i64 5
  %247 = bitcast double* %arrayidx938 to <2 x double>*
  %248 = load <2 x double>* %247, align 8, !tbaa !17
  %249 = shufflevector <2 x double> %232, <2 x double> %230, <2 x i32> <i32 0, i32 3>
  %250 = fadd <2 x double> %249, %248
  %251 = bitcast double* %arrayidx938 to <2 x double>*
  store <2 x double> %250, <2 x double>* %251, align 8, !tbaa !17
  %arrayidx942 = getelementptr inbounds double* %1, i64 7
  %252 = bitcast double* %arrayidx942 to <2 x double>*
  %253 = load <2 x double>* %252, align 8, !tbaa !17
  %254 = fadd <2 x double> %231, %253
  %255 = bitcast double* %arrayidx942 to <2 x double>*
  store <2 x double> %254, <2 x double>* %255, align 8, !tbaa !17
  %arrayidx946 = getelementptr inbounds double* %1, i64 9
  %256 = bitcast double* %arrayidx946 to <2 x double>*
  %257 = load <2 x double>* %256, align 8, !tbaa !17
  %258 = shufflevector <2 x double> %232, <2 x double> %231, <2 x i32> <i32 0, i32 3>
  %259 = fadd <2 x double> %258, %257
  %260 = bitcast double* %arrayidx946 to <2 x double>*
  store <2 x double> %259, <2 x double>* %260, align 8, !tbaa !17
  %arrayidx950 = getelementptr inbounds double* %1, i64 11
  %261 = load double* %arrayidx950, align 8, !tbaa !17
  %add951 = fadd double %233, %261
  store double %add951, double* %arrayidx950, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end930, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil16calc_pair_energyEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31697 = icmp sgt i32 %13, 0
  br i1 %cmp31697, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30750 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond534536748 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19538746 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv739 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next740, %for.inc ]
  %g.0698 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv739, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0698, 1
  %idxprom41 = sext i32 %g.0698 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond534536748, i64 %idxprom41
  %30 = trunc i64 %indvars.iv739 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0698, %for.body ]
  %indvars.iv.next740 = add nuw nsw i64 %indvars.iv739, 1
  %lftr.wideiv741 = trunc i64 %indvars.iv.next740 to i32
  %exitcond742 = icmp eq i32 %lftr.wideiv741, %13
  br i1 %exitcond742, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond534536748, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond534536748, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa755 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19538745754 = phi i32* [ %cond19538746, %for.end ], [ %cond19538746, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond534536747753 = phi i32* [ %cond534536748, %for.end ], [ %cond534536748, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30749752 = phi i32* [ %cond30750, %for.end ], [ %cond30750, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56691 = icmp sgt i32 %g.0.lcssa755, 0
  br i1 %cmp56691, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75685 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76686 = icmp sgt i32 %12, 0
  %or.cond518687 = and i1 %tobool75685, %cmp76686
  br i1 %or.cond518687, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv735 = phi i64 [ %indvars.iv.next736, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0693 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0692 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond534536747753, i64 %indvars.iv735
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0693, 1
  %idxprom68 = sext i32 %fixg.0693 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19538745754, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0692, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0693, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next736 = add nuw nsw i64 %indvars.iv735, 1
  %lftr.wideiv737 = trunc i64 %indvars.iv.next736 to i32
  %exitcond738 = icmp eq i32 %lftr.wideiv737, %g.0.lcssa755
  br i1 %exitcond738, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv733 = phi i64 [ %indvars.iv.next734, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2688 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv733, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2688
  %indvars.iv.next734 = add nuw nsw i64 %indvars.iv733, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next734 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond518 = and i1 %tobool75, %cmp76
  br i1 %or.cond518, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75685, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond534536747753, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond534536747753 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19538745754, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19538745754 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30749752, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30749752 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19538745754, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19538745754, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2541 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162560 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140546548558 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129542544550556 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151552554 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183654 = icmp sgt i32 %12, 0
  br i1 %cmp183654, label %for.body184.lr.ph, label %for.end904

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i531 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140546548558 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162560 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151552554 to i64
  %sub833 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30749752 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129542544550556 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc902, %for.body184.lr.ph
  %exclChecksum.0674 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc902 ]
  %i.1657 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc903, %for.inc902 ]
  %pairlistindex.0656 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc902 ]
  %pairCount.0655 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc902 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %239, %for.inc902 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %240, %for.inc902 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %241, %for.inc902 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %242, %for.inc902 ]
  %idxprom185 = sext i32 %i.1657 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %65 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %65, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i562 = zext i32 %bf.clear188 to i64
  %66 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i562, i32 0
  %67 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i562, i32 1
  %68 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i562, i32 2
  %69 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %67 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %70 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %71 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %72 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %73 = and i32 %bf.load187, 62914560
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0655
  %cmp218 = icmp sge i32 %pairCount.0655, %div
  %cmp220 = icmp slt i32 %pairCount.0655, %div181
  %or.cond520 = and i1 %cmp218, %cmp220
  br i1 %or.cond520, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1657, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc902

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0655, %if.then205 ], [ %add217, %if.then211 ]
  %75 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %75, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %76 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %76, i32* %cond19538745754, i32* %cond534536747753
  %cond243 = select i1 %76, i32 %fixg.2541, i32 %g.0.lcssa755
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %77 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %77 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %78 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %79 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %80 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_y.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_x.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %j2.0.ph = phi i32 [ %77, %if.then245 ], [ %83, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30749752, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %81 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %81, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %82 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %82, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %83 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %70, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %83 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %84 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %71, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %85 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %72, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %86 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div515 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div515 to i32
  %cmp289573 = icmp sgt i32 %conv287, 0
  br i1 %cmp289573, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %87 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %88 = lshr i64 %87, 2
  %89 = trunc i64 %88 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv705 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next706, %cond.end310 ]
  %pli.0575 = phi i32* [ %cond129542544550556, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30749752, i64 %indvars.iv705
  %90 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %90 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %91 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %91, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp516517 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp516517, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %90, i32* %pli.0575, align 4, !tbaa !11
  %add313 = add nsw i32 %90, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0575, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %90, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0575, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %90, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0575, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0575, i64 %cond311
  %indvars.iv.next706 = add nuw nsw i64 %indvars.iv705, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next706 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129542544550556, %land.end ], [ %cond129542544550556, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328512 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328512 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext513 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext513, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129542544550556, i64 %idxprom333
  %92 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129542544550556, i64 %idxprom335
  store i32 %92, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %65, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1657
  br label %for.inc902

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0655, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0656, %for.body184 ]
  %93 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %93, 0
  %bf.load369.pre = load i32* %65, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load369.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %94 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %95 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %95 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  %bf.clear370 = and i32 %bf.load369.pre, 4194303
  %idxprom.i530563 = zext i32 %bf.clear370 to i64
  %96 = load i32** %atomVdwType.i531, align 8, !tbaa !64
  %arrayidx.i532 = getelementptr inbounds i32* %96, i64 %idxprom.i530563
  %97 = load i32* %arrayidx.i532, align 4, !tbaa !11
  %98 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %99 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv372 = shl i32 %97, 1
  %mul.i = and i32 %conv372, 131070
  %mul2.i = mul i32 %mul.i, %99
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp378600 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %94, label %for.cond377.preheader, label %if.else439

for.cond377.preheader:                            ; preds = %land.end362
  br i1 %cmp378600, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv716 = phi i64 [ %indvars.iv.next717, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1604 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0674, %for.cond377.preheader ]
  %pli374.0603 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140546548558, %for.cond377.preheader ]
  %plin.0602 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151552554, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129542544550556, i64 %indvars.iv716
  %100 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %100 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %101 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %70, %101
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %102 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %71, %102
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %103 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %72, %103
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %104 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %104, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond521 = or i1 %tobool413, %cmp415
  br i1 %or.cond521, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1604, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1604, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %67
  %cmp429 = icmp sgt i32 %bf.clear426, %68
  %or.cond522 = or i1 %cmp427, %cmp429
  br i1 %or.cond522, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0603, i64 1
  store i32 %100, i32* %pli374.0603, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0602, i64 1
  store i32 %100, i32* %plin.0602, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0602, %for.body379 ], [ %plin.0602, %land.lhs.true418 ], [ %plin.0602, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0603, %for.body379 ], [ %pli374.0603, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0603, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1604, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next717 = add nuw nsw i64 %indvars.iv716, 1
  %lftr.wideiv718 = trunc i64 %indvars.iv.next717 to i32
  %exitcond719 = icmp eq i32 %lftr.wideiv718, %pairlistindex.1
  br i1 %exitcond719, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362
  br i1 %cmp378600, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %105 = load i32* %cond129542544550556, align 4, !tbaa !11
  %idxprom447 = sext i32 %105 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %106 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %107 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %108 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %108, %if.then442 ], [ %114, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %107, %if.then442 ], [ %113, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %106, %if.then442 ], [ %112, %if.else507 ]
  %j2443.0.ph = phi i32 [ %105, %if.then442 ], [ %111, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151552554, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140546548558, %if.then442 ], [ %pli374.2.ph583, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0674, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer576

while.cond467.outer576:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph577 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph578 = phi double [ %114, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph579 = phi double [ %113, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph580 = phi double [ %112, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph581 = phi i32 [ %111, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph582 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph583 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph584 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer585

while.cond467.outer585:                           ; preds = %land.lhs.true498, %while.cond467.outer576
  %idxprom447.pn.ph586 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph577, %while.cond467.outer576 ]
  %p_j_z456.0.ph587 = phi double [ %114, %land.lhs.true498 ], [ %p_j_z456.0.ph578, %while.cond467.outer576 ]
  %p_j_y451.0.ph588 = phi double [ %113, %land.lhs.true498 ], [ %p_j_y451.0.ph579, %while.cond467.outer576 ]
  %p_j_x446.0.ph589 = phi double [ %112, %land.lhs.true498 ], [ %p_j_x446.0.ph580, %while.cond467.outer576 ]
  %j2443.0.ph590 = phi i32 [ %111, %land.lhs.true498 ], [ %j2443.0.ph581, %while.cond467.outer576 ]
  %k440.0.ph591 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph582, %while.cond467.outer576 ]
  %exclChecksum.4.ph592 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph584, %while.cond467.outer576 ]
  %109 = sext i32 %k440.0.ph591 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer585
  %indvars.iv712 = phi i64 [ %109, %while.cond467.outer585 ], [ %indvars.iv.next713, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph586, %while.cond467.outer585 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph587, %while.cond467.outer585 ], [ %114, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph588, %while.cond467.outer585 ], [ %113, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph589, %while.cond467.outer585 ], [ %112, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph590, %while.cond467.outer585 ], [ %111, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph591, %while.cond467.outer585 ], [ %inc470, %while.body469 ]
  %110 = trunc i64 %indvars.iv712 to i32
  %cmp468 = icmp slt i32 %110, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next713 = add nsw i64 %indvars.iv712, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129542544550556, i64 %indvars.iv.next713
  %111 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %70, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %111 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %112 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %71, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %113 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %72, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %114 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph592, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer585

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph592, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %67
  %cmp504 = icmp sgt i32 %atom2461.0, %68
  %or.cond523 = or i1 %cmp502, %cmp504
  br i1 %or.cond523, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph583, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph583, align 4, !tbaa !11
  br label %while.cond467.outer576

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %plin.4 = phi i32* [ %cond151552554, %if.else439 ], [ %cond151552554, %for.cond377.preheader ], [ %plin.2.ph, %while.cond467 ], [ %plin.1, %for.inc436 ]
  %pli374.4 = phi i32* [ %cond140546548558, %if.else439 ], [ %cond140546548558, %for.cond377.preheader ], [ %pli374.2.ph583, %while.cond467 ], [ %pli374.1, %for.inc436 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0674, %if.else439 ], [ %exclChecksum.0674, %for.cond377.preheader ], [ %exclChecksum.4.ph592, %while.cond467 ], [ %exclChecksum.3, %for.inc436 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522479 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522479 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext510 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext510, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140546548558, i64 %idxprom527
  %115 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140546548558, i64 %idxprom529
  store i32 %115, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534608 = icmp sgt i32 %conv523, 0
  br i1 %cmp534608, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %116 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %117 = lshr i64 %116, 2
  %118 = trunc i64 %117 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv720 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next721, %for.inc553 ]
  %plin.5612 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0611 = phi i32* [ %cond162560, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0610 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140546548558, i64 %indvars.iv720
  %119 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %119 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %120 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %120, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545509 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545509, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %69, i64 %add.ptr.sum
  %121 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %121 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5612, i64 1
  store i32 %119, i32* %plin.5612, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0611, i64 1
  store i32 %119, i32* %plix.0611, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0610, i64 1
  store i32 %119, i32* %plim.0610, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0610, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0610, %sw.bb549 ], [ %plim.0610, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0611, %for.body535 ], [ %plix.0611, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0611, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5612, %for.body535 ], [ %plin.5612, %sw.bb551 ], [ %plin.5612, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next721 = add nuw nsw i64 %indvars.iv720, 1
  %lftr.wideiv722 = trunc i64 %indvars.iv.next721 to i32
  %exitcond723 = icmp eq i32 %lftr.wideiv722, %118
  br i1 %exitcond723, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162560, %for.cond533.preheader ], [ %cond162560, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559481 = lshr exact i64 %sub.ptr.sub558, 2
  %conv560480 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560480
  %add568 = add i64 %add561, %sub.ptr.div559481
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573483 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573483 to i32
  %cmp576616 = icmp sgt i32 %conv574, 0
  br i1 %cmp576616, label %for.body577.lr.ph, label %for.end717

for.body577.lr.ph:                                ; preds = %for.end555
  %x695 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y704 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z711 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %122 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %123 = lshr i64 %122, 2
  %124 = trunc i64 %123 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577.for.body577_crit_edge, %for.body577.lr.ph
  %125 = phi i32* [ %96, %for.body577.lr.ph ], [ %.pre, %for.body577.for.body577_crit_edge ]
  %indvars.iv724 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next725, %for.body577.for.body577_crit_edge ]
  %126 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %155, %for.body577.for.body577_crit_edge ]
  %127 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %161, %for.body577.for.body577_crit_edge ]
  %128 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %177, %for.body577.for.body577_crit_edge ]
  %129 = phi <2 x double> [ %64, %for.body577.lr.ph ], [ %165, %for.body577.for.body577_crit_edge ]
  %arrayidx580 = getelementptr inbounds i32* %cond151552554, i64 %indvars.iv724
  %130 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %130 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %131 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %70, %131
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %132 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %71, %132
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %133 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %72, %133
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %134 = bitcast float %conv598 to i32
  %shr = ashr i32 %134, 17
  %add600 = add nsw i32 %shr, %mul
  %id601 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 2
  %135 = bitcast [4 x i8]* %id601 to i32*
  %bf.load602 = load i32* %135, align 4
  %bf.clear603 = and i32 %bf.load602, 4194303
  %idxprom.i526566 = zext i32 %bf.clear603 to i64
  %arrayidx.i528 = getelementptr inbounds i32* %125, i64 %idxprom.i526566
  %136 = load i32* %arrayidx.i528, align 4, !tbaa !11
  %conv.i529 = zext i32 %136 to i64
  %conv605 = shl nuw nsw i64 %conv.i529, 1
  %mul606 = and i64 %conv605, 131070
  %mul609 = shl nsw i32 %add600, 4
  %idx.ext610 = sext i32 %mul609 to i64
  %add.ptr611 = getelementptr inbounds double* %7, i64 %idx.ext610
  %137 = load double* %add.ptr611, align 8, !tbaa !17
  %add.ptr611.sum498 = or i64 %idx.ext610, 4
  %add.ptr616 = getelementptr inbounds double* %7, i64 %add.ptr611.sum498
  %138 = load double* %add.ptr616, align 8, !tbaa !17
  %add.ptr611.sum499 = or i64 %idx.ext610, 8
  %add.ptr621 = getelementptr inbounds double* %7, i64 %add.ptr611.sum499
  %139 = load double* %add.ptr621, align 8, !tbaa !17
  %and = and i32 %134, -131072
  %charge624 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %140 = load float* %charge624, align 4, !tbaa !63
  %conv625 = fpext float %140 to double
  %mul626 = fmul double %mul367, %conv625
  %141 = bitcast i32 %and to float
  %conv628 = fpext float %141 to double
  %sub629 = fsub double %add597, %conv628
  %add.ptr.i.sum567 = add i64 %mul606, %idx.ext.i
  %A631 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum567, i32 0
  %142 = load double* %A631, align 8, !tbaa !69
  %mul632 = fmul double %8, %142
  %B634 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum567, i32 1
  %143 = load double* %B634, align 8, !tbaa !71
  %mul635 = fmul double %8, %143
  %mul636 = fmul double %137, %mul632
  %mul637 = fmul double %138, %mul635
  %sub638 = fsub double %mul636, %mul637
  %add.ptr611.sum500 = or i64 %idx.ext610, 3
  %arrayidx639 = getelementptr inbounds double* %7, i64 %add.ptr611.sum500
  %144 = load double* %arrayidx639, align 8, !tbaa !17
  %mul640 = fmul double %mul632, %144
  %add.ptr616.sum501 = or i64 %idx.ext610, 7
  %arrayidx641 = getelementptr inbounds double* %7, i64 %add.ptr616.sum501
  %145 = load double* %arrayidx641, align 8, !tbaa !17
  %mul642 = fmul double %mul635, %145
  %sub643 = fsub double %mul640, %mul642
  %add.ptr611.sum502 = or i64 %idx.ext610, 2
  %arrayidx644 = getelementptr inbounds double* %7, i64 %add.ptr611.sum502
  %146 = load double* %arrayidx644, align 8, !tbaa !17
  %mul645 = fmul double %mul632, %146
  %add.ptr616.sum503 = or i64 %idx.ext610, 6
  %arrayidx646 = getelementptr inbounds double* %7, i64 %add.ptr616.sum503
  %147 = load double* %arrayidx646, align 8, !tbaa !17
  %mul647 = fmul double %mul635, %147
  %sub648 = fsub double %mul645, %mul647
  %add.ptr611.sum504 = or i64 %idx.ext610, 1
  %arrayidx649 = getelementptr inbounds double* %7, i64 %add.ptr611.sum504
  %148 = load double* %arrayidx649, align 8, !tbaa !17
  %mul650 = fmul double %mul632, %148
  %add.ptr616.sum505 = or i64 %idx.ext610, 5
  %arrayidx651 = getelementptr inbounds double* %7, i64 %add.ptr616.sum505
  %149 = load double* %arrayidx651, align 8, !tbaa !17
  %mul652 = fmul double %mul635, %149
  %sub653 = fsub double %mul650, %mul652
  %mul654 = fmul double %sub629, %sub643
  %add655 = fadd double %mul654, %sub648
  %mul656 = fmul double %sub629, %add655
  %add657 = fadd double %mul656, %sub653
  %mul658 = fmul double %sub629, %add657
  %add659 = fadd double %sub638, %mul658
  %mul661 = fmul double %139, %mul626
  %add.ptr621.sum506 = or i64 %idx.ext610, 11
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr621.sum506
  %150 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul626, %150
  %add.ptr621.sum507 = or i64 %idx.ext610, 10
  %arrayidx664 = getelementptr inbounds double* %7, i64 %add.ptr621.sum507
  %151 = load double* %arrayidx664, align 8, !tbaa !17
  %mul665 = fmul double %mul626, %151
  %add.ptr621.sum508 = or i64 %idx.ext610, 9
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr621.sum508
  %152 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul626, %152
  %mul668 = fmul double %sub629, %mul663
  %add669 = fadd double %mul668, %mul665
  %mul670 = fmul double %sub629, %add669
  %add671 = fadd double %mul667, %mul670
  %mul672 = fmul double %sub629, %add671
  %add673 = fadd double %mul661, %mul672
  %add675 = fadd double %sub643, %mul663
  %add676 = fadd double %sub648, %mul665
  %add677 = fadd double %sub653, %mul667
  %mul679 = fmul double %sub629, 3.000000e+00
  %mul680 = fmul double %mul679, %add675
  %mul681 = fmul double %add676, 2.000000e+00
  %add682 = fadd double %mul680, %mul681
  %mul683 = fmul double %sub629, %add682
  %add684 = fadd double %add677, %mul683
  %mul685 = fmul double %add684, -2.000000e+00
  %mul688 = fmul double %sub585, %mul685
  %mul689 = fmul double %sub585, %mul688
  %153 = insertelement <2 x double> undef, double %add659, i32 0
  %154 = insertelement <2 x double> %153, double %mul689, i32 1
  %155 = fadd <2 x double> %126, %154
  %156 = insertelement <2 x double> undef, double %sub590, i32 0
  %157 = insertelement <2 x double> %156, double %sub595, i32 1
  %158 = insertelement <2 x double> undef, double %mul688, i32 0
  %159 = insertelement <2 x double> %158, double %mul688, i32 1
  %160 = fmul <2 x double> %157, %159
  %161 = fadd <2 x double> %127, %160
  %162 = load double* %x695, align 8, !tbaa !72
  %add696 = fadd double %162, %mul688
  store double %add696, double* %x695, align 8, !tbaa !72
  %x697 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul699 = fmul double %sub590, %mul685
  %mul700 = fmul double %sub590, %mul699
  %163 = insertelement <2 x double> undef, double %add673, i32 0
  %164 = insertelement <2 x double> %163, double %mul700, i32 1
  %165 = fadd <2 x double> %129, %164
  %166 = load double* %y704, align 8, !tbaa !73
  %add705 = fadd double %166, %mul699
  store double %add705, double* %y704, align 8, !tbaa !73
  %167 = bitcast double* %x697 to <2 x double>*
  %168 = load <2 x double>* %167, align 8, !tbaa !17
  %169 = insertelement <2 x double> %158, double %mul699, i32 1
  %170 = fsub <2 x double> %168, %169
  %171 = bitcast double* %x697 to <2 x double>*
  store <2 x double> %170, <2 x double>* %171, align 8, !tbaa !17
  %mul708 = fmul double %sub595, %mul685
  %172 = insertelement <2 x double> undef, double %sub595, i32 0
  %173 = insertelement <2 x double> %172, double %sub595, i32 1
  %174 = insertelement <2 x double> undef, double %mul699, i32 0
  %175 = insertelement <2 x double> %174, double %mul708, i32 1
  %176 = fmul <2 x double> %173, %175
  %177 = fadd <2 x double> %128, %176
  %178 = load double* %z711, align 8, !tbaa !74
  %add712 = fadd double %178, %mul708
  store double %add712, double* %z711, align 8, !tbaa !74
  %z713 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %179 = load double* %z713, align 8, !tbaa !74
  %sub714 = fsub double %179, %mul708
  store double %sub714, double* %z713, align 8, !tbaa !74
  %indvars.iv.next725 = add nuw nsw i64 %indvars.iv724, 1
  %lftr.wideiv726 = trunc i64 %indvars.iv.next725 to i32
  %exitcond727 = icmp eq i32 %lftr.wideiv726, %124
  br i1 %exitcond727, label %for.end717, label %for.body577.for.body577_crit_edge

for.body577.for.body577_crit_edge:                ; preds = %for.body577
  %.pre = load i32** %atomVdwType.i531, align 8, !tbaa !64
  br label %for.body577

for.end717:                                       ; preds = %for.body577, %for.end555
  %180 = phi <2 x double> [ %61, %for.end555 ], [ %155, %for.body577 ]
  %181 = phi <2 x double> [ %62, %for.end555 ], [ %161, %for.body577 ]
  %182 = phi <2 x double> [ %63, %for.end555 ], [ %177, %for.body577 ]
  %183 = phi <2 x double> [ %64, %for.end555 ], [ %165, %for.body577 ]
  %conv722 = trunc i64 %sub.ptr.div566 to i32
  %cmp724634 = icmp sgt i32 %conv722, 0
  br i1 %cmp724634, label %for.body725.lr.ph, label %for.inc902

for.body725.lr.ph:                                ; preds = %for.end717
  %x877 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y887 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z895 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body725

for.body725:                                      ; preds = %for.body725, %for.body725.lr.ph
  %indvars.iv728 = phi i64 [ 0, %for.body725.lr.ph ], [ %indvars.iv.next729, %for.body725 ]
  %184 = phi <2 x double> [ %180, %for.body725.lr.ph ], [ %214, %for.body725 ]
  %185 = phi <2 x double> [ %181, %for.body725.lr.ph ], [ %220, %for.body725 ]
  %186 = phi <2 x double> [ %182, %for.body725.lr.ph ], [ %236, %for.body725 ]
  %187 = phi <2 x double> [ %183, %for.body725.lr.ph ], [ %224, %for.body725 ]
  %arrayidx728 = getelementptr inbounds i32* %cond173, i64 %indvars.iv728
  %188 = load i32* %arrayidx728, align 4, !tbaa !11
  %idx.ext730 = sext i32 %188 to i64
  %x734 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 0
  %189 = load double* %x734, align 8, !tbaa !59
  %sub735 = fsub double %70, %189
  %mul737 = fmul double %sub735, %sub735
  %y740 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 1
  %190 = load double* %y740, align 8, !tbaa !61
  %sub741 = fsub double %71, %190
  %mul742 = fmul double %sub741, %sub741
  %add743 = fadd double %mul737, %mul742
  %z746 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 2
  %191 = load double* %z746, align 8, !tbaa !62
  %sub747 = fsub double %72, %191
  %mul748 = fmul double %sub747, %sub747
  %add749 = fadd double %add743, %mul748
  %conv751 = fptrunc double %add749 to float
  %192 = bitcast float %conv751 to i32
  %shr755 = ashr i32 %192, 17
  %add756 = add nsw i32 %shr755, %mul
  %id758 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 2
  %193 = bitcast [4 x i8]* %id758 to i32*
  %bf.load759 = load i32* %193, align 4
  %bf.clear760 = and i32 %bf.load759, 4194303
  %idxprom.i524564 = zext i32 %bf.clear760 to i64
  %194 = load i32** %atomVdwType.i531, align 8, !tbaa !64
  %arrayidx.i525 = getelementptr inbounds i32* %194, i64 %idxprom.i524564
  %195 = load i32* %arrayidx.i525, align 4, !tbaa !11
  %conv.i = zext i32 %195 to i64
  %conv762 = shl nuw nsw i64 %conv.i, 1
  %mul763 = and i64 %conv762, 131070
  %add.ptr765.sum485 = or i64 %mul763, 1
  %mul768 = shl nsw i32 %add756, 4
  %idx.ext769 = sext i32 %mul768 to i64
  %add.ptr770 = getelementptr inbounds double* %7, i64 %idx.ext769
  %196 = load double* %add.ptr770, align 8, !tbaa !17
  %add.ptr770.sum486 = or i64 %idx.ext769, 4
  %add.ptr777 = getelementptr inbounds double* %7, i64 %add.ptr770.sum486
  %197 = load double* %add.ptr777, align 8, !tbaa !17
  %add.ptr770.sum487 = or i64 %idx.ext769, 8
  %add.ptr784 = getelementptr inbounds double* %7, i64 %add.ptr770.sum487
  %198 = load double* %add.ptr784, align 8, !tbaa !17
  %and788 = and i32 %192, -131072
  %charge790 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 1
  %199 = load float* %charge790, align 4, !tbaa !63
  %conv791 = fpext float %199 to double
  %mul792 = fmul double %mul367, %conv791
  %200 = bitcast i32 %and788 to float
  %conv795 = fpext float %200 to double
  %sub796 = fsub double %add749, %conv795
  %add.ptr.i.sum = add i64 %add.ptr765.sum485, %idx.ext.i
  %A798 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum, i32 0
  %201 = load double* %A798, align 8, !tbaa !69
  %mul799 = fmul double %8, %201
  %B801 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum, i32 1
  %202 = load double* %B801, align 8, !tbaa !71
  %mul802 = fmul double %8, %202
  %mul804 = fmul double %196, %mul799
  %mul805 = fmul double %197, %mul802
  %sub806 = fsub double %mul804, %mul805
  %add.ptr770.sum488 = or i64 %idx.ext769, 3
  %arrayidx808 = getelementptr inbounds double* %7, i64 %add.ptr770.sum488
  %203 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = fmul double %mul799, %203
  %add.ptr777.sum489 = or i64 %idx.ext769, 7
  %arrayidx810 = getelementptr inbounds double* %7, i64 %add.ptr777.sum489
  %204 = load double* %arrayidx810, align 8, !tbaa !17
  %mul811 = fmul double %mul802, %204
  %sub812 = fsub double %mul809, %mul811
  %add.ptr770.sum490 = or i64 %idx.ext769, 2
  %arrayidx814 = getelementptr inbounds double* %7, i64 %add.ptr770.sum490
  %205 = load double* %arrayidx814, align 8, !tbaa !17
  %mul815 = fmul double %mul799, %205
  %add.ptr777.sum491 = or i64 %idx.ext769, 6
  %arrayidx816 = getelementptr inbounds double* %7, i64 %add.ptr777.sum491
  %206 = load double* %arrayidx816, align 8, !tbaa !17
  %mul817 = fmul double %mul802, %206
  %sub818 = fsub double %mul815, %mul817
  %add.ptr770.sum492 = or i64 %idx.ext769, 1
  %arrayidx820 = getelementptr inbounds double* %7, i64 %add.ptr770.sum492
  %207 = load double* %arrayidx820, align 8, !tbaa !17
  %mul821 = fmul double %mul799, %207
  %add.ptr777.sum493 = or i64 %idx.ext769, 5
  %arrayidx822 = getelementptr inbounds double* %7, i64 %add.ptr777.sum493
  %208 = load double* %arrayidx822, align 8, !tbaa !17
  %mul823 = fmul double %mul802, %208
  %sub824 = fsub double %mul821, %mul823
  %mul826 = fmul double %sub796, %sub812
  %add827 = fadd double %mul826, %sub818
  %mul828 = fmul double %sub796, %add827
  %add829 = fadd double %mul828, %sub824
  %mul830 = fmul double %sub796, %add829
  %add831 = fadd double %sub806, %mul830
  %mul834 = fmul double %sub833, %mul792
  %mul835 = fmul double %198, %mul834
  %add.ptr784.sum494 = or i64 %idx.ext769, 11
  %arrayidx837 = getelementptr inbounds double* %7, i64 %add.ptr784.sum494
  %209 = load double* %arrayidx837, align 8, !tbaa !17
  %mul838 = fmul double %mul834, %209
  %add.ptr784.sum495 = or i64 %idx.ext769, 10
  %arrayidx840 = getelementptr inbounds double* %7, i64 %add.ptr784.sum495
  %210 = load double* %arrayidx840, align 8, !tbaa !17
  %mul841 = fmul double %mul834, %210
  %add.ptr784.sum496 = or i64 %idx.ext769, 9
  %arrayidx843 = getelementptr inbounds double* %7, i64 %add.ptr784.sum496
  %211 = load double* %arrayidx843, align 8, !tbaa !17
  %mul844 = fmul double %mul834, %211
  %mul846 = fmul double %sub796, %mul838
  %add847 = fadd double %mul846, %mul841
  %mul848 = fmul double %sub796, %add847
  %add849 = fadd double %mul844, %mul848
  %mul850 = fmul double %sub796, %add849
  %add851 = fadd double %mul835, %mul850
  %add853 = fadd double %sub812, %mul838
  %add854 = fadd double %sub818, %mul841
  %add855 = fadd double %sub824, %mul844
  %mul858 = fmul double %sub796, 3.000000e+00
  %mul859 = fmul double %mul858, %add853
  %mul860 = fmul double %add854, 2.000000e+00
  %add861 = fadd double %mul859, %mul860
  %mul862 = fmul double %sub796, %add861
  %add863 = fadd double %add855, %mul862
  %mul865 = fmul double %add863, -2.000000e+00
  %mul870 = fmul double %sub735, %mul865
  %mul871 = fmul double %sub735, %mul870
  %212 = insertelement <2 x double> undef, double %add831, i32 0
  %213 = insertelement <2 x double> %212, double %mul871, i32 1
  %214 = fadd <2 x double> %184, %213
  %215 = insertelement <2 x double> undef, double %sub741, i32 0
  %216 = insertelement <2 x double> %215, double %sub747, i32 1
  %217 = insertelement <2 x double> undef, double %mul870, i32 0
  %218 = insertelement <2 x double> %217, double %mul870, i32 1
  %219 = fmul <2 x double> %216, %218
  %220 = fadd <2 x double> %185, %219
  %221 = load double* %x877, align 8, !tbaa !72
  %add878 = fadd double %221, %mul870
  store double %add878, double* %x877, align 8, !tbaa !72
  %x879 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext730, i32 0
  %mul882 = fmul double %sub741, %mul865
  %mul883 = fmul double %sub741, %mul882
  %222 = insertelement <2 x double> undef, double %add851, i32 0
  %223 = insertelement <2 x double> %222, double %mul883, i32 1
  %224 = fadd <2 x double> %187, %223
  %225 = load double* %y887, align 8, !tbaa !73
  %add888 = fadd double %225, %mul882
  store double %add888, double* %y887, align 8, !tbaa !73
  %226 = bitcast double* %x879 to <2 x double>*
  %227 = load <2 x double>* %226, align 8, !tbaa !17
  %228 = insertelement <2 x double> %217, double %mul882, i32 1
  %229 = fsub <2 x double> %227, %228
  %230 = bitcast double* %x879 to <2 x double>*
  store <2 x double> %229, <2 x double>* %230, align 8, !tbaa !17
  %mul892 = fmul double %sub747, %mul865
  %231 = insertelement <2 x double> undef, double %sub747, i32 0
  %232 = insertelement <2 x double> %231, double %sub747, i32 1
  %233 = insertelement <2 x double> undef, double %mul882, i32 0
  %234 = insertelement <2 x double> %233, double %mul892, i32 1
  %235 = fmul <2 x double> %232, %234
  %236 = fadd <2 x double> %186, %235
  %237 = load double* %z895, align 8, !tbaa !74
  %add896 = fadd double %237, %mul892
  store double %add896, double* %z895, align 8, !tbaa !74
  %z897 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext730, i32 2
  %238 = load double* %z897, align 8, !tbaa !74
  %sub898 = fsub double %238, %mul892
  store double %sub898, double* %z897, align 8, !tbaa !74
  %indvars.iv.next729 = add nuw nsw i64 %indvars.iv728, 1
  %lftr.wideiv730 = trunc i64 %indvars.iv.next729 to i32
  %exitcond731 = icmp eq i32 %lftr.wideiv730, %conv722
  br i1 %exitcond731, label %for.inc902, label %for.body725

for.inc902:                                       ; preds = %for.body725, %for.end717, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end717 ], [ %pairCount.2, %for.body725 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0656, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end717 ], [ %pairlistindex.1, %for.body725 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1657, %for.end717 ], [ %i.1657, %for.body725 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0674, %if.then221 ], [ %exclChecksum.0674, %cond.end349 ], [ %conv569, %for.end717 ], [ %conv569, %for.body725 ]
  %239 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %180, %for.end717 ], [ %214, %for.body725 ]
  %240 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %181, %for.end717 ], [ %220, %for.body725 ]
  %241 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %182, %for.end717 ], [ %236, %for.body725 ]
  %242 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %183, %for.end717 ], [ %224, %for.body725 ]
  %inc903 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc903, %12
  br i1 %cmp183, label %for.body184, label %for.end904

for.end904:                                       ; preds = %for.inc902, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc902 ]
  %243 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %239, %for.inc902 ]
  %244 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %240, %for.inc902 ]
  %245 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %241, %for.inc902 ]
  %246 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %242, %for.inc902 ]
  %247 = extractelement <2 x double> %246, i32 0
  %arraydecay905 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp906 = icmp eq i32* %cond534536747753, %arraydecay905
  br i1 %cmp906, label %if.end911, label %delete.notnull909

delete.notnull909:                                ; preds = %for.end904
  %248 = bitcast i32* %cond534536747753 to i8*
  call void @_ZdaPv(i8* %248) #7
  br label %if.end911

if.end911:                                        ; preds = %delete.notnull909, %for.end904
  %arraydecay912 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp913 = icmp eq i32* %cond19538745754, %arraydecay912
  br i1 %cmp913, label %if.end918, label %delete.notnull916

delete.notnull916:                                ; preds = %if.end911
  %249 = bitcast i32* %cond19538745754 to i8*
  call void @_ZdaPv(i8* %249) #7
  br label %if.end918

if.end918:                                        ; preds = %delete.notnull916, %if.end911
  %arraydecay919 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp920 = icmp eq i32* %cond30749752, %arraydecay919
  br i1 %cmp920, label %if.end925, label %delete.notnull923

delete.notnull923:                                ; preds = %if.end918
  %250 = bitcast i32* %cond30749752 to i8*
  call void @_ZdaPv(i8* %250) #7
  br label %if.end925

if.end925:                                        ; preds = %delete.notnull923, %if.end918
  %arraydecay926 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp927 = icmp eq i32* %cond129542544550556, %arraydecay926
  br i1 %cmp927, label %if.end932, label %delete.notnull930

delete.notnull930:                                ; preds = %if.end925
  %251 = bitcast i32* %cond129542544550556 to i8*
  call void @_ZdaPv(i8* %251) #7
  br label %if.end932

if.end932:                                        ; preds = %delete.notnull930, %if.end925
  %arraydecay933 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp934 = icmp eq i32* %cond140546548558, %arraydecay933
  br i1 %cmp934, label %if.end939, label %delete.notnull937

delete.notnull937:                                ; preds = %if.end932
  %252 = bitcast i32* %cond140546548558 to i8*
  call void @_ZdaPv(i8* %252) #7
  br label %if.end939

if.end939:                                        ; preds = %delete.notnull937, %if.end932
  %arraydecay940 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp941 = icmp eq i32* %cond151552554, %arraydecay940
  br i1 %cmp941, label %if.end946, label %delete.notnull944

delete.notnull944:                                ; preds = %if.end939
  %253 = bitcast i32* %cond151552554 to i8*
  call void @_ZdaPv(i8* %253) #7
  br label %if.end946

if.end946:                                        ; preds = %delete.notnull944, %if.end939
  %arraydecay947 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp948 = icmp eq i32* %cond162560, %arraydecay947
  br i1 %cmp948, label %if.end953, label %delete.notnull951

delete.notnull951:                                ; preds = %if.end946
  %254 = bitcast i32* %cond162560 to i8*
  call void @_ZdaPv(i8* %254) #7
  br label %if.end953

if.end953:                                        ; preds = %delete.notnull951, %if.end946
  %arraydecay954 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp955 = icmp eq i32* %cond173, %arraydecay954
  br i1 %cmp955, label %if.end960, label %delete.notnull958

delete.notnull958:                                ; preds = %if.end953
  %255 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %255) #7
  br label %if.end960

if.end960:                                        ; preds = %delete.notnull958, %if.end953
  %conv961 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx962 = getelementptr inbounds double* %1, i64 22
  %256 = load double* %arrayidx962, align 8, !tbaa !17
  %add963 = fadd double %conv961, %256
  store double %add963, double* %arrayidx962, align 8, !tbaa !17
  %arrayidx964 = getelementptr inbounds double* %1, i64 2
  %257 = load double* %1, align 8, !tbaa !17
  %add967 = fadd double %247, %257
  store double %add967, double* %1, align 8, !tbaa !17
  %258 = bitcast double* %arrayidx964 to <2 x double>*
  %259 = load <2 x double>* %258, align 8, !tbaa !17
  %260 = fadd <2 x double> %243, %259
  %261 = bitcast double* %arrayidx964 to <2 x double>*
  store <2 x double> %260, <2 x double>* %261, align 8, !tbaa !17
  %arrayidx970 = getelementptr inbounds double* %1, i64 4
  %262 = bitcast double* %arrayidx970 to <2 x double>*
  %263 = load <2 x double>* %262, align 8, !tbaa !17
  %264 = fadd <2 x double> %244, %263
  %265 = bitcast double* %arrayidx970 to <2 x double>*
  store <2 x double> %264, <2 x double>* %265, align 8, !tbaa !17
  %arrayidx974 = getelementptr inbounds double* %1, i64 6
  %266 = bitcast double* %arrayidx974 to <2 x double>*
  %267 = load <2 x double>* %266, align 8, !tbaa !17
  %268 = shufflevector <2 x double> %244, <2 x double> %246, <2 x i32> <i32 0, i32 3>
  %269 = fadd <2 x double> %268, %267
  %270 = bitcast double* %arrayidx974 to <2 x double>*
  store <2 x double> %269, <2 x double>* %270, align 8, !tbaa !17
  %arrayidx978 = getelementptr inbounds double* %1, i64 8
  %271 = bitcast double* %arrayidx978 to <2 x double>*
  %272 = load <2 x double>* %271, align 8, !tbaa !17
  %273 = shufflevector <2 x double> %245, <2 x double> %244, <2 x i32> <i32 0, i32 3>
  %274 = fadd <2 x double> %273, %272
  %275 = bitcast double* %arrayidx978 to <2 x double>*
  store <2 x double> %274, <2 x double>* %275, align 8, !tbaa !17
  %arrayidx982 = getelementptr inbounds double* %1, i64 10
  %276 = bitcast double* %arrayidx982 to <2 x double>*
  %277 = load <2 x double>* %276, align 8, !tbaa !17
  %278 = fadd <2 x double> %245, %277
  %279 = bitcast double* %arrayidx982 to <2 x double>*
  store <2 x double> %278, <2 x double>* %279, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end960, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil9calc_selfEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31699 = icmp sgt i32 %13, 0
  br i1 %cmp31699, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30770 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond534536768 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19538766 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv758 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next759, %for.inc ]
  %g.0700 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv758, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0700, 1
  %idxprom41 = sext i32 %g.0700 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond534536768, i64 %idxprom41
  %30 = trunc i64 %indvars.iv758 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0700, %for.body ]
  %indvars.iv.next759 = add nuw nsw i64 %indvars.iv758, 1
  %lftr.wideiv760 = trunc i64 %indvars.iv.next759 to i32
  %exitcond761 = icmp eq i32 %lftr.wideiv760, %13
  br i1 %exitcond761, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond534536768, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond534536768, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa775 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19538765774 = phi i32* [ %cond19538766, %for.end ], [ %cond19538766, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond534536767773 = phi i32* [ %cond534536768, %for.end ], [ %cond534536768, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30769772 = phi i32* [ %cond30770, %for.end ], [ %cond30770, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56693 = icmp sgt i32 %g.0.lcssa775, 0
  br i1 %cmp56693, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv754 = phi i64 [ %indvars.iv.next755, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0695 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0694 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond534536767773, i64 %indvars.iv754
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0695, 1
  %idxprom68 = sext i32 %fixg.0695 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19538765774, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0694, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0695, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next755 = add nuw nsw i64 %indvars.iv754, 1
  %lftr.wideiv756 = trunc i64 %indvars.iv.next755 to i32
  %exitcond757 = icmp eq i32 %lftr.wideiv756, %g.0.lcssa775
  br i1 %exitcond757, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond534536767773, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond534536767773 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19538765774, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19538765774 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30769772, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30769772 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19538765774, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19538765774, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2541 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147560 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125546548558 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114542544550556 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136552554 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171671 = icmp sgt i32 %sub162, 0
  br i1 %cmp171671, label %for.body172.lr.ph, label %for.end921

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i531 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125546548558 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147560 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub858 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30769772 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114542544550556 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc919, %for.body172.lr.ph
  %exclChecksum.0685 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc919 ]
  %i.0678 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc920, %for.inc919 ]
  %j_hgroup.0677 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc919 ]
  %g_lower.0676 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc919 ]
  %fixg_lower.0675 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc919 ]
  %pairlistindex.0674 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc919 ]
  %pairlistoffset.0673 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc919 ]
  %pairCount.0672 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc919 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %245, %for.inc919 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %246, %for.inc919 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %247, %for.inc919 ]
  %idxprom173 = sext i32 %i.0678 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i562 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i562, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i562, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i562, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0678
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0672
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0672, %div165
  %cmp214 = icmp slt i32 %pairCount.0672, %div168
  %or.cond520 = and i1 %cmp212, %cmp214
  br i1 %or.cond520, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0678
  br label %for.inc919

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0672, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0678
  %cmp237569 = icmp slt i32 %g_lower.0676, %g.0.lcssa775
  br i1 %cmp237569, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0676 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa775
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1570 = phi i32 [ %g_lower.0676, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond534536767773, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1570, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0676, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1570, %land.rhs238 ]
  %cmp245571 = icmp slt i32 %fixg_lower.0675, %fixg.2541
  br i1 %cmp245571, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0675 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next708 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2541
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv707 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next708, %while.cond244 ]
  %fixg_lower.1572 = phi i32 [ %fixg_lower.0675, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19538765774, i64 %indvars.iv707
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next708 = add nsw i64 %indvars.iv707, 1
  %inc252 = add nsw i32 %fixg_lower.1572, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0675, %land.end ], [ %fixg_lower.0675, %while.cond244.loopexit ], [ %fixg_lower.1572, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0676, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0677, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1574 = add nsw i32 %i.0678, 1
  %cmp257575 = icmp slt i32 %j.1574, %j_hgroup.1
  br i1 %cmp257575, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0678
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0678
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1574
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1574, %86
  %broadcast.splatinsert800 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat801 = shufflevector <4 x i32> %broadcast.splatinsert800, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction802 = add <4 x i32> %broadcast.splat801, <i32 0, i32 1, i32 2, i32 3>
  %induction803 = add <4 x i32> %broadcast.splat801, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114542544550556, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction802, <4 x i32>* %88, align 4
  %.sum806 = or i64 %index, 4
  %89 = getelementptr i32* %cond114542544550556, i64 %.sum806
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction803, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !99

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val798 = phi i32 [ %j.1574, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv709 = phi i64 [ %indvars.iv.next710, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1577 = phi i32 [ %j.1, %for.body258 ], [ %resume.val798, %middle.block ]
  %indvars.iv.next710 = add nuw nsw i64 %indvars.iv709, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114542544550556, i64 %indvars.iv709
  store i32 %j.1577, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1577, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next710 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !100

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114542544550556, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19538765774, i32* %cond534536767773
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2541, i32 %g.0.lcssa775
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30769772, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv715 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next716, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv715 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next716 = add nsw i64 %indvars.iv715, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next716
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div517 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div517 to i32
  %cmp330583 = icmp sgt i32 %conv328, 0
  br i1 %cmp330583, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv717 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next718, %cond.end351 ]
  %pli.0585 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30769772, i64 %indvars.iv717
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp518 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp518, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0585, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0585, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0585, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0585, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0585, i64 %cond352
  %indvars.iv.next718 = add nuw nsw i64 %indvars.iv717, 1
  %lftr.wideiv719 = trunc i64 %indvars.iv.next718 to i32
  %exitcond720 = icmp eq i32 %lftr.wideiv719, %104
  br i1 %exitcond720, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369514 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369514 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext515 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext515, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114542544550556, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114542544550556, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0673, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0672, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0674, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0675, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0676, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0677, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load394.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load394.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %110 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %110 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  %bf.clear395 = and i32 %bf.load394.pre, 4194303
  %idxprom.i530563 = zext i32 %bf.clear395 to i64
  %111 = load i32** %atomVdwType.i531, align 8, !tbaa !64
  %arrayidx.i532 = getelementptr inbounds i32* %111, i64 %idxprom.i530563
  %112 = load i32* %arrayidx.i532, align 4, !tbaa !11
  %113 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %114 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv397 = shl i32 %112, 1
  %mul.i = and i32 %conv397, 131070
  %mul2.i = mul i32 %mul.i, %114
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp403611 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond402.preheader, label %if.else463

for.cond402.preheader:                            ; preds = %land.end387
  br i1 %cmp403611, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %115 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv730 = phi i64 [ %115, %for.body404.lr.ph ], [ %indvars.iv.next731, %for.inc460 ]
  %exclChecksum.1615 = phi i32 [ %exclChecksum.0685, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0614 = phi i32* [ %cond125546548558, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0613 = phi i32* [ %cond136552554, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114542544550556, i64 %indvars.iv730
  %116 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %116 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %117 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %67, %117
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %118 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %68, %118
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %119 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %69, %119
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %120 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %120, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond521 = or i1 %tobool438, %cmp439
  br i1 %or.cond521, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1615, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1615, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %64
  %cmp453 = icmp sgt i32 %bf.clear450, %65
  %or.cond522 = or i1 %cmp451, %cmp453
  br i1 %or.cond522, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0614, i64 1
  store i32 %116, i32* %pli399.0614, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0613, i64 1
  store i32 %116, i32* %plin.0613, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0613, %for.body404 ], [ %plin.0613, %land.lhs.true442 ], [ %plin.0613, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0614, %for.body404 ], [ %pli399.0614, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0614, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1615, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next731 = add nsw i64 %indvars.iv730, 1
  %lftr.wideiv732 = trunc i64 %indvars.iv.next731 to i32
  %exitcond733 = icmp eq i32 %lftr.wideiv732, %pairlistindex.2
  br i1 %exitcond733, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387
  br i1 %cmp403611, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114542544550556, i64 %idxprom468
  %121 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %121 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %122 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %123 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %124 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %124, %if.then466 ], [ %130, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %123, %if.then466 ], [ %129, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %122, %if.then466 ], [ %128, %if.else531 ]
  %j2467.0.ph = phi i32 [ %121, %if.then466 ], [ %127, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136552554, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125546548558, %if.then466 ], [ %pli399.2.ph594, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0685, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer587

while.cond491.outer587:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph588 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph589 = phi double [ %130, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph590 = phi double [ %129, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph591 = phi double [ %128, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph592 = phi i32 [ %127, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph593 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph594 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph595 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer596

while.cond491.outer596:                           ; preds = %land.lhs.true522, %while.cond491.outer587
  %idxprom471.pn.ph597 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph588, %while.cond491.outer587 ]
  %p_j_z480.0.ph598 = phi double [ %130, %land.lhs.true522 ], [ %p_j_z480.0.ph589, %while.cond491.outer587 ]
  %p_j_y475.0.ph599 = phi double [ %129, %land.lhs.true522 ], [ %p_j_y475.0.ph590, %while.cond491.outer587 ]
  %p_j_x470.0.ph600 = phi double [ %128, %land.lhs.true522 ], [ %p_j_x470.0.ph591, %while.cond491.outer587 ]
  %j2467.0.ph601 = phi i32 [ %127, %land.lhs.true522 ], [ %j2467.0.ph592, %while.cond491.outer587 ]
  %k464.0.ph602 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph593, %while.cond491.outer587 ]
  %exclChecksum.4.ph603 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph595, %while.cond491.outer587 ]
  %125 = sext i32 %k464.0.ph602 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer596
  %indvars.iv726 = phi i64 [ %125, %while.cond491.outer596 ], [ %indvars.iv.next727, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph597, %while.cond491.outer596 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph598, %while.cond491.outer596 ], [ %130, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph599, %while.cond491.outer596 ], [ %129, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph600, %while.cond491.outer596 ], [ %128, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph601, %while.cond491.outer596 ], [ %127, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph602, %while.cond491.outer596 ], [ %inc494, %while.body493 ]
  %126 = trunc i64 %indvars.iv726 to i32
  %cmp492 = icmp slt i32 %126, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next727 = add nsw i64 %indvars.iv726, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114542544550556, i64 %indvars.iv.next727
  %127 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %67, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %127 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %128 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %68, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %129 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %69, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %130 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph603, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer596

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph603, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %64
  %cmp528 = icmp sgt i32 %atom2485.0, %65
  %or.cond523 = or i1 %cmp526, %cmp528
  br i1 %or.cond523, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph594, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph594, align 4, !tbaa !11
  br label %while.cond491.outer587

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %plin.4 = phi i32* [ %cond136552554, %if.else463 ], [ %cond136552554, %for.cond402.preheader ], [ %plin.2.ph, %while.cond491 ], [ %plin.1, %for.inc460 ]
  %pli399.4 = phi i32* [ %cond125546548558, %if.else463 ], [ %cond125546548558, %for.cond402.preheader ], [ %pli399.2.ph594, %while.cond491 ], [ %pli399.1, %for.inc460 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0685, %if.else463 ], [ %exclChecksum.0685, %for.cond402.preheader ], [ %exclChecksum.4.ph603, %while.cond491 ], [ %exclChecksum.3, %for.inc460 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546481 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546481 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext512 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext512, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125546548558, i64 %idxprom551
  %131 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125546548558, i64 %idxprom553
  store i32 %131, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558619 = icmp ult i32* %cond136552554, %plin.4
  br i1 %cmp558619, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8622 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0621 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147560, %for.cond557.preheader ]
  %pln.0620 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136552554, %for.cond557.preheader ]
  %132 = load i32* %pln.0620, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %132, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0621, i64 1
  store i32 %132, i32* %plix.0621, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8622, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0620, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8622, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147560, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0621, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136552554, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0620, %land.lhs.true559 ]
  %cmp567626 = icmp sgt i32 %conv547, 0
  br i1 %cmp567626, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv740 = phi i64 [ %indvars.iv.next741, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9629 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1628 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0627 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125546548558, i64 %indvars.iv740
  %133 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %133, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1628, i64 1
  store i32 %133, i32* %plix.1628, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9629, -1
  %indvars.iv.next741 = add nuw nsw i64 %indvars.iv740, 1
  %inc578 = add nsw i32 %k556.0627, 1
  %134 = trunc i64 %indvars.iv.next741 to i32
  %cmp567 = icmp slt i32 %134, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9629, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1628, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0627, %land.lhs.true568 ]
  %cmp581633 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581633, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %135 = sext i32 %k556.0.lcssa to i64
  %136 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %137 = lshr i64 %136, 2
  %138 = trunc i64 %137 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv742 = phi i64 [ %135, %for.body582.lr.ph ], [ %indvars.iv.next743, %for.inc600 ]
  %plin.5637 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2636 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0635 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125546548558, i64 %indvars.iv742
  %139 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %139 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %140 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %140, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592511 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592511, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %141 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %141 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5637, i64 1
  store i32 %139, i32* %plin.5637, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2636, i64 1
  store i32 %139, i32* %plix.2636, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0635, i64 1
  store i32 %139, i32* %plim.0635, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0635, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0635, %sw.bb596 ], [ %plim.0635, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2636, %for.body582 ], [ %plix.2636, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2636, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5637, %for.body582 ], [ %plin.5637, %sw.bb598 ], [ %plin.5637, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next743 = add nsw i64 %indvars.iv742, 1
  %lftr.wideiv744 = trunc i64 %indvars.iv.next743 to i32
  %exitcond745 = icmp eq i32 %lftr.wideiv744, %138
  br i1 %exitcond745, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606483 = lshr exact i64 %sub.ptr.sub605, 2
  %conv607482 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607482
  %add615 = add i64 %add608, %sub.ptr.div606483
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620485 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620485 to i32
  %cmp623641 = icmp sgt i32 %conv621, 0
  br i1 %cmp623641, label %for.body624.lr.ph, label %for.end750

for.body624.lr.ph:                                ; preds = %for.end602
  %x728 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y737 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z744 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624.for.body624_crit_edge, %for.body624.lr.ph
  %142 = phi i32* [ %111, %for.body624.lr.ph ], [ %.pre, %for.body624.for.body624_crit_edge ]
  %indvars.iv746 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next747, %for.body624.for.body624_crit_edge ]
  %143 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %171, %for.body624.for.body624_crit_edge ]
  %144 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %178, %for.body624.for.body624_crit_edge ]
  %145 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %189, %for.body624.for.body624_crit_edge ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv746
  %146 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %146 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %147 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %67, %147
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %148 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %68, %148
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %149 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %69, %149
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %150 = bitcast float %conv645 to i32
  %shr = ashr i32 %150, 17
  %add647 = add nsw i32 %shr, %mul
  %id648 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 2
  %151 = bitcast [4 x i8]* %id648 to i32*
  %bf.load649 = load i32* %151, align 4
  %bf.clear650 = and i32 %bf.load649, 4194303
  %idxprom.i526566 = zext i32 %bf.clear650 to i64
  %arrayidx.i528 = getelementptr inbounds i32* %142, i64 %idxprom.i526566
  %152 = load i32* %arrayidx.i528, align 4, !tbaa !11
  %conv.i529 = zext i32 %152 to i64
  %conv652 = shl nuw nsw i64 %conv.i529, 1
  %mul653 = and i64 %conv652, 131070
  %mul656 = shl nsw i32 %add647, 4
  %idx.ext657 = sext i32 %mul656 to i64
  %and = and i32 %150, -131072
  %charge671 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %153 = load float* %charge671, align 4, !tbaa !63
  %conv672 = fpext float %153 to double
  %mul673 = fmul double %mul392, %conv672
  %154 = bitcast i32 %and to float
  %conv675 = fpext float %154 to double
  %sub676 = fsub double %add644, %conv675
  %add.ptr.i.sum567 = add i64 %mul653, %idx.ext.i
  %A678 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum567, i32 0
  %155 = load double* %A678, align 8, !tbaa !69
  %mul679 = fmul double %8, %155
  %B681 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum567, i32 1
  %156 = load double* %B681, align 8, !tbaa !71
  %mul682 = fmul double %8, %156
  %add.ptr658.sum502 = or i64 %idx.ext657, 3
  %arrayidx686 = getelementptr inbounds double* %7, i64 %add.ptr658.sum502
  %157 = load double* %arrayidx686, align 8, !tbaa !17
  %mul687 = fmul double %mul679, %157
  %add.ptr663.sum503 = or i64 %idx.ext657, 7
  %arrayidx688 = getelementptr inbounds double* %7, i64 %add.ptr663.sum503
  %158 = load double* %arrayidx688, align 8, !tbaa !17
  %mul689 = fmul double %mul682, %158
  %sub690 = fsub double %mul687, %mul689
  %add.ptr658.sum504 = or i64 %idx.ext657, 2
  %arrayidx691 = getelementptr inbounds double* %7, i64 %add.ptr658.sum504
  %159 = load double* %arrayidx691, align 8, !tbaa !17
  %mul692 = fmul double %mul679, %159
  %add.ptr663.sum505 = or i64 %idx.ext657, 6
  %arrayidx693 = getelementptr inbounds double* %7, i64 %add.ptr663.sum505
  %160 = load double* %arrayidx693, align 8, !tbaa !17
  %mul694 = fmul double %mul682, %160
  %sub695 = fsub double %mul692, %mul694
  %add.ptr658.sum506 = or i64 %idx.ext657, 1
  %arrayidx696 = getelementptr inbounds double* %7, i64 %add.ptr658.sum506
  %161 = load double* %arrayidx696, align 8, !tbaa !17
  %mul697 = fmul double %mul679, %161
  %add.ptr663.sum507 = or i64 %idx.ext657, 5
  %arrayidx698 = getelementptr inbounds double* %7, i64 %add.ptr663.sum507
  %162 = load double* %arrayidx698, align 8, !tbaa !17
  %mul699 = fmul double %mul682, %162
  %sub700 = fsub double %mul697, %mul699
  %add.ptr668.sum508 = or i64 %idx.ext657, 11
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr668.sum508
  %163 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul673, %163
  %add.ptr668.sum509 = or i64 %idx.ext657, 10
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr668.sum509
  %164 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul673, %164
  %add.ptr668.sum510 = or i64 %idx.ext657, 9
  %arrayidx706 = getelementptr inbounds double* %7, i64 %add.ptr668.sum510
  %165 = load double* %arrayidx706, align 8, !tbaa !17
  %mul707 = fmul double %mul673, %165
  %add708 = fadd double %sub690, %mul703
  %add709 = fadd double %sub695, %mul705
  %add710 = fadd double %sub700, %mul707
  %mul712 = fmul double %sub676, 3.000000e+00
  %mul713 = fmul double %mul712, %add708
  %mul714 = fmul double %add709, 2.000000e+00
  %add715 = fadd double %mul713, %mul714
  %mul716 = fmul double %sub676, %add715
  %add717 = fadd double %add710, %mul716
  %mul718 = fmul double %add717, -2.000000e+00
  %mul721 = fmul double %sub632, %mul718
  %166 = insertelement <2 x double> undef, double %sub632, i32 0
  %167 = insertelement <2 x double> %166, double %sub637, i32 1
  %168 = insertelement <2 x double> undef, double %mul721, i32 0
  %169 = insertelement <2 x double> %168, double %mul721, i32 1
  %170 = fmul <2 x double> %167, %169
  %171 = fadd <2 x double> %143, %170
  %172 = load double* %x728, align 8, !tbaa !72
  %add729 = fadd double %172, %mul721
  store double %add729, double* %x728, align 8, !tbaa !72
  %x730 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul732 = fmul double %sub637, %mul718
  %173 = insertelement <2 x double> undef, double %sub637, i32 0
  %174 = insertelement <2 x double> %173, double %sub642, i32 1
  %175 = insertelement <2 x double> undef, double %mul732, i32 0
  %176 = insertelement <2 x double> %175, double %mul732, i32 1
  %177 = fmul <2 x double> %174, %176
  %178 = fadd <2 x double> %144, %177
  %179 = load double* %y737, align 8, !tbaa !73
  %add738 = fadd double %179, %mul732
  store double %add738, double* %y737, align 8, !tbaa !73
  %180 = bitcast double* %x730 to <2 x double>*
  %181 = load <2 x double>* %180, align 8, !tbaa !17
  %182 = insertelement <2 x double> %168, double %mul732, i32 1
  %183 = fsub <2 x double> %181, %182
  %184 = bitcast double* %x730 to <2 x double>*
  store <2 x double> %183, <2 x double>* %184, align 8, !tbaa !17
  %mul741 = fmul double %sub642, %mul718
  %185 = insertelement <2 x double> undef, double %sub642, i32 0
  %186 = insertelement <2 x double> %185, double %sub642, i32 1
  %187 = insertelement <2 x double> %168, double %mul741, i32 1
  %188 = fmul <2 x double> %186, %187
  %189 = fadd <2 x double> %145, %188
  %190 = load double* %z744, align 8, !tbaa !74
  %add745 = fadd double %190, %mul741
  store double %add745, double* %z744, align 8, !tbaa !74
  %z746 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %191 = load double* %z746, align 8, !tbaa !74
  %sub747 = fsub double %191, %mul741
  store double %sub747, double* %z746, align 8, !tbaa !74
  %indvars.iv.next747 = add nuw nsw i64 %indvars.iv746, 1
  %lftr.wideiv748 = trunc i64 %indvars.iv.next747 to i32
  %exitcond749 = icmp eq i32 %lftr.wideiv748, %conv621
  br i1 %exitcond749, label %for.end750, label %for.body624.for.body624_crit_edge

for.body624.for.body624_crit_edge:                ; preds = %for.body624
  %.pre = load i32** %atomVdwType.i531, align 8, !tbaa !64
  br label %for.body624

for.end750:                                       ; preds = %for.body624, %for.end602
  %192 = phi <2 x double> [ %59, %for.end602 ], [ %171, %for.body624 ]
  %193 = phi <2 x double> [ %60, %for.end602 ], [ %178, %for.body624 ]
  %194 = phi <2 x double> [ %61, %for.end602 ], [ %189, %for.body624 ]
  %conv755 = trunc i64 %sub.ptr.div613 to i32
  %cmp757655 = icmp sgt i32 %conv755, 0
  br i1 %cmp757655, label %for.body758.lr.ph, label %for.inc919

for.body758.lr.ph:                                ; preds = %for.end750
  %x894 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y904 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z912 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body758

for.body758:                                      ; preds = %for.body758, %for.body758.lr.ph
  %indvars.iv750 = phi i64 [ 0, %for.body758.lr.ph ], [ %indvars.iv.next751, %for.body758 ]
  %195 = phi <2 x double> [ %192, %for.body758.lr.ph ], [ %224, %for.body758 ]
  %196 = phi <2 x double> [ %193, %for.body758.lr.ph ], [ %231, %for.body758 ]
  %197 = phi <2 x double> [ %194, %for.body758.lr.ph ], [ %242, %for.body758 ]
  %arrayidx761 = getelementptr inbounds i32* %cond158, i64 %indvars.iv750
  %198 = load i32* %arrayidx761, align 4, !tbaa !11
  %idx.ext763 = sext i32 %198 to i64
  %x767 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 0
  %199 = load double* %x767, align 8, !tbaa !59
  %sub768 = fsub double %67, %199
  %mul770 = fmul double %sub768, %sub768
  %y773 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 1
  %200 = load double* %y773, align 8, !tbaa !61
  %sub774 = fsub double %68, %200
  %mul775 = fmul double %sub774, %sub774
  %add776 = fadd double %mul770, %mul775
  %z779 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 2
  %201 = load double* %z779, align 8, !tbaa !62
  %sub780 = fsub double %69, %201
  %mul781 = fmul double %sub780, %sub780
  %add782 = fadd double %add776, %mul781
  %conv784 = fptrunc double %add782 to float
  %202 = bitcast float %conv784 to i32
  %shr788 = ashr i32 %202, 17
  %add789 = add nsw i32 %shr788, %mul
  %id791 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 2
  %203 = bitcast [4 x i8]* %id791 to i32*
  %bf.load792 = load i32* %203, align 4
  %bf.clear793 = and i32 %bf.load792, 4194303
  %idxprom.i524564 = zext i32 %bf.clear793 to i64
  %204 = load i32** %atomVdwType.i531, align 8, !tbaa !64
  %arrayidx.i525 = getelementptr inbounds i32* %204, i64 %idxprom.i524564
  %205 = load i32* %arrayidx.i525, align 4, !tbaa !11
  %conv.i = zext i32 %205 to i64
  %conv795 = shl nuw nsw i64 %conv.i, 1
  %mul796 = and i64 %conv795, 131070
  %add.ptr798.sum487 = or i64 %mul796, 1
  %mul801 = shl nsw i32 %add789, 4
  %idx.ext802 = sext i32 %mul801 to i64
  %and821 = and i32 %202, -131072
  %charge823 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 1
  %206 = load float* %charge823, align 4, !tbaa !63
  %conv824 = fpext float %206 to double
  %mul825 = fmul double %mul392, %conv824
  %207 = bitcast i32 %and821 to float
  %conv828 = fpext float %207 to double
  %sub829 = fsub double %add782, %conv828
  %add.ptr.i.sum = add i64 %add.ptr798.sum487, %idx.ext.i
  %A831 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum, i32 0
  %208 = load double* %A831, align 8, !tbaa !69
  %mul832 = fmul double %8, %208
  %B834 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum, i32 1
  %209 = load double* %B834, align 8, !tbaa !71
  %mul835 = fmul double %8, %209
  %add.ptr803.sum490 = or i64 %idx.ext802, 3
  %arrayidx841 = getelementptr inbounds double* %7, i64 %add.ptr803.sum490
  %210 = load double* %arrayidx841, align 8, !tbaa !17
  %mul842 = fmul double %mul832, %210
  %add.ptr810.sum491 = or i64 %idx.ext802, 7
  %arrayidx843 = getelementptr inbounds double* %7, i64 %add.ptr810.sum491
  %211 = load double* %arrayidx843, align 8, !tbaa !17
  %mul844 = fmul double %mul835, %211
  %sub845 = fsub double %mul842, %mul844
  %add.ptr803.sum492 = or i64 %idx.ext802, 2
  %arrayidx847 = getelementptr inbounds double* %7, i64 %add.ptr803.sum492
  %212 = load double* %arrayidx847, align 8, !tbaa !17
  %mul848 = fmul double %mul832, %212
  %add.ptr810.sum493 = or i64 %idx.ext802, 6
  %arrayidx849 = getelementptr inbounds double* %7, i64 %add.ptr810.sum493
  %213 = load double* %arrayidx849, align 8, !tbaa !17
  %mul850 = fmul double %mul835, %213
  %sub851 = fsub double %mul848, %mul850
  %add.ptr803.sum494 = or i64 %idx.ext802, 1
  %arrayidx853 = getelementptr inbounds double* %7, i64 %add.ptr803.sum494
  %214 = load double* %arrayidx853, align 8, !tbaa !17
  %mul854 = fmul double %mul832, %214
  %add.ptr810.sum495 = or i64 %idx.ext802, 5
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr810.sum495
  %215 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul835, %215
  %sub857 = fsub double %mul854, %mul856
  %mul859 = fmul double %sub858, %mul825
  %add.ptr817.sum496 = or i64 %idx.ext802, 11
  %arrayidx862 = getelementptr inbounds double* %7, i64 %add.ptr817.sum496
  %216 = load double* %arrayidx862, align 8, !tbaa !17
  %mul863 = fmul double %mul859, %216
  %add.ptr817.sum497 = or i64 %idx.ext802, 10
  %arrayidx865 = getelementptr inbounds double* %7, i64 %add.ptr817.sum497
  %217 = load double* %arrayidx865, align 8, !tbaa !17
  %mul866 = fmul double %mul859, %217
  %add.ptr817.sum498 = or i64 %idx.ext802, 9
  %arrayidx868 = getelementptr inbounds double* %7, i64 %add.ptr817.sum498
  %218 = load double* %arrayidx868, align 8, !tbaa !17
  %mul869 = fmul double %mul859, %218
  %add870 = fadd double %sub845, %mul863
  %add871 = fadd double %sub851, %mul866
  %add872 = fadd double %sub857, %mul869
  %mul875 = fmul double %sub829, 3.000000e+00
  %mul876 = fmul double %mul875, %add870
  %mul877 = fmul double %add871, 2.000000e+00
  %add878 = fadd double %mul876, %mul877
  %mul879 = fmul double %sub829, %add878
  %add880 = fadd double %add872, %mul879
  %mul882 = fmul double %add880, -2.000000e+00
  %mul887 = fmul double %sub768, %mul882
  %219 = insertelement <2 x double> undef, double %sub768, i32 0
  %220 = insertelement <2 x double> %219, double %sub774, i32 1
  %221 = insertelement <2 x double> undef, double %mul887, i32 0
  %222 = insertelement <2 x double> %221, double %mul887, i32 1
  %223 = fmul <2 x double> %220, %222
  %224 = fadd <2 x double> %195, %223
  %225 = load double* %x894, align 8, !tbaa !72
  %add895 = fadd double %225, %mul887
  store double %add895, double* %x894, align 8, !tbaa !72
  %x896 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext763, i32 0
  %mul899 = fmul double %sub774, %mul882
  %226 = insertelement <2 x double> undef, double %sub774, i32 0
  %227 = insertelement <2 x double> %226, double %sub780, i32 1
  %228 = insertelement <2 x double> undef, double %mul899, i32 0
  %229 = insertelement <2 x double> %228, double %mul899, i32 1
  %230 = fmul <2 x double> %227, %229
  %231 = fadd <2 x double> %196, %230
  %232 = load double* %y904, align 8, !tbaa !73
  %add905 = fadd double %232, %mul899
  store double %add905, double* %y904, align 8, !tbaa !73
  %233 = bitcast double* %x896 to <2 x double>*
  %234 = load <2 x double>* %233, align 8, !tbaa !17
  %235 = insertelement <2 x double> %221, double %mul899, i32 1
  %236 = fsub <2 x double> %234, %235
  %237 = bitcast double* %x896 to <2 x double>*
  store <2 x double> %236, <2 x double>* %237, align 8, !tbaa !17
  %mul909 = fmul double %sub780, %mul882
  %238 = insertelement <2 x double> undef, double %sub780, i32 0
  %239 = insertelement <2 x double> %238, double %sub780, i32 1
  %240 = insertelement <2 x double> %221, double %mul909, i32 1
  %241 = fmul <2 x double> %239, %240
  %242 = fadd <2 x double> %197, %241
  %243 = load double* %z912, align 8, !tbaa !74
  %add913 = fadd double %243, %mul909
  store double %add913, double* %z912, align 8, !tbaa !74
  %z914 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext763, i32 2
  %244 = load double* %z914, align 8, !tbaa !74
  %sub915 = fsub double %244, %mul909
  store double %sub915, double* %z914, align 8, !tbaa !74
  %indvars.iv.next751 = add nuw nsw i64 %indvars.iv750, 1
  %lftr.wideiv752 = trunc i64 %indvars.iv.next751 to i32
  %exitcond753 = icmp eq i32 %lftr.wideiv752, %conv755
  br i1 %exitcond753, label %for.inc919, label %for.body758

for.inc919:                                       ; preds = %for.body758, %for.end750, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end750 ], [ %pairCount.2, %for.body758 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0673, %if.then215 ], [ %pairlistoffset.1, %for.end750 ], [ %pairlistoffset.1, %for.body758 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0674, %if.then215 ], [ %pairlistindex.2, %for.end750 ], [ %pairlistindex.2, %for.body758 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0675, %if.then215 ], [ %fixg_lower.3, %for.end750 ], [ %fixg_lower.3, %for.body758 ]
  %g_lower.4 = phi i32 [ %g_lower.0676, %if.then215 ], [ %g_lower.3, %for.end750 ], [ %g_lower.3, %for.body758 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0677, %if.then215 ], [ %j_hgroup.2, %for.end750 ], [ %j_hgroup.2, %for.body758 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0678, %for.end750 ], [ %i.0678, %for.body758 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0685, %if.then215 ], [ %conv616, %for.end750 ], [ %conv616, %for.body758 ]
  %245 = phi <2 x double> [ %59, %if.then215 ], [ %192, %for.end750 ], [ %224, %for.body758 ]
  %246 = phi <2 x double> [ %60, %if.then215 ], [ %193, %for.end750 ], [ %231, %for.body758 ]
  %247 = phi <2 x double> [ %61, %if.then215 ], [ %194, %for.end750 ], [ %242, %for.body758 ]
  %inc920 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc920
  br i1 %cmp171, label %for.body172, label %for.end921

for.end921:                                       ; preds = %for.inc919, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc919 ]
  %248 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %245, %for.inc919 ]
  %249 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %246, %for.inc919 ]
  %250 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %247, %for.inc919 ]
  %251 = extractelement <2 x double> %250, i32 1
  %arraydecay922 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp923 = icmp eq i32* %cond534536767773, %arraydecay922
  br i1 %cmp923, label %if.end928, label %delete.notnull926

delete.notnull926:                                ; preds = %for.end921
  %252 = bitcast i32* %cond534536767773 to i8*
  call void @_ZdaPv(i8* %252) #7
  br label %if.end928

if.end928:                                        ; preds = %delete.notnull926, %for.end921
  %arraydecay929 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp930 = icmp eq i32* %cond19538765774, %arraydecay929
  br i1 %cmp930, label %if.end935, label %delete.notnull933

delete.notnull933:                                ; preds = %if.end928
  %253 = bitcast i32* %cond19538765774 to i8*
  call void @_ZdaPv(i8* %253) #7
  br label %if.end935

if.end935:                                        ; preds = %delete.notnull933, %if.end928
  %arraydecay936 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp937 = icmp eq i32* %cond30769772, %arraydecay936
  br i1 %cmp937, label %if.end942, label %delete.notnull940

delete.notnull940:                                ; preds = %if.end935
  %254 = bitcast i32* %cond30769772 to i8*
  call void @_ZdaPv(i8* %254) #7
  br label %if.end942

if.end942:                                        ; preds = %delete.notnull940, %if.end935
  %arraydecay943 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp944 = icmp eq i32* %cond114542544550556, %arraydecay943
  br i1 %cmp944, label %if.end949, label %delete.notnull947

delete.notnull947:                                ; preds = %if.end942
  %255 = bitcast i32* %cond114542544550556 to i8*
  call void @_ZdaPv(i8* %255) #7
  br label %if.end949

if.end949:                                        ; preds = %delete.notnull947, %if.end942
  %arraydecay950 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp951 = icmp eq i32* %cond125546548558, %arraydecay950
  br i1 %cmp951, label %if.end956, label %delete.notnull954

delete.notnull954:                                ; preds = %if.end949
  %256 = bitcast i32* %cond125546548558 to i8*
  call void @_ZdaPv(i8* %256) #7
  br label %if.end956

if.end956:                                        ; preds = %delete.notnull954, %if.end949
  %arraydecay957 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp958 = icmp eq i32* %cond136552554, %arraydecay957
  br i1 %cmp958, label %if.end963, label %delete.notnull961

delete.notnull961:                                ; preds = %if.end956
  %257 = bitcast i32* %cond136552554 to i8*
  call void @_ZdaPv(i8* %257) #7
  br label %if.end963

if.end963:                                        ; preds = %delete.notnull961, %if.end956
  %arraydecay964 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp965 = icmp eq i32* %cond147560, %arraydecay964
  br i1 %cmp965, label %if.end970, label %delete.notnull968

delete.notnull968:                                ; preds = %if.end963
  %258 = bitcast i32* %cond147560 to i8*
  call void @_ZdaPv(i8* %258) #7
  br label %if.end970

if.end970:                                        ; preds = %delete.notnull968, %if.end963
  %arraydecay971 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp972 = icmp eq i32* %cond158, %arraydecay971
  br i1 %cmp972, label %if.end977, label %delete.notnull975

delete.notnull975:                                ; preds = %if.end970
  %259 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %259) #7
  br label %if.end977

if.end977:                                        ; preds = %delete.notnull975, %if.end970
  %conv978 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx979 = getelementptr inbounds double* %1, i64 22
  %260 = load double* %arrayidx979, align 8, !tbaa !17
  %add980 = fadd double %conv978, %260
  store double %add980, double* %arrayidx979, align 8, !tbaa !17
  %arrayidx981 = getelementptr inbounds double* %1, i64 3
  %261 = bitcast double* %arrayidx981 to <2 x double>*
  %262 = load <2 x double>* %261, align 8, !tbaa !17
  %263 = fadd <2 x double> %248, %262
  %264 = bitcast double* %arrayidx981 to <2 x double>*
  store <2 x double> %263, <2 x double>* %264, align 8, !tbaa !17
  %arrayidx985 = getelementptr inbounds double* %1, i64 5
  %265 = bitcast double* %arrayidx985 to <2 x double>*
  %266 = load <2 x double>* %265, align 8, !tbaa !17
  %267 = shufflevector <2 x double> %250, <2 x double> %248, <2 x i32> <i32 0, i32 3>
  %268 = fadd <2 x double> %267, %266
  %269 = bitcast double* %arrayidx985 to <2 x double>*
  store <2 x double> %268, <2 x double>* %269, align 8, !tbaa !17
  %arrayidx989 = getelementptr inbounds double* %1, i64 7
  %270 = bitcast double* %arrayidx989 to <2 x double>*
  %271 = load <2 x double>* %270, align 8, !tbaa !17
  %272 = fadd <2 x double> %249, %271
  %273 = bitcast double* %arrayidx989 to <2 x double>*
  store <2 x double> %272, <2 x double>* %273, align 8, !tbaa !17
  %arrayidx993 = getelementptr inbounds double* %1, i64 9
  %274 = bitcast double* %arrayidx993 to <2 x double>*
  %275 = load <2 x double>* %274, align 8, !tbaa !17
  %276 = shufflevector <2 x double> %250, <2 x double> %249, <2 x i32> <i32 0, i32 3>
  %277 = fadd <2 x double> %276, %275
  %278 = bitcast double* %arrayidx993 to <2 x double>*
  store <2 x double> %277, <2 x double>* %278, align 8, !tbaa !17
  %arrayidx997 = getelementptr inbounds double* %1, i64 11
  %279 = load double* %arrayidx997, align 8, !tbaa !17
  %add998 = fadd double %251, %279
  store double %add998, double* %arrayidx997, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end977, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil16calc_self_energyEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31745 = icmp sgt i32 %13, 0
  br i1 %cmp31745, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30816 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond568570814 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19572812 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv804 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next805, %for.inc ]
  %g.0746 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv804, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0746, 1
  %idxprom41 = sext i32 %g.0746 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond568570814, i64 %idxprom41
  %30 = trunc i64 %indvars.iv804 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0746, %for.body ]
  %indvars.iv.next805 = add nuw nsw i64 %indvars.iv804, 1
  %lftr.wideiv806 = trunc i64 %indvars.iv.next805 to i32
  %exitcond807 = icmp eq i32 %lftr.wideiv806, %13
  br i1 %exitcond807, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond568570814, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond568570814, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa821 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19572811820 = phi i32* [ %cond19572812, %for.end ], [ %cond19572812, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond568570813819 = phi i32* [ %cond568570814, %for.end ], [ %cond568570814, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30815818 = phi i32* [ %cond30816, %for.end ], [ %cond30816, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56739 = icmp sgt i32 %g.0.lcssa821, 0
  br i1 %cmp56739, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv800 = phi i64 [ %indvars.iv.next801, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0741 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0740 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond568570813819, i64 %indvars.iv800
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0741, 1
  %idxprom68 = sext i32 %fixg.0741 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19572811820, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0740, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0741, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next801 = add nuw nsw i64 %indvars.iv800, 1
  %lftr.wideiv802 = trunc i64 %indvars.iv.next801 to i32
  %exitcond803 = icmp eq i32 %lftr.wideiv802, %g.0.lcssa821
  br i1 %exitcond803, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond568570813819, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond568570813819 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19572811820, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19572811820 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30815818, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30815818 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19572811820, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19572811820, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2575 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147594 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125580582592 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114576578584590 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136586588 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171713 = icmp sgt i32 %sub162, 0
  br i1 %cmp171713, label %for.body172.lr.ph, label %for.end951

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i565 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125580582592 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147594 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub880 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30815818 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114576578584590 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc949, %for.body172.lr.ph
  %exclChecksum.0729 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc949 ]
  %i.0720 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc950, %for.inc949 ]
  %j_hgroup.0719 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc949 ]
  %g_lower.0718 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc949 ]
  %fixg_lower.0717 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc949 ]
  %pairlistindex.0716 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc949 ]
  %pairlistoffset.0715 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc949 ]
  %pairCount.0714 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc949 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %257, %for.inc949 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %258, %for.inc949 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %259, %for.inc949 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %260, %for.inc949 ]
  %idxprom173 = sext i32 %i.0720 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %63 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %63, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i596 = zext i32 %bf.clear176 to i64
  %64 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i596, i32 0
  %65 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i596, i32 1
  %66 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i596, i32 2
  %67 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %65 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %68 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %69 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %70 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %71 = and i32 %bf.load175, 62914560
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0720
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0714
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0714, %div165
  %cmp214 = icmp slt i32 %pairCount.0714, %div168
  %or.cond554 = and i1 %cmp212, %cmp214
  br i1 %or.cond554, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0720
  br label %for.inc949

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0714, %if.then193 ], [ %sub211, %if.then199 ]
  %73 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %73, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %74 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0720
  %cmp237603 = icmp slt i32 %g_lower.0718, %g.0.lcssa821
  br i1 %cmp237603, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %75 = sext i32 %g_lower.0718 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %76, %g.0.lcssa821
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %75, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1604 = phi i32 [ %g_lower.0718, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond568570813819, i64 %indvars.iv
  %77 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %77, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1604, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0718, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1604, %land.rhs238 ]
  %cmp245605 = icmp slt i32 %fixg_lower.0717, %fixg.2575
  br i1 %cmp245605, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %78 = sext i32 %fixg_lower.0717 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %79 = trunc i64 %indvars.iv.next754 to i32
  %cmp245 = icmp slt i32 %79, %fixg.2575
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv753 = phi i64 [ %78, %land.rhs246.lr.ph ], [ %indvars.iv.next754, %while.cond244 ]
  %fixg_lower.1606 = phi i32 [ %fixg_lower.0717, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19572811820, i64 %indvars.iv753
  %80 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %80, %add236
  %indvars.iv.next754 = add nsw i64 %indvars.iv753, 1
  %inc252 = add nsw i32 %fixg_lower.1606, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0717, %land.end ], [ %fixg_lower.0717, %while.cond244.loopexit ], [ %fixg_lower.1606, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0718, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0719, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1608 = add nsw i32 %i.0720, 1
  %cmp257609 = icmp slt i32 %j.1608, %j_hgroup.1
  br i1 %cmp257609, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %81 = add i32 %j_hgroup.1, -1
  %82 = sub i32 %81, %i.0720
  %83 = add i32 %j_hgroup.1, -2
  %84 = sub i32 %83, %i.0720
  %85 = zext i32 %84 to i64
  %86 = add i64 %85, 1
  %end.idx = add i64 %85, 1
  %n.vec = and i64 %86, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1608
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %87 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1608, %87
  %broadcast.splatinsert849 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat850 = shufflevector <4 x i32> %broadcast.splatinsert849, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction851 = add <4 x i32> %broadcast.splat850, <i32 0, i32 1, i32 2, i32 3>
  %induction852 = add <4 x i32> %broadcast.splat850, <i32 4, i32 5, i32 6, i32 7>
  %88 = getelementptr inbounds i32* %cond114576578584590, i64 %index
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %induction851, <4 x i32>* %89, align 4
  %.sum855 = or i64 %index, 4
  %90 = getelementptr i32* %cond114576578584590, i64 %.sum855
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %induction852, <4 x i32>* %91, align 4
  %index.next = add i64 %index, 8
  %92 = icmp eq i64 %index.next, %n.vec
  br i1 %92, label %middle.block, label %vector.body, !llvm.loop !101

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val847 = phi i32 [ %j.1608, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv755 = phi i64 [ %indvars.iv.next756, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1611 = phi i32 [ %j.1, %for.body258 ], [ %resume.val847, %middle.block ]
  %indvars.iv.next756 = add nuw nsw i64 %indvars.iv755, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114576578584590, i64 %indvars.iv755
  store i32 %j.1611, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1611, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next756 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %82
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !102

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %82 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114576578584590, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %74, i32* %cond19572811820, i32* %cond568570813819
  %cond276 = select i1 %74, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %74, i32 %fixg.2575, i32 %g.0.lcssa821
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %93 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %93 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %94 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %95 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %96 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_y.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_x.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %j2.0.ph = phi i32 [ %93, %if.then283 ], [ %99, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30815818, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %97 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv761 = phi i64 [ %97, %while.cond298.outer ], [ %indvars.iv.next762, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %98 = trunc i64 %indvars.iv761 to i32
  %cmp299 = icmp slt i32 %98, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next762 = add nsw i64 %indvars.iv761, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next762
  %99 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %68, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %99 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %100 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %69, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %101 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %70, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %102 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div551 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div551 to i32
  %cmp330617 = icmp sgt i32 %conv328, 0
  br i1 %cmp330617, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %103 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %104 = lshr i64 %103, 2
  %105 = trunc i64 %104 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv763 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next764, %cond.end351 ]
  %pli.0619 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30815818, i64 %indvars.iv763
  %106 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %106 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %107 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %107, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp552 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp552, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %106, i32* %pli.0619, align 4, !tbaa !11
  %add354 = add nsw i32 %106, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0619, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %106, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0619, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %106, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0619, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0619, i64 %cond352
  %indvars.iv.next764 = add nuw nsw i64 %indvars.iv763, 1
  %lftr.wideiv765 = trunc i64 %indvars.iv.next764 to i32
  %exitcond766 = icmp eq i32 %lftr.wideiv765, %105
  br i1 %exitcond766, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369548 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369548 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext549 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext549, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114576578584590, i64 %idxprom374
  %108 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114576578584590, i64 %idxprom376
  store i32 %108, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0715, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0714, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0716, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0717, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0718, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0719, %if.else ]
  %109 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %109, 0
  %bf.load394.pre = load i32* %63, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load394.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %110 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %111 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %111 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  %bf.clear395 = and i32 %bf.load394.pre, 4194303
  %idxprom.i564597 = zext i32 %bf.clear395 to i64
  %112 = load i32** %atomVdwType.i565, align 8, !tbaa !64
  %arrayidx.i566 = getelementptr inbounds i32* %112, i64 %idxprom.i564597
  %113 = load i32* %arrayidx.i566, align 4, !tbaa !11
  %114 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %115 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv397 = shl i32 %113, 1
  %mul.i = and i32 %conv397, 131070
  %mul2.i = mul i32 %mul.i, %115
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp403645 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %110, label %for.cond402.preheader, label %if.else463

for.cond402.preheader:                            ; preds = %land.end387
  br i1 %cmp403645, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %116 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv776 = phi i64 [ %116, %for.body404.lr.ph ], [ %indvars.iv.next777, %for.inc460 ]
  %exclChecksum.1649 = phi i32 [ %exclChecksum.0729, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0648 = phi i32* [ %cond125580582592, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0647 = phi i32* [ %cond136586588, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114576578584590, i64 %indvars.iv776
  %117 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %117 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %118 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %68, %118
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %119 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %69, %119
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %120 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %70, %120
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %121 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %121, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond555 = or i1 %tobool438, %cmp439
  br i1 %or.cond555, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1649, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1649, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %65
  %cmp453 = icmp sgt i32 %bf.clear450, %66
  %or.cond556 = or i1 %cmp451, %cmp453
  br i1 %or.cond556, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0648, i64 1
  store i32 %117, i32* %pli399.0648, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0647, i64 1
  store i32 %117, i32* %plin.0647, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0647, %for.body404 ], [ %plin.0647, %land.lhs.true442 ], [ %plin.0647, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0648, %for.body404 ], [ %pli399.0648, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0648, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1649, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next777 = add nsw i64 %indvars.iv776, 1
  %lftr.wideiv778 = trunc i64 %indvars.iv.next777 to i32
  %exitcond779 = icmp eq i32 %lftr.wideiv778, %pairlistindex.2
  br i1 %exitcond779, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387
  br i1 %cmp403645, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114576578584590, i64 %idxprom468
  %122 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %122 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %123 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %124 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %125 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %125, %if.then466 ], [ %131, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %124, %if.then466 ], [ %130, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %123, %if.then466 ], [ %129, %if.else531 ]
  %j2467.0.ph = phi i32 [ %122, %if.then466 ], [ %128, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136586588, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125580582592, %if.then466 ], [ %pli399.2.ph628, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0729, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer621

while.cond491.outer621:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph622 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph623 = phi double [ %131, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph624 = phi double [ %130, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph625 = phi double [ %129, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph626 = phi i32 [ %128, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph627 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph628 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph629 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer630

while.cond491.outer630:                           ; preds = %land.lhs.true522, %while.cond491.outer621
  %idxprom471.pn.ph631 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph622, %while.cond491.outer621 ]
  %p_j_z480.0.ph632 = phi double [ %131, %land.lhs.true522 ], [ %p_j_z480.0.ph623, %while.cond491.outer621 ]
  %p_j_y475.0.ph633 = phi double [ %130, %land.lhs.true522 ], [ %p_j_y475.0.ph624, %while.cond491.outer621 ]
  %p_j_x470.0.ph634 = phi double [ %129, %land.lhs.true522 ], [ %p_j_x470.0.ph625, %while.cond491.outer621 ]
  %j2467.0.ph635 = phi i32 [ %128, %land.lhs.true522 ], [ %j2467.0.ph626, %while.cond491.outer621 ]
  %k464.0.ph636 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph627, %while.cond491.outer621 ]
  %exclChecksum.4.ph637 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph629, %while.cond491.outer621 ]
  %126 = sext i32 %k464.0.ph636 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer630
  %indvars.iv772 = phi i64 [ %126, %while.cond491.outer630 ], [ %indvars.iv.next773, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph631, %while.cond491.outer630 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph632, %while.cond491.outer630 ], [ %131, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph633, %while.cond491.outer630 ], [ %130, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph634, %while.cond491.outer630 ], [ %129, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph635, %while.cond491.outer630 ], [ %128, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph636, %while.cond491.outer630 ], [ %inc494, %while.body493 ]
  %127 = trunc i64 %indvars.iv772 to i32
  %cmp492 = icmp slt i32 %127, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next773 = add nsw i64 %indvars.iv772, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114576578584590, i64 %indvars.iv.next773
  %128 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %68, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %128 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %129 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %69, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %130 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %70, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %131 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph637, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer630

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph637, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %65
  %cmp528 = icmp sgt i32 %atom2485.0, %66
  %or.cond557 = or i1 %cmp526, %cmp528
  br i1 %or.cond557, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph628, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph628, align 4, !tbaa !11
  br label %while.cond491.outer621

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %plin.4 = phi i32* [ %cond136586588, %if.else463 ], [ %cond136586588, %for.cond402.preheader ], [ %plin.2.ph, %while.cond491 ], [ %plin.1, %for.inc460 ]
  %pli399.4 = phi i32* [ %cond125580582592, %if.else463 ], [ %cond125580582592, %for.cond402.preheader ], [ %pli399.2.ph628, %while.cond491 ], [ %pli399.1, %for.inc460 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0729, %if.else463 ], [ %exclChecksum.0729, %for.cond402.preheader ], [ %exclChecksum.4.ph637, %while.cond491 ], [ %exclChecksum.3, %for.inc460 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546515 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546515 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext546 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext546, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125580582592, i64 %idxprom551
  %132 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125580582592, i64 %idxprom553
  store i32 %132, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558653 = icmp ult i32* %cond136586588, %plin.4
  br i1 %cmp558653, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8656 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0655 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147594, %for.cond557.preheader ]
  %pln.0654 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136586588, %for.cond557.preheader ]
  %133 = load i32* %pln.0654, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %133, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0655, i64 1
  store i32 %133, i32* %plix.0655, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8656, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0654, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8656, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147594, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0655, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136586588, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0654, %land.lhs.true559 ]
  %cmp567660 = icmp sgt i32 %conv547, 0
  br i1 %cmp567660, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv786 = phi i64 [ %indvars.iv.next787, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9663 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1662 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0661 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125580582592, i64 %indvars.iv786
  %134 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %134, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1662, i64 1
  store i32 %134, i32* %plix.1662, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9663, -1
  %indvars.iv.next787 = add nuw nsw i64 %indvars.iv786, 1
  %inc578 = add nsw i32 %k556.0661, 1
  %135 = trunc i64 %indvars.iv.next787 to i32
  %cmp567 = icmp slt i32 %135, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9663, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1662, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0661, %land.lhs.true568 ]
  %cmp581667 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581667, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %136 = sext i32 %k556.0.lcssa to i64
  %137 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %138 = lshr i64 %137, 2
  %139 = trunc i64 %138 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv788 = phi i64 [ %136, %for.body582.lr.ph ], [ %indvars.iv.next789, %for.inc600 ]
  %plin.5671 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2670 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0669 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125580582592, i64 %indvars.iv788
  %140 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %140 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %141 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %141, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592545 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592545, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %67, i64 %add.ptr.sum
  %142 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %142 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5671, i64 1
  store i32 %140, i32* %plin.5671, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2670, i64 1
  store i32 %140, i32* %plix.2670, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0669, i64 1
  store i32 %140, i32* %plim.0669, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0669, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0669, %sw.bb596 ], [ %plim.0669, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2670, %for.body582 ], [ %plix.2670, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2670, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5671, %for.body582 ], [ %plin.5671, %sw.bb598 ], [ %plin.5671, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next789 = add nsw i64 %indvars.iv788, 1
  %lftr.wideiv790 = trunc i64 %indvars.iv.next789 to i32
  %exitcond791 = icmp eq i32 %lftr.wideiv790, %139
  br i1 %exitcond791, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606517 = lshr exact i64 %sub.ptr.sub605, 2
  %conv607516 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607516
  %add615 = add i64 %add608, %sub.ptr.div606517
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620519 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620519 to i32
  %cmp623675 = icmp sgt i32 %conv621, 0
  br i1 %cmp623675, label %for.body624.lr.ph, label %for.end764

for.body624.lr.ph:                                ; preds = %for.end602
  %x742 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y751 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z758 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624.for.body624_crit_edge, %for.body624.lr.ph
  %143 = phi i32* [ %112, %for.body624.lr.ph ], [ %.pre, %for.body624.for.body624_crit_edge ]
  %indvars.iv792 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next793, %for.body624.for.body624_crit_edge ]
  %144 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %173, %for.body624.for.body624_crit_edge ]
  %145 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %179, %for.body624.for.body624_crit_edge ]
  %146 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %195, %for.body624.for.body624_crit_edge ]
  %147 = phi <2 x double> [ %62, %for.body624.lr.ph ], [ %183, %for.body624.for.body624_crit_edge ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv792
  %148 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %148 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %149 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %68, %149
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %150 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %69, %150
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %151 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %70, %151
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %152 = bitcast float %conv645 to i32
  %shr = ashr i32 %152, 17
  %add647 = add nsw i32 %shr, %mul
  %id648 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 2
  %153 = bitcast [4 x i8]* %id648 to i32*
  %bf.load649 = load i32* %153, align 4
  %bf.clear650 = and i32 %bf.load649, 4194303
  %idxprom.i560600 = zext i32 %bf.clear650 to i64
  %arrayidx.i562 = getelementptr inbounds i32* %143, i64 %idxprom.i560600
  %154 = load i32* %arrayidx.i562, align 4, !tbaa !11
  %conv.i563 = zext i32 %154 to i64
  %conv652 = shl nuw nsw i64 %conv.i563, 1
  %mul653 = and i64 %conv652, 131070
  %mul656 = shl nsw i32 %add647, 4
  %idx.ext657 = sext i32 %mul656 to i64
  %add.ptr658 = getelementptr inbounds double* %7, i64 %idx.ext657
  %155 = load double* %add.ptr658, align 8, !tbaa !17
  %add.ptr658.sum534 = or i64 %idx.ext657, 4
  %add.ptr663 = getelementptr inbounds double* %7, i64 %add.ptr658.sum534
  %156 = load double* %add.ptr663, align 8, !tbaa !17
  %add.ptr658.sum535 = or i64 %idx.ext657, 8
  %add.ptr668 = getelementptr inbounds double* %7, i64 %add.ptr658.sum535
  %157 = load double* %add.ptr668, align 8, !tbaa !17
  %and = and i32 %152, -131072
  %charge671 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %158 = load float* %charge671, align 4, !tbaa !63
  %conv672 = fpext float %158 to double
  %mul673 = fmul double %mul392, %conv672
  %159 = bitcast i32 %and to float
  %conv675 = fpext float %159 to double
  %sub676 = fsub double %add644, %conv675
  %add.ptr.i.sum601 = add i64 %mul653, %idx.ext.i
  %A678 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum601, i32 0
  %160 = load double* %A678, align 8, !tbaa !69
  %mul679 = fmul double %8, %160
  %B681 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum601, i32 1
  %161 = load double* %B681, align 8, !tbaa !71
  %mul682 = fmul double %8, %161
  %mul683 = fmul double %155, %mul679
  %mul684 = fmul double %156, %mul682
  %sub685 = fsub double %mul683, %mul684
  %add.ptr658.sum536 = or i64 %idx.ext657, 3
  %arrayidx686 = getelementptr inbounds double* %7, i64 %add.ptr658.sum536
  %162 = load double* %arrayidx686, align 8, !tbaa !17
  %mul687 = fmul double %mul679, %162
  %add.ptr663.sum537 = or i64 %idx.ext657, 7
  %arrayidx688 = getelementptr inbounds double* %7, i64 %add.ptr663.sum537
  %163 = load double* %arrayidx688, align 8, !tbaa !17
  %mul689 = fmul double %mul682, %163
  %sub690 = fsub double %mul687, %mul689
  %add.ptr658.sum538 = or i64 %idx.ext657, 2
  %arrayidx691 = getelementptr inbounds double* %7, i64 %add.ptr658.sum538
  %164 = load double* %arrayidx691, align 8, !tbaa !17
  %mul692 = fmul double %mul679, %164
  %add.ptr663.sum539 = or i64 %idx.ext657, 6
  %arrayidx693 = getelementptr inbounds double* %7, i64 %add.ptr663.sum539
  %165 = load double* %arrayidx693, align 8, !tbaa !17
  %mul694 = fmul double %mul682, %165
  %sub695 = fsub double %mul692, %mul694
  %add.ptr658.sum540 = or i64 %idx.ext657, 1
  %arrayidx696 = getelementptr inbounds double* %7, i64 %add.ptr658.sum540
  %166 = load double* %arrayidx696, align 8, !tbaa !17
  %mul697 = fmul double %mul679, %166
  %add.ptr663.sum541 = or i64 %idx.ext657, 5
  %arrayidx698 = getelementptr inbounds double* %7, i64 %add.ptr663.sum541
  %167 = load double* %arrayidx698, align 8, !tbaa !17
  %mul699 = fmul double %mul682, %167
  %sub700 = fsub double %mul697, %mul699
  %mul701 = fmul double %sub676, %sub690
  %add702 = fadd double %mul701, %sub695
  %mul703 = fmul double %sub676, %add702
  %add704 = fadd double %mul703, %sub700
  %mul705 = fmul double %sub676, %add704
  %add706 = fadd double %sub685, %mul705
  %mul708 = fmul double %157, %mul673
  %add.ptr668.sum542 = or i64 %idx.ext657, 11
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr668.sum542
  %168 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul673, %168
  %add.ptr668.sum543 = or i64 %idx.ext657, 10
  %arrayidx711 = getelementptr inbounds double* %7, i64 %add.ptr668.sum543
  %169 = load double* %arrayidx711, align 8, !tbaa !17
  %mul712 = fmul double %mul673, %169
  %add.ptr668.sum544 = or i64 %idx.ext657, 9
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr668.sum544
  %170 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul673, %170
  %mul715 = fmul double %sub676, %mul710
  %add716 = fadd double %mul715, %mul712
  %mul717 = fmul double %sub676, %add716
  %add718 = fadd double %mul714, %mul717
  %mul719 = fmul double %sub676, %add718
  %add720 = fadd double %mul708, %mul719
  %add722 = fadd double %sub690, %mul710
  %add723 = fadd double %sub695, %mul712
  %add724 = fadd double %sub700, %mul714
  %mul726 = fmul double %sub676, 3.000000e+00
  %mul727 = fmul double %mul726, %add722
  %mul728 = fmul double %add723, 2.000000e+00
  %add729 = fadd double %mul727, %mul728
  %mul730 = fmul double %sub676, %add729
  %add731 = fadd double %add724, %mul730
  %mul732 = fmul double %add731, -2.000000e+00
  %mul735 = fmul double %sub632, %mul732
  %mul736 = fmul double %sub632, %mul735
  %171 = insertelement <2 x double> undef, double %add706, i32 0
  %172 = insertelement <2 x double> %171, double %mul736, i32 1
  %173 = fadd <2 x double> %144, %172
  %174 = insertelement <2 x double> undef, double %sub637, i32 0
  %175 = insertelement <2 x double> %174, double %sub642, i32 1
  %176 = insertelement <2 x double> undef, double %mul735, i32 0
  %177 = insertelement <2 x double> %176, double %mul735, i32 1
  %178 = fmul <2 x double> %175, %177
  %179 = fadd <2 x double> %145, %178
  %180 = load double* %x742, align 8, !tbaa !72
  %add743 = fadd double %180, %mul735
  store double %add743, double* %x742, align 8, !tbaa !72
  %x744 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul746 = fmul double %sub637, %mul732
  %mul747 = fmul double %sub637, %mul746
  %181 = insertelement <2 x double> undef, double %add720, i32 0
  %182 = insertelement <2 x double> %181, double %mul747, i32 1
  %183 = fadd <2 x double> %147, %182
  %184 = load double* %y751, align 8, !tbaa !73
  %add752 = fadd double %184, %mul746
  store double %add752, double* %y751, align 8, !tbaa !73
  %185 = bitcast double* %x744 to <2 x double>*
  %186 = load <2 x double>* %185, align 8, !tbaa !17
  %187 = insertelement <2 x double> %176, double %mul746, i32 1
  %188 = fsub <2 x double> %186, %187
  %189 = bitcast double* %x744 to <2 x double>*
  store <2 x double> %188, <2 x double>* %189, align 8, !tbaa !17
  %mul755 = fmul double %sub642, %mul732
  %190 = insertelement <2 x double> undef, double %sub642, i32 0
  %191 = insertelement <2 x double> %190, double %sub642, i32 1
  %192 = insertelement <2 x double> undef, double %mul746, i32 0
  %193 = insertelement <2 x double> %192, double %mul755, i32 1
  %194 = fmul <2 x double> %191, %193
  %195 = fadd <2 x double> %146, %194
  %196 = load double* %z758, align 8, !tbaa !74
  %add759 = fadd double %196, %mul755
  store double %add759, double* %z758, align 8, !tbaa !74
  %z760 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %197 = load double* %z760, align 8, !tbaa !74
  %sub761 = fsub double %197, %mul755
  store double %sub761, double* %z760, align 8, !tbaa !74
  %indvars.iv.next793 = add nuw nsw i64 %indvars.iv792, 1
  %lftr.wideiv794 = trunc i64 %indvars.iv.next793 to i32
  %exitcond795 = icmp eq i32 %lftr.wideiv794, %conv621
  br i1 %exitcond795, label %for.end764, label %for.body624.for.body624_crit_edge

for.body624.for.body624_crit_edge:                ; preds = %for.body624
  %.pre = load i32** %atomVdwType.i565, align 8, !tbaa !64
  br label %for.body624

for.end764:                                       ; preds = %for.body624, %for.end602
  %198 = phi <2 x double> [ %59, %for.end602 ], [ %173, %for.body624 ]
  %199 = phi <2 x double> [ %60, %for.end602 ], [ %179, %for.body624 ]
  %200 = phi <2 x double> [ %61, %for.end602 ], [ %195, %for.body624 ]
  %201 = phi <2 x double> [ %62, %for.end602 ], [ %183, %for.body624 ]
  %conv769 = trunc i64 %sub.ptr.div613 to i32
  %cmp771693 = icmp sgt i32 %conv769, 0
  br i1 %cmp771693, label %for.body772.lr.ph, label %for.inc949

for.body772.lr.ph:                                ; preds = %for.end764
  %x924 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y934 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z942 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body772

for.body772:                                      ; preds = %for.body772, %for.body772.lr.ph
  %indvars.iv796 = phi i64 [ 0, %for.body772.lr.ph ], [ %indvars.iv.next797, %for.body772 ]
  %202 = phi <2 x double> [ %198, %for.body772.lr.ph ], [ %232, %for.body772 ]
  %203 = phi <2 x double> [ %199, %for.body772.lr.ph ], [ %238, %for.body772 ]
  %204 = phi <2 x double> [ %200, %for.body772.lr.ph ], [ %254, %for.body772 ]
  %205 = phi <2 x double> [ %201, %for.body772.lr.ph ], [ %242, %for.body772 ]
  %arrayidx775 = getelementptr inbounds i32* %cond158, i64 %indvars.iv796
  %206 = load i32* %arrayidx775, align 4, !tbaa !11
  %idx.ext777 = sext i32 %206 to i64
  %x781 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 0
  %207 = load double* %x781, align 8, !tbaa !59
  %sub782 = fsub double %68, %207
  %mul784 = fmul double %sub782, %sub782
  %y787 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 1
  %208 = load double* %y787, align 8, !tbaa !61
  %sub788 = fsub double %69, %208
  %mul789 = fmul double %sub788, %sub788
  %add790 = fadd double %mul784, %mul789
  %z793 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 2
  %209 = load double* %z793, align 8, !tbaa !62
  %sub794 = fsub double %70, %209
  %mul795 = fmul double %sub794, %sub794
  %add796 = fadd double %add790, %mul795
  %conv798 = fptrunc double %add796 to float
  %210 = bitcast float %conv798 to i32
  %shr802 = ashr i32 %210, 17
  %add803 = add nsw i32 %shr802, %mul
  %id805 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 2
  %211 = bitcast [4 x i8]* %id805 to i32*
  %bf.load806 = load i32* %211, align 4
  %bf.clear807 = and i32 %bf.load806, 4194303
  %idxprom.i558598 = zext i32 %bf.clear807 to i64
  %212 = load i32** %atomVdwType.i565, align 8, !tbaa !64
  %arrayidx.i559 = getelementptr inbounds i32* %212, i64 %idxprom.i558598
  %213 = load i32* %arrayidx.i559, align 4, !tbaa !11
  %conv.i = zext i32 %213 to i64
  %conv809 = shl nuw nsw i64 %conv.i, 1
  %mul810 = and i64 %conv809, 131070
  %add.ptr812.sum521 = or i64 %mul810, 1
  %mul815 = shl nsw i32 %add803, 4
  %idx.ext816 = sext i32 %mul815 to i64
  %add.ptr817 = getelementptr inbounds double* %7, i64 %idx.ext816
  %214 = load double* %add.ptr817, align 8, !tbaa !17
  %add.ptr817.sum522 = or i64 %idx.ext816, 4
  %add.ptr824 = getelementptr inbounds double* %7, i64 %add.ptr817.sum522
  %215 = load double* %add.ptr824, align 8, !tbaa !17
  %add.ptr817.sum523 = or i64 %idx.ext816, 8
  %add.ptr831 = getelementptr inbounds double* %7, i64 %add.ptr817.sum523
  %216 = load double* %add.ptr831, align 8, !tbaa !17
  %and835 = and i32 %210, -131072
  %charge837 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 1
  %217 = load float* %charge837, align 4, !tbaa !63
  %conv838 = fpext float %217 to double
  %mul839 = fmul double %mul392, %conv838
  %218 = bitcast i32 %and835 to float
  %conv842 = fpext float %218 to double
  %sub843 = fsub double %add796, %conv842
  %add.ptr.i.sum = add i64 %add.ptr812.sum521, %idx.ext.i
  %A845 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum, i32 0
  %219 = load double* %A845, align 8, !tbaa !69
  %mul846 = fmul double %8, %219
  %B848 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum, i32 1
  %220 = load double* %B848, align 8, !tbaa !71
  %mul849 = fmul double %8, %220
  %mul851 = fmul double %214, %mul846
  %mul852 = fmul double %215, %mul849
  %sub853 = fsub double %mul851, %mul852
  %add.ptr817.sum524 = or i64 %idx.ext816, 3
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr817.sum524
  %221 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul846, %221
  %add.ptr824.sum525 = or i64 %idx.ext816, 7
  %arrayidx857 = getelementptr inbounds double* %7, i64 %add.ptr824.sum525
  %222 = load double* %arrayidx857, align 8, !tbaa !17
  %mul858 = fmul double %mul849, %222
  %sub859 = fsub double %mul856, %mul858
  %add.ptr817.sum526 = or i64 %idx.ext816, 2
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr817.sum526
  %223 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul846, %223
  %add.ptr824.sum527 = or i64 %idx.ext816, 6
  %arrayidx863 = getelementptr inbounds double* %7, i64 %add.ptr824.sum527
  %224 = load double* %arrayidx863, align 8, !tbaa !17
  %mul864 = fmul double %mul849, %224
  %sub865 = fsub double %mul862, %mul864
  %add.ptr817.sum528 = or i64 %idx.ext816, 1
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr817.sum528
  %225 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %mul846, %225
  %add.ptr824.sum529 = or i64 %idx.ext816, 5
  %arrayidx869 = getelementptr inbounds double* %7, i64 %add.ptr824.sum529
  %226 = load double* %arrayidx869, align 8, !tbaa !17
  %mul870 = fmul double %mul849, %226
  %sub871 = fsub double %mul868, %mul870
  %mul873 = fmul double %sub843, %sub859
  %add874 = fadd double %mul873, %sub865
  %mul875 = fmul double %sub843, %add874
  %add876 = fadd double %mul875, %sub871
  %mul877 = fmul double %sub843, %add876
  %add878 = fadd double %sub853, %mul877
  %mul881 = fmul double %sub880, %mul839
  %mul882 = fmul double %216, %mul881
  %add.ptr831.sum530 = or i64 %idx.ext816, 11
  %arrayidx884 = getelementptr inbounds double* %7, i64 %add.ptr831.sum530
  %227 = load double* %arrayidx884, align 8, !tbaa !17
  %mul885 = fmul double %mul881, %227
  %add.ptr831.sum531 = or i64 %idx.ext816, 10
  %arrayidx887 = getelementptr inbounds double* %7, i64 %add.ptr831.sum531
  %228 = load double* %arrayidx887, align 8, !tbaa !17
  %mul888 = fmul double %mul881, %228
  %add.ptr831.sum532 = or i64 %idx.ext816, 9
  %arrayidx890 = getelementptr inbounds double* %7, i64 %add.ptr831.sum532
  %229 = load double* %arrayidx890, align 8, !tbaa !17
  %mul891 = fmul double %mul881, %229
  %mul893 = fmul double %sub843, %mul885
  %add894 = fadd double %mul893, %mul888
  %mul895 = fmul double %sub843, %add894
  %add896 = fadd double %mul891, %mul895
  %mul897 = fmul double %sub843, %add896
  %add898 = fadd double %mul882, %mul897
  %add900 = fadd double %sub859, %mul885
  %add901 = fadd double %sub865, %mul888
  %add902 = fadd double %sub871, %mul891
  %mul905 = fmul double %sub843, 3.000000e+00
  %mul906 = fmul double %mul905, %add900
  %mul907 = fmul double %add901, 2.000000e+00
  %add908 = fadd double %mul906, %mul907
  %mul909 = fmul double %sub843, %add908
  %add910 = fadd double %add902, %mul909
  %mul912 = fmul double %add910, -2.000000e+00
  %mul917 = fmul double %sub782, %mul912
  %mul918 = fmul double %sub782, %mul917
  %230 = insertelement <2 x double> undef, double %add878, i32 0
  %231 = insertelement <2 x double> %230, double %mul918, i32 1
  %232 = fadd <2 x double> %202, %231
  %233 = insertelement <2 x double> undef, double %sub788, i32 0
  %234 = insertelement <2 x double> %233, double %sub794, i32 1
  %235 = insertelement <2 x double> undef, double %mul917, i32 0
  %236 = insertelement <2 x double> %235, double %mul917, i32 1
  %237 = fmul <2 x double> %234, %236
  %238 = fadd <2 x double> %203, %237
  %239 = load double* %x924, align 8, !tbaa !72
  %add925 = fadd double %239, %mul917
  store double %add925, double* %x924, align 8, !tbaa !72
  %x926 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext777, i32 0
  %mul929 = fmul double %sub788, %mul912
  %mul930 = fmul double %sub788, %mul929
  %240 = insertelement <2 x double> undef, double %add898, i32 0
  %241 = insertelement <2 x double> %240, double %mul930, i32 1
  %242 = fadd <2 x double> %205, %241
  %243 = load double* %y934, align 8, !tbaa !73
  %add935 = fadd double %243, %mul929
  store double %add935, double* %y934, align 8, !tbaa !73
  %244 = bitcast double* %x926 to <2 x double>*
  %245 = load <2 x double>* %244, align 8, !tbaa !17
  %246 = insertelement <2 x double> %235, double %mul929, i32 1
  %247 = fsub <2 x double> %245, %246
  %248 = bitcast double* %x926 to <2 x double>*
  store <2 x double> %247, <2 x double>* %248, align 8, !tbaa !17
  %mul939 = fmul double %sub794, %mul912
  %249 = insertelement <2 x double> undef, double %sub794, i32 0
  %250 = insertelement <2 x double> %249, double %sub794, i32 1
  %251 = insertelement <2 x double> undef, double %mul929, i32 0
  %252 = insertelement <2 x double> %251, double %mul939, i32 1
  %253 = fmul <2 x double> %250, %252
  %254 = fadd <2 x double> %204, %253
  %255 = load double* %z942, align 8, !tbaa !74
  %add943 = fadd double %255, %mul939
  store double %add943, double* %z942, align 8, !tbaa !74
  %z944 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext777, i32 2
  %256 = load double* %z944, align 8, !tbaa !74
  %sub945 = fsub double %256, %mul939
  store double %sub945, double* %z944, align 8, !tbaa !74
  %indvars.iv.next797 = add nuw nsw i64 %indvars.iv796, 1
  %lftr.wideiv798 = trunc i64 %indvars.iv.next797 to i32
  %exitcond799 = icmp eq i32 %lftr.wideiv798, %conv769
  br i1 %exitcond799, label %for.inc949, label %for.body772

for.inc949:                                       ; preds = %for.body772, %for.end764, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end764 ], [ %pairCount.2, %for.body772 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0715, %if.then215 ], [ %pairlistoffset.1, %for.end764 ], [ %pairlistoffset.1, %for.body772 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0716, %if.then215 ], [ %pairlistindex.2, %for.end764 ], [ %pairlistindex.2, %for.body772 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0717, %if.then215 ], [ %fixg_lower.3, %for.end764 ], [ %fixg_lower.3, %for.body772 ]
  %g_lower.4 = phi i32 [ %g_lower.0718, %if.then215 ], [ %g_lower.3, %for.end764 ], [ %g_lower.3, %for.body772 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0719, %if.then215 ], [ %j_hgroup.2, %for.end764 ], [ %j_hgroup.2, %for.body772 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0720, %for.end764 ], [ %i.0720, %for.body772 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0729, %if.then215 ], [ %conv616, %for.end764 ], [ %conv616, %for.body772 ]
  %257 = phi <2 x double> [ %59, %if.then215 ], [ %198, %for.end764 ], [ %232, %for.body772 ]
  %258 = phi <2 x double> [ %60, %if.then215 ], [ %199, %for.end764 ], [ %238, %for.body772 ]
  %259 = phi <2 x double> [ %61, %if.then215 ], [ %200, %for.end764 ], [ %254, %for.body772 ]
  %260 = phi <2 x double> [ %62, %if.then215 ], [ %201, %for.end764 ], [ %242, %for.body772 ]
  %inc950 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc950
  br i1 %cmp171, label %for.body172, label %for.end951

for.end951:                                       ; preds = %for.inc949, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc949 ]
  %261 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %257, %for.inc949 ]
  %262 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %258, %for.inc949 ]
  %263 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %259, %for.inc949 ]
  %264 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %260, %for.inc949 ]
  %265 = extractelement <2 x double> %264, i32 0
  %arraydecay952 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp953 = icmp eq i32* %cond568570813819, %arraydecay952
  br i1 %cmp953, label %if.end958, label %delete.notnull956

delete.notnull956:                                ; preds = %for.end951
  %266 = bitcast i32* %cond568570813819 to i8*
  call void @_ZdaPv(i8* %266) #7
  br label %if.end958

if.end958:                                        ; preds = %delete.notnull956, %for.end951
  %arraydecay959 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp960 = icmp eq i32* %cond19572811820, %arraydecay959
  br i1 %cmp960, label %if.end965, label %delete.notnull963

delete.notnull963:                                ; preds = %if.end958
  %267 = bitcast i32* %cond19572811820 to i8*
  call void @_ZdaPv(i8* %267) #7
  br label %if.end965

if.end965:                                        ; preds = %delete.notnull963, %if.end958
  %arraydecay966 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp967 = icmp eq i32* %cond30815818, %arraydecay966
  br i1 %cmp967, label %if.end972, label %delete.notnull970

delete.notnull970:                                ; preds = %if.end965
  %268 = bitcast i32* %cond30815818 to i8*
  call void @_ZdaPv(i8* %268) #7
  br label %if.end972

if.end972:                                        ; preds = %delete.notnull970, %if.end965
  %arraydecay973 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp974 = icmp eq i32* %cond114576578584590, %arraydecay973
  br i1 %cmp974, label %if.end979, label %delete.notnull977

delete.notnull977:                                ; preds = %if.end972
  %269 = bitcast i32* %cond114576578584590 to i8*
  call void @_ZdaPv(i8* %269) #7
  br label %if.end979

if.end979:                                        ; preds = %delete.notnull977, %if.end972
  %arraydecay980 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp981 = icmp eq i32* %cond125580582592, %arraydecay980
  br i1 %cmp981, label %if.end986, label %delete.notnull984

delete.notnull984:                                ; preds = %if.end979
  %270 = bitcast i32* %cond125580582592 to i8*
  call void @_ZdaPv(i8* %270) #7
  br label %if.end986

if.end986:                                        ; preds = %delete.notnull984, %if.end979
  %arraydecay987 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp988 = icmp eq i32* %cond136586588, %arraydecay987
  br i1 %cmp988, label %if.end993, label %delete.notnull991

delete.notnull991:                                ; preds = %if.end986
  %271 = bitcast i32* %cond136586588 to i8*
  call void @_ZdaPv(i8* %271) #7
  br label %if.end993

if.end993:                                        ; preds = %delete.notnull991, %if.end986
  %arraydecay994 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp995 = icmp eq i32* %cond147594, %arraydecay994
  br i1 %cmp995, label %if.end1000, label %delete.notnull998

delete.notnull998:                                ; preds = %if.end993
  %272 = bitcast i32* %cond147594 to i8*
  call void @_ZdaPv(i8* %272) #7
  br label %if.end1000

if.end1000:                                       ; preds = %delete.notnull998, %if.end993
  %arraydecay1001 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1002 = icmp eq i32* %cond158, %arraydecay1001
  br i1 %cmp1002, label %if.end1007, label %delete.notnull1005

delete.notnull1005:                               ; preds = %if.end1000
  %273 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %273) #7
  br label %if.end1007

if.end1007:                                       ; preds = %delete.notnull1005, %if.end1000
  %conv1008 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1009 = getelementptr inbounds double* %1, i64 22
  %274 = load double* %arrayidx1009, align 8, !tbaa !17
  %add1010 = fadd double %conv1008, %274
  store double %add1010, double* %arrayidx1009, align 8, !tbaa !17
  %arrayidx1011 = getelementptr inbounds double* %1, i64 2
  %275 = load double* %1, align 8, !tbaa !17
  %add1014 = fadd double %265, %275
  store double %add1014, double* %1, align 8, !tbaa !17
  %276 = bitcast double* %arrayidx1011 to <2 x double>*
  %277 = load <2 x double>* %276, align 8, !tbaa !17
  %278 = fadd <2 x double> %261, %277
  %279 = bitcast double* %arrayidx1011 to <2 x double>*
  store <2 x double> %278, <2 x double>* %279, align 8, !tbaa !17
  %arrayidx1017 = getelementptr inbounds double* %1, i64 4
  %280 = bitcast double* %arrayidx1017 to <2 x double>*
  %281 = load <2 x double>* %280, align 8, !tbaa !17
  %282 = fadd <2 x double> %262, %281
  %283 = bitcast double* %arrayidx1017 to <2 x double>*
  store <2 x double> %282, <2 x double>* %283, align 8, !tbaa !17
  %arrayidx1021 = getelementptr inbounds double* %1, i64 6
  %284 = bitcast double* %arrayidx1021 to <2 x double>*
  %285 = load <2 x double>* %284, align 8, !tbaa !17
  %286 = shufflevector <2 x double> %262, <2 x double> %264, <2 x i32> <i32 0, i32 3>
  %287 = fadd <2 x double> %286, %285
  %288 = bitcast double* %arrayidx1021 to <2 x double>*
  store <2 x double> %287, <2 x double>* %288, align 8, !tbaa !17
  %arrayidx1025 = getelementptr inbounds double* %1, i64 8
  %289 = bitcast double* %arrayidx1025 to <2 x double>*
  %290 = load <2 x double>* %289, align 8, !tbaa !17
  %291 = shufflevector <2 x double> %263, <2 x double> %262, <2 x i32> <i32 0, i32 3>
  %292 = fadd <2 x double> %291, %290
  %293 = bitcast double* %arrayidx1025 to <2 x double>*
  store <2 x double> %292, <2 x double>* %293, align 8, !tbaa !17
  %arrayidx1029 = getelementptr inbounds double* %1, i64 10
  %294 = bitcast double* %arrayidx1029 to <2 x double>*
  %295 = load <2 x double>* %294, align 8, !tbaa !17
  %296 = fadd <2 x double> %263, %295
  %297 = bitcast double* %arrayidx1029 to <2 x double>*
  store <2 x double> %296, <2 x double>* %297, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1007, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil19calc_pair_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31920 = icmp sgt i32 %14, 0
  br i1 %cmp31920, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30977 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond715717975 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19719973 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv966 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next967, %for.inc ]
  %g.0921 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv966, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0921, 1
  %idxprom41 = sext i32 %g.0921 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond715717975, i64 %idxprom41
  %31 = trunc i64 %indvars.iv966 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0921, %for.body ]
  %indvars.iv.next967 = add nuw nsw i64 %indvars.iv966, 1
  %lftr.wideiv968 = trunc i64 %indvars.iv.next967 to i32
  %exitcond969 = icmp eq i32 %lftr.wideiv968, %14
  br i1 %exitcond969, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond715717975, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond715717975, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa982 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19719972981 = phi i32* [ %cond19719973, %for.end ], [ %cond19719973, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond715717974980 = phi i32* [ %cond715717975, %for.end ], [ %cond715717975, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30976979 = phi i32* [ %cond30977, %for.end ], [ %cond30977, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56914 = icmp sgt i32 %g.0.lcssa982, 0
  br i1 %cmp56914, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75908 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76909 = icmp sgt i32 %13, 0
  %or.cond699910 = and i1 %tobool75908, %cmp76909
  br i1 %or.cond699910, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv962 = phi i64 [ %indvars.iv.next963, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0916 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0915 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond715717974980, i64 %indvars.iv962
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0916, 1
  %idxprom68 = sext i32 %fixg.0916 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19719972981, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0915, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0916, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next963 = add nuw nsw i64 %indvars.iv962, 1
  %lftr.wideiv964 = trunc i64 %indvars.iv.next963 to i32
  %exitcond965 = icmp eq i32 %lftr.wideiv964, %g.0.lcssa982
  br i1 %exitcond965, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv960 = phi i64 [ %indvars.iv.next961, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2911 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv960, i32 2
  %36 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %36, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2911
  %indvars.iv.next961 = add nuw nsw i64 %indvars.iv960, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %37 = trunc i64 %indvars.iv.next961 to i32
  %cmp76 = icmp slt i32 %37, %13
  %or.cond699 = and i1 %tobool75, %cmp76
  br i1 %or.cond699, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75908, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond715717974980, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %38 = bitcast i32* %cond715717974980 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19719972981, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %39 = bitcast i32* %cond19719972981 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30976979, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %40 = bitcast i32* %cond30976979 to i8*
  call void @_ZdaPv(i8* %40) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19719972981, i64 %idxprom114
  %41 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19719972981, i64 %idxprom116
  store i32 %41, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2722 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %42 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  %46 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %46) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %14, 5
  %47 = sext i32 %add123 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call124 = call noalias i8* @_Znam(i64 %51) #8
  %52 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %51) #8
  %53 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %51) #8
  %54 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %51) #8
  %55 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %51) #8
  %56 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162741 = phi i32* [ %arraydecay154, %cond.true164 ], [ %55, %cond.false166 ]
  %cond140727729739 = phi i32* [ %arraydecay132, %cond.true164 ], [ %53, %cond.false166 ]
  %cond129723725731737 = phi i32* [ %arraydecay121, %cond.true164 ], [ %52, %cond.false166 ]
  %cond151733735 = phi i32* [ %arraydecay143, %cond.true164 ], [ %54, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %56, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %57 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %58 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %59 = load %class.Vector** %arrayidx177, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %60 = load %class.Vector** %arrayidx179, align 8, !tbaa !1
  %mul180 = mul nsw i32 %14, %13
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %61 = load i32* %minPart, align 4, !tbaa !50
  %mul181 = mul nsw i32 %61, %mul180
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %62 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul181, %62
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %63 = load i32* %maxPart, align 4, !tbaa !52
  %mul182 = mul nsw i32 %63, %mul180
  %div184 = sdiv i32 %mul182, %62
  %cmp186865 = icmp sgt i32 %13, 0
  br i1 %cmp186865, label %for.body187.lr.ph, label %for.end1130

for.body187.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i712 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast525 = ptrtoint i32* %cond140727729739 to i64
  %sub.ptr.rhs.cast562 = ptrtoint i32* %cond162741 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast576 = ptrtoint i32* %cond151733735 to i64
  %sub876 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30976979 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i32* %cond129723725731737 to i64
  br label %for.body187

for.body187:                                      ; preds = %for.inc1128, %for.body187.lr.ph
  %exclChecksum.0893 = phi i32 [ 0, %for.body187.lr.ph ], [ %exclChecksum.8, %for.inc1128 ]
  %i.1868 = phi i32 [ 0, %for.body187.lr.ph ], [ %inc1129, %for.inc1128 ]
  %pairlistindex.0867 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairlistindex.2, %for.inc1128 ]
  %pairCount.0866 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairCount.3, %for.inc1128 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %347, %for.inc1128 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %348, %for.inc1128 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %349, %for.inc1128 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %350, %for.inc1128 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %351, %for.inc1128 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %352, %for.inc1128 ]
  %idxprom188 = sext i32 %i.1868 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 2
  %70 = bitcast [4 x i8]* %id to i32*
  %bf.load190 = load i32* %70, align 4
  %bf.clear191 = and i32 %bf.load190, 4194303
  %idxprom.i743 = zext i32 %bf.clear191 to i64
  %71 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i743, i32 0
  %72 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i743, i32 1
  %73 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %71, i64 %idxprom.i743, i32 2
  %74 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %72 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 0
  %75 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 1
  %76 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 2
  %77 = load double* %z, align 8, !tbaa !62
  %arrayidx196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188
  %arrayidx198 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188
  %78 = and i32 %bf.load190, 62914560
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %if.end359, label %if.then210

if.then210:                                       ; preds = %for.body187
  %bf.lshr213 = lshr i32 %bf.load190, 22
  %bf.clear214 = and i32 %bf.lshr213, 7
  %tobool215 = icmp eq i32 %bf.clear214, 0
  br i1 %tobool215, label %if.end230, label %if.then216

if.then216:                                       ; preds = %if.then210
  %mul221 = mul nsw i32 %bf.clear214, %14
  %add222 = add nsw i32 %mul221, %pairCount.0866
  %cmp223 = icmp sge i32 %pairCount.0866, %div
  %cmp225 = icmp slt i32 %pairCount.0866, %div184
  %or.cond701 = and i1 %cmp223, %cmp225
  br i1 %or.cond701, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then216
  %sub227 = add i32 %i.1868, -1
  %add228 = add i32 %sub227, %bf.clear214
  br label %for.inc1128

if.end230:                                        ; preds = %if.then216, %if.then210
  %pairCount.1 = phi i32 [ %pairCount.0866, %if.then210 ], [ %add222, %if.then216 ]
  %80 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool231 = icmp eq i32 %80, 0
  br i1 %tobool231, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end230
  %bf.clear235 = and i32 %bf.load190, 134217728
  %tobool236 = icmp ne i32 %bf.clear235, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end230
  %81 = phi i1 [ false, %if.end230 ], [ %tobool236, %land.rhs ]
  %cond243 = select i1 %81, i32* %cond19719972981, i32* %cond715717974980
  %cond248 = select i1 %81, i32 %fixg.2722, i32 %g.0.lcssa982
  %cmp249 = icmp sgt i32 %cond248, 0
  br i1 %cmp249, label %if.then250, label %if.end329

if.then250:                                       ; preds = %land.end
  %82 = load i32* %cond243, align 4, !tbaa !11
  %idxprom253 = sext i32 %82 to i64
  %x256 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 0
  %83 = load double* %x256, align 8, !tbaa !59
  %y260 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 1
  %84 = load double* %y260, align 8, !tbaa !61
  %z264 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 2
  %85 = load double* %z264, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then290, %if.then250
  %p_j_z.0.ph = phi double [ %85, %if.then250 ], [ %91, %if.then290 ]
  %p_j_y.0.ph = phi double [ %84, %if.then250 ], [ %90, %if.then290 ]
  %p_j_x.0.ph = phi double [ %83, %if.then250 ], [ %89, %if.then290 ]
  %j2.0.ph = phi i32 [ %82, %if.then250 ], [ %88, %if.then290 ]
  %gli.0.ph = phi i32* [ %cond30976979, %if.then250 ], [ %incdec.ptr, %if.then290 ]
  %g.3.ph = phi i32 [ 0, %if.then250 ], [ %inc266, %if.then290 ]
  %86 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %86, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %91, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %90, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %89, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %88, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc266, %while.body ]
  %87 = trunc i64 %indvars.iv to i32
  %cmp265 = icmp slt i32 %87, %cond248
  br i1 %cmp265, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc266 = add nsw i32 %g.3, 1
  %arrayidx268 = getelementptr inbounds i32* %cond243, i64 %indvars.iv.next
  %88 = load i32* %arrayidx268, align 4, !tbaa !11
  %sub269 = fsub double %75, %p_j_x.0
  %mul270 = fmul double %sub269, %sub269
  %idxprom271 = sext i32 %88 to i64
  %x274 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 0
  %89 = load double* %x274, align 8, !tbaa !59
  %sub275 = fsub double %76, %p_j_y.0
  %mul276 = fmul double %sub275, %sub275
  %add277 = fadd double %mul276, %mul270
  %y281 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 1
  %90 = load double* %y281, align 8, !tbaa !61
  %sub282 = fsub double %77, %p_j_z.0
  %mul283 = fmul double %sub282, %sub282
  %add284 = fadd double %mul283, %add277
  %z288 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 2
  %91 = load double* %z288, align 8, !tbaa !62
  %cmp289 = fcmp ugt double %add284, %3
  br i1 %cmp289, label %while.cond, label %if.then290

if.then290:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div696 = lshr exact i64 %sub.ptr.sub, 2
  %conv292 = trunc i64 %sub.ptr.div696 to i32
  %cmp294754 = icmp sgt i32 %conv292, 0
  br i1 %cmp294754, label %for.body295.lr.ph, label %if.end329

for.body295.lr.ph:                                ; preds = %while.end
  %92 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %93 = lshr i64 %92, 2
  %94 = trunc i64 %93 to i32
  br label %for.body295

for.body295:                                      ; preds = %cond.end315, %for.body295.lr.ph
  %indvars.iv928 = phi i64 [ 0, %for.body295.lr.ph ], [ %indvars.iv.next929, %cond.end315 ]
  %pli.0756 = phi i32* [ %cond129723725731737, %for.body295.lr.ph ], [ %add.ptr325, %cond.end315 ]
  %arrayidx298 = getelementptr inbounds i32* %cond30976979, i64 %indvars.iv928
  %95 = load i32* %arrayidx298, align 4, !tbaa !11
  %idxprom300 = sext i32 %95 to i64
  %nonbondedGroupIsAtom302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom300, i32 2
  %96 = bitcast [4 x i8]* %nonbondedGroupIsAtom302 to i32*
  %bf.load303 = load i32* %96, align 4
  %bf.clear305 = and i32 %bf.load303, 33554432
  %tobool306 = icmp eq i32 %bf.clear305, 0
  br i1 %tobool306, label %cond.false308, label %cond.end315

cond.false308:                                    ; preds = %for.body295
  %bf.lshr313 = lshr i32 %bf.load303, 22
  %bf.clear314 = and i32 %bf.lshr313, 7
  %phitmp697698 = zext i32 %bf.clear314 to i64
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false308, %for.body295
  %cond316 = phi i64 [ %phitmp697698, %cond.false308 ], [ 1, %for.body295 ]
  store i32 %95, i32* %pli.0756, align 4, !tbaa !11
  %add318 = add nsw i32 %95, 1
  %arrayidx319 = getelementptr inbounds i32* %pli.0756, i64 1
  store i32 %add318, i32* %arrayidx319, align 4, !tbaa !11
  %add320 = add nsw i32 %95, 2
  %arrayidx321 = getelementptr inbounds i32* %pli.0756, i64 2
  store i32 %add320, i32* %arrayidx321, align 4, !tbaa !11
  %add322 = add nsw i32 %95, 3
  %arrayidx323 = getelementptr inbounds i32* %pli.0756, i64 3
  store i32 %add322, i32* %arrayidx323, align 4, !tbaa !11
  %add.ptr325 = getelementptr inbounds i32* %pli.0756, i64 %cond316
  %indvars.iv.next929 = add nuw nsw i64 %indvars.iv928, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next929 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %94
  br i1 %exitcond, label %if.end329, label %for.body295

if.end329:                                        ; preds = %cond.end315, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129723725731737, %land.end ], [ %cond129723725731737, %while.end ], [ %add.ptr325, %cond.end315 ]
  %sub.ptr.lhs.cast330 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %sub.ptr.div333693 = lshr exact i64 %sub.ptr.sub332, 2
  %conv334 = trunc i64 %sub.ptr.div333693 to i32
  %tobool335 = icmp eq i32 %conv334, 0
  br i1 %tobool335, label %if.else, label %if.then336

if.then336:                                       ; preds = %if.end329
  %sub337 = shl i64 %sub.ptr.sub332, 30
  %sext694 = add i64 %sub337, -4294967296
  %idxprom338 = ashr exact i64 %sext694, 32
  %arrayidx339 = getelementptr inbounds i32* %cond129723725731737, i64 %idxprom338
  %97 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom340 = ashr exact i64 %sub337, 32
  %arrayidx341 = getelementptr inbounds i32* %cond129723725731737, i64 %idxprom340
  store i32 %97, i32* %arrayidx341, align 4, !tbaa !11
  br label %if.end359

if.else:                                          ; preds = %if.end329
  %bf.load344 = load i32* %70, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end354

cond.false349:                                    ; preds = %if.else
  %bf.lshr352 = lshr i32 %bf.load344, 22
  %bf.clear353 = and i32 %bf.lshr352, 7
  %phitmp = add i32 %bf.clear353, -1
  br label %cond.end354

cond.end354:                                      ; preds = %cond.false349, %if.else
  %cond355 = phi i32 [ %phitmp, %cond.false349 ], [ 0, %if.else ]
  %add357 = add nsw i32 %cond355, %i.1868
  br label %for.inc1128

if.end359:                                        ; preds = %if.then336, %for.body187
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then336 ], [ %pairCount.0866, %for.body187 ]
  %pairlistindex.1 = phi i32 [ %conv334, %if.then336 ], [ %pairlistindex.0867, %for.body187 ]
  %98 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool360 = icmp eq i32 %98, 0
  %bf.load374.pre = load i32* %70, align 4
  br i1 %tobool360, label %land.end367, label %land.rhs361

land.rhs361:                                      ; preds = %if.end359
  %bf.clear365 = and i32 %bf.load374.pre, 67108864
  %tobool366 = icmp ne i32 %bf.clear365, 0
  br label %land.end367

land.end367:                                      ; preds = %land.rhs361, %if.end359
  %99 = phi i1 [ %tobool366, %land.rhs361 ], [ false, %if.end359 ]
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 1
  %100 = load float* %charge, align 4, !tbaa !63
  %conv369 = fpext float %100 to double
  %mul370 = fmul double %conv369, 3.320636e+02
  %mul371 = fmul double %9, %mul370
  %mul372 = fmul double %4, %mul371
  %bf.clear375 = and i32 %bf.load374.pre, 4194303
  %idxprom.i711744 = zext i32 %bf.clear375 to i64
  %101 = load i32** %atomVdwType.i712, align 8, !tbaa !64
  %arrayidx.i713 = getelementptr inbounds i32* %101, i64 %idxprom.i711744
  %102 = load i32* %arrayidx.i713, align 4, !tbaa !11
  %103 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %104 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv377 = shl i32 %102, 1
  %mul.i = and i32 %conv377, 131070
  %mul2.i = mul i32 %mul.i, %104
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp383781 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %99, label %for.cond382.preheader, label %if.else444

for.cond382.preheader:                            ; preds = %land.end367
  br i1 %cmp383781, label %for.body384, label %if.end523

for.body384:                                      ; preds = %for.inc441, %for.cond382.preheader
  %indvars.iv939 = phi i64 [ %indvars.iv.next940, %for.inc441 ], [ 0, %for.cond382.preheader ]
  %exclChecksum.1785 = phi i32 [ %exclChecksum.3, %for.inc441 ], [ %exclChecksum.0893, %for.cond382.preheader ]
  %pli379.0784 = phi i32* [ %pli379.1, %for.inc441 ], [ %cond140727729739, %for.cond382.preheader ]
  %plin.0783 = phi i32* [ %plin.1, %for.inc441 ], [ %cond151733735, %for.cond382.preheader ]
  %arrayidx386 = getelementptr inbounds i32* %cond129723725731737, i64 %indvars.iv939
  %105 = load i32* %arrayidx386, align 4, !tbaa !11
  %idxprom388 = sext i32 %105 to i64
  %x391 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 0
  %106 = load double* %x391, align 8, !tbaa !59
  %sub393 = fsub double %75, %106
  %mul394 = fmul double %sub393, %sub393
  %y399 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 1
  %107 = load double* %y399, align 8, !tbaa !61
  %sub401 = fsub double %76, %107
  %mul402 = fmul double %sub401, %sub401
  %add403 = fadd double %mul394, %mul402
  %z408 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 2
  %108 = load double* %z408, align 8, !tbaa !62
  %sub409 = fsub double %77, %108
  %mul410 = fmul double %sub409, %sub409
  %add411 = fadd double %add403, %mul410
  %atomFixed414 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 2
  %109 = bitcast [4 x i8]* %atomFixed414 to i32*
  %bf.load415 = load i32* %109, align 4
  %bf.clear417 = and i32 %bf.load415, 67108864
  %tobool418 = icmp ne i32 %bf.clear417, 0
  %cmp420 = fcmp ugt double %add411, %2
  %or.cond702 = or i1 %tobool418, %cmp420
  br i1 %or.cond702, label %for.inc441, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %for.body384
  %cmp422 = fcmp ugt double %add411, %11
  br i1 %cmp422, label %if.then426, label %land.lhs.true423

land.lhs.true423:                                 ; preds = %land.lhs.true421
  %inc424 = add nsw i32 %exclChecksum.1785, 1
  %tobool425 = icmp eq i32 %inc424, 0
  br i1 %tobool425, label %if.then426, label %for.inc441

if.then426:                                       ; preds = %land.lhs.true423, %land.lhs.true421
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true423 ], [ %exclChecksum.1785, %land.lhs.true421 ]
  %bf.clear431 = and i32 %bf.load415, 4194303
  %cmp432 = icmp slt i32 %bf.clear431, %72
  %cmp434 = icmp sgt i32 %bf.clear431, %73
  %or.cond703 = or i1 %cmp432, %cmp434
  br i1 %or.cond703, label %if.else437, label %if.then435

if.then435:                                       ; preds = %if.then426
  %incdec.ptr436 = getelementptr inbounds i32* %pli379.0784, i64 1
  store i32 %105, i32* %pli379.0784, align 4, !tbaa !11
  br label %for.inc441

if.else437:                                       ; preds = %if.then426
  %incdec.ptr438 = getelementptr inbounds i32* %plin.0783, i64 1
  store i32 %105, i32* %plin.0783, align 4, !tbaa !11
  br label %for.inc441

for.inc441:                                       ; preds = %if.else437, %if.then435, %land.lhs.true423, %for.body384
  %plin.1 = phi i32* [ %plin.0783, %for.body384 ], [ %plin.0783, %land.lhs.true423 ], [ %plin.0783, %if.then435 ], [ %incdec.ptr438, %if.else437 ]
  %pli379.1 = phi i32* [ %pli379.0784, %for.body384 ], [ %pli379.0784, %land.lhs.true423 ], [ %incdec.ptr436, %if.then435 ], [ %pli379.0784, %if.else437 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1785, %for.body384 ], [ %inc424, %land.lhs.true423 ], [ %exclChecksum.2, %if.then435 ], [ %exclChecksum.2, %if.else437 ]
  %indvars.iv.next940 = add nuw nsw i64 %indvars.iv939, 1
  %lftr.wideiv941 = trunc i64 %indvars.iv.next940 to i32
  %exitcond942 = icmp eq i32 %lftr.wideiv941, %pairlistindex.1
  br i1 %exitcond942, label %if.end523, label %for.body384

if.else444:                                       ; preds = %land.end367
  br i1 %cmp383781, label %if.then447, label %if.end523

if.then447:                                       ; preds = %if.else444
  %110 = load i32* %cond129723725731737, align 4, !tbaa !11
  %idxprom452 = sext i32 %110 to i64
  %x455 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 0
  %111 = load double* %x455, align 8, !tbaa !59
  %y460 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 1
  %112 = load double* %y460, align 8, !tbaa !61
  %z465 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 2
  %113 = load double* %z465, align 8, !tbaa !62
  br label %while.cond472.outer

while.cond472.outer:                              ; preds = %if.else512, %if.then447
  %idxprom452.pn.ph = phi i64 [ %idxprom452, %if.then447 ], [ %idxprom481, %if.else512 ]
  %p_j_z461.0.ph = phi double [ %113, %if.then447 ], [ %119, %if.else512 ]
  %p_j_y456.0.ph = phi double [ %112, %if.then447 ], [ %118, %if.else512 ]
  %p_j_x451.0.ph = phi double [ %111, %if.then447 ], [ %117, %if.else512 ]
  %j2448.0.ph = phi i32 [ %110, %if.then447 ], [ %116, %if.else512 ]
  %k445.0.ph = phi i32 [ 0, %if.then447 ], [ %inc475, %if.else512 ]
  %plin.2.ph = phi i32* [ %cond151733735, %if.then447 ], [ %incdec.ptr513, %if.else512 ]
  %pli379.2.ph = phi i32* [ %cond140727729739, %if.then447 ], [ %pli379.2.ph764, %if.else512 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0893, %if.then447 ], [ %exclChecksum.5, %if.else512 ]
  br label %while.cond472.outer757

while.cond472.outer757:                           ; preds = %if.then510, %while.cond472.outer
  %idxprom452.pn.ph758 = phi i64 [ %idxprom481, %if.then510 ], [ %idxprom452.pn.ph, %while.cond472.outer ]
  %p_j_z461.0.ph759 = phi double [ %119, %if.then510 ], [ %p_j_z461.0.ph, %while.cond472.outer ]
  %p_j_y456.0.ph760 = phi double [ %118, %if.then510 ], [ %p_j_y456.0.ph, %while.cond472.outer ]
  %p_j_x451.0.ph761 = phi double [ %117, %if.then510 ], [ %p_j_x451.0.ph, %while.cond472.outer ]
  %j2448.0.ph762 = phi i32 [ %116, %if.then510 ], [ %j2448.0.ph, %while.cond472.outer ]
  %k445.0.ph763 = phi i32 [ %inc475, %if.then510 ], [ %k445.0.ph, %while.cond472.outer ]
  %pli379.2.ph764 = phi i32* [ %incdec.ptr511, %if.then510 ], [ %pli379.2.ph, %while.cond472.outer ]
  %exclChecksum.4.ph765 = phi i32 [ %exclChecksum.5, %if.then510 ], [ %exclChecksum.4.ph, %while.cond472.outer ]
  br label %while.cond472.outer766

while.cond472.outer766:                           ; preds = %land.lhs.true503, %while.cond472.outer757
  %idxprom452.pn.ph767 = phi i64 [ %idxprom481, %land.lhs.true503 ], [ %idxprom452.pn.ph758, %while.cond472.outer757 ]
  %p_j_z461.0.ph768 = phi double [ %119, %land.lhs.true503 ], [ %p_j_z461.0.ph759, %while.cond472.outer757 ]
  %p_j_y456.0.ph769 = phi double [ %118, %land.lhs.true503 ], [ %p_j_y456.0.ph760, %while.cond472.outer757 ]
  %p_j_x451.0.ph770 = phi double [ %117, %land.lhs.true503 ], [ %p_j_x451.0.ph761, %while.cond472.outer757 ]
  %j2448.0.ph771 = phi i32 [ %116, %land.lhs.true503 ], [ %j2448.0.ph762, %while.cond472.outer757 ]
  %k445.0.ph772 = phi i32 [ %inc475, %land.lhs.true503 ], [ %k445.0.ph763, %while.cond472.outer757 ]
  %exclChecksum.4.ph773 = phi i32 [ %inc504, %land.lhs.true503 ], [ %exclChecksum.4.ph765, %while.cond472.outer757 ]
  %114 = sext i32 %k445.0.ph772 to i64
  br label %while.cond472

while.cond472:                                    ; preds = %while.body474, %while.cond472.outer766
  %indvars.iv935 = phi i64 [ %114, %while.cond472.outer766 ], [ %indvars.iv.next936, %while.body474 ]
  %idxprom452.pn = phi i64 [ %idxprom452.pn.ph767, %while.cond472.outer766 ], [ %idxprom481, %while.body474 ]
  %p_j_z461.0 = phi double [ %p_j_z461.0.ph768, %while.cond472.outer766 ], [ %119, %while.body474 ]
  %p_j_y456.0 = phi double [ %p_j_y456.0.ph769, %while.cond472.outer766 ], [ %118, %while.body474 ]
  %p_j_x451.0 = phi double [ %p_j_x451.0.ph770, %while.cond472.outer766 ], [ %117, %while.body474 ]
  %j2448.0 = phi i32 [ %j2448.0.ph771, %while.cond472.outer766 ], [ %116, %while.body474 ]
  %k445.0 = phi i32 [ %k445.0.ph772, %while.cond472.outer766 ], [ %inc475, %while.body474 ]
  %115 = trunc i64 %indvars.iv935 to i32
  %cmp473 = icmp slt i32 %115, %pairlistindex.1
  br i1 %cmp473, label %while.body474, label %if.end523

while.body474:                                    ; preds = %while.cond472
  %atom2466.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452.pn, i32 2
  %atom2466.0.in.in = bitcast [4 x i8]* %atom2466.0.in.in.in to i32*
  %atom2466.0.in = load i32* %atom2466.0.in.in, align 4
  %atom2466.0 = and i32 %atom2466.0.in, 4194303
  %indvars.iv.next936 = add nsw i64 %indvars.iv935, 1
  %inc475 = add nsw i32 %k445.0, 1
  %arrayidx477 = getelementptr inbounds i32* %cond129723725731737, i64 %indvars.iv.next936
  %116 = load i32* %arrayidx477, align 4, !tbaa !11
  %sub479 = fsub double %75, %p_j_x451.0
  %mul480 = fmul double %sub479, %sub479
  %idxprom481 = sext i32 %116 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 0
  %117 = load double* %x484, align 8, !tbaa !59
  %sub486 = fsub double %76, %p_j_y456.0
  %mul487 = fmul double %sub486, %sub486
  %add488 = fadd double %mul487, %mul480
  %y492 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 1
  %118 = load double* %y492, align 8, !tbaa !61
  %sub493 = fsub double %77, %p_j_z461.0
  %mul494 = fmul double %sub493, %sub493
  %add495 = fadd double %mul494, %add488
  %z499 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 2
  %119 = load double* %z499, align 8, !tbaa !62
  %cmp500 = fcmp ugt double %add495, %2
  br i1 %cmp500, label %while.cond472, label %land.lhs.true501

land.lhs.true501:                                 ; preds = %while.body474
  %cmp502 = fcmp ugt double %add495, %11
  br i1 %cmp502, label %if.then506, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true501
  %inc504 = add nsw i32 %exclChecksum.4.ph773, 1
  %tobool505 = icmp eq i32 %inc504, 0
  br i1 %tobool505, label %if.then506, label %while.cond472.outer766

if.then506:                                       ; preds = %land.lhs.true503, %land.lhs.true501
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true503 ], [ %exclChecksum.4.ph773, %land.lhs.true501 ]
  %cmp507 = icmp slt i32 %atom2466.0, %72
  %cmp509 = icmp sgt i32 %atom2466.0, %73
  %or.cond704 = or i1 %cmp507, %cmp509
  br i1 %or.cond704, label %if.else512, label %if.then510

if.then510:                                       ; preds = %if.then506
  %incdec.ptr511 = getelementptr inbounds i32* %pli379.2.ph764, i64 1
  store i32 %j2448.0, i32* %pli379.2.ph764, align 4, !tbaa !11
  br label %while.cond472.outer757

if.else512:                                       ; preds = %if.then506
  %incdec.ptr513 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2448.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond472.outer

if.end523:                                        ; preds = %while.cond472, %if.else444, %for.inc441, %for.cond382.preheader
  %plin.4 = phi i32* [ %cond151733735, %if.else444 ], [ %cond151733735, %for.cond382.preheader ], [ %plin.2.ph, %while.cond472 ], [ %plin.1, %for.inc441 ]
  %pli379.4 = phi i32* [ %cond140727729739, %if.else444 ], [ %cond140727729739, %for.cond382.preheader ], [ %pli379.2.ph764, %while.cond472 ], [ %pli379.1, %for.inc441 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0893, %if.else444 ], [ %exclChecksum.0893, %for.cond382.preheader ], [ %exclChecksum.4.ph773, %while.cond472 ], [ %exclChecksum.3, %for.inc441 ]
  %sub.ptr.lhs.cast524 = ptrtoint i32* %pli379.4 to i64
  %sub.ptr.sub526 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %sub.ptr.div527642 = lshr exact i64 %sub.ptr.sub526, 2
  %conv528 = trunc i64 %sub.ptr.div527642 to i32
  %tobool529 = icmp eq i32 %conv528, 0
  br i1 %tobool529, label %for.end560, label %for.cond538.preheader

for.cond538.preheader:                            ; preds = %if.end523
  %sub531 = shl i64 %sub.ptr.sub526, 30
  %sext691 = add i64 %sub531, -4294967296
  %idxprom532 = ashr exact i64 %sext691, 32
  %arrayidx533 = getelementptr inbounds i32* %cond140727729739, i64 %idxprom532
  %120 = load i32* %arrayidx533, align 4, !tbaa !11
  %idxprom534 = ashr exact i64 %sub531, 32
  %arrayidx535 = getelementptr inbounds i32* %cond140727729739, i64 %idxprom534
  store i32 %120, i32* %arrayidx535, align 4, !tbaa !11
  %cmp539789 = icmp sgt i32 %conv528, 0
  br i1 %cmp539789, label %for.body540.lr.ph, label %for.end560

for.body540.lr.ph:                                ; preds = %for.cond538.preheader
  %121 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %122 = lshr i64 %121, 2
  %123 = trunc i64 %122 to i32
  br label %for.body540

for.body540:                                      ; preds = %for.inc558, %for.body540.lr.ph
  %indvars.iv943 = phi i64 [ 0, %for.body540.lr.ph ], [ %indvars.iv.next944, %for.inc558 ]
  %plin.5793 = phi i32* [ %plin.4, %for.body540.lr.ph ], [ %plin.6, %for.inc558 ]
  %plix.0792 = phi i32* [ %cond162741, %for.body540.lr.ph ], [ %plix.1, %for.inc558 ]
  %plim.0791 = phi i32* [ %cond173, %for.body540.lr.ph ], [ %plim.1, %for.inc558 ]
  %arrayidx543 = getelementptr inbounds i32* %cond140727729739, i64 %indvars.iv943
  %124 = load i32* %arrayidx543, align 4, !tbaa !11
  %idxprom545 = sext i32 %124 to i64
  %id547 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom545, i32 2
  %125 = bitcast [4 x i8]* %id547 to i32*
  %bf.load548 = load i32* %125, align 4
  %bf.clear549 = and i32 %bf.load548, 4194303
  %idxprom550690 = zext i32 %bf.clear549 to i64
  %add.ptr.sum = sub i64 %idxprom550690, %idx.ext
  %arrayidx551 = getelementptr inbounds i8* %74, i64 %add.ptr.sum
  %126 = load i8* %arrayidx551, align 1, !tbaa !68
  %conv552 = sext i8 %126 to i32
  switch i32 %conv552, label %for.inc558 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb554
    i32 2, label %sw.bb556
  ]

sw.bb:                                            ; preds = %for.body540
  %incdec.ptr553 = getelementptr inbounds i32* %plin.5793, i64 1
  store i32 %124, i32* %plin.5793, align 4, !tbaa !11
  br label %for.inc558

sw.bb554:                                         ; preds = %for.body540
  %incdec.ptr555 = getelementptr inbounds i32* %plix.0792, i64 1
  store i32 %124, i32* %plix.0792, align 4, !tbaa !11
  br label %for.inc558

sw.bb556:                                         ; preds = %for.body540
  %incdec.ptr557 = getelementptr inbounds i32* %plim.0791, i64 1
  store i32 %124, i32* %plim.0791, align 4, !tbaa !11
  br label %for.inc558

for.inc558:                                       ; preds = %sw.bb556, %sw.bb554, %sw.bb, %for.body540
  %plim.1 = phi i32* [ %plim.0791, %for.body540 ], [ %incdec.ptr557, %sw.bb556 ], [ %plim.0791, %sw.bb554 ], [ %plim.0791, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0792, %for.body540 ], [ %plix.0792, %sw.bb556 ], [ %incdec.ptr555, %sw.bb554 ], [ %plix.0792, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5793, %for.body540 ], [ %plin.5793, %sw.bb556 ], [ %plin.5793, %sw.bb554 ], [ %incdec.ptr553, %sw.bb ]
  %indvars.iv.next944 = add nuw nsw i64 %indvars.iv943, 1
  %lftr.wideiv945 = trunc i64 %indvars.iv.next944 to i32
  %exitcond946 = icmp eq i32 %lftr.wideiv945, %123
  br i1 %exitcond946, label %for.end560, label %for.body540

for.end560:                                       ; preds = %for.inc558, %for.cond538.preheader, %if.end523
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond538.preheader ], [ %plin.4, %if.end523 ], [ %plin.6, %for.inc558 ]
  %plix.0.lcssa = phi i32* [ %cond162741, %for.cond538.preheader ], [ %cond162741, %if.end523 ], [ %plix.1, %for.inc558 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond538.preheader ], [ %cond173, %if.end523 ], [ %plim.1, %for.inc558 ]
  %sub.ptr.lhs.cast561 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub563 = sub i64 %sub.ptr.lhs.cast561, %sub.ptr.rhs.cast562
  %sub.ptr.div564 = ashr exact i64 %sub.ptr.sub563, 2
  %conv565643 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast568 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %sub.ptr.div571 = ashr exact i64 %sub.ptr.sub570, 2
  %add566 = add i64 %sub.ptr.div571, %conv565643
  %add573 = add i64 %add566, %sub.ptr.div564
  %conv574 = trunc i64 %add573 to i32
  %sub.ptr.lhs.cast575 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %sub.ptr.div578645 = lshr exact i64 %sub.ptr.sub577, 2
  %conv579 = trunc i64 %sub.ptr.div578645 to i32
  %cmp581797 = icmp sgt i32 %conv579, 0
  br i1 %cmp581797, label %for.body582.lr.ph, label %for.end760

for.body582.lr.ph:                                ; preds = %for.end560
  %x692 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y701 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z708 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x736 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y746 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z754 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %127 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %128 = lshr i64 %127, 2
  %129 = trunc i64 %128 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.body582.for.body582_crit_edge, %for.body582.lr.ph
  %130 = phi i32* [ %101, %for.body582.lr.ph ], [ %.pre, %for.body582.for.body582_crit_edge ]
  %indvars.iv947 = phi i64 [ 0, %for.body582.lr.ph ], [ %indvars.iv.next948, %for.body582.for.body582_crit_edge ]
  %131 = phi <2 x double> [ %64, %for.body582.lr.ph ], [ %162, %for.body582.for.body582_crit_edge ]
  %132 = phi <2 x double> [ %65, %for.body582.lr.ph ], [ %169, %for.body582.for.body582_crit_edge ]
  %133 = phi <2 x double> [ %66, %for.body582.lr.ph ], [ %186, %for.body582.for.body582_crit_edge ]
  %134 = phi <2 x double> [ %67, %for.body582.lr.ph ], [ %190, %for.body582.for.body582_crit_edge ]
  %135 = phi <2 x double> [ %68, %for.body582.lr.ph ], [ %195, %for.body582.for.body582_crit_edge ]
  %136 = phi <2 x double> [ %69, %for.body582.lr.ph ], [ %206, %for.body582.for.body582_crit_edge ]
  %arrayidx585 = getelementptr inbounds i32* %cond151733735, i64 %indvars.iv947
  %137 = load i32* %arrayidx585, align 4, !tbaa !11
  %idx.ext586 = sext i32 %137 to i64
  %x589 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 0
  %138 = load double* %x589, align 8, !tbaa !59
  %sub590 = fsub double %75, %138
  %mul592 = fmul double %sub590, %sub590
  %y594 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 1
  %139 = load double* %y594, align 8, !tbaa !61
  %sub595 = fsub double %76, %139
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %mul592, %mul596
  %z599 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 2
  %140 = load double* %z599, align 8, !tbaa !62
  %sub600 = fsub double %77, %140
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %add597, %mul601
  %conv603 = fptrunc double %add602 to float
  %141 = bitcast float %conv603 to i32
  %shr = ashr i32 %141, 17
  %add605 = add nsw i32 %shr, %mul
  %id606 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 2
  %142 = bitcast [4 x i8]* %id606 to i32*
  %bf.load607 = load i32* %142, align 4
  %bf.clear608 = and i32 %bf.load607, 4194303
  %idxprom.i707747 = zext i32 %bf.clear608 to i64
  %arrayidx.i709 = getelementptr inbounds i32* %130, i64 %idxprom.i707747
  %143 = load i32* %arrayidx.i709, align 4, !tbaa !11
  %conv.i710 = zext i32 %143 to i64
  %conv610 = shl nuw nsw i64 %conv.i710, 1
  %mul611 = and i64 %conv610, 131070
  %mul614 = shl nsw i32 %add605, 4
  %idx.ext615 = sext i32 %mul614 to i64
  %and = and i32 %141, -131072
  %charge635 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 1
  %144 = load float* %charge635, align 4, !tbaa !63
  %conv636 = fpext float %144 to double
  %mul637 = fmul double %mul372, %conv636
  %145 = bitcast i32 %and to float
  %conv639 = fpext float %145 to double
  %sub640 = fsub double %add602, %conv639
  %add.ptr.i.sum748 = add i64 %mul611, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %103, i64 %add.ptr.i.sum748, i32 0
  %146 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %9, %146
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %103, i64 %add.ptr.i.sum748, i32 1
  %147 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %9, %147
  %add.ptr616.sum678 = or i64 %idx.ext615, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr616.sum678
  %148 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %148
  %add.ptr621.sum679 = or i64 %idx.ext615, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr621.sum679
  %149 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %149
  %sub654 = fsub double %mul651, %mul653
  %add.ptr616.sum680 = or i64 %idx.ext615, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr616.sum680
  %150 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %150
  %add.ptr621.sum681 = or i64 %idx.ext615, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr621.sum681
  %151 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %151
  %sub659 = fsub double %mul656, %mul658
  %add.ptr616.sum682 = or i64 %idx.ext615, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr616.sum682
  %152 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %152
  %add.ptr621.sum683 = or i64 %idx.ext615, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr621.sum683
  %153 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %153
  %sub664 = fsub double %mul661, %mul663
  %add.ptr626.sum684 = or i64 %idx.ext615, 11
  %arrayidx666 = getelementptr inbounds double* %7, i64 %add.ptr626.sum684
  %154 = load double* %arrayidx666, align 8, !tbaa !17
  %mul667 = fmul double %mul637, %154
  %add.ptr626.sum685 = or i64 %idx.ext615, 10
  %arrayidx668 = getelementptr inbounds double* %7, i64 %add.ptr626.sum685
  %155 = load double* %arrayidx668, align 8, !tbaa !17
  %mul669 = fmul double %mul637, %155
  %add.ptr626.sum686 = or i64 %idx.ext615, 9
  %arrayidx670 = getelementptr inbounds double* %7, i64 %add.ptr626.sum686
  %156 = load double* %arrayidx670, align 8, !tbaa !17
  %mul671 = fmul double %mul637, %156
  %add672 = fadd double %sub654, %mul667
  %add673 = fadd double %sub659, %mul669
  %add674 = fadd double %sub664, %mul671
  %mul676 = fmul double %sub640, 3.000000e+00
  %mul677 = fmul double %mul676, %add672
  %mul678 = fmul double %add673, 2.000000e+00
  %add679 = fadd double %mul677, %mul678
  %mul680 = fmul double %sub640, %add679
  %add681 = fadd double %add674, %mul680
  %mul682 = fmul double %add681, -2.000000e+00
  %mul685 = fmul double %sub590, %mul682
  %157 = insertelement <2 x double> undef, double %sub590, i32 0
  %158 = insertelement <2 x double> %157, double %sub595, i32 1
  %159 = insertelement <2 x double> undef, double %mul685, i32 0
  %160 = insertelement <2 x double> %159, double %mul685, i32 1
  %161 = fmul <2 x double> %158, %160
  %162 = fadd <2 x double> %131, %161
  %163 = load double* %x692, align 8, !tbaa !72
  %add693 = fadd double %163, %mul685
  store double %add693, double* %x692, align 8, !tbaa !72
  %x694 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext586, i32 0
  %mul696 = fmul double %sub595, %mul682
  %164 = insertelement <2 x double> undef, double %sub595, i32 0
  %165 = insertelement <2 x double> %164, double %sub600, i32 1
  %166 = insertelement <2 x double> undef, double %mul696, i32 0
  %167 = insertelement <2 x double> %166, double %mul696, i32 1
  %168 = fmul <2 x double> %165, %167
  %169 = fadd <2 x double> %132, %168
  %170 = load double* %y701, align 8, !tbaa !73
  %add702 = fadd double %170, %mul696
  store double %add702, double* %y701, align 8, !tbaa !73
  %171 = bitcast double* %x694 to <2 x double>*
  %172 = load <2 x double>* %171, align 8, !tbaa !17
  %173 = insertelement <2 x double> %159, double %mul696, i32 1
  %174 = fsub <2 x double> %172, %173
  %175 = bitcast double* %x694 to <2 x double>*
  store <2 x double> %174, <2 x double>* %175, align 8, !tbaa !17
  %mul705 = fmul double %sub600, %mul682
  %176 = load double* %z708, align 8, !tbaa !74
  %add709 = fadd double %176, %mul705
  store double %add709, double* %z708, align 8, !tbaa !74
  %z710 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext586, i32 2
  %177 = load double* %z710, align 8, !tbaa !74
  %sub711 = fsub double %177, %mul705
  store double %sub711, double* %z710, align 8, !tbaa !74
  %add.ptr632.sum687 = or i64 %idx.ext615, 13
  %arrayidx712 = getelementptr inbounds double* %7, i64 %add.ptr632.sum687
  %178 = load double* %arrayidx712, align 8, !tbaa !17
  %add.ptr632.sum688 = or i64 %idx.ext615, 14
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr632.sum688
  %179 = load double* %arrayidx713, align 8, !tbaa !17
  %add.ptr632.sum689 = or i64 %idx.ext615, 15
  %arrayidx714 = getelementptr inbounds double* %7, i64 %add.ptr632.sum689
  %180 = load double* %arrayidx714, align 8, !tbaa !17
  %mul715 = fmul double %mul637, %180
  %mul716 = fmul double %mul637, %179
  %mul717 = fmul double %mul637, %178
  %mul720 = fmul double %mul676, %mul715
  %mul721 = fmul double %mul716, 2.000000e+00
  %add722 = fadd double %mul721, %mul720
  %mul723 = fmul double %sub640, %add722
  %add724 = fadd double %mul717, %mul723
  %mul725 = fmul double %add724, -2.000000e+00
  %mul729 = fmul double %sub590, %mul725
  %181 = insertelement <2 x double> undef, double %sub600, i32 0
  %182 = insertelement <2 x double> %181, double %sub590, i32 1
  %183 = insertelement <2 x double> undef, double %mul705, i32 0
  %184 = insertelement <2 x double> %183, double %mul729, i32 1
  %185 = fmul <2 x double> %182, %184
  %186 = fadd <2 x double> %133, %185
  %187 = insertelement <2 x double> undef, double %mul729, i32 0
  %188 = insertelement <2 x double> %187, double %mul729, i32 1
  %189 = fmul <2 x double> %165, %188
  %190 = fadd <2 x double> %134, %189
  %191 = load double* %x736, align 8, !tbaa !72
  %add737 = fadd double %191, %mul729
  store double %add737, double* %x736, align 8, !tbaa !72
  %x738 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext586, i32 0
  %mul741 = fmul double %sub595, %mul725
  %192 = insertelement <2 x double> %181, double %sub595, i32 1
  %193 = insertelement <2 x double> %159, double %mul741, i32 1
  %194 = fmul <2 x double> %192, %193
  %195 = fadd <2 x double> %135, %194
  %196 = load double* %y746, align 8, !tbaa !73
  %add747 = fadd double %196, %mul741
  store double %add747, double* %y746, align 8, !tbaa !73
  %197 = bitcast double* %x738 to <2 x double>*
  %198 = load <2 x double>* %197, align 8, !tbaa !17
  %199 = insertelement <2 x double> %187, double %mul741, i32 1
  %200 = fsub <2 x double> %198, %199
  %201 = bitcast double* %x738 to <2 x double>*
  store <2 x double> %200, <2 x double>* %201, align 8, !tbaa !17
  %mul751 = fmul double %sub600, %mul725
  %202 = insertelement <2 x double> %181, double %sub600, i32 1
  %203 = insertelement <2 x double> undef, double %mul741, i32 0
  %204 = insertelement <2 x double> %203, double %mul751, i32 1
  %205 = fmul <2 x double> %202, %204
  %206 = fadd <2 x double> %136, %205
  %207 = load double* %z754, align 8, !tbaa !74
  %add755 = fadd double %207, %mul751
  store double %add755, double* %z754, align 8, !tbaa !74
  %z756 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext586, i32 2
  %208 = load double* %z756, align 8, !tbaa !74
  %sub757 = fsub double %208, %mul751
  store double %sub757, double* %z756, align 8, !tbaa !74
  %indvars.iv.next948 = add nuw nsw i64 %indvars.iv947, 1
  %lftr.wideiv949 = trunc i64 %indvars.iv.next948 to i32
  %exitcond950 = icmp eq i32 %lftr.wideiv949, %129
  br i1 %exitcond950, label %for.end760, label %for.body582.for.body582_crit_edge

for.body582.for.body582_crit_edge:                ; preds = %for.body582
  %.pre = load i32** %atomVdwType.i712, align 8, !tbaa !64
  br label %for.body582

for.end760:                                       ; preds = %for.body582, %for.end560
  %209 = phi <2 x double> [ %64, %for.end560 ], [ %162, %for.body582 ]
  %210 = phi <2 x double> [ %65, %for.end560 ], [ %169, %for.body582 ]
  %211 = phi <2 x double> [ %66, %for.end560 ], [ %186, %for.body582 ]
  %212 = phi <2 x double> [ %67, %for.end560 ], [ %190, %for.body582 ]
  %213 = phi <2 x double> [ %68, %for.end560 ], [ %195, %for.body582 ]
  %214 = phi <2 x double> [ %69, %for.end560 ], [ %206, %for.body582 ]
  %conv765 = trunc i64 %sub.ptr.div571 to i32
  %cmp767823 = icmp sgt i32 %conv765, 0
  br i1 %cmp767823, label %for.body768.lr.ph, label %for.end1003

for.body768.lr.ph:                                ; preds = %for.end760
  %x912 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y922 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z930 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x979 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y989 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z997 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  br label %for.body768

for.body768:                                      ; preds = %for.body768, %for.body768.lr.ph
  %indvars.iv951 = phi i64 [ 0, %for.body768.lr.ph ], [ %indvars.iv.next952, %for.body768 ]
  %215 = phi <2 x double> [ %209, %for.body768.lr.ph ], [ %247, %for.body768 ]
  %216 = phi <2 x double> [ %210, %for.body768.lr.ph ], [ %254, %for.body768 ]
  %217 = phi <2 x double> [ %211, %for.body768.lr.ph ], [ %274, %for.body768 ]
  %218 = phi <2 x double> [ %212, %for.body768.lr.ph ], [ %278, %for.body768 ]
  %219 = phi <2 x double> [ %213, %for.body768.lr.ph ], [ %283, %for.body768 ]
  %220 = phi <2 x double> [ %214, %for.body768.lr.ph ], [ %294, %for.body768 ]
  %arrayidx771 = getelementptr inbounds i32* %cond173, i64 %indvars.iv951
  %221 = load i32* %arrayidx771, align 4, !tbaa !11
  %idx.ext773 = sext i32 %221 to i64
  %x777 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext773, i32 0, i32 0
  %222 = load double* %x777, align 8, !tbaa !59
  %sub778 = fsub double %75, %222
  %mul780 = fmul double %sub778, %sub778
  %y783 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext773, i32 0, i32 1
  %223 = load double* %y783, align 8, !tbaa !61
  %sub784 = fsub double %76, %223
  %mul785 = fmul double %sub784, %sub784
  %add786 = fadd double %mul780, %mul785
  %z789 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext773, i32 0, i32 2
  %224 = load double* %z789, align 8, !tbaa !62
  %sub790 = fsub double %77, %224
  %mul791 = fmul double %sub790, %sub790
  %add792 = fadd double %add786, %mul791
  %conv794 = fptrunc double %add792 to float
  %225 = bitcast float %conv794 to i32
  %shr798 = ashr i32 %225, 17
  %add799 = add nsw i32 %shr798, %mul
  %id801 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext773, i32 2
  %226 = bitcast [4 x i8]* %id801 to i32*
  %bf.load802 = load i32* %226, align 4
  %bf.clear803 = and i32 %bf.load802, 4194303
  %idxprom.i705745 = zext i32 %bf.clear803 to i64
  %227 = load i32** %atomVdwType.i712, align 8, !tbaa !64
  %arrayidx.i706 = getelementptr inbounds i32* %227, i64 %idxprom.i705745
  %228 = load i32* %arrayidx.i706, align 4, !tbaa !11
  %conv.i = zext i32 %228 to i64
  %conv805 = shl nuw nsw i64 %conv.i, 1
  %mul806 = and i64 %conv805, 131070
  %add.ptr808.sum655 = or i64 %mul806, 1
  %mul811 = shl nsw i32 %add799, 4
  %idx.ext812 = sext i32 %mul811 to i64
  %and839 = and i32 %225, -131072
  %charge841 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext773, i32 1
  %229 = load float* %charge841, align 4, !tbaa !63
  %conv842 = fpext float %229 to double
  %mul843 = fmul double %mul372, %conv842
  %230 = bitcast i32 %and839 to float
  %conv846 = fpext float %230 to double
  %sub847 = fsub double %add792, %conv846
  %add.ptr.i.sum = add i64 %add.ptr808.sum655, %idx.ext.i
  %A849 = getelementptr inbounds %"struct.LJTable::TableEntry"* %103, i64 %add.ptr.i.sum, i32 0
  %231 = load double* %A849, align 8, !tbaa !69
  %mul850 = fmul double %9, %231
  %B852 = getelementptr inbounds %"struct.LJTable::TableEntry"* %103, i64 %add.ptr.i.sum, i32 1
  %232 = load double* %B852, align 8, !tbaa !71
  %mul853 = fmul double %9, %232
  %add.ptr813.sum659 = or i64 %idx.ext812, 3
  %arrayidx859 = getelementptr inbounds double* %7, i64 %add.ptr813.sum659
  %233 = load double* %arrayidx859, align 8, !tbaa !17
  %mul860 = fmul double %mul850, %233
  %add.ptr820.sum660 = or i64 %idx.ext812, 7
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr820.sum660
  %234 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul853, %234
  %sub863 = fsub double %mul860, %mul862
  %add.ptr813.sum661 = or i64 %idx.ext812, 2
  %arrayidx865 = getelementptr inbounds double* %7, i64 %add.ptr813.sum661
  %235 = load double* %arrayidx865, align 8, !tbaa !17
  %mul866 = fmul double %mul850, %235
  %add.ptr820.sum662 = or i64 %idx.ext812, 6
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr820.sum662
  %236 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %mul853, %236
  %sub869 = fsub double %mul866, %mul868
  %add.ptr813.sum663 = or i64 %idx.ext812, 1
  %arrayidx871 = getelementptr inbounds double* %7, i64 %add.ptr813.sum663
  %237 = load double* %arrayidx871, align 8, !tbaa !17
  %mul872 = fmul double %mul850, %237
  %add.ptr820.sum664 = or i64 %idx.ext812, 5
  %arrayidx873 = getelementptr inbounds double* %7, i64 %add.ptr820.sum664
  %238 = load double* %arrayidx873, align 8, !tbaa !17
  %mul874 = fmul double %mul853, %238
  %sub875 = fsub double %mul872, %mul874
  %mul877 = fmul double %sub876, %mul843
  %add.ptr827.sum665 = or i64 %idx.ext812, 11
  %arrayidx880 = getelementptr inbounds double* %7, i64 %add.ptr827.sum665
  %239 = load double* %arrayidx880, align 8, !tbaa !17
  %mul881 = fmul double %mul877, %239
  %add.ptr827.sum666 = or i64 %idx.ext812, 10
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr827.sum666
  %240 = load double* %arrayidx883, align 8, !tbaa !17
  %mul884 = fmul double %mul877, %240
  %add.ptr827.sum667 = or i64 %idx.ext812, 9
  %arrayidx886 = getelementptr inbounds double* %7, i64 %add.ptr827.sum667
  %241 = load double* %arrayidx886, align 8, !tbaa !17
  %mul887 = fmul double %mul877, %241
  %add888 = fadd double %sub863, %mul881
  %add889 = fadd double %sub869, %mul884
  %add890 = fadd double %sub875, %mul887
  %mul893 = fmul double %sub847, 3.000000e+00
  %mul894 = fmul double %mul893, %add888
  %mul895 = fmul double %add889, 2.000000e+00
  %add896 = fadd double %mul894, %mul895
  %mul897 = fmul double %sub847, %add896
  %add898 = fadd double %add890, %mul897
  %mul900 = fmul double %add898, -2.000000e+00
  %mul905 = fmul double %sub778, %mul900
  %242 = insertelement <2 x double> undef, double %sub778, i32 0
  %243 = insertelement <2 x double> %242, double %sub784, i32 1
  %244 = insertelement <2 x double> undef, double %mul905, i32 0
  %245 = insertelement <2 x double> %244, double %mul905, i32 1
  %246 = fmul <2 x double> %243, %245
  %247 = fadd <2 x double> %215, %246
  %248 = load double* %x912, align 8, !tbaa !72
  %add913 = fadd double %248, %mul905
  store double %add913, double* %x912, align 8, !tbaa !72
  %x914 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext773, i32 0
  %mul917 = fmul double %sub784, %mul900
  %249 = insertelement <2 x double> undef, double %sub784, i32 0
  %250 = insertelement <2 x double> %249, double %sub790, i32 1
  %251 = insertelement <2 x double> undef, double %mul917, i32 0
  %252 = insertelement <2 x double> %251, double %mul917, i32 1
  %253 = fmul <2 x double> %250, %252
  %254 = fadd <2 x double> %216, %253
  %255 = load double* %y922, align 8, !tbaa !73
  %add923 = fadd double %255, %mul917
  store double %add923, double* %y922, align 8, !tbaa !73
  %256 = bitcast double* %x914 to <2 x double>*
  %257 = load <2 x double>* %256, align 8, !tbaa !17
  %258 = insertelement <2 x double> %244, double %mul917, i32 1
  %259 = fsub <2 x double> %257, %258
  %260 = bitcast double* %x914 to <2 x double>*
  store <2 x double> %259, <2 x double>* %260, align 8, !tbaa !17
  %mul927 = fmul double %sub790, %mul900
  %261 = load double* %z930, align 8, !tbaa !74
  %add931 = fadd double %261, %mul927
  store double %add931, double* %z930, align 8, !tbaa !74
  %z932 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext773, i32 2
  %262 = load double* %z932, align 8, !tbaa !74
  %sub933 = fsub double %262, %mul927
  store double %sub933, double* %z932, align 8, !tbaa !74
  %add.ptr835.sum668 = or i64 %idx.ext812, 13
  %arrayidx935 = getelementptr inbounds double* %7, i64 %add.ptr835.sum668
  %263 = load double* %arrayidx935, align 8, !tbaa !17
  %add.ptr835.sum669 = or i64 %idx.ext812, 14
  %arrayidx937 = getelementptr inbounds double* %7, i64 %add.ptr835.sum669
  %264 = load double* %arrayidx937, align 8, !tbaa !17
  %add.ptr835.sum670 = or i64 %idx.ext812, 15
  %arrayidx939 = getelementptr inbounds double* %7, i64 %add.ptr835.sum670
  %265 = load double* %arrayidx939, align 8, !tbaa !17
  %mul940 = shl nsw i32 %add799, 2
  %idx.ext941 = sext i32 %mul940 to i64
  %add.ptr942.sum671 = or i64 %idx.ext941, 1
  %arrayidx946 = getelementptr inbounds double* %8, i64 %add.ptr942.sum671
  %266 = load double* %arrayidx946, align 8, !tbaa !17
  %mul947 = fmul double %sub, %266
  %sub948 = fsub double %263, %mul947
  %add.ptr942.sum672 = or i64 %idx.ext941, 2
  %arrayidx949 = getelementptr inbounds double* %8, i64 %add.ptr942.sum672
  %267 = load double* %arrayidx949, align 8, !tbaa !17
  %mul950 = fmul double %sub, %267
  %sub951 = fsub double %264, %mul950
  %add.ptr942.sum673 = or i64 %idx.ext941, 3
  %arrayidx952 = getelementptr inbounds double* %8, i64 %add.ptr942.sum673
  %268 = load double* %arrayidx952, align 8, !tbaa !17
  %mul953 = fmul double %sub, %268
  %sub954 = fsub double %265, %mul953
  %mul955 = fmul double %mul843, %sub954
  %mul956 = fmul double %mul843, %sub951
  %mul957 = fmul double %mul843, %sub948
  %mul961 = fmul double %mul893, %mul955
  %mul962 = fmul double %mul956, 2.000000e+00
  %add963 = fadd double %mul962, %mul961
  %mul964 = fmul double %sub847, %add963
  %add965 = fadd double %mul957, %mul964
  %mul967 = fmul double %add965, -2.000000e+00
  %mul972 = fmul double %sub778, %mul967
  %269 = insertelement <2 x double> undef, double %sub790, i32 0
  %270 = insertelement <2 x double> %269, double %sub778, i32 1
  %271 = insertelement <2 x double> undef, double %mul927, i32 0
  %272 = insertelement <2 x double> %271, double %mul972, i32 1
  %273 = fmul <2 x double> %270, %272
  %274 = fadd <2 x double> %217, %273
  %275 = insertelement <2 x double> undef, double %mul972, i32 0
  %276 = insertelement <2 x double> %275, double %mul972, i32 1
  %277 = fmul <2 x double> %250, %276
  %278 = fadd <2 x double> %218, %277
  %279 = load double* %x979, align 8, !tbaa !72
  %add980 = fadd double %279, %mul972
  store double %add980, double* %x979, align 8, !tbaa !72
  %x981 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext773, i32 0
  %mul984 = fmul double %sub784, %mul967
  %280 = insertelement <2 x double> %269, double %sub784, i32 1
  %281 = insertelement <2 x double> %244, double %mul984, i32 1
  %282 = fmul <2 x double> %280, %281
  %283 = fadd <2 x double> %219, %282
  %284 = load double* %y989, align 8, !tbaa !73
  %add990 = fadd double %284, %mul984
  store double %add990, double* %y989, align 8, !tbaa !73
  %285 = bitcast double* %x981 to <2 x double>*
  %286 = load <2 x double>* %285, align 8, !tbaa !17
  %287 = insertelement <2 x double> %275, double %mul984, i32 1
  %288 = fsub <2 x double> %286, %287
  %289 = bitcast double* %x981 to <2 x double>*
  store <2 x double> %288, <2 x double>* %289, align 8, !tbaa !17
  %mul994 = fmul double %sub790, %mul967
  %290 = insertelement <2 x double> %269, double %sub790, i32 1
  %291 = insertelement <2 x double> undef, double %mul984, i32 0
  %292 = insertelement <2 x double> %291, double %mul994, i32 1
  %293 = fmul <2 x double> %290, %292
  %294 = fadd <2 x double> %220, %293
  %295 = load double* %z997, align 8, !tbaa !74
  %add998 = fadd double %295, %mul994
  store double %add998, double* %z997, align 8, !tbaa !74
  %z999 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext773, i32 2
  %296 = load double* %z999, align 8, !tbaa !74
  %sub1000 = fsub double %296, %mul994
  store double %sub1000, double* %z999, align 8, !tbaa !74
  %indvars.iv.next952 = add nuw nsw i64 %indvars.iv951, 1
  %lftr.wideiv953 = trunc i64 %indvars.iv.next952 to i32
  %exitcond954 = icmp eq i32 %lftr.wideiv953, %conv765
  br i1 %exitcond954, label %for.end1003, label %for.body768

for.end1003:                                      ; preds = %for.body768, %for.end760
  %297 = phi <2 x double> [ %209, %for.end760 ], [ %247, %for.body768 ]
  %298 = phi <2 x double> [ %210, %for.end760 ], [ %254, %for.body768 ]
  %299 = phi <2 x double> [ %211, %for.end760 ], [ %274, %for.body768 ]
  %300 = phi <2 x double> [ %212, %for.end760 ], [ %278, %for.body768 ]
  %301 = phi <2 x double> [ %213, %for.end760 ], [ %283, %for.body768 ]
  %302 = phi <2 x double> [ %214, %for.end760 ], [ %294, %for.body768 ]
  %conv1008 = trunc i64 %sub.ptr.div564 to i32
  %cmp1010849 = icmp sgt i32 %conv1008, 0
  br i1 %cmp1010849, label %for.body1011.lr.ph, label %for.inc1128

for.body1011.lr.ph:                               ; preds = %for.end1003
  %303 = extractelement <2 x double> %299, i32 1
  %304 = extractelement <2 x double> %299, i32 0
  %305 = extractelement <2 x double> %301, i32 1
  %306 = extractelement <2 x double> %301, i32 0
  %x1103 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1113 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1121 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %307 = insertelement <2 x double> undef, double %304, i32 0
  %308 = insertelement <2 x double> undef, double %306, i32 0
  br label %for.body1011

for.body1011:                                     ; preds = %for.body1011, %for.body1011.lr.ph
  %indvars.iv955 = phi i64 [ 0, %for.body1011.lr.ph ], [ %indvars.iv.next956, %for.body1011 ]
  %fullElectVirial_xx.3856 = phi double [ %303, %for.body1011.lr.ph ], [ %add1098, %for.body1011 ]
  %fullElectVirial_yy.3853 = phi double [ %305, %for.body1011.lr.ph ], [ %add1110, %for.body1011 ]
  %309 = phi <2 x double> [ %300, %for.body1011.lr.ph ], [ %329, %for.body1011 ]
  %310 = phi <2 x double> [ %302, %for.body1011.lr.ph ], [ %342, %for.body1011 ]
  %arrayidx1014 = getelementptr inbounds i32* %cond162741, i64 %indvars.iv955
  %311 = load i32* %arrayidx1014, align 4, !tbaa !11
  %idx.ext1016 = sext i32 %311 to i64
  %x1020 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1016, i32 0, i32 0
  %312 = load double* %x1020, align 8, !tbaa !59
  %sub1021 = fsub double %75, %312
  %mul1023 = fmul double %sub1021, %sub1021
  %y1026 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1016, i32 0, i32 1
  %313 = load double* %y1026, align 8, !tbaa !61
  %sub1027 = fsub double %76, %313
  %mul1028 = fmul double %sub1027, %sub1027
  %add1029 = fadd double %mul1023, %mul1028
  %z1032 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1016, i32 0, i32 2
  %314 = load double* %z1032, align 8, !tbaa !62
  %sub1033 = fsub double %77, %314
  %mul1034 = fmul double %sub1033, %sub1033
  %add1035 = fadd double %add1029, %mul1034
  %conv1037 = fptrunc double %add1035 to float
  %315 = bitcast float %conv1037 to i32
  %shr1041 = ashr i32 %315, 17
  %add1042 = add nsw i32 %shr1041, %mul
  %mul1044 = shl nsw i32 %add1042, 4
  %idx.ext1045 = sext i32 %mul1044 to i64
  %and1052 = and i32 %315, -131072
  %charge1054 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1016, i32 1
  %316 = load float* %charge1054, align 4, !tbaa !63
  %conv1055 = fpext float %316 to double
  %mul1056 = fmul double %mul372, %conv1055
  %317 = bitcast i32 %and1052 to float
  %conv1059 = fpext float %317 to double
  %sub1060 = fsub double %add1035, %conv1059
  %add.ptr1048.sum648 = or i64 %idx.ext1045, 13
  %arrayidx1062 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum648
  %318 = load double* %arrayidx1062, align 8, !tbaa !17
  %add.ptr1048.sum649 = or i64 %idx.ext1045, 14
  %arrayidx1064 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum649
  %319 = load double* %arrayidx1064, align 8, !tbaa !17
  %add.ptr1048.sum650 = or i64 %idx.ext1045, 15
  %arrayidx1066 = getelementptr inbounds double* %7, i64 %add.ptr1048.sum650
  %320 = load double* %arrayidx1066, align 8, !tbaa !17
  %mul1068 = shl nsw i32 %add1042, 2
  %idx.ext1069 = sext i32 %mul1068 to i64
  %add.ptr1070.sum651 = or i64 %idx.ext1069, 1
  %arrayidx1073 = getelementptr inbounds double* %8, i64 %add.ptr1070.sum651
  %321 = load double* %arrayidx1073, align 8, !tbaa !17
  %sub1074 = fsub double %318, %321
  %add.ptr1070.sum652 = or i64 %idx.ext1069, 2
  %arrayidx1075 = getelementptr inbounds double* %8, i64 %add.ptr1070.sum652
  %322 = load double* %arrayidx1075, align 8, !tbaa !17
  %sub1076 = fsub double %319, %322
  %add.ptr1070.sum653 = or i64 %idx.ext1069, 3
  %arrayidx1077 = getelementptr inbounds double* %8, i64 %add.ptr1070.sum653
  %323 = load double* %arrayidx1077, align 8, !tbaa !17
  %sub1078 = fsub double %320, %323
  %mul1079 = fmul double %mul1056, %sub1078
  %mul1080 = fmul double %mul1056, %sub1076
  %mul1081 = fmul double %mul1056, %sub1074
  %mul1084 = fmul double %sub1060, 3.000000e+00
  %mul1085 = fmul double %mul1079, %mul1084
  %mul1086 = fmul double %mul1080, 2.000000e+00
  %add1087 = fadd double %mul1086, %mul1085
  %mul1088 = fmul double %sub1060, %add1087
  %add1089 = fadd double %mul1081, %mul1088
  %mul1091 = fmul double %add1089, -2.000000e+00
  %mul1096 = fmul double %sub1021, %mul1091
  %mul1097 = fmul double %sub1021, %mul1096
  %add1098 = fadd double %fullElectVirial_xx.3856, %mul1097
  %324 = insertelement <2 x double> undef, double %sub1027, i32 0
  %325 = insertelement <2 x double> %324, double %sub1033, i32 1
  %326 = insertelement <2 x double> undef, double %mul1096, i32 0
  %327 = insertelement <2 x double> %326, double %mul1096, i32 1
  %328 = fmul <2 x double> %325, %327
  %329 = fadd <2 x double> %309, %328
  %330 = load double* %x1103, align 8, !tbaa !72
  %add1104 = fadd double %330, %mul1096
  store double %add1104, double* %x1103, align 8, !tbaa !72
  %x1105 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1016, i32 0
  %mul1108 = fmul double %sub1027, %mul1091
  %mul1109 = fmul double %sub1027, %mul1108
  %add1110 = fadd double %fullElectVirial_yy.3853, %mul1109
  %331 = load double* %y1113, align 8, !tbaa !73
  %add1114 = fadd double %331, %mul1108
  store double %add1114, double* %y1113, align 8, !tbaa !73
  %332 = bitcast double* %x1105 to <2 x double>*
  %333 = load <2 x double>* %332, align 8, !tbaa !17
  %334 = insertelement <2 x double> %326, double %mul1108, i32 1
  %335 = fsub <2 x double> %333, %334
  %336 = bitcast double* %x1105 to <2 x double>*
  store <2 x double> %335, <2 x double>* %336, align 8, !tbaa !17
  %mul1118 = fmul double %sub1033, %mul1091
  %337 = insertelement <2 x double> undef, double %sub1033, i32 0
  %338 = insertelement <2 x double> %337, double %sub1033, i32 1
  %339 = insertelement <2 x double> undef, double %mul1108, i32 0
  %340 = insertelement <2 x double> %339, double %mul1118, i32 1
  %341 = fmul <2 x double> %338, %340
  %342 = fadd <2 x double> %310, %341
  %343 = load double* %z1121, align 8, !tbaa !74
  %add1122 = fadd double %343, %mul1118
  store double %add1122, double* %z1121, align 8, !tbaa !74
  %z1123 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1016, i32 2
  %344 = load double* %z1123, align 8, !tbaa !74
  %sub1124 = fsub double %344, %mul1118
  store double %sub1124, double* %z1123, align 8, !tbaa !74
  %indvars.iv.next956 = add nuw nsw i64 %indvars.iv955, 1
  %lftr.wideiv957 = trunc i64 %indvars.iv.next956 to i32
  %exitcond958 = icmp eq i32 %lftr.wideiv957, %conv1008
  br i1 %exitcond958, label %for.inc1128.loopexit, label %for.body1011

for.inc1128.loopexit:                             ; preds = %for.body1011
  %345 = insertelement <2 x double> %307, double %add1098, i32 1
  %346 = insertelement <2 x double> %308, double %add1110, i32 1
  br label %for.inc1128

for.inc1128:                                      ; preds = %for.inc1128.loopexit, %for.end1003, %cond.end354, %if.then226
  %pairCount.3 = phi i32 [ %add222, %if.then226 ], [ %pairCount.1, %cond.end354 ], [ %pairCount.2, %for.end1003 ], [ %pairCount.2, %for.inc1128.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0867, %if.then226 ], [ 0, %cond.end354 ], [ %pairlistindex.1, %for.end1003 ], [ %pairlistindex.1, %for.inc1128.loopexit ]
  %i.2 = phi i32 [ %add228, %if.then226 ], [ %add357, %cond.end354 ], [ %i.1868, %for.end1003 ], [ %i.1868, %for.inc1128.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0893, %if.then226 ], [ %exclChecksum.0893, %cond.end354 ], [ %conv574, %for.end1003 ], [ %conv574, %for.inc1128.loopexit ]
  %347 = phi <2 x double> [ %64, %if.then226 ], [ %64, %cond.end354 ], [ %297, %for.end1003 ], [ %297, %for.inc1128.loopexit ]
  %348 = phi <2 x double> [ %65, %if.then226 ], [ %65, %cond.end354 ], [ %298, %for.end1003 ], [ %298, %for.inc1128.loopexit ]
  %349 = phi <2 x double> [ %66, %if.then226 ], [ %66, %cond.end354 ], [ %299, %for.end1003 ], [ %345, %for.inc1128.loopexit ]
  %350 = phi <2 x double> [ %67, %if.then226 ], [ %67, %cond.end354 ], [ %300, %for.end1003 ], [ %329, %for.inc1128.loopexit ]
  %351 = phi <2 x double> [ %68, %if.then226 ], [ %68, %cond.end354 ], [ %301, %for.end1003 ], [ %346, %for.inc1128.loopexit ]
  %352 = phi <2 x double> [ %69, %if.then226 ], [ %69, %cond.end354 ], [ %302, %for.end1003 ], [ %342, %for.inc1128.loopexit ]
  %inc1129 = add nsw i32 %i.2, 1
  %cmp186 = icmp slt i32 %inc1129, %13
  br i1 %cmp186, label %for.body187, label %for.end1130

for.end1130:                                      ; preds = %for.inc1128, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1128 ]
  %353 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %347, %for.inc1128 ]
  %354 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %348, %for.inc1128 ]
  %355 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %349, %for.inc1128 ]
  %356 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %350, %for.inc1128 ]
  %357 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %351, %for.inc1128 ]
  %358 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %352, %for.inc1128 ]
  %359 = extractelement <2 x double> %358, i32 1
  %360 = extractelement <2 x double> %358, i32 0
  %arraydecay1131 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1132 = icmp eq i32* %cond715717974980, %arraydecay1131
  br i1 %cmp1132, label %if.end1137, label %delete.notnull1135

delete.notnull1135:                               ; preds = %for.end1130
  %361 = bitcast i32* %cond715717974980 to i8*
  call void @_ZdaPv(i8* %361) #7
  br label %if.end1137

if.end1137:                                       ; preds = %delete.notnull1135, %for.end1130
  %arraydecay1138 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1139 = icmp eq i32* %cond19719972981, %arraydecay1138
  br i1 %cmp1139, label %if.end1144, label %delete.notnull1142

delete.notnull1142:                               ; preds = %if.end1137
  %362 = bitcast i32* %cond19719972981 to i8*
  call void @_ZdaPv(i8* %362) #7
  br label %if.end1144

if.end1144:                                       ; preds = %delete.notnull1142, %if.end1137
  %arraydecay1145 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1146 = icmp eq i32* %cond30976979, %arraydecay1145
  br i1 %cmp1146, label %if.end1151, label %delete.notnull1149

delete.notnull1149:                               ; preds = %if.end1144
  %363 = bitcast i32* %cond30976979 to i8*
  call void @_ZdaPv(i8* %363) #7
  br label %if.end1151

if.end1151:                                       ; preds = %delete.notnull1149, %if.end1144
  %arraydecay1152 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1153 = icmp eq i32* %cond129723725731737, %arraydecay1152
  br i1 %cmp1153, label %if.end1158, label %delete.notnull1156

delete.notnull1156:                               ; preds = %if.end1151
  %364 = bitcast i32* %cond129723725731737 to i8*
  call void @_ZdaPv(i8* %364) #7
  br label %if.end1158

if.end1158:                                       ; preds = %delete.notnull1156, %if.end1151
  %arraydecay1159 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1160 = icmp eq i32* %cond140727729739, %arraydecay1159
  br i1 %cmp1160, label %if.end1165, label %delete.notnull1163

delete.notnull1163:                               ; preds = %if.end1158
  %365 = bitcast i32* %cond140727729739 to i8*
  call void @_ZdaPv(i8* %365) #7
  br label %if.end1165

if.end1165:                                       ; preds = %delete.notnull1163, %if.end1158
  %arraydecay1166 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1167 = icmp eq i32* %cond151733735, %arraydecay1166
  br i1 %cmp1167, label %if.end1172, label %delete.notnull1170

delete.notnull1170:                               ; preds = %if.end1165
  %366 = bitcast i32* %cond151733735 to i8*
  call void @_ZdaPv(i8* %366) #7
  br label %if.end1172

if.end1172:                                       ; preds = %delete.notnull1170, %if.end1165
  %arraydecay1173 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1174 = icmp eq i32* %cond162741, %arraydecay1173
  br i1 %cmp1174, label %if.end1179, label %delete.notnull1177

delete.notnull1177:                               ; preds = %if.end1172
  %367 = bitcast i32* %cond162741 to i8*
  call void @_ZdaPv(i8* %367) #7
  br label %if.end1179

if.end1179:                                       ; preds = %delete.notnull1177, %if.end1172
  %arraydecay1180 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1181 = icmp eq i32* %cond173, %arraydecay1180
  br i1 %cmp1181, label %if.end1186, label %delete.notnull1184

delete.notnull1184:                               ; preds = %if.end1179
  %368 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %368) #7
  br label %if.end1186

if.end1186:                                       ; preds = %delete.notnull1184, %if.end1179
  %conv1187 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1188 = getelementptr inbounds double* %1, i64 22
  %369 = load double* %arrayidx1188, align 8, !tbaa !17
  %add1189 = fadd double %conv1187, %369
  store double %add1189, double* %arrayidx1188, align 8, !tbaa !17
  %arrayidx1190 = getelementptr inbounds double* %1, i64 3
  %370 = bitcast double* %arrayidx1190 to <2 x double>*
  %371 = load <2 x double>* %370, align 8, !tbaa !17
  %372 = fadd <2 x double> %353, %371
  %373 = bitcast double* %arrayidx1190 to <2 x double>*
  store <2 x double> %372, <2 x double>* %373, align 8, !tbaa !17
  %arrayidx1194 = getelementptr inbounds double* %1, i64 5
  %374 = bitcast double* %arrayidx1194 to <2 x double>*
  %375 = load <2 x double>* %374, align 8, !tbaa !17
  %376 = shufflevector <2 x double> %357, <2 x double> %353, <2 x i32> <i32 0, i32 3>
  %377 = fadd <2 x double> %376, %375
  %378 = bitcast double* %arrayidx1194 to <2 x double>*
  store <2 x double> %377, <2 x double>* %378, align 8, !tbaa !17
  %arrayidx1198 = getelementptr inbounds double* %1, i64 7
  %379 = bitcast double* %arrayidx1198 to <2 x double>*
  %380 = load <2 x double>* %379, align 8, !tbaa !17
  %381 = fadd <2 x double> %354, %380
  %382 = bitcast double* %arrayidx1198 to <2 x double>*
  store <2 x double> %381, <2 x double>* %382, align 8, !tbaa !17
  %arrayidx1202 = getelementptr inbounds double* %1, i64 9
  %383 = bitcast double* %arrayidx1202 to <2 x double>*
  %384 = load <2 x double>* %383, align 8, !tbaa !17
  %385 = shufflevector <2 x double> %357, <2 x double> %354, <2 x i32> <i32 0, i32 3>
  %386 = fadd <2 x double> %385, %384
  %387 = bitcast double* %arrayidx1202 to <2 x double>*
  store <2 x double> %386, <2 x double>* %387, align 8, !tbaa !17
  %arrayidx1206 = getelementptr inbounds double* %1, i64 11
  %388 = bitcast double* %arrayidx1206 to <2 x double>*
  %389 = load <2 x double>* %388, align 8, !tbaa !17
  %390 = fadd <2 x double> %355, %389
  %391 = bitcast double* %arrayidx1206 to <2 x double>*
  store <2 x double> %390, <2 x double>* %391, align 8, !tbaa !17
  %arrayidx1210 = getelementptr inbounds double* %1, i64 13
  %392 = bitcast double* %arrayidx1210 to <2 x double>*
  %393 = load <2 x double>* %392, align 8, !tbaa !17
  %394 = fadd <2 x double> %356, %393
  %395 = bitcast double* %arrayidx1210 to <2 x double>*
  store <2 x double> %394, <2 x double>* %395, align 8, !tbaa !17
  %arrayidx1214 = getelementptr inbounds double* %1, i64 15
  %396 = bitcast double* %arrayidx1214 to <2 x double>*
  %397 = load <2 x double>* %396, align 8, !tbaa !17
  %398 = shufflevector <2 x double> %356, <2 x double> %357, <2 x i32> <i32 0, i32 3>
  %399 = fadd <2 x double> %398, %397
  %400 = bitcast double* %arrayidx1214 to <2 x double>*
  store <2 x double> %399, <2 x double>* %400, align 8, !tbaa !17
  %arrayidx1218 = getelementptr inbounds double* %1, i64 17
  %401 = load double* %arrayidx1218, align 8, !tbaa !17
  %add1219 = fadd double %360, %401
  store double %add1219, double* %arrayidx1218, align 8, !tbaa !17
  %arrayidx1220 = getelementptr inbounds double* %1, i64 18
  %402 = bitcast double* %arrayidx1220 to <2 x double>*
  %403 = load <2 x double>* %402, align 8, !tbaa !17
  %404 = shufflevector <2 x double> %356, <2 x double> %358, <2 x i32> <i32 1, i32 2>
  %405 = fadd <2 x double> %404, %403
  %406 = bitcast double* %arrayidx1220 to <2 x double>*
  store <2 x double> %405, <2 x double>* %406, align 8, !tbaa !17
  %arrayidx1224 = getelementptr inbounds double* %1, i64 20
  %407 = load double* %arrayidx1224, align 8, !tbaa !17
  %add1225 = fadd double %359, %407
  store double %add1225, double* %arrayidx1224, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %46) #6
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1186, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil26calc_pair_energy_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311002 = icmp sgt i32 %14, 0
  br i1 %cmp311002, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301059 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond7747761057 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond197781055 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1048 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1049, %for.inc ]
  %g.01003 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1048, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01003, 1
  %idxprom41 = sext i32 %g.01003 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond7747761057, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1048 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01003, %for.body ]
  %indvars.iv.next1049 = add nuw nsw i64 %indvars.iv1048, 1
  %lftr.wideiv1050 = trunc i64 %indvars.iv.next1049 to i32
  %exitcond1051 = icmp eq i32 %lftr.wideiv1050, %14
  br i1 %exitcond1051, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond7747761057, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond7747761057, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1064 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1977810541063 = phi i32* [ %cond197781055, %for.end ], [ %cond197781055, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond77477610561062 = phi i32* [ %cond7747761057, %for.end ], [ %cond7747761057, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3010581061 = phi i32* [ %cond301059, %for.end ], [ %cond301059, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56996 = icmp sgt i32 %g.0.lcssa1064, 0
  br i1 %cmp56996, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75990 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76991 = icmp sgt i32 %13, 0
  %or.cond758992 = and i1 %tobool75990, %cmp76991
  br i1 %or.cond758992, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1044 = phi i64 [ %indvars.iv.next1045, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0998 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0997 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond77477610561062, i64 %indvars.iv1044
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0998, 1
  %idxprom68 = sext i32 %fixg.0998 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1977810541063, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0997, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0998, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1045 = add nuw nsw i64 %indvars.iv1044, 1
  %lftr.wideiv1046 = trunc i64 %indvars.iv.next1045 to i32
  %exitcond1047 = icmp eq i32 %lftr.wideiv1046, %g.0.lcssa1064
  br i1 %exitcond1047, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv1042 = phi i64 [ %indvars.iv.next1043, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2993 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv1042, i32 2
  %36 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %36, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2993
  %indvars.iv.next1043 = add nuw nsw i64 %indvars.iv1042, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %37 = trunc i64 %indvars.iv.next1043 to i32
  %cmp76 = icmp slt i32 %37, %13
  %or.cond758 = and i1 %tobool75, %cmp76
  br i1 %or.cond758, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75990, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond77477610561062, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %38 = bitcast i32* %cond77477610561062 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond1977810541063, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %39 = bitcast i32* %cond1977810541063 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond3010581061, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %40 = bitcast i32* %cond3010581061 to i8*
  call void @_ZdaPv(i8* %40) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond1977810541063, i64 %idxprom114
  %41 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond1977810541063, i64 %idxprom116
  store i32 %41, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2781 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %42 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  %46 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %46) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %14, 5
  %47 = sext i32 %add123 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call124 = call noalias i8* @_Znam(i64 %51) #8
  %52 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %51) #8
  %53 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %51) #8
  %54 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %51) #8
  %55 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %51) #8
  %56 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162800 = phi i32* [ %arraydecay154, %cond.true164 ], [ %55, %cond.false166 ]
  %cond140786788798 = phi i32* [ %arraydecay132, %cond.true164 ], [ %53, %cond.false166 ]
  %cond129782784790796 = phi i32* [ %arraydecay121, %cond.true164 ], [ %52, %cond.false166 ]
  %cond151792794 = phi i32* [ %arraydecay143, %cond.true164 ], [ %54, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %56, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %57 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %58 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %59 = load %class.Vector** %arrayidx177, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %60 = load %class.Vector** %arrayidx179, align 8, !tbaa !1
  %mul180 = mul nsw i32 %14, %13
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %61 = load i32* %minPart, align 4, !tbaa !50
  %mul181 = mul nsw i32 %61, %mul180
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %62 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul181, %62
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %63 = load i32* %maxPart, align 4, !tbaa !52
  %mul182 = mul nsw i32 %63, %mul180
  %div184 = sdiv i32 %mul182, %62
  %cmp186938 = icmp sgt i32 %13, 0
  br i1 %cmp186938, label %for.body187.lr.ph, label %for.end1183

for.body187.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i771 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast525 = ptrtoint i32* %cond140786788798 to i64
  %sub.ptr.rhs.cast562 = ptrtoint i32* %cond162800 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast576 = ptrtoint i32* %cond151792794 to i64
  %sub905 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3010581061 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i32* %cond129782784790796 to i64
  br label %for.body187

for.body187:                                      ; preds = %for.inc1181, %for.body187.lr.ph
  %exclChecksum.0972 = phi i32 [ 0, %for.body187.lr.ph ], [ %exclChecksum.8, %for.inc1181 ]
  %fullElectVirial_zz.0942 = phi double [ 0.000000e+00, %for.body187.lr.ph ], [ %fullElectVirial_zz.4, %for.inc1181 ]
  %i.1941 = phi i32 [ 0, %for.body187.lr.ph ], [ %inc1182, %for.inc1181 ]
  %pairlistindex.0940 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairlistindex.2, %for.inc1181 ]
  %pairCount.0939 = phi i32 [ 0, %for.body187.lr.ph ], [ %pairCount.3, %for.inc1181 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %400, %for.inc1181 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %401, %for.inc1181 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %402, %for.inc1181 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %403, %for.inc1181 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %404, %for.inc1181 ]
  %69 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %405, %for.inc1181 ]
  %70 = phi <2 x double> [ zeroinitializer, %for.body187.lr.ph ], [ %406, %for.inc1181 ]
  %idxprom188 = sext i32 %i.1941 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 2
  %71 = bitcast [4 x i8]* %id to i32*
  %bf.load190 = load i32* %71, align 4
  %bf.clear191 = and i32 %bf.load190, 4194303
  %idxprom.i802 = zext i32 %bf.clear191 to i64
  %72 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i802, i32 0
  %73 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i802, i32 1
  %74 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %72, i64 %idxprom.i802, i32 2
  %75 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %73 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 0
  %76 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 1
  %77 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 0, i32 2
  %78 = load double* %z, align 8, !tbaa !62
  %arrayidx196 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188
  %arrayidx198 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188
  %79 = and i32 %bf.load190, 62914560
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %if.end359, label %if.then210

if.then210:                                       ; preds = %for.body187
  %bf.lshr213 = lshr i32 %bf.load190, 22
  %bf.clear214 = and i32 %bf.lshr213, 7
  %tobool215 = icmp eq i32 %bf.clear214, 0
  br i1 %tobool215, label %if.end230, label %if.then216

if.then216:                                       ; preds = %if.then210
  %mul221 = mul nsw i32 %bf.clear214, %14
  %add222 = add nsw i32 %mul221, %pairCount.0939
  %cmp223 = icmp sge i32 %pairCount.0939, %div
  %cmp225 = icmp slt i32 %pairCount.0939, %div184
  %or.cond760 = and i1 %cmp223, %cmp225
  br i1 %or.cond760, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then216
  %sub227 = add i32 %i.1941, -1
  %add228 = add i32 %sub227, %bf.clear214
  br label %for.inc1181

if.end230:                                        ; preds = %if.then216, %if.then210
  %pairCount.1 = phi i32 [ %pairCount.0939, %if.then210 ], [ %add222, %if.then216 ]
  %81 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool231 = icmp eq i32 %81, 0
  br i1 %tobool231, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end230
  %bf.clear235 = and i32 %bf.load190, 134217728
  %tobool236 = icmp ne i32 %bf.clear235, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end230
  %82 = phi i1 [ false, %if.end230 ], [ %tobool236, %land.rhs ]
  %cond243 = select i1 %82, i32* %cond1977810541063, i32* %cond77477610561062
  %cond248 = select i1 %82, i32 %fixg.2781, i32 %g.0.lcssa1064
  %cmp249 = icmp sgt i32 %cond248, 0
  br i1 %cmp249, label %if.then250, label %if.end329

if.then250:                                       ; preds = %land.end
  %83 = load i32* %cond243, align 4, !tbaa !11
  %idxprom253 = sext i32 %83 to i64
  %x256 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 0
  %84 = load double* %x256, align 8, !tbaa !59
  %y260 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 1
  %85 = load double* %y260, align 8, !tbaa !61
  %z264 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom253, i32 0, i32 2
  %86 = load double* %z264, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then290, %if.then250
  %p_j_z.0.ph = phi double [ %86, %if.then250 ], [ %92, %if.then290 ]
  %p_j_y.0.ph = phi double [ %85, %if.then250 ], [ %91, %if.then290 ]
  %p_j_x.0.ph = phi double [ %84, %if.then250 ], [ %90, %if.then290 ]
  %j2.0.ph = phi i32 [ %83, %if.then250 ], [ %89, %if.then290 ]
  %gli.0.ph = phi i32* [ %cond3010581061, %if.then250 ], [ %incdec.ptr, %if.then290 ]
  %g.3.ph = phi i32 [ 0, %if.then250 ], [ %inc266, %if.then290 ]
  %87 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %87, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %92, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %91, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %90, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %89, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc266, %while.body ]
  %88 = trunc i64 %indvars.iv to i32
  %cmp265 = icmp slt i32 %88, %cond248
  br i1 %cmp265, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc266 = add nsw i32 %g.3, 1
  %arrayidx268 = getelementptr inbounds i32* %cond243, i64 %indvars.iv.next
  %89 = load i32* %arrayidx268, align 4, !tbaa !11
  %sub269 = fsub double %76, %p_j_x.0
  %mul270 = fmul double %sub269, %sub269
  %idxprom271 = sext i32 %89 to i64
  %x274 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 0
  %90 = load double* %x274, align 8, !tbaa !59
  %sub275 = fsub double %77, %p_j_y.0
  %mul276 = fmul double %sub275, %sub275
  %add277 = fadd double %mul276, %mul270
  %y281 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 1
  %91 = load double* %y281, align 8, !tbaa !61
  %sub282 = fsub double %78, %p_j_z.0
  %mul283 = fmul double %sub282, %sub282
  %add284 = fadd double %mul283, %add277
  %z288 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom271, i32 0, i32 2
  %92 = load double* %z288, align 8, !tbaa !62
  %cmp289 = fcmp ugt double %add284, %3
  br i1 %cmp289, label %while.cond, label %if.then290

if.then290:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div755 = lshr exact i64 %sub.ptr.sub, 2
  %conv292 = trunc i64 %sub.ptr.div755 to i32
  %cmp294813 = icmp sgt i32 %conv292, 0
  br i1 %cmp294813, label %for.body295.lr.ph, label %if.end329

for.body295.lr.ph:                                ; preds = %while.end
  %93 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %94 = lshr i64 %93, 2
  %95 = trunc i64 %94 to i32
  br label %for.body295

for.body295:                                      ; preds = %cond.end315, %for.body295.lr.ph
  %indvars.iv1010 = phi i64 [ 0, %for.body295.lr.ph ], [ %indvars.iv.next1011, %cond.end315 ]
  %pli.0815 = phi i32* [ %cond129782784790796, %for.body295.lr.ph ], [ %add.ptr325, %cond.end315 ]
  %arrayidx298 = getelementptr inbounds i32* %cond3010581061, i64 %indvars.iv1010
  %96 = load i32* %arrayidx298, align 4, !tbaa !11
  %idxprom300 = sext i32 %96 to i64
  %nonbondedGroupIsAtom302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom300, i32 2
  %97 = bitcast [4 x i8]* %nonbondedGroupIsAtom302 to i32*
  %bf.load303 = load i32* %97, align 4
  %bf.clear305 = and i32 %bf.load303, 33554432
  %tobool306 = icmp eq i32 %bf.clear305, 0
  br i1 %tobool306, label %cond.false308, label %cond.end315

cond.false308:                                    ; preds = %for.body295
  %bf.lshr313 = lshr i32 %bf.load303, 22
  %bf.clear314 = and i32 %bf.lshr313, 7
  %phitmp756757 = zext i32 %bf.clear314 to i64
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false308, %for.body295
  %cond316 = phi i64 [ %phitmp756757, %cond.false308 ], [ 1, %for.body295 ]
  store i32 %96, i32* %pli.0815, align 4, !tbaa !11
  %add318 = add nsw i32 %96, 1
  %arrayidx319 = getelementptr inbounds i32* %pli.0815, i64 1
  store i32 %add318, i32* %arrayidx319, align 4, !tbaa !11
  %add320 = add nsw i32 %96, 2
  %arrayidx321 = getelementptr inbounds i32* %pli.0815, i64 2
  store i32 %add320, i32* %arrayidx321, align 4, !tbaa !11
  %add322 = add nsw i32 %96, 3
  %arrayidx323 = getelementptr inbounds i32* %pli.0815, i64 3
  store i32 %add322, i32* %arrayidx323, align 4, !tbaa !11
  %add.ptr325 = getelementptr inbounds i32* %pli.0815, i64 %cond316
  %indvars.iv.next1011 = add nuw nsw i64 %indvars.iv1010, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1011 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %95
  br i1 %exitcond, label %if.end329, label %for.body295

if.end329:                                        ; preds = %cond.end315, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129782784790796, %land.end ], [ %cond129782784790796, %while.end ], [ %add.ptr325, %cond.end315 ]
  %sub.ptr.lhs.cast330 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %sub.ptr.div333752 = lshr exact i64 %sub.ptr.sub332, 2
  %conv334 = trunc i64 %sub.ptr.div333752 to i32
  %tobool335 = icmp eq i32 %conv334, 0
  br i1 %tobool335, label %if.else, label %if.then336

if.then336:                                       ; preds = %if.end329
  %sub337 = shl i64 %sub.ptr.sub332, 30
  %sext753 = add i64 %sub337, -4294967296
  %idxprom338 = ashr exact i64 %sext753, 32
  %arrayidx339 = getelementptr inbounds i32* %cond129782784790796, i64 %idxprom338
  %98 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom340 = ashr exact i64 %sub337, 32
  %arrayidx341 = getelementptr inbounds i32* %cond129782784790796, i64 %idxprom340
  store i32 %98, i32* %arrayidx341, align 4, !tbaa !11
  br label %if.end359

if.else:                                          ; preds = %if.end329
  %bf.load344 = load i32* %71, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end354

cond.false349:                                    ; preds = %if.else
  %bf.lshr352 = lshr i32 %bf.load344, 22
  %bf.clear353 = and i32 %bf.lshr352, 7
  %phitmp = add i32 %bf.clear353, -1
  br label %cond.end354

cond.end354:                                      ; preds = %cond.false349, %if.else
  %cond355 = phi i32 [ %phitmp, %cond.false349 ], [ 0, %if.else ]
  %add357 = add nsw i32 %cond355, %i.1941
  br label %for.inc1181

if.end359:                                        ; preds = %if.then336, %for.body187
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then336 ], [ %pairCount.0939, %for.body187 ]
  %pairlistindex.1 = phi i32 [ %conv334, %if.then336 ], [ %pairlistindex.0940, %for.body187 ]
  %99 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool360 = icmp eq i32 %99, 0
  %bf.load374.pre = load i32* %71, align 4
  br i1 %tobool360, label %land.end367, label %land.rhs361

land.rhs361:                                      ; preds = %if.end359
  %bf.clear365 = and i32 %bf.load374.pre, 67108864
  %tobool366 = icmp ne i32 %bf.clear365, 0
  br label %land.end367

land.end367:                                      ; preds = %land.rhs361, %if.end359
  %100 = phi i1 [ %tobool366, %land.rhs361 ], [ false, %if.end359 ]
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom188, i32 1
  %101 = load float* %charge, align 4, !tbaa !63
  %conv369 = fpext float %101 to double
  %mul370 = fmul double %conv369, 3.320636e+02
  %mul371 = fmul double %9, %mul370
  %mul372 = fmul double %4, %mul371
  %bf.clear375 = and i32 %bf.load374.pre, 4194303
  %idxprom.i770803 = zext i32 %bf.clear375 to i64
  %102 = load i32** %atomVdwType.i771, align 8, !tbaa !64
  %arrayidx.i772 = getelementptr inbounds i32* %102, i64 %idxprom.i770803
  %103 = load i32* %arrayidx.i772, align 4, !tbaa !11
  %104 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %105 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv377 = shl i32 %103, 1
  %mul.i = and i32 %conv377, 131070
  %mul2.i = mul i32 %mul.i, %105
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp383840 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %100, label %for.cond382.preheader, label %if.else444

for.cond382.preheader:                            ; preds = %land.end367
  br i1 %cmp383840, label %for.body384, label %if.end523

for.body384:                                      ; preds = %for.inc441, %for.cond382.preheader
  %indvars.iv1021 = phi i64 [ %indvars.iv.next1022, %for.inc441 ], [ 0, %for.cond382.preheader ]
  %exclChecksum.1844 = phi i32 [ %exclChecksum.3, %for.inc441 ], [ %exclChecksum.0972, %for.cond382.preheader ]
  %pli379.0843 = phi i32* [ %pli379.1, %for.inc441 ], [ %cond140786788798, %for.cond382.preheader ]
  %plin.0842 = phi i32* [ %plin.1, %for.inc441 ], [ %cond151792794, %for.cond382.preheader ]
  %arrayidx386 = getelementptr inbounds i32* %cond129782784790796, i64 %indvars.iv1021
  %106 = load i32* %arrayidx386, align 4, !tbaa !11
  %idxprom388 = sext i32 %106 to i64
  %x391 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 0
  %107 = load double* %x391, align 8, !tbaa !59
  %sub393 = fsub double %76, %107
  %mul394 = fmul double %sub393, %sub393
  %y399 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 1
  %108 = load double* %y399, align 8, !tbaa !61
  %sub401 = fsub double %77, %108
  %mul402 = fmul double %sub401, %sub401
  %add403 = fadd double %mul394, %mul402
  %z408 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 0, i32 2
  %109 = load double* %z408, align 8, !tbaa !62
  %sub409 = fsub double %78, %109
  %mul410 = fmul double %sub409, %sub409
  %add411 = fadd double %add403, %mul410
  %atomFixed414 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom388, i32 2
  %110 = bitcast [4 x i8]* %atomFixed414 to i32*
  %bf.load415 = load i32* %110, align 4
  %bf.clear417 = and i32 %bf.load415, 67108864
  %tobool418 = icmp ne i32 %bf.clear417, 0
  %cmp420 = fcmp ugt double %add411, %2
  %or.cond761 = or i1 %tobool418, %cmp420
  br i1 %or.cond761, label %for.inc441, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %for.body384
  %cmp422 = fcmp ugt double %add411, %11
  br i1 %cmp422, label %if.then426, label %land.lhs.true423

land.lhs.true423:                                 ; preds = %land.lhs.true421
  %inc424 = add nsw i32 %exclChecksum.1844, 1
  %tobool425 = icmp eq i32 %inc424, 0
  br i1 %tobool425, label %if.then426, label %for.inc441

if.then426:                                       ; preds = %land.lhs.true423, %land.lhs.true421
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true423 ], [ %exclChecksum.1844, %land.lhs.true421 ]
  %bf.clear431 = and i32 %bf.load415, 4194303
  %cmp432 = icmp slt i32 %bf.clear431, %73
  %cmp434 = icmp sgt i32 %bf.clear431, %74
  %or.cond762 = or i1 %cmp432, %cmp434
  br i1 %or.cond762, label %if.else437, label %if.then435

if.then435:                                       ; preds = %if.then426
  %incdec.ptr436 = getelementptr inbounds i32* %pli379.0843, i64 1
  store i32 %106, i32* %pli379.0843, align 4, !tbaa !11
  br label %for.inc441

if.else437:                                       ; preds = %if.then426
  %incdec.ptr438 = getelementptr inbounds i32* %plin.0842, i64 1
  store i32 %106, i32* %plin.0842, align 4, !tbaa !11
  br label %for.inc441

for.inc441:                                       ; preds = %if.else437, %if.then435, %land.lhs.true423, %for.body384
  %plin.1 = phi i32* [ %plin.0842, %for.body384 ], [ %plin.0842, %land.lhs.true423 ], [ %plin.0842, %if.then435 ], [ %incdec.ptr438, %if.else437 ]
  %pli379.1 = phi i32* [ %pli379.0843, %for.body384 ], [ %pli379.0843, %land.lhs.true423 ], [ %incdec.ptr436, %if.then435 ], [ %pli379.0843, %if.else437 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1844, %for.body384 ], [ %inc424, %land.lhs.true423 ], [ %exclChecksum.2, %if.then435 ], [ %exclChecksum.2, %if.else437 ]
  %indvars.iv.next1022 = add nuw nsw i64 %indvars.iv1021, 1
  %lftr.wideiv1023 = trunc i64 %indvars.iv.next1022 to i32
  %exitcond1024 = icmp eq i32 %lftr.wideiv1023, %pairlistindex.1
  br i1 %exitcond1024, label %if.end523, label %for.body384

if.else444:                                       ; preds = %land.end367
  br i1 %cmp383840, label %if.then447, label %if.end523

if.then447:                                       ; preds = %if.else444
  %111 = load i32* %cond129782784790796, align 4, !tbaa !11
  %idxprom452 = sext i32 %111 to i64
  %x455 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 0
  %112 = load double* %x455, align 8, !tbaa !59
  %y460 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 1
  %113 = load double* %y460, align 8, !tbaa !61
  %z465 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452, i32 0, i32 2
  %114 = load double* %z465, align 8, !tbaa !62
  br label %while.cond472.outer

while.cond472.outer:                              ; preds = %if.else512, %if.then447
  %idxprom452.pn.ph = phi i64 [ %idxprom452, %if.then447 ], [ %idxprom481, %if.else512 ]
  %p_j_z461.0.ph = phi double [ %114, %if.then447 ], [ %120, %if.else512 ]
  %p_j_y456.0.ph = phi double [ %113, %if.then447 ], [ %119, %if.else512 ]
  %p_j_x451.0.ph = phi double [ %112, %if.then447 ], [ %118, %if.else512 ]
  %j2448.0.ph = phi i32 [ %111, %if.then447 ], [ %117, %if.else512 ]
  %k445.0.ph = phi i32 [ 0, %if.then447 ], [ %inc475, %if.else512 ]
  %plin.2.ph = phi i32* [ %cond151792794, %if.then447 ], [ %incdec.ptr513, %if.else512 ]
  %pli379.2.ph = phi i32* [ %cond140786788798, %if.then447 ], [ %pli379.2.ph823, %if.else512 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0972, %if.then447 ], [ %exclChecksum.5, %if.else512 ]
  br label %while.cond472.outer816

while.cond472.outer816:                           ; preds = %if.then510, %while.cond472.outer
  %idxprom452.pn.ph817 = phi i64 [ %idxprom481, %if.then510 ], [ %idxprom452.pn.ph, %while.cond472.outer ]
  %p_j_z461.0.ph818 = phi double [ %120, %if.then510 ], [ %p_j_z461.0.ph, %while.cond472.outer ]
  %p_j_y456.0.ph819 = phi double [ %119, %if.then510 ], [ %p_j_y456.0.ph, %while.cond472.outer ]
  %p_j_x451.0.ph820 = phi double [ %118, %if.then510 ], [ %p_j_x451.0.ph, %while.cond472.outer ]
  %j2448.0.ph821 = phi i32 [ %117, %if.then510 ], [ %j2448.0.ph, %while.cond472.outer ]
  %k445.0.ph822 = phi i32 [ %inc475, %if.then510 ], [ %k445.0.ph, %while.cond472.outer ]
  %pli379.2.ph823 = phi i32* [ %incdec.ptr511, %if.then510 ], [ %pli379.2.ph, %while.cond472.outer ]
  %exclChecksum.4.ph824 = phi i32 [ %exclChecksum.5, %if.then510 ], [ %exclChecksum.4.ph, %while.cond472.outer ]
  br label %while.cond472.outer825

while.cond472.outer825:                           ; preds = %land.lhs.true503, %while.cond472.outer816
  %idxprom452.pn.ph826 = phi i64 [ %idxprom481, %land.lhs.true503 ], [ %idxprom452.pn.ph817, %while.cond472.outer816 ]
  %p_j_z461.0.ph827 = phi double [ %120, %land.lhs.true503 ], [ %p_j_z461.0.ph818, %while.cond472.outer816 ]
  %p_j_y456.0.ph828 = phi double [ %119, %land.lhs.true503 ], [ %p_j_y456.0.ph819, %while.cond472.outer816 ]
  %p_j_x451.0.ph829 = phi double [ %118, %land.lhs.true503 ], [ %p_j_x451.0.ph820, %while.cond472.outer816 ]
  %j2448.0.ph830 = phi i32 [ %117, %land.lhs.true503 ], [ %j2448.0.ph821, %while.cond472.outer816 ]
  %k445.0.ph831 = phi i32 [ %inc475, %land.lhs.true503 ], [ %k445.0.ph822, %while.cond472.outer816 ]
  %exclChecksum.4.ph832 = phi i32 [ %inc504, %land.lhs.true503 ], [ %exclChecksum.4.ph824, %while.cond472.outer816 ]
  %115 = sext i32 %k445.0.ph831 to i64
  br label %while.cond472

while.cond472:                                    ; preds = %while.body474, %while.cond472.outer825
  %indvars.iv1017 = phi i64 [ %115, %while.cond472.outer825 ], [ %indvars.iv.next1018, %while.body474 ]
  %idxprom452.pn = phi i64 [ %idxprom452.pn.ph826, %while.cond472.outer825 ], [ %idxprom481, %while.body474 ]
  %p_j_z461.0 = phi double [ %p_j_z461.0.ph827, %while.cond472.outer825 ], [ %120, %while.body474 ]
  %p_j_y456.0 = phi double [ %p_j_y456.0.ph828, %while.cond472.outer825 ], [ %119, %while.body474 ]
  %p_j_x451.0 = phi double [ %p_j_x451.0.ph829, %while.cond472.outer825 ], [ %118, %while.body474 ]
  %j2448.0 = phi i32 [ %j2448.0.ph830, %while.cond472.outer825 ], [ %117, %while.body474 ]
  %k445.0 = phi i32 [ %k445.0.ph831, %while.cond472.outer825 ], [ %inc475, %while.body474 ]
  %116 = trunc i64 %indvars.iv1017 to i32
  %cmp473 = icmp slt i32 %116, %pairlistindex.1
  br i1 %cmp473, label %while.body474, label %if.end523

while.body474:                                    ; preds = %while.cond472
  %atom2466.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom452.pn, i32 2
  %atom2466.0.in.in = bitcast [4 x i8]* %atom2466.0.in.in.in to i32*
  %atom2466.0.in = load i32* %atom2466.0.in.in, align 4
  %atom2466.0 = and i32 %atom2466.0.in, 4194303
  %indvars.iv.next1018 = add nsw i64 %indvars.iv1017, 1
  %inc475 = add nsw i32 %k445.0, 1
  %arrayidx477 = getelementptr inbounds i32* %cond129782784790796, i64 %indvars.iv.next1018
  %117 = load i32* %arrayidx477, align 4, !tbaa !11
  %sub479 = fsub double %76, %p_j_x451.0
  %mul480 = fmul double %sub479, %sub479
  %idxprom481 = sext i32 %117 to i64
  %x484 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 0
  %118 = load double* %x484, align 8, !tbaa !59
  %sub486 = fsub double %77, %p_j_y456.0
  %mul487 = fmul double %sub486, %sub486
  %add488 = fadd double %mul487, %mul480
  %y492 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 1
  %119 = load double* %y492, align 8, !tbaa !61
  %sub493 = fsub double %78, %p_j_z461.0
  %mul494 = fmul double %sub493, %sub493
  %add495 = fadd double %mul494, %add488
  %z499 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom481, i32 0, i32 2
  %120 = load double* %z499, align 8, !tbaa !62
  %cmp500 = fcmp ugt double %add495, %2
  br i1 %cmp500, label %while.cond472, label %land.lhs.true501

land.lhs.true501:                                 ; preds = %while.body474
  %cmp502 = fcmp ugt double %add495, %11
  br i1 %cmp502, label %if.then506, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true501
  %inc504 = add nsw i32 %exclChecksum.4.ph832, 1
  %tobool505 = icmp eq i32 %inc504, 0
  br i1 %tobool505, label %if.then506, label %while.cond472.outer825

if.then506:                                       ; preds = %land.lhs.true503, %land.lhs.true501
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true503 ], [ %exclChecksum.4.ph832, %land.lhs.true501 ]
  %cmp507 = icmp slt i32 %atom2466.0, %73
  %cmp509 = icmp sgt i32 %atom2466.0, %74
  %or.cond763 = or i1 %cmp507, %cmp509
  br i1 %or.cond763, label %if.else512, label %if.then510

if.then510:                                       ; preds = %if.then506
  %incdec.ptr511 = getelementptr inbounds i32* %pli379.2.ph823, i64 1
  store i32 %j2448.0, i32* %pli379.2.ph823, align 4, !tbaa !11
  br label %while.cond472.outer816

if.else512:                                       ; preds = %if.then506
  %incdec.ptr513 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2448.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond472.outer

if.end523:                                        ; preds = %while.cond472, %if.else444, %for.inc441, %for.cond382.preheader
  %plin.4 = phi i32* [ %cond151792794, %if.else444 ], [ %cond151792794, %for.cond382.preheader ], [ %plin.2.ph, %while.cond472 ], [ %plin.1, %for.inc441 ]
  %pli379.4 = phi i32* [ %cond140786788798, %if.else444 ], [ %cond140786788798, %for.cond382.preheader ], [ %pli379.2.ph823, %while.cond472 ], [ %pli379.1, %for.inc441 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0972, %if.else444 ], [ %exclChecksum.0972, %for.cond382.preheader ], [ %exclChecksum.4.ph832, %while.cond472 ], [ %exclChecksum.3, %for.inc441 ]
  %sub.ptr.lhs.cast524 = ptrtoint i32* %pli379.4 to i64
  %sub.ptr.sub526 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %sub.ptr.div527701 = lshr exact i64 %sub.ptr.sub526, 2
  %conv528 = trunc i64 %sub.ptr.div527701 to i32
  %tobool529 = icmp eq i32 %conv528, 0
  br i1 %tobool529, label %for.end560, label %for.cond538.preheader

for.cond538.preheader:                            ; preds = %if.end523
  %sub531 = shl i64 %sub.ptr.sub526, 30
  %sext750 = add i64 %sub531, -4294967296
  %idxprom532 = ashr exact i64 %sext750, 32
  %arrayidx533 = getelementptr inbounds i32* %cond140786788798, i64 %idxprom532
  %121 = load i32* %arrayidx533, align 4, !tbaa !11
  %idxprom534 = ashr exact i64 %sub531, 32
  %arrayidx535 = getelementptr inbounds i32* %cond140786788798, i64 %idxprom534
  store i32 %121, i32* %arrayidx535, align 4, !tbaa !11
  %cmp539848 = icmp sgt i32 %conv528, 0
  br i1 %cmp539848, label %for.body540.lr.ph, label %for.end560

for.body540.lr.ph:                                ; preds = %for.cond538.preheader
  %122 = sub i64 %sub.ptr.lhs.cast524, %sub.ptr.rhs.cast525
  %123 = lshr i64 %122, 2
  %124 = trunc i64 %123 to i32
  br label %for.body540

for.body540:                                      ; preds = %for.inc558, %for.body540.lr.ph
  %indvars.iv1025 = phi i64 [ 0, %for.body540.lr.ph ], [ %indvars.iv.next1026, %for.inc558 ]
  %plin.5852 = phi i32* [ %plin.4, %for.body540.lr.ph ], [ %plin.6, %for.inc558 ]
  %plix.0851 = phi i32* [ %cond162800, %for.body540.lr.ph ], [ %plix.1, %for.inc558 ]
  %plim.0850 = phi i32* [ %cond173, %for.body540.lr.ph ], [ %plim.1, %for.inc558 ]
  %arrayidx543 = getelementptr inbounds i32* %cond140786788798, i64 %indvars.iv1025
  %125 = load i32* %arrayidx543, align 4, !tbaa !11
  %idxprom545 = sext i32 %125 to i64
  %id547 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom545, i32 2
  %126 = bitcast [4 x i8]* %id547 to i32*
  %bf.load548 = load i32* %126, align 4
  %bf.clear549 = and i32 %bf.load548, 4194303
  %idxprom550749 = zext i32 %bf.clear549 to i64
  %add.ptr.sum = sub i64 %idxprom550749, %idx.ext
  %arrayidx551 = getelementptr inbounds i8* %75, i64 %add.ptr.sum
  %127 = load i8* %arrayidx551, align 1, !tbaa !68
  %conv552 = sext i8 %127 to i32
  switch i32 %conv552, label %for.inc558 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb554
    i32 2, label %sw.bb556
  ]

sw.bb:                                            ; preds = %for.body540
  %incdec.ptr553 = getelementptr inbounds i32* %plin.5852, i64 1
  store i32 %125, i32* %plin.5852, align 4, !tbaa !11
  br label %for.inc558

sw.bb554:                                         ; preds = %for.body540
  %incdec.ptr555 = getelementptr inbounds i32* %plix.0851, i64 1
  store i32 %125, i32* %plix.0851, align 4, !tbaa !11
  br label %for.inc558

sw.bb556:                                         ; preds = %for.body540
  %incdec.ptr557 = getelementptr inbounds i32* %plim.0850, i64 1
  store i32 %125, i32* %plim.0850, align 4, !tbaa !11
  br label %for.inc558

for.inc558:                                       ; preds = %sw.bb556, %sw.bb554, %sw.bb, %for.body540
  %plim.1 = phi i32* [ %plim.0850, %for.body540 ], [ %incdec.ptr557, %sw.bb556 ], [ %plim.0850, %sw.bb554 ], [ %plim.0850, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0851, %for.body540 ], [ %plix.0851, %sw.bb556 ], [ %incdec.ptr555, %sw.bb554 ], [ %plix.0851, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5852, %for.body540 ], [ %plin.5852, %sw.bb556 ], [ %plin.5852, %sw.bb554 ], [ %incdec.ptr553, %sw.bb ]
  %indvars.iv.next1026 = add nuw nsw i64 %indvars.iv1025, 1
  %lftr.wideiv1027 = trunc i64 %indvars.iv.next1026 to i32
  %exitcond1028 = icmp eq i32 %lftr.wideiv1027, %124
  br i1 %exitcond1028, label %for.end560, label %for.body540

for.end560:                                       ; preds = %for.inc558, %for.cond538.preheader, %if.end523
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond538.preheader ], [ %plin.4, %if.end523 ], [ %plin.6, %for.inc558 ]
  %plix.0.lcssa = phi i32* [ %cond162800, %for.cond538.preheader ], [ %cond162800, %if.end523 ], [ %plix.1, %for.inc558 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond538.preheader ], [ %cond173, %if.end523 ], [ %plim.1, %for.inc558 ]
  %sub.ptr.lhs.cast561 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub563 = sub i64 %sub.ptr.lhs.cast561, %sub.ptr.rhs.cast562
  %sub.ptr.div564 = ashr exact i64 %sub.ptr.sub563, 2
  %conv565702 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast568 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %sub.ptr.div571 = ashr exact i64 %sub.ptr.sub570, 2
  %add566 = add i64 %sub.ptr.div571, %conv565702
  %add573 = add i64 %add566, %sub.ptr.div564
  %conv574 = trunc i64 %add573 to i32
  %sub.ptr.lhs.cast575 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %sub.ptr.div578704 = lshr exact i64 %sub.ptr.sub577, 2
  %conv579 = trunc i64 %sub.ptr.div578704 to i32
  %cmp581856 = icmp sgt i32 %conv579, 0
  br i1 %cmp581856, label %for.body582.lr.ph, label %for.end781

for.body582.lr.ph:                                ; preds = %for.end560
  %x706 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y715 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z722 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x757 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y767 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z775 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %128 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576
  %129 = lshr i64 %128, 2
  %130 = trunc i64 %129 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.body582.for.body582_crit_edge, %for.body582.lr.ph
  %131 = phi i32* [ %102, %for.body582.lr.ph ], [ %.pre, %for.body582.for.body582_crit_edge ]
  %indvars.iv1029 = phi i64 [ 0, %for.body582.lr.ph ], [ %indvars.iv.next1030, %for.body582.for.body582_crit_edge ]
  %fullElectVirial_zz.1858 = phi double [ %fullElectVirial_zz.0942, %for.body582.lr.ph ], [ %add774, %for.body582.for.body582_crit_edge ]
  %132 = phi <2 x double> [ %64, %for.body582.lr.ph ], [ %208, %for.body582.for.body582_crit_edge ]
  %133 = phi <2 x double> [ %65, %for.body582.lr.ph ], [ %165, %for.body582.for.body582_crit_edge ]
  %134 = phi <2 x double> [ %66, %for.body582.lr.ph ], [ %171, %for.body582.for.body582_crit_edge ]
  %135 = phi <2 x double> [ %67, %for.body582.lr.ph ], [ %184, %for.body582.for.body582_crit_edge ]
  %136 = phi <2 x double> [ %68, %for.body582.lr.ph ], [ %214, %for.body582.for.body582_crit_edge ]
  %137 = phi <2 x double> [ %69, %for.body582.lr.ph ], [ %223, %for.body582.for.body582_crit_edge ]
  %138 = phi <2 x double> [ %70, %for.body582.lr.ph ], [ %219, %for.body582.for.body582_crit_edge ]
  %arrayidx585 = getelementptr inbounds i32* %cond151792794, i64 %indvars.iv1029
  %139 = load i32* %arrayidx585, align 4, !tbaa !11
  %idx.ext586 = sext i32 %139 to i64
  %x589 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 0
  %140 = load double* %x589, align 8, !tbaa !59
  %sub590 = fsub double %76, %140
  %mul592 = fmul double %sub590, %sub590
  %y594 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 1
  %141 = load double* %y594, align 8, !tbaa !61
  %sub595 = fsub double %77, %141
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %mul592, %mul596
  %z599 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 0, i32 2
  %142 = load double* %z599, align 8, !tbaa !62
  %sub600 = fsub double %78, %142
  %mul601 = fmul double %sub600, %sub600
  %add602 = fadd double %add597, %mul601
  %conv603 = fptrunc double %add602 to float
  %143 = bitcast float %conv603 to i32
  %shr = ashr i32 %143, 17
  %add605 = add nsw i32 %shr, %mul
  %id606 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 2
  %144 = bitcast [4 x i8]* %id606 to i32*
  %bf.load607 = load i32* %144, align 4
  %bf.clear608 = and i32 %bf.load607, 4194303
  %idxprom.i766806 = zext i32 %bf.clear608 to i64
  %arrayidx.i768 = getelementptr inbounds i32* %131, i64 %idxprom.i766806
  %145 = load i32* %arrayidx.i768, align 4, !tbaa !11
  %conv.i769 = zext i32 %145 to i64
  %conv610 = shl nuw nsw i64 %conv.i769, 1
  %mul611 = and i64 %conv610, 131070
  %mul614 = shl nsw i32 %add605, 4
  %idx.ext615 = sext i32 %mul614 to i64
  %add.ptr616 = getelementptr inbounds double* %7, i64 %idx.ext615
  %146 = load double* %add.ptr616, align 8, !tbaa !17
  %add.ptr616.sum734 = or i64 %idx.ext615, 4
  %add.ptr621 = getelementptr inbounds double* %7, i64 %add.ptr616.sum734
  %147 = load double* %add.ptr621, align 8, !tbaa !17
  %add.ptr616.sum735 = or i64 %idx.ext615, 8
  %add.ptr626 = getelementptr inbounds double* %7, i64 %add.ptr616.sum735
  %148 = load double* %add.ptr626, align 8, !tbaa !17
  %add.ptr626.sum736 = or i64 %idx.ext615, 12
  %add.ptr632 = getelementptr inbounds double* %7, i64 %add.ptr626.sum736
  %149 = load double* %add.ptr632, align 8, !tbaa !17
  %and = and i32 %143, -131072
  %charge635 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext586, i32 1
  %150 = load float* %charge635, align 4, !tbaa !63
  %conv636 = fpext float %150 to double
  %mul637 = fmul double %mul372, %conv636
  %151 = bitcast i32 %and to float
  %conv639 = fpext float %151 to double
  %sub640 = fsub double %add602, %conv639
  %add.ptr.i.sum807 = add i64 %mul611, %idx.ext.i
  %A642 = getelementptr inbounds %"struct.LJTable::TableEntry"* %104, i64 %add.ptr.i.sum807, i32 0
  %152 = load double* %A642, align 8, !tbaa !69
  %mul643 = fmul double %9, %152
  %B645 = getelementptr inbounds %"struct.LJTable::TableEntry"* %104, i64 %add.ptr.i.sum807, i32 1
  %153 = load double* %B645, align 8, !tbaa !71
  %mul646 = fmul double %9, %153
  %mul647 = fmul double %146, %mul643
  %mul648 = fmul double %147, %mul646
  %sub649 = fsub double %mul647, %mul648
  %add.ptr616.sum737 = or i64 %idx.ext615, 3
  %arrayidx650 = getelementptr inbounds double* %7, i64 %add.ptr616.sum737
  %154 = load double* %arrayidx650, align 8, !tbaa !17
  %mul651 = fmul double %mul643, %154
  %add.ptr621.sum738 = or i64 %idx.ext615, 7
  %arrayidx652 = getelementptr inbounds double* %7, i64 %add.ptr621.sum738
  %155 = load double* %arrayidx652, align 8, !tbaa !17
  %mul653 = fmul double %mul646, %155
  %sub654 = fsub double %mul651, %mul653
  %add.ptr616.sum739 = or i64 %idx.ext615, 2
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr616.sum739
  %156 = load double* %arrayidx655, align 8, !tbaa !17
  %mul656 = fmul double %mul643, %156
  %add.ptr621.sum740 = or i64 %idx.ext615, 6
  %arrayidx657 = getelementptr inbounds double* %7, i64 %add.ptr621.sum740
  %157 = load double* %arrayidx657, align 8, !tbaa !17
  %mul658 = fmul double %mul646, %157
  %sub659 = fsub double %mul656, %mul658
  %add.ptr616.sum741 = or i64 %idx.ext615, 1
  %arrayidx660 = getelementptr inbounds double* %7, i64 %add.ptr616.sum741
  %158 = load double* %arrayidx660, align 8, !tbaa !17
  %mul661 = fmul double %mul643, %158
  %add.ptr621.sum742 = or i64 %idx.ext615, 5
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr621.sum742
  %159 = load double* %arrayidx662, align 8, !tbaa !17
  %mul663 = fmul double %mul646, %159
  %sub664 = fsub double %mul661, %mul663
  %mul665 = fmul double %sub640, %sub654
  %add666 = fadd double %mul665, %sub659
  %mul667 = fmul double %sub640, %add666
  %add668 = fadd double %mul667, %sub664
  %mul669 = fmul double %sub640, %add668
  %add670 = fadd double %sub649, %mul669
  %add.ptr626.sum743 = or i64 %idx.ext615, 11
  %arrayidx673 = getelementptr inbounds double* %7, i64 %add.ptr626.sum743
  %160 = load double* %arrayidx673, align 8, !tbaa !17
  %mul674 = fmul double %mul637, %160
  %add.ptr626.sum744 = or i64 %idx.ext615, 10
  %arrayidx675 = getelementptr inbounds double* %7, i64 %add.ptr626.sum744
  %161 = load double* %arrayidx675, align 8, !tbaa !17
  %mul676 = fmul double %mul637, %161
  %add.ptr626.sum745 = or i64 %idx.ext615, 9
  %arrayidx677 = getelementptr inbounds double* %7, i64 %add.ptr626.sum745
  %162 = load double* %arrayidx677, align 8, !tbaa !17
  %mul678 = fmul double %mul637, %162
  %mul679 = fmul double %sub640, %mul674
  %add686 = fadd double %sub654, %mul674
  %add687 = fadd double %sub659, %mul676
  %add688 = fadd double %sub664, %mul678
  %mul690 = fmul double %sub640, 3.000000e+00
  %mul691 = fmul double %mul690, %add686
  %mul692 = fmul double %add687, 2.000000e+00
  %add693 = fadd double %mul691, %mul692
  %mul694 = fmul double %sub640, %add693
  %add695 = fadd double %add688, %mul694
  %mul696 = fmul double %add695, -2.000000e+00
  %mul699 = fmul double %sub590, %mul696
  %mul700 = fmul double %sub590, %mul699
  %163 = insertelement <2 x double> undef, double %add670, i32 0
  %164 = insertelement <2 x double> %163, double %mul700, i32 1
  %165 = fadd <2 x double> %133, %164
  %166 = insertelement <2 x double> undef, double %sub595, i32 0
  %167 = insertelement <2 x double> %166, double %sub600, i32 1
  %168 = insertelement <2 x double> undef, double %mul699, i32 0
  %169 = insertelement <2 x double> %168, double %mul699, i32 1
  %170 = fmul <2 x double> %167, %169
  %171 = fadd <2 x double> %134, %170
  %172 = load double* %x706, align 8, !tbaa !72
  %add707 = fadd double %172, %mul699
  store double %add707, double* %x706, align 8, !tbaa !72
  %x708 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext586, i32 0
  %mul710 = fmul double %sub595, %mul696
  %173 = load double* %y715, align 8, !tbaa !73
  %add716 = fadd double %173, %mul710
  store double %add716, double* %y715, align 8, !tbaa !73
  %174 = bitcast double* %x708 to <2 x double>*
  %175 = load <2 x double>* %174, align 8, !tbaa !17
  %176 = insertelement <2 x double> %168, double %mul710, i32 1
  %177 = fsub <2 x double> %175, %176
  %178 = bitcast double* %x708 to <2 x double>*
  store <2 x double> %177, <2 x double>* %178, align 8, !tbaa !17
  %mul719 = fmul double %sub600, %mul696
  %179 = insertelement <2 x double> undef, double %sub600, i32 0
  %180 = insertelement <2 x double> %179, double %sub600, i32 1
  %181 = insertelement <2 x double> undef, double %mul710, i32 0
  %182 = insertelement <2 x double> %181, double %mul719, i32 1
  %183 = fmul <2 x double> %180, %182
  %184 = fadd <2 x double> %135, %183
  %185 = load double* %z722, align 8, !tbaa !74
  %add723 = fadd double %185, %mul719
  store double %add723, double* %z722, align 8, !tbaa !74
  %z724 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext586, i32 2
  %186 = load double* %z724, align 8, !tbaa !74
  %sub725 = fsub double %186, %mul719
  store double %sub725, double* %z724, align 8, !tbaa !74
  %add.ptr632.sum746 = or i64 %idx.ext615, 13
  %arrayidx726 = getelementptr inbounds double* %7, i64 %add.ptr632.sum746
  %187 = load double* %arrayidx726, align 8, !tbaa !17
  %add.ptr632.sum747 = or i64 %idx.ext615, 14
  %arrayidx727 = getelementptr inbounds double* %7, i64 %add.ptr632.sum747
  %188 = load double* %arrayidx727, align 8, !tbaa !17
  %add.ptr632.sum748 = or i64 %idx.ext615, 15
  %arrayidx728 = getelementptr inbounds double* %7, i64 %add.ptr632.sum748
  %189 = load double* %arrayidx728, align 8, !tbaa !17
  %mul729 = fmul double %mul637, %189
  %mul730 = fmul double %mul637, %188
  %mul731 = fmul double %mul637, %187
  %190 = insertelement <2 x double> undef, double %mul637, i32 0
  %191 = insertelement <2 x double> %190, double %mul637, i32 1
  %192 = insertelement <2 x double> undef, double %148, i32 0
  %193 = insertelement <2 x double> %192, double %149, i32 1
  %194 = fmul <2 x double> %191, %193
  %mul733 = fmul double %sub640, %mul729
  %195 = insertelement <2 x double> undef, double %mul679, i32 0
  %196 = insertelement <2 x double> %195, double %mul730, i32 1
  %197 = insertelement <2 x double> undef, double %mul676, i32 0
  %198 = insertelement <2 x double> %197, double %mul733, i32 1
  %199 = fadd <2 x double> %196, %198
  %200 = insertelement <2 x double> undef, double %sub640, i32 0
  %201 = insertelement <2 x double> %200, double %sub640, i32 1
  %202 = fmul <2 x double> %199, %201
  %203 = insertelement <2 x double> undef, double %mul678, i32 0
  %204 = insertelement <2 x double> %203, double %mul731, i32 1
  %205 = fadd <2 x double> %204, %202
  %206 = fmul <2 x double> %205, %201
  %207 = fadd <2 x double> %194, %206
  %208 = fadd <2 x double> %132, %207
  %mul741 = fmul double %mul690, %mul729
  %mul742 = fmul double %mul730, 2.000000e+00
  %add743 = fadd double %mul742, %mul741
  %mul744 = fmul double %sub640, %add743
  %add745 = fadd double %mul731, %mul744
  %mul746 = fmul double %add745, -2.000000e+00
  %mul750 = fmul double %sub590, %mul746
  %209 = insertelement <2 x double> undef, double %sub590, i32 0
  %210 = insertelement <2 x double> %209, double %sub595, i32 1
  %211 = insertelement <2 x double> undef, double %mul750, i32 0
  %212 = insertelement <2 x double> %211, double %mul750, i32 1
  %213 = fmul <2 x double> %210, %212
  %214 = fadd <2 x double> %136, %213
  %215 = load double* %x757, align 8, !tbaa !72
  %add758 = fadd double %215, %mul750
  store double %add758, double* %x757, align 8, !tbaa !72
  %x759 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext586, i32 0
  %mul762 = fmul double %sub595, %mul746
  %216 = insertelement <2 x double> %166, double %sub595, i32 1
  %217 = insertelement <2 x double> %181, double %mul762, i32 1
  %218 = fmul <2 x double> %216, %217
  %219 = fadd <2 x double> %138, %218
  %220 = insertelement <2 x double> undef, double %mul762, i32 0
  %221 = insertelement <2 x double> %220, double %mul750, i32 1
  %222 = fmul <2 x double> %180, %221
  %223 = fadd <2 x double> %137, %222
  %224 = load double* %y767, align 8, !tbaa !73
  %add768 = fadd double %224, %mul762
  store double %add768, double* %y767, align 8, !tbaa !73
  %225 = bitcast double* %x759 to <2 x double>*
  %226 = load <2 x double>* %225, align 8, !tbaa !17
  %227 = insertelement <2 x double> %211, double %mul762, i32 1
  %228 = fsub <2 x double> %226, %227
  %229 = bitcast double* %x759 to <2 x double>*
  store <2 x double> %228, <2 x double>* %229, align 8, !tbaa !17
  %mul772 = fmul double %sub600, %mul746
  %mul773 = fmul double %sub600, %mul772
  %add774 = fadd double %fullElectVirial_zz.1858, %mul773
  %230 = load double* %z775, align 8, !tbaa !74
  %add776 = fadd double %230, %mul772
  store double %add776, double* %z775, align 8, !tbaa !74
  %z777 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext586, i32 2
  %231 = load double* %z777, align 8, !tbaa !74
  %sub778 = fsub double %231, %mul772
  store double %sub778, double* %z777, align 8, !tbaa !74
  %indvars.iv.next1030 = add nuw nsw i64 %indvars.iv1029, 1
  %lftr.wideiv1031 = trunc i64 %indvars.iv.next1030 to i32
  %exitcond1032 = icmp eq i32 %lftr.wideiv1031, %130
  br i1 %exitcond1032, label %for.end781, label %for.body582.for.body582_crit_edge

for.body582.for.body582_crit_edge:                ; preds = %for.body582
  %.pre = load i32** %atomVdwType.i771, align 8, !tbaa !64
  br label %for.body582

for.end781:                                       ; preds = %for.body582, %for.end560
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0942, %for.end560 ], [ %add774, %for.body582 ]
  %232 = phi <2 x double> [ %64, %for.end560 ], [ %208, %for.body582 ]
  %233 = phi <2 x double> [ %65, %for.end560 ], [ %165, %for.body582 ]
  %234 = phi <2 x double> [ %66, %for.end560 ], [ %171, %for.body582 ]
  %235 = phi <2 x double> [ %67, %for.end560 ], [ %184, %for.body582 ]
  %236 = phi <2 x double> [ %68, %for.end560 ], [ %214, %for.body582 ]
  %237 = phi <2 x double> [ %69, %for.end560 ], [ %223, %for.body582 ]
  %238 = phi <2 x double> [ %70, %for.end560 ], [ %219, %for.body582 ]
  %conv786 = trunc i64 %sub.ptr.div571 to i32
  %cmp788888 = icmp sgt i32 %conv786, 0
  br i1 %cmp788888, label %for.body789.lr.ph, label %for.end1048

for.body789.lr.ph:                                ; preds = %for.end781
  %x949 = getelementptr inbounds %class.Vector* %arrayidx196, i64 0, i32 0
  %y959 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 1
  %z967 = getelementptr inbounds %class.Vector* %57, i64 %idxprom188, i32 2
  %x1024 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1034 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1042 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  br label %for.body789

for.body789:                                      ; preds = %for.body789, %for.body789.lr.ph
  %indvars.iv1033 = phi i64 [ 0, %for.body789.lr.ph ], [ %indvars.iv.next1034, %for.body789 ]
  %fullElectVirial_zz.2890 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body789.lr.ph ], [ %add1041, %for.body789 ]
  %239 = phi <2 x double> [ %232, %for.body789.lr.ph ], [ %322, %for.body789 ]
  %240 = phi <2 x double> [ %233, %for.body789.lr.ph ], [ %273, %for.body789 ]
  %241 = phi <2 x double> [ %234, %for.body789.lr.ph ], [ %279, %for.body789 ]
  %242 = phi <2 x double> [ %235, %for.body789.lr.ph ], [ %292, %for.body789 ]
  %243 = phi <2 x double> [ %236, %for.body789.lr.ph ], [ %329, %for.body789 ]
  %244 = phi <2 x double> [ %237, %for.body789.lr.ph ], [ %338, %for.body789 ]
  %245 = phi <2 x double> [ %238, %for.body789.lr.ph ], [ %334, %for.body789 ]
  %arrayidx792 = getelementptr inbounds i32* %cond173, i64 %indvars.iv1033
  %246 = load i32* %arrayidx792, align 4, !tbaa !11
  %idx.ext794 = sext i32 %246 to i64
  %x798 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext794, i32 0, i32 0
  %247 = load double* %x798, align 8, !tbaa !59
  %sub799 = fsub double %76, %247
  %mul801 = fmul double %sub799, %sub799
  %y804 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext794, i32 0, i32 1
  %248 = load double* %y804, align 8, !tbaa !61
  %sub805 = fsub double %77, %248
  %mul806 = fmul double %sub805, %sub805
  %add807 = fadd double %mul801, %mul806
  %z810 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext794, i32 0, i32 2
  %249 = load double* %z810, align 8, !tbaa !62
  %sub811 = fsub double %78, %249
  %mul812 = fmul double %sub811, %sub811
  %add813 = fadd double %add807, %mul812
  %conv815 = fptrunc double %add813 to float
  %250 = bitcast float %conv815 to i32
  %shr819 = ashr i32 %250, 17
  %add820 = add nsw i32 %shr819, %mul
  %id822 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext794, i32 2
  %251 = bitcast [4 x i8]* %id822 to i32*
  %bf.load823 = load i32* %251, align 4
  %bf.clear824 = and i32 %bf.load823, 4194303
  %idxprom.i764804 = zext i32 %bf.clear824 to i64
  %252 = load i32** %atomVdwType.i771, align 8, !tbaa !64
  %arrayidx.i765 = getelementptr inbounds i32* %252, i64 %idxprom.i764804
  %253 = load i32* %arrayidx.i765, align 4, !tbaa !11
  %conv.i = zext i32 %253 to i64
  %conv826 = shl nuw nsw i64 %conv.i, 1
  %mul827 = and i64 %conv826, 131070
  %add.ptr829.sum714 = or i64 %mul827, 1
  %mul832 = shl nsw i32 %add820, 4
  %idx.ext833 = sext i32 %mul832 to i64
  %add.ptr834 = getelementptr inbounds double* %7, i64 %idx.ext833
  %254 = load double* %add.ptr834, align 8, !tbaa !17
  %add.ptr834.sum715 = or i64 %idx.ext833, 4
  %add.ptr841 = getelementptr inbounds double* %7, i64 %add.ptr834.sum715
  %255 = load double* %add.ptr841, align 8, !tbaa !17
  %add.ptr834.sum716 = or i64 %idx.ext833, 8
  %add.ptr848 = getelementptr inbounds double* %7, i64 %add.ptr834.sum716
  %256 = load double* %add.ptr848, align 8, !tbaa !17
  %add.ptr848.sum717 = or i64 %idx.ext833, 12
  %add.ptr856 = getelementptr inbounds double* %7, i64 %add.ptr848.sum717
  %257 = load double* %add.ptr856, align 8, !tbaa !17
  %and860 = and i32 %250, -131072
  %charge862 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext794, i32 1
  %258 = load float* %charge862, align 4, !tbaa !63
  %conv863 = fpext float %258 to double
  %mul864 = fmul double %mul372, %conv863
  %259 = bitcast i32 %and860 to float
  %conv867 = fpext float %259 to double
  %sub868 = fsub double %add813, %conv867
  %add.ptr.i.sum = add i64 %add.ptr829.sum714, %idx.ext.i
  %A870 = getelementptr inbounds %"struct.LJTable::TableEntry"* %104, i64 %add.ptr.i.sum, i32 0
  %260 = load double* %A870, align 8, !tbaa !69
  %mul871 = fmul double %9, %260
  %B873 = getelementptr inbounds %"struct.LJTable::TableEntry"* %104, i64 %add.ptr.i.sum, i32 1
  %261 = load double* %B873, align 8, !tbaa !71
  %mul874 = fmul double %9, %261
  %mul876 = fmul double %254, %mul871
  %mul877 = fmul double %255, %mul874
  %sub878 = fsub double %mul876, %mul877
  %add.ptr834.sum718 = or i64 %idx.ext833, 3
  %arrayidx880 = getelementptr inbounds double* %7, i64 %add.ptr834.sum718
  %262 = load double* %arrayidx880, align 8, !tbaa !17
  %mul881 = fmul double %mul871, %262
  %add.ptr841.sum719 = or i64 %idx.ext833, 7
  %arrayidx882 = getelementptr inbounds double* %7, i64 %add.ptr841.sum719
  %263 = load double* %arrayidx882, align 8, !tbaa !17
  %mul883 = fmul double %mul874, %263
  %sub884 = fsub double %mul881, %mul883
  %add.ptr834.sum720 = or i64 %idx.ext833, 2
  %arrayidx886 = getelementptr inbounds double* %7, i64 %add.ptr834.sum720
  %264 = load double* %arrayidx886, align 8, !tbaa !17
  %mul887 = fmul double %mul871, %264
  %add.ptr841.sum721 = or i64 %idx.ext833, 6
  %arrayidx888 = getelementptr inbounds double* %7, i64 %add.ptr841.sum721
  %265 = load double* %arrayidx888, align 8, !tbaa !17
  %mul889 = fmul double %mul874, %265
  %sub890 = fsub double %mul887, %mul889
  %add.ptr834.sum722 = or i64 %idx.ext833, 1
  %arrayidx892 = getelementptr inbounds double* %7, i64 %add.ptr834.sum722
  %266 = load double* %arrayidx892, align 8, !tbaa !17
  %mul893 = fmul double %mul871, %266
  %add.ptr841.sum723 = or i64 %idx.ext833, 5
  %arrayidx894 = getelementptr inbounds double* %7, i64 %add.ptr841.sum723
  %267 = load double* %arrayidx894, align 8, !tbaa !17
  %mul895 = fmul double %mul874, %267
  %sub896 = fsub double %mul893, %mul895
  %mul898 = fmul double %sub868, %sub884
  %add899 = fadd double %mul898, %sub890
  %mul900 = fmul double %sub868, %add899
  %add901 = fadd double %mul900, %sub896
  %mul902 = fmul double %sub868, %add901
  %add903 = fadd double %sub878, %mul902
  %mul906 = fmul double %sub905, %mul864
  %add.ptr848.sum724 = or i64 %idx.ext833, 11
  %arrayidx909 = getelementptr inbounds double* %7, i64 %add.ptr848.sum724
  %268 = load double* %arrayidx909, align 8, !tbaa !17
  %mul910 = fmul double %mul906, %268
  %add.ptr848.sum725 = or i64 %idx.ext833, 10
  %arrayidx912 = getelementptr inbounds double* %7, i64 %add.ptr848.sum725
  %269 = load double* %arrayidx912, align 8, !tbaa !17
  %mul913 = fmul double %mul906, %269
  %add.ptr848.sum726 = or i64 %idx.ext833, 9
  %arrayidx915 = getelementptr inbounds double* %7, i64 %add.ptr848.sum726
  %270 = load double* %arrayidx915, align 8, !tbaa !17
  %mul916 = fmul double %mul906, %270
  %add925 = fadd double %sub884, %mul910
  %add926 = fadd double %sub890, %mul913
  %add927 = fadd double %sub896, %mul916
  %mul930 = fmul double %sub868, 3.000000e+00
  %mul931 = fmul double %mul930, %add925
  %mul932 = fmul double %add926, 2.000000e+00
  %add933 = fadd double %mul931, %mul932
  %mul934 = fmul double %sub868, %add933
  %add935 = fadd double %add927, %mul934
  %mul937 = fmul double %add935, -2.000000e+00
  %mul942 = fmul double %sub799, %mul937
  %mul943 = fmul double %sub799, %mul942
  %271 = insertelement <2 x double> undef, double %add903, i32 0
  %272 = insertelement <2 x double> %271, double %mul943, i32 1
  %273 = fadd <2 x double> %240, %272
  %274 = insertelement <2 x double> undef, double %sub805, i32 0
  %275 = insertelement <2 x double> %274, double %sub811, i32 1
  %276 = insertelement <2 x double> undef, double %mul942, i32 0
  %277 = insertelement <2 x double> %276, double %mul942, i32 1
  %278 = fmul <2 x double> %275, %277
  %279 = fadd <2 x double> %241, %278
  %280 = load double* %x949, align 8, !tbaa !72
  %add950 = fadd double %280, %mul942
  store double %add950, double* %x949, align 8, !tbaa !72
  %x951 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext794, i32 0
  %mul954 = fmul double %sub805, %mul937
  %281 = load double* %y959, align 8, !tbaa !73
  %add960 = fadd double %281, %mul954
  store double %add960, double* %y959, align 8, !tbaa !73
  %282 = bitcast double* %x951 to <2 x double>*
  %283 = load <2 x double>* %282, align 8, !tbaa !17
  %284 = insertelement <2 x double> %276, double %mul954, i32 1
  %285 = fsub <2 x double> %283, %284
  %286 = bitcast double* %x951 to <2 x double>*
  store <2 x double> %285, <2 x double>* %286, align 8, !tbaa !17
  %mul964 = fmul double %sub811, %mul937
  %287 = insertelement <2 x double> undef, double %sub811, i32 0
  %288 = insertelement <2 x double> %287, double %sub811, i32 1
  %289 = insertelement <2 x double> undef, double %mul954, i32 0
  %290 = insertelement <2 x double> %289, double %mul964, i32 1
  %291 = fmul <2 x double> %288, %290
  %292 = fadd <2 x double> %242, %291
  %293 = load double* %z967, align 8, !tbaa !74
  %add968 = fadd double %293, %mul964
  store double %add968, double* %z967, align 8, !tbaa !74
  %z969 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext794, i32 2
  %294 = load double* %z969, align 8, !tbaa !74
  %sub970 = fsub double %294, %mul964
  store double %sub970, double* %z969, align 8, !tbaa !74
  %add.ptr856.sum727 = or i64 %idx.ext833, 13
  %arrayidx972 = getelementptr inbounds double* %7, i64 %add.ptr856.sum727
  %295 = load double* %arrayidx972, align 8, !tbaa !17
  %add.ptr856.sum728 = or i64 %idx.ext833, 14
  %arrayidx974 = getelementptr inbounds double* %7, i64 %add.ptr856.sum728
  %296 = load double* %arrayidx974, align 8, !tbaa !17
  %add.ptr856.sum729 = or i64 %idx.ext833, 15
  %arrayidx976 = getelementptr inbounds double* %7, i64 %add.ptr856.sum729
  %297 = load double* %arrayidx976, align 8, !tbaa !17
  %mul977 = shl nsw i32 %add820, 2
  %idx.ext978 = sext i32 %mul977 to i64
  %add.ptr979 = getelementptr inbounds double* %8, i64 %idx.ext978
  %298 = load double* %add.ptr979, align 8, !tbaa !17
  %mul981 = fmul double %sub, %298
  %sub982 = fsub double %257, %mul981
  %add.ptr979.sum730 = or i64 %idx.ext978, 1
  %arrayidx983 = getelementptr inbounds double* %8, i64 %add.ptr979.sum730
  %299 = load double* %arrayidx983, align 8, !tbaa !17
  %mul984 = fmul double %sub, %299
  %sub985 = fsub double %295, %mul984
  %add.ptr979.sum731 = or i64 %idx.ext978, 2
  %arrayidx986 = getelementptr inbounds double* %8, i64 %add.ptr979.sum731
  %300 = load double* %arrayidx986, align 8, !tbaa !17
  %mul987 = fmul double %sub, %300
  %sub988 = fsub double %296, %mul987
  %add.ptr979.sum732 = or i64 %idx.ext978, 3
  %arrayidx989 = getelementptr inbounds double* %8, i64 %add.ptr979.sum732
  %301 = load double* %arrayidx989, align 8, !tbaa !17
  %mul990 = fmul double %sub, %301
  %sub991 = fsub double %297, %mul990
  %mul992 = fmul double %mul864, %sub991
  %302 = insertelement <2 x double> undef, double %sub868, i32 0
  %303 = insertelement <2 x double> %302, double %sub988, i32 1
  %304 = insertelement <2 x double> undef, double %mul910, i32 0
  %305 = insertelement <2 x double> %304, double %mul864, i32 1
  %306 = fmul <2 x double> %303, %305
  %mul994 = fmul double %mul864, %sub985
  %307 = insertelement <2 x double> undef, double %mul906, i32 0
  %308 = insertelement <2 x double> %307, double %sub982, i32 1
  %309 = insertelement <2 x double> undef, double %256, i32 0
  %310 = insertelement <2 x double> %309, double %mul864, i32 1
  %311 = fmul <2 x double> %308, %310
  %mul997 = fmul double %sub868, %mul992
  %312 = insertelement <2 x double> undef, double %mul913, i32 0
  %313 = insertelement <2 x double> %312, double %mul997, i32 1
  %314 = fadd <2 x double> %306, %313
  %315 = insertelement <2 x double> %302, double %sub868, i32 1
  %316 = fmul <2 x double> %314, %315
  %317 = insertelement <2 x double> undef, double %mul916, i32 0
  %318 = insertelement <2 x double> %317, double %mul994, i32 1
  %319 = fadd <2 x double> %318, %316
  %320 = fmul <2 x double> %319, %315
  %321 = fadd <2 x double> %311, %320
  %322 = fadd <2 x double> %239, %321
  %mul1006 = fmul double %mul930, %mul992
  %323 = extractelement <2 x double> %306, i32 1
  %mul1007 = fmul double %323, 2.000000e+00
  %add1008 = fadd double %mul1007, %mul1006
  %mul1009 = fmul double %sub868, %add1008
  %add1010 = fadd double %mul994, %mul1009
  %mul1012 = fmul double %add1010, -2.000000e+00
  %mul1017 = fmul double %sub799, %mul1012
  %324 = insertelement <2 x double> undef, double %sub799, i32 0
  %325 = insertelement <2 x double> %324, double %sub805, i32 1
  %326 = insertelement <2 x double> undef, double %mul1017, i32 0
  %327 = insertelement <2 x double> %326, double %mul1017, i32 1
  %328 = fmul <2 x double> %325, %327
  %329 = fadd <2 x double> %243, %328
  %330 = load double* %x1024, align 8, !tbaa !72
  %add1025 = fadd double %330, %mul1017
  store double %add1025, double* %x1024, align 8, !tbaa !72
  %x1026 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext794, i32 0
  %mul1029 = fmul double %sub805, %mul1012
  %331 = insertelement <2 x double> %274, double %sub805, i32 1
  %332 = insertelement <2 x double> %289, double %mul1029, i32 1
  %333 = fmul <2 x double> %331, %332
  %334 = fadd <2 x double> %245, %333
  %335 = insertelement <2 x double> undef, double %mul1029, i32 0
  %336 = insertelement <2 x double> %335, double %mul1017, i32 1
  %337 = fmul <2 x double> %288, %336
  %338 = fadd <2 x double> %244, %337
  %339 = load double* %y1034, align 8, !tbaa !73
  %add1035 = fadd double %339, %mul1029
  store double %add1035, double* %y1034, align 8, !tbaa !73
  %340 = bitcast double* %x1026 to <2 x double>*
  %341 = load <2 x double>* %340, align 8, !tbaa !17
  %342 = insertelement <2 x double> %326, double %mul1029, i32 1
  %343 = fsub <2 x double> %341, %342
  %344 = bitcast double* %x1026 to <2 x double>*
  store <2 x double> %343, <2 x double>* %344, align 8, !tbaa !17
  %mul1039 = fmul double %sub811, %mul1012
  %mul1040 = fmul double %sub811, %mul1039
  %add1041 = fadd double %fullElectVirial_zz.2890, %mul1040
  %345 = load double* %z1042, align 8, !tbaa !74
  %add1043 = fadd double %345, %mul1039
  store double %add1043, double* %z1042, align 8, !tbaa !74
  %z1044 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext794, i32 2
  %346 = load double* %z1044, align 8, !tbaa !74
  %sub1045 = fsub double %346, %mul1039
  store double %sub1045, double* %z1044, align 8, !tbaa !74
  %indvars.iv.next1034 = add nuw nsw i64 %indvars.iv1033, 1
  %lftr.wideiv1035 = trunc i64 %indvars.iv.next1034 to i32
  %exitcond1036 = icmp eq i32 %lftr.wideiv1035, %conv786
  br i1 %exitcond1036, label %for.end1048, label %for.body789

for.end1048:                                      ; preds = %for.body789, %for.end781
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end781 ], [ %add1041, %for.body789 ]
  %347 = phi <2 x double> [ %232, %for.end781 ], [ %322, %for.body789 ]
  %348 = phi <2 x double> [ %233, %for.end781 ], [ %273, %for.body789 ]
  %349 = phi <2 x double> [ %234, %for.end781 ], [ %279, %for.body789 ]
  %350 = phi <2 x double> [ %235, %for.end781 ], [ %292, %for.body789 ]
  %351 = phi <2 x double> [ %236, %for.end781 ], [ %329, %for.body789 ]
  %352 = phi <2 x double> [ %237, %for.end781 ], [ %338, %for.body789 ]
  %353 = phi <2 x double> [ %238, %for.end781 ], [ %334, %for.body789 ]
  %conv1053 = trunc i64 %sub.ptr.div564 to i32
  %cmp1055920 = icmp sgt i32 %conv1053, 0
  br i1 %cmp1055920, label %for.body1056.lr.ph, label %for.inc1181

for.body1056.lr.ph:                               ; preds = %for.end1048
  %354 = extractelement <2 x double> %347, i32 1
  %355 = extractelement <2 x double> %347, i32 0
  %356 = extractelement <2 x double> %353, i32 1
  %357 = extractelement <2 x double> %353, i32 0
  %x1156 = getelementptr inbounds %class.Vector* %arrayidx198, i64 0, i32 0
  %y1166 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 1
  %z1174 = getelementptr inbounds %class.Vector* %59, i64 %idxprom188, i32 2
  %358 = insertelement <2 x double> undef, double %355, i32 0
  %359 = insertelement <2 x double> undef, double %357, i32 0
  br label %for.body1056

for.body1056:                                     ; preds = %for.body1056, %for.body1056.lr.ph
  %indvars.iv1037 = phi i64 [ 0, %for.body1056.lr.ph ], [ %indvars.iv.next1038, %for.body1056 ]
  %fullElectEnergy.3928 = phi double [ %354, %for.body1056.lr.ph ], [ %add1135, %for.body1056 ]
  %fullElectVirial_yy.3924 = phi double [ %356, %for.body1056.lr.ph ], [ %add1163, %for.body1056 ]
  %fullElectVirial_zz.3922 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body1056.lr.ph ], [ %add1173, %for.body1056 ]
  %360 = phi <2 x double> [ %351, %for.body1056.lr.ph ], [ %382, %for.body1056 ]
  %361 = phi <2 x double> [ %352, %for.body1056.lr.ph ], [ %389, %for.body1056 ]
  %arrayidx1059 = getelementptr inbounds i32* %cond162800, i64 %indvars.iv1037
  %362 = load i32* %arrayidx1059, align 4, !tbaa !11
  %idx.ext1061 = sext i32 %362 to i64
  %x1065 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1061, i32 0, i32 0
  %363 = load double* %x1065, align 8, !tbaa !59
  %sub1066 = fsub double %76, %363
  %mul1068 = fmul double %sub1066, %sub1066
  %y1071 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1061, i32 0, i32 1
  %364 = load double* %y1071, align 8, !tbaa !61
  %sub1072 = fsub double %77, %364
  %mul1073 = fmul double %sub1072, %sub1072
  %add1074 = fadd double %mul1068, %mul1073
  %z1077 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1061, i32 0, i32 2
  %365 = load double* %z1077, align 8, !tbaa !62
  %sub1078 = fsub double %78, %365
  %mul1079 = fmul double %sub1078, %sub1078
  %add1080 = fadd double %add1074, %mul1079
  %conv1082 = fptrunc double %add1080 to float
  %366 = bitcast float %conv1082 to i32
  %shr1086 = ashr i32 %366, 17
  %add1087 = add nsw i32 %shr1086, %mul
  %mul1089 = shl nsw i32 %add1087, 4
  %idx.ext1090 = sext i32 %mul1089 to i64
  %add.ptr1092.sum706 = or i64 %idx.ext1090, 12
  %add.ptr1093 = getelementptr inbounds double* %7, i64 %add.ptr1092.sum706
  %367 = load double* %add.ptr1093, align 8, !tbaa !17
  %and1097 = and i32 %366, -131072
  %charge1099 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1061, i32 1
  %368 = load float* %charge1099, align 4, !tbaa !63
  %conv1100 = fpext float %368 to double
  %mul1101 = fmul double %mul372, %conv1100
  %369 = bitcast i32 %and1097 to float
  %conv1104 = fpext float %369 to double
  %sub1105 = fsub double %add1080, %conv1104
  %add.ptr1093.sum707 = or i64 %idx.ext1090, 13
  %arrayidx1107 = getelementptr inbounds double* %7, i64 %add.ptr1093.sum707
  %370 = load double* %arrayidx1107, align 8, !tbaa !17
  %add.ptr1093.sum708 = or i64 %idx.ext1090, 14
  %arrayidx1109 = getelementptr inbounds double* %7, i64 %add.ptr1093.sum708
  %371 = load double* %arrayidx1109, align 8, !tbaa !17
  %add.ptr1093.sum709 = or i64 %idx.ext1090, 15
  %arrayidx1111 = getelementptr inbounds double* %7, i64 %add.ptr1093.sum709
  %372 = load double* %arrayidx1111, align 8, !tbaa !17
  %mul1113 = shl nsw i32 %add1087, 2
  %idx.ext1114 = sext i32 %mul1113 to i64
  %add.ptr1115 = getelementptr inbounds double* %8, i64 %idx.ext1114
  %373 = load double* %add.ptr1115, align 8, !tbaa !17
  %sub1117 = fsub double %367, %373
  %add.ptr1115.sum710 = or i64 %idx.ext1114, 1
  %arrayidx1118 = getelementptr inbounds double* %8, i64 %add.ptr1115.sum710
  %374 = load double* %arrayidx1118, align 8, !tbaa !17
  %sub1119 = fsub double %370, %374
  %add.ptr1115.sum711 = or i64 %idx.ext1114, 2
  %arrayidx1120 = getelementptr inbounds double* %8, i64 %add.ptr1115.sum711
  %375 = load double* %arrayidx1120, align 8, !tbaa !17
  %sub1121 = fsub double %371, %375
  %add.ptr1115.sum712 = or i64 %idx.ext1114, 3
  %arrayidx1122 = getelementptr inbounds double* %8, i64 %add.ptr1115.sum712
  %376 = load double* %arrayidx1122, align 8, !tbaa !17
  %sub1123 = fsub double %372, %376
  %mul1124 = fmul double %mul1101, %sub1123
  %mul1125 = fmul double %mul1101, %sub1121
  %mul1126 = fmul double %mul1101, %sub1119
  %mul1127 = fmul double %mul1101, %sub1117
  %mul1129 = fmul double %sub1105, %mul1124
  %add1130 = fadd double %mul1125, %mul1129
  %mul1131 = fmul double %sub1105, %add1130
  %add1132 = fadd double %mul1126, %mul1131
  %mul1133 = fmul double %sub1105, %add1132
  %add1134 = fadd double %mul1127, %mul1133
  %add1135 = fadd double %fullElectEnergy.3928, %add1134
  %mul1137 = fmul double %sub1105, 3.000000e+00
  %mul1138 = fmul double %mul1137, %mul1124
  %mul1139 = fmul double %mul1125, 2.000000e+00
  %add1140 = fadd double %mul1139, %mul1138
  %mul1141 = fmul double %sub1105, %add1140
  %add1142 = fadd double %mul1126, %mul1141
  %mul1144 = fmul double %add1142, -2.000000e+00
  %mul1149 = fmul double %sub1066, %mul1144
  %377 = insertelement <2 x double> undef, double %sub1066, i32 0
  %378 = insertelement <2 x double> %377, double %sub1072, i32 1
  %379 = insertelement <2 x double> undef, double %mul1149, i32 0
  %380 = insertelement <2 x double> %379, double %mul1149, i32 1
  %381 = fmul <2 x double> %378, %380
  %382 = fadd <2 x double> %360, %381
  %383 = load double* %x1156, align 8, !tbaa !72
  %add1157 = fadd double %383, %mul1149
  store double %add1157, double* %x1156, align 8, !tbaa !72
  %x1158 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1061, i32 0
  %mul1161 = fmul double %sub1072, %mul1144
  %mul1162 = fmul double %sub1072, %mul1161
  %add1163 = fadd double %fullElectVirial_yy.3924, %mul1162
  %384 = insertelement <2 x double> undef, double %sub1078, i32 0
  %385 = insertelement <2 x double> %384, double %sub1078, i32 1
  %386 = insertelement <2 x double> undef, double %mul1161, i32 0
  %387 = insertelement <2 x double> %386, double %mul1149, i32 1
  %388 = fmul <2 x double> %385, %387
  %389 = fadd <2 x double> %361, %388
  %390 = load double* %y1166, align 8, !tbaa !73
  %add1167 = fadd double %390, %mul1161
  store double %add1167, double* %y1166, align 8, !tbaa !73
  %391 = bitcast double* %x1158 to <2 x double>*
  %392 = load <2 x double>* %391, align 8, !tbaa !17
  %393 = insertelement <2 x double> %379, double %mul1161, i32 1
  %394 = fsub <2 x double> %392, %393
  %395 = bitcast double* %x1158 to <2 x double>*
  store <2 x double> %394, <2 x double>* %395, align 8, !tbaa !17
  %mul1171 = fmul double %sub1078, %mul1144
  %mul1172 = fmul double %sub1078, %mul1171
  %add1173 = fadd double %fullElectVirial_zz.3922, %mul1172
  %396 = load double* %z1174, align 8, !tbaa !74
  %add1175 = fadd double %396, %mul1171
  store double %add1175, double* %z1174, align 8, !tbaa !74
  %z1176 = getelementptr inbounds %class.Vector* %60, i64 %idx.ext1061, i32 2
  %397 = load double* %z1176, align 8, !tbaa !74
  %sub1177 = fsub double %397, %mul1171
  store double %sub1177, double* %z1176, align 8, !tbaa !74
  %indvars.iv.next1038 = add nuw nsw i64 %indvars.iv1037, 1
  %lftr.wideiv1039 = trunc i64 %indvars.iv.next1038 to i32
  %exitcond1040 = icmp eq i32 %lftr.wideiv1039, %conv1053
  br i1 %exitcond1040, label %for.inc1181.loopexit, label %for.body1056

for.inc1181.loopexit:                             ; preds = %for.body1056
  %398 = insertelement <2 x double> %358, double %add1135, i32 1
  %399 = insertelement <2 x double> %359, double %add1163, i32 1
  br label %for.inc1181

for.inc1181:                                      ; preds = %for.inc1181.loopexit, %for.end1048, %cond.end354, %if.then226
  %pairCount.3 = phi i32 [ %add222, %if.then226 ], [ %pairCount.1, %cond.end354 ], [ %pairCount.2, %for.end1048 ], [ %pairCount.2, %for.inc1181.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0940, %if.then226 ], [ 0, %cond.end354 ], [ %pairlistindex.1, %for.end1048 ], [ %pairlistindex.1, %for.inc1181.loopexit ]
  %i.2 = phi i32 [ %add228, %if.then226 ], [ %add357, %cond.end354 ], [ %i.1941, %for.end1048 ], [ %i.1941, %for.inc1181.loopexit ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0942, %if.then226 ], [ %fullElectVirial_zz.0942, %cond.end354 ], [ %fullElectVirial_zz.2.lcssa, %for.end1048 ], [ %add1173, %for.inc1181.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0972, %if.then226 ], [ %exclChecksum.0972, %cond.end354 ], [ %conv574, %for.end1048 ], [ %conv574, %for.inc1181.loopexit ]
  %400 = phi <2 x double> [ %64, %if.then226 ], [ %64, %cond.end354 ], [ %347, %for.end1048 ], [ %398, %for.inc1181.loopexit ]
  %401 = phi <2 x double> [ %65, %if.then226 ], [ %65, %cond.end354 ], [ %348, %for.end1048 ], [ %348, %for.inc1181.loopexit ]
  %402 = phi <2 x double> [ %66, %if.then226 ], [ %66, %cond.end354 ], [ %349, %for.end1048 ], [ %349, %for.inc1181.loopexit ]
  %403 = phi <2 x double> [ %67, %if.then226 ], [ %67, %cond.end354 ], [ %350, %for.end1048 ], [ %350, %for.inc1181.loopexit ]
  %404 = phi <2 x double> [ %68, %if.then226 ], [ %68, %cond.end354 ], [ %351, %for.end1048 ], [ %382, %for.inc1181.loopexit ]
  %405 = phi <2 x double> [ %69, %if.then226 ], [ %69, %cond.end354 ], [ %352, %for.end1048 ], [ %389, %for.inc1181.loopexit ]
  %406 = phi <2 x double> [ %70, %if.then226 ], [ %70, %cond.end354 ], [ %353, %for.end1048 ], [ %399, %for.inc1181.loopexit ]
  %inc1182 = add nsw i32 %i.2, 1
  %cmp186 = icmp slt i32 %inc1182, %13
  br i1 %cmp186, label %for.body187, label %for.end1183

for.end1183:                                      ; preds = %for.inc1181, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1181 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end172 ], [ %fullElectVirial_zz.4, %for.inc1181 ]
  %407 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %400, %for.inc1181 ]
  %408 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %401, %for.inc1181 ]
  %409 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %402, %for.inc1181 ]
  %410 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %403, %for.inc1181 ]
  %411 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %404, %for.inc1181 ]
  %412 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %405, %for.inc1181 ]
  %413 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %406, %for.inc1181 ]
  %414 = extractelement <2 x double> %412, i32 1
  %415 = extractelement <2 x double> %412, i32 0
  %arraydecay1184 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1185 = icmp eq i32* %cond77477610561062, %arraydecay1184
  br i1 %cmp1185, label %if.end1190, label %delete.notnull1188

delete.notnull1188:                               ; preds = %for.end1183
  %416 = bitcast i32* %cond77477610561062 to i8*
  call void @_ZdaPv(i8* %416) #7
  br label %if.end1190

if.end1190:                                       ; preds = %delete.notnull1188, %for.end1183
  %arraydecay1191 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1192 = icmp eq i32* %cond1977810541063, %arraydecay1191
  br i1 %cmp1192, label %if.end1197, label %delete.notnull1195

delete.notnull1195:                               ; preds = %if.end1190
  %417 = bitcast i32* %cond1977810541063 to i8*
  call void @_ZdaPv(i8* %417) #7
  br label %if.end1197

if.end1197:                                       ; preds = %delete.notnull1195, %if.end1190
  %arraydecay1198 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1199 = icmp eq i32* %cond3010581061, %arraydecay1198
  br i1 %cmp1199, label %if.end1204, label %delete.notnull1202

delete.notnull1202:                               ; preds = %if.end1197
  %418 = bitcast i32* %cond3010581061 to i8*
  call void @_ZdaPv(i8* %418) #7
  br label %if.end1204

if.end1204:                                       ; preds = %delete.notnull1202, %if.end1197
  %arraydecay1205 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1206 = icmp eq i32* %cond129782784790796, %arraydecay1205
  br i1 %cmp1206, label %if.end1211, label %delete.notnull1209

delete.notnull1209:                               ; preds = %if.end1204
  %419 = bitcast i32* %cond129782784790796 to i8*
  call void @_ZdaPv(i8* %419) #7
  br label %if.end1211

if.end1211:                                       ; preds = %delete.notnull1209, %if.end1204
  %arraydecay1212 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1213 = icmp eq i32* %cond140786788798, %arraydecay1212
  br i1 %cmp1213, label %if.end1218, label %delete.notnull1216

delete.notnull1216:                               ; preds = %if.end1211
  %420 = bitcast i32* %cond140786788798 to i8*
  call void @_ZdaPv(i8* %420) #7
  br label %if.end1218

if.end1218:                                       ; preds = %delete.notnull1216, %if.end1211
  %arraydecay1219 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1220 = icmp eq i32* %cond151792794, %arraydecay1219
  br i1 %cmp1220, label %if.end1225, label %delete.notnull1223

delete.notnull1223:                               ; preds = %if.end1218
  %421 = bitcast i32* %cond151792794 to i8*
  call void @_ZdaPv(i8* %421) #7
  br label %if.end1225

if.end1225:                                       ; preds = %delete.notnull1223, %if.end1218
  %arraydecay1226 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1227 = icmp eq i32* %cond162800, %arraydecay1226
  br i1 %cmp1227, label %if.end1232, label %delete.notnull1230

delete.notnull1230:                               ; preds = %if.end1225
  %422 = bitcast i32* %cond162800 to i8*
  call void @_ZdaPv(i8* %422) #7
  br label %if.end1232

if.end1232:                                       ; preds = %delete.notnull1230, %if.end1225
  %arraydecay1233 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1234 = icmp eq i32* %cond173, %arraydecay1233
  br i1 %cmp1234, label %if.end1239, label %delete.notnull1237

delete.notnull1237:                               ; preds = %if.end1232
  %423 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %423) #7
  br label %if.end1239

if.end1239:                                       ; preds = %delete.notnull1237, %if.end1232
  %conv1240 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1241 = getelementptr inbounds double* %1, i64 22
  %424 = load double* %arrayidx1241, align 8, !tbaa !17
  %add1242 = fadd double %conv1240, %424
  store double %add1242, double* %arrayidx1241, align 8, !tbaa !17
  %arrayidx1243 = getelementptr inbounds double* %1, i64 2
  %425 = bitcast double* %arrayidx1243 to <2 x double>*
  %426 = load <2 x double>* %425, align 8, !tbaa !17
  %427 = fadd <2 x double> %408, %426
  %428 = bitcast double* %arrayidx1243 to <2 x double>*
  store <2 x double> %427, <2 x double>* %428, align 8, !tbaa !17
  %arrayidx1249 = getelementptr inbounds double* %1, i64 4
  %429 = bitcast double* %arrayidx1249 to <2 x double>*
  %430 = load <2 x double>* %429, align 8, !tbaa !17
  %431 = fadd <2 x double> %409, %430
  %432 = bitcast double* %arrayidx1249 to <2 x double>*
  store <2 x double> %431, <2 x double>* %432, align 8, !tbaa !17
  %arrayidx1253 = getelementptr inbounds double* %1, i64 6
  %433 = bitcast double* %arrayidx1253 to <2 x double>*
  %434 = load <2 x double>* %433, align 8, !tbaa !17
  %435 = shufflevector <2 x double> %409, <2 x double> %413, <2 x i32> <i32 0, i32 2>
  %436 = fadd <2 x double> %435, %434
  %437 = bitcast double* %arrayidx1253 to <2 x double>*
  store <2 x double> %436, <2 x double>* %437, align 8, !tbaa !17
  %arrayidx1257 = getelementptr inbounds double* %1, i64 8
  %438 = bitcast double* %arrayidx1257 to <2 x double>*
  %439 = load <2 x double>* %438, align 8, !tbaa !17
  %440 = shufflevector <2 x double> %410, <2 x double> %409, <2 x i32> <i32 0, i32 3>
  %441 = fadd <2 x double> %440, %439
  %442 = bitcast double* %arrayidx1257 to <2 x double>*
  store <2 x double> %441, <2 x double>* %442, align 8, !tbaa !17
  %arrayidx1261 = getelementptr inbounds double* %1, i64 10
  %443 = bitcast double* %arrayidx1261 to <2 x double>*
  %444 = load <2 x double>* %443, align 8, !tbaa !17
  %445 = fadd <2 x double> %410, %444
  %446 = bitcast double* %arrayidx1261 to <2 x double>*
  store <2 x double> %445, <2 x double>* %446, align 8, !tbaa !17
  %447 = bitcast double* %1 to <2 x double>*
  %448 = load <2 x double>* %447, align 8, !tbaa !17
  %449 = fadd <2 x double> %407, %448
  %450 = bitcast double* %1 to <2 x double>*
  store <2 x double> %449, <2 x double>* %450, align 8, !tbaa !17
  %arrayidx1267 = getelementptr inbounds double* %1, i64 12
  %451 = bitcast double* %arrayidx1267 to <2 x double>*
  %452 = load <2 x double>* %451, align 8, !tbaa !17
  %453 = fadd <2 x double> %411, %452
  %454 = bitcast double* %arrayidx1267 to <2 x double>*
  store <2 x double> %453, <2 x double>* %454, align 8, !tbaa !17
  %arrayidx1271 = getelementptr inbounds double* %1, i64 14
  %455 = load double* %arrayidx1271, align 8, !tbaa !17
  %add1272 = fadd double %414, %455
  store double %add1272, double* %arrayidx1271, align 8, !tbaa !17
  %arrayidx1273 = getelementptr inbounds double* %1, i64 15
  %456 = bitcast double* %arrayidx1273 to <2 x double>*
  %457 = load <2 x double>* %456, align 8, !tbaa !17
  %458 = shufflevector <2 x double> %411, <2 x double> %413, <2 x i32> <i32 1, i32 3>
  %459 = fadd <2 x double> %458, %457
  %460 = bitcast double* %arrayidx1273 to <2 x double>*
  store <2 x double> %459, <2 x double>* %460, align 8, !tbaa !17
  %arrayidx1277 = getelementptr inbounds double* %1, i64 17
  %461 = bitcast double* %arrayidx1277 to <2 x double>*
  %462 = load <2 x double>* %461, align 8, !tbaa !17
  %463 = fadd <2 x double> %412, %462
  %464 = bitcast double* %arrayidx1277 to <2 x double>*
  store <2 x double> %463, <2 x double>* %464, align 8, !tbaa !17
  %arrayidx1281 = getelementptr inbounds double* %1, i64 19
  %465 = bitcast double* %arrayidx1281 to <2 x double>*
  %466 = load <2 x double>* %465, align 8, !tbaa !17
  %467 = insertelement <2 x double> undef, double %415, i32 0
  %468 = insertelement <2 x double> %467, double %fullElectVirial_zz.0.lcssa, i32 1
  %469 = fadd <2 x double> %468, %466
  %470 = bitcast double* %arrayidx1281 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %46) #6
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1239, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil19calc_self_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31964 = icmp sgt i32 %14, 0
  br i1 %cmp31964, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301039 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond7497511037 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond197531035 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1027 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1028, %for.inc ]
  %g.0965 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1027, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0965, 1
  %idxprom41 = sext i32 %g.0965 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond7497511037, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1027 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0965, %for.body ]
  %indvars.iv.next1028 = add nuw nsw i64 %indvars.iv1027, 1
  %lftr.wideiv1029 = trunc i64 %indvars.iv.next1028 to i32
  %exitcond1030 = icmp eq i32 %lftr.wideiv1029, %14
  br i1 %exitcond1030, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond7497511037, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond7497511037, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1044 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1975310341043 = phi i32* [ %cond197531035, %for.end ], [ %cond197531035, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond74975110361042 = phi i32* [ %cond7497511037, %for.end ], [ %cond7497511037, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3010381041 = phi i32* [ %cond301039, %for.end ], [ %cond301039, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56958 = icmp sgt i32 %g.0.lcssa1044, 0
  br i1 %cmp56958, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1023 = phi i64 [ %indvars.iv.next1024, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0960 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0959 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond74975110361042, i64 %indvars.iv1023
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0960, 1
  %idxprom68 = sext i32 %fixg.0960 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1975310341043, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0959, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0960, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1024 = add nuw nsw i64 %indvars.iv1023, 1
  %lftr.wideiv1025 = trunc i64 %indvars.iv.next1024 to i32
  %exitcond1026 = icmp eq i32 %lftr.wideiv1025, %g.0.lcssa1044
  br i1 %exitcond1026, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond74975110361042, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %36 = bitcast i32* %cond74975110361042 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1975310341043, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %37 = bitcast i32* %cond1975310341043 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3010381041, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %38 = bitcast i32* %cond3010381041 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1975310341043, i64 %idxprom99
  %39 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1975310341043, i64 %idxprom101
  store i32 %39, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2756 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %40 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %14, 5
  %45 = sext i32 %add108 to i64
  %46 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %45, i64 4)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 -1, i64 %48
  %call109 = call noalias i8* @_Znam(i64 %49) #8
  %50 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %49) #8
  %51 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %49) #8
  %52 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %49) #8
  %53 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %49) #8
  %54 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147775 = phi i32* [ %arraydecay139, %cond.true149 ], [ %53, %cond.false151 ]
  %cond125761763773 = phi i32* [ %arraydecay117, %cond.true149 ], [ %51, %cond.false151 ]
  %cond114757759765771 = phi i32* [ %arraydecay106, %cond.true149 ], [ %50, %cond.false151 ]
  %cond136767769 = phi i32* [ %arraydecay128, %cond.true149 ], [ %52, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %54, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %55 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %56 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %57 = load %class.Vector** %arrayidx162, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %58 = load %class.Vector** %arrayidx164, align 8, !tbaa !1
  %sub165 = add nsw i32 %13, -1
  %mul166 = mul nsw i32 %sub165, %14
  %div = sdiv i32 %mul166, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %59 = load i32* %minPart, align 4, !tbaa !50
  %mul167 = mul nsw i32 %59, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %60 = load i32* %numParts, align 4, !tbaa !51
  %div168 = sdiv i32 %mul167, %60
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %61 = load i32* %maxPart, align 4, !tbaa !52
  %mul169 = mul nsw i32 %61, %div
  %div171 = sdiv i32 %mul169, %60
  %cmp174924 = icmp sgt i32 %sub165, 0
  br i1 %cmp174924, label %for.body175.lr.ph, label %for.end1177

for.body175.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i746 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast549 = ptrtoint i32* %cond125761763773 to i64
  %sub.ptr.rhs.cast609 = ptrtoint i32* %cond147775 to i64
  %sub.ptr.rhs.cast616 = ptrtoint i32* %cond158 to i64
  %sub923 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3010381041 to i64
  %sub.ptr.rhs.cast372 = ptrtoint i32* %cond114757759765771 to i64
  br label %for.body175

for.body175:                                      ; preds = %for.inc1175, %for.body175.lr.ph
  %exclChecksum.0944 = phi i32 [ 0, %for.body175.lr.ph ], [ %exclChecksum.10, %for.inc1175 ]
  %i.0931 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc1176, %for.inc1175 ]
  %j_hgroup.0930 = phi i32 [ 0, %for.body175.lr.ph ], [ %j_hgroup.3, %for.inc1175 ]
  %g_lower.0929 = phi i32 [ 0, %for.body175.lr.ph ], [ %g_lower.4, %for.inc1175 ]
  %fixg_lower.0928 = phi i32 [ 0, %for.body175.lr.ph ], [ %fixg_lower.4, %for.inc1175 ]
  %pairlistindex.0927 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistindex.3, %for.inc1175 ]
  %pairlistoffset.0926 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistoffset.2, %for.inc1175 ]
  %pairCount.0925 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairCount.3, %for.inc1175 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %365, %for.inc1175 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %366, %for.inc1175 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %367, %for.inc1175 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %368, %for.inc1175 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %369, %for.inc1175 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %370, %for.inc1175 ]
  %idxprom176 = sext i32 %i.0931 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 2
  %68 = bitcast [4 x i8]* %id to i32*
  %bf.load178 = load i32* %68, align 4
  %bf.clear179 = and i32 %bf.load178, 4194303
  %idxprom.i777 = zext i32 %bf.clear179 to i64
  %69 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i777, i32 0
  %70 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i777, i32 1
  %71 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %69, i64 %idxprom.i777, i32 2
  %72 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %70 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 0
  %73 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 1
  %74 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 2
  %75 = load double* %z, align 8, !tbaa !62
  %arrayidx184 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176
  %arrayidx186 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176
  %76 = and i32 %bf.load178, 62914560
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %if.else, label %if.then198

if.then198:                                       ; preds = %for.body175
  %bf.lshr201 = lshr i32 %bf.load178, 22
  %bf.clear202 = and i32 %bf.lshr201, 7
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.end224, label %if.then204

if.then204:                                       ; preds = %if.then198
  %sub210 = sub nsw i32 %sub165, %i.0931
  %mul211 = mul nsw i32 %bf.clear202, %sub210
  %add212 = add nsw i32 %mul211, %pairCount.0925
  %sub213 = add nsw i32 %bf.clear202, -1
  %mul214 = mul nsw i32 %sub213, %bf.clear202
  %div215.neg = sdiv i32 %mul214, -2
  %sub216 = add i32 %add212, %div215.neg
  %cmp217 = icmp sge i32 %pairCount.0925, %div168
  %cmp219 = icmp slt i32 %pairCount.0925, %div171
  %or.cond735 = and i1 %cmp217, %cmp219
  br i1 %or.cond735, label %if.end224, label %if.then220

if.then220:                                       ; preds = %if.then204
  %add222 = add nsw i32 %sub213, %i.0931
  br label %for.inc1175

if.end224:                                        ; preds = %if.then204, %if.then198
  %pairCount.1 = phi i32 [ %pairCount.0925, %if.then198 ], [ %sub216, %if.then204 ]
  %78 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool225 = icmp eq i32 %78, 0
  br i1 %tobool225, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end224
  %bf.clear229 = and i32 %bf.load178, 134217728
  %tobool230 = icmp ne i32 %bf.clear229, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end224
  %79 = phi i1 [ false, %if.end224 ], [ %tobool230, %land.rhs ]
  br i1 %tobool203, label %if.end259, label %if.then236

if.then236:                                       ; preds = %land.end
  %add241 = add nsw i32 %bf.clear202, %i.0931
  %cmp242784 = icmp slt i32 %g_lower.0929, %g.0.lcssa1044
  br i1 %cmp242784, label %land.rhs243.lr.ph, label %while.cond249.loopexit

land.rhs243.lr.ph:                                ; preds = %if.then236
  %80 = sext i32 %g_lower.0929 to i64
  br label %land.rhs243

while.cond:                                       ; preds = %land.rhs243
  %81 = trunc i64 %indvars.iv.next to i32
  %cmp242 = icmp slt i32 %81, %g.0.lcssa1044
  br i1 %cmp242, label %land.rhs243, label %while.cond249.loopexit

land.rhs243:                                      ; preds = %while.cond, %land.rhs243.lr.ph
  %indvars.iv = phi i64 [ %80, %land.rhs243.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1785 = phi i32 [ %g_lower.0929, %land.rhs243.lr.ph ], [ %inc248, %while.cond ]
  %arrayidx245 = getelementptr inbounds i32* %cond74975110361042, i64 %indvars.iv
  %82 = load i32* %arrayidx245, align 4, !tbaa !11
  %cmp246 = icmp slt i32 %82, %add241
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc248 = add nsw i32 %g_lower.1785, 1
  br i1 %cmp246, label %while.cond, label %while.cond249.loopexit

while.cond249.loopexit:                           ; preds = %land.rhs243, %while.cond, %if.then236
  %g_lower.1.lcssa = phi i32 [ %g_lower.0929, %if.then236 ], [ %inc248, %while.cond ], [ %g_lower.1785, %land.rhs243 ]
  %cmp250786 = icmp slt i32 %fixg_lower.0928, %fixg.2756
  br i1 %cmp250786, label %land.rhs251.lr.ph, label %if.end259

land.rhs251.lr.ph:                                ; preds = %while.cond249.loopexit
  %83 = sext i32 %fixg_lower.0928 to i64
  br label %land.rhs251

while.cond249:                                    ; preds = %land.rhs251
  %84 = trunc i64 %indvars.iv.next973 to i32
  %cmp250 = icmp slt i32 %84, %fixg.2756
  br i1 %cmp250, label %land.rhs251, label %if.end259

land.rhs251:                                      ; preds = %while.cond249, %land.rhs251.lr.ph
  %indvars.iv972 = phi i64 [ %83, %land.rhs251.lr.ph ], [ %indvars.iv.next973, %while.cond249 ]
  %fixg_lower.1787 = phi i32 [ %fixg_lower.0928, %land.rhs251.lr.ph ], [ %inc257, %while.cond249 ]
  %arrayidx253 = getelementptr inbounds i32* %cond1975310341043, i64 %indvars.iv972
  %85 = load i32* %arrayidx253, align 4, !tbaa !11
  %cmp254 = icmp slt i32 %85, %add241
  %indvars.iv.next973 = add nsw i64 %indvars.iv972, 1
  %inc257 = add nsw i32 %fixg_lower.1787, 1
  br i1 %cmp254, label %while.cond249, label %if.end259

if.end259:                                        ; preds = %land.rhs251, %while.cond249, %while.cond249.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0928, %land.end ], [ %fixg_lower.0928, %while.cond249.loopexit ], [ %fixg_lower.1787, %land.rhs251 ], [ %inc257, %while.cond249 ]
  %g_lower.2 = phi i32 [ %g_lower.0929, %land.end ], [ %g_lower.1.lcssa, %while.cond249.loopexit ], [ %g_lower.1.lcssa, %while.cond249 ], [ %g_lower.1.lcssa, %land.rhs251 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0930, %land.end ], [ %add241, %while.cond249.loopexit ], [ %add241, %while.cond249 ], [ %add241, %land.rhs251 ]
  %j.1789 = add nsw i32 %i.0931, 1
  %cmp262790 = icmp slt i32 %j.1789, %j_hgroup.1
  br i1 %cmp262790, label %for.body263.lr.ph, label %for.end269

for.body263.lr.ph:                                ; preds = %if.end259
  %86 = add i32 %j_hgroup.1, -1
  %87 = sub i32 %86, %i.0931
  %88 = add i32 %j_hgroup.1, -2
  %89 = sub i32 %88, %i.0931
  %90 = zext i32 %89 to i64
  %91 = add i64 %90, 1
  %end.idx = add i64 %90, 1
  %n.vec = and i64 %91, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1789
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body263.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body263.lr.ph ]
  %92 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1789, %92
  %broadcast.splatinsert1082 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1083 = shufflevector <4 x i32> %broadcast.splatinsert1082, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1084 = add <4 x i32> %broadcast.splat1083, <i32 0, i32 1, i32 2, i32 3>
  %induction1085 = add <4 x i32> %broadcast.splat1083, <i32 4, i32 5, i32 6, i32 7>
  %93 = getelementptr inbounds i32* %cond114757759765771, i64 %index
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %induction1084, <4 x i32>* %94, align 4
  %.sum1088 = or i64 %index, 4
  %95 = getelementptr i32* %cond114757759765771, i64 %.sum1088
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %induction1085, <4 x i32>* %96, align 4
  %index.next = add i64 %index, 8
  %97 = icmp eq i64 %index.next, %n.vec
  br i1 %97, label %middle.block, label %vector.body, !llvm.loop !103

middle.block:                                     ; preds = %vector.body, %for.body263.lr.ph
  %resume.val = phi i64 [ 0, %for.body263.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1080 = phi i32 [ %j.1789, %for.body263.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond261.for.end269_crit_edge, label %for.body263

for.body263:                                      ; preds = %for.body263, %middle.block
  %indvars.iv974 = phi i64 [ %indvars.iv.next975, %for.body263 ], [ %resume.val, %middle.block ]
  %j.1792 = phi i32 [ %j.1, %for.body263 ], [ %resume.val1080, %middle.block ]
  %indvars.iv.next975 = add nuw nsw i64 %indvars.iv974, 1
  %arrayidx266 = getelementptr inbounds i32* %cond114757759765771, i64 %indvars.iv974
  store i32 %j.1792, i32* %arrayidx266, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1792, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next975 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %87
  br i1 %exitcond, label %for.cond261.for.end269_crit_edge, label %for.body263, !llvm.loop !104

for.cond261.for.end269_crit_edge:                 ; preds = %for.body263, %middle.block
  %phitmp = sext i32 %87 to i64
  br label %for.end269

for.end269:                                       ; preds = %for.cond261.for.end269_crit_edge, %if.end259
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond261.for.end269_crit_edge ], [ 0, %if.end259 ]
  %add.ptr271 = getelementptr inbounds i32* %cond114757759765771, i64 %pairlistindex.1.lcssa
  %cond276 = select i1 %79, i32* %cond1975310341043, i32* %cond74975110361042
  %cond281 = select i1 %79, i32 %fixg_lower.2, i32 %g_lower.2
  %cond286 = select i1 %79, i32 %fixg.2756, i32 %g.0.lcssa1044
  %cmp287 = icmp slt i32 %cond281, %cond286
  br i1 %cmp287, label %if.then288, label %if.end370

if.then288:                                       ; preds = %for.end269
  %idxprom289 = sext i32 %cond281 to i64
  %arrayidx290 = getelementptr inbounds i32* %cond276, i64 %idxprom289
  %98 = load i32* %arrayidx290, align 4, !tbaa !11
  %idxprom291 = sext i32 %98 to i64
  %x294 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 0
  %99 = load double* %x294, align 8, !tbaa !59
  %y298 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 1
  %100 = load double* %y298, align 8, !tbaa !61
  %z302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 2
  %101 = load double* %z302, align 8, !tbaa !62
  br label %while.cond303.outer

while.cond303.outer:                              ; preds = %if.then330, %if.then288
  %p_j_z.0.ph = phi double [ %101, %if.then288 ], [ %107, %if.then330 ]
  %p_j_y.0.ph = phi double [ %100, %if.then288 ], [ %106, %if.then330 ]
  %p_j_x.0.ph = phi double [ %99, %if.then288 ], [ %105, %if.then330 ]
  %j2.0.ph = phi i32 [ %98, %if.then288 ], [ %104, %if.then330 ]
  %gli.0.ph = phi i32* [ %cond3010381041, %if.then288 ], [ %incdec.ptr, %if.then330 ]
  %g.3.ph = phi i32 [ %cond281, %if.then288 ], [ %inc306, %if.then330 ]
  %102 = sext i32 %g.3.ph to i64
  br label %while.cond303

while.cond303:                                    ; preds = %while.body305, %while.cond303.outer
  %indvars.iv980 = phi i64 [ %102, %while.cond303.outer ], [ %indvars.iv.next981, %while.body305 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond303.outer ], [ %107, %while.body305 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond303.outer ], [ %106, %while.body305 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond303.outer ], [ %105, %while.body305 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond303.outer ], [ %104, %while.body305 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond303.outer ], [ %inc306, %while.body305 ]
  %103 = trunc i64 %indvars.iv980 to i32
  %cmp304 = icmp slt i32 %103, %cond286
  br i1 %cmp304, label %while.body305, label %while.end332

while.body305:                                    ; preds = %while.cond303
  %indvars.iv.next981 = add nsw i64 %indvars.iv980, 1
  %inc306 = add nsw i32 %g.3, 1
  %arrayidx308 = getelementptr inbounds i32* %cond276, i64 %indvars.iv.next981
  %104 = load i32* %arrayidx308, align 4, !tbaa !11
  %sub309 = fsub double %73, %p_j_x.0
  %mul310 = fmul double %sub309, %sub309
  %idxprom311 = sext i32 %104 to i64
  %x314 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 0
  %105 = load double* %x314, align 8, !tbaa !59
  %sub315 = fsub double %74, %p_j_y.0
  %mul316 = fmul double %sub315, %sub315
  %add317 = fadd double %mul316, %mul310
  %y321 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 1
  %106 = load double* %y321, align 8, !tbaa !61
  %sub322 = fsub double %75, %p_j_z.0
  %mul323 = fmul double %sub322, %sub322
  %add324 = fadd double %mul323, %add317
  %z328 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 2
  %107 = load double* %z328, align 8, !tbaa !62
  %cmp329 = fcmp ugt double %add324, %3
  br i1 %cmp329, label %while.cond303, label %if.then330

if.then330:                                       ; preds = %while.body305
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond303.outer

while.end332:                                     ; preds = %while.cond303
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div732 = lshr exact i64 %sub.ptr.sub, 2
  %conv333 = trunc i64 %sub.ptr.div732 to i32
  %cmp335798 = icmp sgt i32 %conv333, 0
  br i1 %cmp335798, label %for.body336.lr.ph, label %if.end370

for.body336.lr.ph:                                ; preds = %while.end332
  %108 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %109 = lshr i64 %108, 2
  %110 = trunc i64 %109 to i32
  br label %for.body336

for.body336:                                      ; preds = %cond.end356, %for.body336.lr.ph
  %indvars.iv982 = phi i64 [ 0, %for.body336.lr.ph ], [ %indvars.iv.next983, %cond.end356 ]
  %pli.0800 = phi i32* [ %add.ptr271, %for.body336.lr.ph ], [ %add.ptr366, %cond.end356 ]
  %arrayidx339 = getelementptr inbounds i32* %cond3010381041, i64 %indvars.iv982
  %111 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom341 = sext i32 %111 to i64
  %nonbondedGroupIsAtom343 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom341, i32 2
  %112 = bitcast [4 x i8]* %nonbondedGroupIsAtom343 to i32*
  %bf.load344 = load i32* %112, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end356

cond.false349:                                    ; preds = %for.body336
  %bf.lshr354 = lshr i32 %bf.load344, 22
  %bf.clear355 = and i32 %bf.lshr354, 7
  %phitmp733 = zext i32 %bf.clear355 to i64
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false349, %for.body336
  %cond357 = phi i64 [ %phitmp733, %cond.false349 ], [ 1, %for.body336 ]
  store i32 %111, i32* %pli.0800, align 4, !tbaa !11
  %add359 = add nsw i32 %111, 1
  %arrayidx360 = getelementptr inbounds i32* %pli.0800, i64 1
  store i32 %add359, i32* %arrayidx360, align 4, !tbaa !11
  %add361 = add nsw i32 %111, 2
  %arrayidx362 = getelementptr inbounds i32* %pli.0800, i64 2
  store i32 %add361, i32* %arrayidx362, align 4, !tbaa !11
  %add363 = add nsw i32 %111, 3
  %arrayidx364 = getelementptr inbounds i32* %pli.0800, i64 3
  store i32 %add363, i32* %arrayidx364, align 4, !tbaa !11
  %add.ptr366 = getelementptr inbounds i32* %pli.0800, i64 %cond357
  %indvars.iv.next983 = add nuw nsw i64 %indvars.iv982, 1
  %lftr.wideiv984 = trunc i64 %indvars.iv.next983 to i32
  %exitcond985 = icmp eq i32 %lftr.wideiv984, %110
  br i1 %exitcond985, label %if.end370, label %for.body336

if.end370:                                        ; preds = %cond.end356, %while.end332, %for.end269
  %pli.1 = phi i32* [ %add.ptr271, %for.end269 ], [ %add.ptr271, %while.end332 ], [ %add.ptr366, %cond.end356 ]
  %sub.ptr.lhs.cast371 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub373 = sub i64 %sub.ptr.lhs.cast371, %sub.ptr.rhs.cast372
  %sub.ptr.div374729 = lshr exact i64 %sub.ptr.sub373, 2
  %conv375 = trunc i64 %sub.ptr.div374729 to i32
  %tobool376 = icmp eq i32 %conv375, 0
  br i1 %tobool376, label %if.end385, label %if.then377

if.then377:                                       ; preds = %if.end370
  %sub378 = shl i64 %sub.ptr.sub373, 30
  %sext730 = add i64 %sub378, -4294967296
  %idxprom379 = ashr exact i64 %sext730, 32
  %arrayidx380 = getelementptr inbounds i32* %cond114757759765771, i64 %idxprom379
  %113 = load i32* %arrayidx380, align 4, !tbaa !11
  %idxprom381 = ashr exact i64 %sub378, 32
  %arrayidx382 = getelementptr inbounds i32* %cond114757759765771, i64 %idxprom381
  store i32 %113, i32* %arrayidx382, align 4, !tbaa !11
  br label %if.end385

if.else:                                          ; preds = %for.body175
  %inc384 = add nsw i32 %pairlistoffset.0926, 1
  br label %if.end385

if.end385:                                        ; preds = %if.else, %if.then377, %if.end370
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then377 ], [ %pairCount.1, %if.end370 ], [ %pairCount.0925, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then377 ], [ 0, %if.end370 ], [ %inc384, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv375, %if.then377 ], [ 0, %if.end370 ], [ %pairlistindex.0927, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then377 ], [ %fixg_lower.2, %if.end370 ], [ %fixg_lower.0928, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then377 ], [ %g_lower.2, %if.end370 ], [ %g_lower.0929, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then377 ], [ %j_hgroup.1, %if.end370 ], [ %j_hgroup.0930, %if.else ]
  %114 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool386 = icmp eq i32 %114, 0
  %bf.load399.pre = load i32* %68, align 4
  br i1 %tobool386, label %land.end392, label %land.rhs387

land.rhs387:                                      ; preds = %if.end385
  %bf.clear390 = and i32 %bf.load399.pre, 67108864
  %tobool391 = icmp ne i32 %bf.clear390, 0
  br label %land.end392

land.end392:                                      ; preds = %land.rhs387, %if.end385
  %115 = phi i1 [ %tobool391, %land.rhs387 ], [ false, %if.end385 ]
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 1
  %116 = load float* %charge, align 4, !tbaa !63
  %conv394 = fpext float %116 to double
  %mul395 = fmul double %conv394, 3.320636e+02
  %mul396 = fmul double %9, %mul395
  %mul397 = fmul double %4, %mul396
  %bf.clear400 = and i32 %bf.load399.pre, 4194303
  %idxprom.i745778 = zext i32 %bf.clear400 to i64
  %117 = load i32** %atomVdwType.i746, align 8, !tbaa !64
  %arrayidx.i747 = getelementptr inbounds i32* %117, i64 %idxprom.i745778
  %118 = load i32* %arrayidx.i747, align 4, !tbaa !11
  %119 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %120 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv402 = shl i32 %118, 1
  %mul.i = and i32 %conv402, 131070
  %mul2.i = mul i32 %mul.i, %120
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp408826 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %115, label %for.cond407.preheader, label %if.else468

for.cond407.preheader:                            ; preds = %land.end392
  br i1 %cmp408826, label %for.body409.lr.ph, label %if.end547

for.body409.lr.ph:                                ; preds = %for.cond407.preheader
  %121 = sext i32 %pairlistoffset.1 to i64
  br label %for.body409

for.body409:                                      ; preds = %for.inc465, %for.body409.lr.ph
  %indvars.iv995 = phi i64 [ %121, %for.body409.lr.ph ], [ %indvars.iv.next996, %for.inc465 ]
  %exclChecksum.1830 = phi i32 [ %exclChecksum.0944, %for.body409.lr.ph ], [ %exclChecksum.3, %for.inc465 ]
  %pli404.0829 = phi i32* [ %cond125761763773, %for.body409.lr.ph ], [ %pli404.1, %for.inc465 ]
  %plin.0828 = phi i32* [ %cond136767769, %for.body409.lr.ph ], [ %plin.1, %for.inc465 ]
  %arrayidx411 = getelementptr inbounds i32* %cond114757759765771, i64 %indvars.iv995
  %122 = load i32* %arrayidx411, align 4, !tbaa !11
  %idxprom413 = sext i32 %122 to i64
  %x416 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 0
  %123 = load double* %x416, align 8, !tbaa !59
  %sub418 = fsub double %73, %123
  %mul419 = fmul double %sub418, %sub418
  %y424 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 1
  %124 = load double* %y424, align 8, !tbaa !61
  %sub426 = fsub double %74, %124
  %mul427 = fmul double %sub426, %sub426
  %add428 = fadd double %mul419, %mul427
  %z433 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 2
  %125 = load double* %z433, align 8, !tbaa !62
  %sub434 = fsub double %75, %125
  %mul435 = fmul double %sub434, %sub434
  %add436 = fadd double %add428, %mul435
  %atomFixed439 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 2
  %126 = bitcast [4 x i8]* %atomFixed439 to i32*
  %bf.load440 = load i32* %126, align 4
  %bf.clear442 = and i32 %bf.load440, 67108864
  %tobool443 = icmp ne i32 %bf.clear442, 0
  %cmp444 = fcmp ugt double %add436, %2
  %or.cond736 = or i1 %tobool443, %cmp444
  br i1 %or.cond736, label %for.inc465, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %for.body409
  %cmp446 = fcmp ugt double %add436, %11
  br i1 %cmp446, label %if.then450, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %land.lhs.true445
  %inc448 = add nsw i32 %exclChecksum.1830, 1
  %tobool449 = icmp eq i32 %inc448, 0
  br i1 %tobool449, label %if.then450, label %for.inc465

if.then450:                                       ; preds = %land.lhs.true447, %land.lhs.true445
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true447 ], [ %exclChecksum.1830, %land.lhs.true445 ]
  %bf.clear455 = and i32 %bf.load440, 4194303
  %cmp456 = icmp slt i32 %bf.clear455, %70
  %cmp458 = icmp sgt i32 %bf.clear455, %71
  %or.cond737 = or i1 %cmp456, %cmp458
  br i1 %or.cond737, label %if.else461, label %if.then459

if.then459:                                       ; preds = %if.then450
  %incdec.ptr460 = getelementptr inbounds i32* %pli404.0829, i64 1
  store i32 %122, i32* %pli404.0829, align 4, !tbaa !11
  br label %for.inc465

if.else461:                                       ; preds = %if.then450
  %incdec.ptr462 = getelementptr inbounds i32* %plin.0828, i64 1
  store i32 %122, i32* %plin.0828, align 4, !tbaa !11
  br label %for.inc465

for.inc465:                                       ; preds = %if.else461, %if.then459, %land.lhs.true447, %for.body409
  %plin.1 = phi i32* [ %plin.0828, %for.body409 ], [ %plin.0828, %land.lhs.true447 ], [ %plin.0828, %if.then459 ], [ %incdec.ptr462, %if.else461 ]
  %pli404.1 = phi i32* [ %pli404.0829, %for.body409 ], [ %pli404.0829, %land.lhs.true447 ], [ %incdec.ptr460, %if.then459 ], [ %pli404.0829, %if.else461 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1830, %for.body409 ], [ %inc448, %land.lhs.true447 ], [ %exclChecksum.2, %if.then459 ], [ %exclChecksum.2, %if.else461 ]
  %indvars.iv.next996 = add nsw i64 %indvars.iv995, 1
  %lftr.wideiv997 = trunc i64 %indvars.iv.next996 to i32
  %exitcond998 = icmp eq i32 %lftr.wideiv997, %pairlistindex.2
  br i1 %exitcond998, label %if.end547, label %for.body409

if.else468:                                       ; preds = %land.end392
  br i1 %cmp408826, label %if.then471, label %if.end547

if.then471:                                       ; preds = %if.else468
  %idxprom473 = sext i32 %pairlistoffset.1 to i64
  %arrayidx474 = getelementptr inbounds i32* %cond114757759765771, i64 %idxprom473
  %127 = load i32* %arrayidx474, align 4, !tbaa !11
  %idxprom476 = sext i32 %127 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 0
  %128 = load double* %x479, align 8, !tbaa !59
  %y484 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 1
  %129 = load double* %y484, align 8, !tbaa !61
  %z489 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 2
  %130 = load double* %z489, align 8, !tbaa !62
  br label %while.cond496.outer

while.cond496.outer:                              ; preds = %if.else536, %if.then471
  %idxprom476.pn.ph = phi i64 [ %idxprom476, %if.then471 ], [ %idxprom505, %if.else536 ]
  %p_j_z485.0.ph = phi double [ %130, %if.then471 ], [ %136, %if.else536 ]
  %p_j_y480.0.ph = phi double [ %129, %if.then471 ], [ %135, %if.else536 ]
  %p_j_x475.0.ph = phi double [ %128, %if.then471 ], [ %134, %if.else536 ]
  %j2472.0.ph = phi i32 [ %127, %if.then471 ], [ %133, %if.else536 ]
  %k469.0.ph = phi i32 [ %pairlistoffset.1, %if.then471 ], [ %inc499, %if.else536 ]
  %plin.2.ph = phi i32* [ %cond136767769, %if.then471 ], [ %incdec.ptr537, %if.else536 ]
  %pli404.2.ph = phi i32* [ %cond125761763773, %if.then471 ], [ %pli404.2.ph809, %if.else536 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0944, %if.then471 ], [ %exclChecksum.5, %if.else536 ]
  br label %while.cond496.outer802

while.cond496.outer802:                           ; preds = %if.then534, %while.cond496.outer
  %idxprom476.pn.ph803 = phi i64 [ %idxprom505, %if.then534 ], [ %idxprom476.pn.ph, %while.cond496.outer ]
  %p_j_z485.0.ph804 = phi double [ %136, %if.then534 ], [ %p_j_z485.0.ph, %while.cond496.outer ]
  %p_j_y480.0.ph805 = phi double [ %135, %if.then534 ], [ %p_j_y480.0.ph, %while.cond496.outer ]
  %p_j_x475.0.ph806 = phi double [ %134, %if.then534 ], [ %p_j_x475.0.ph, %while.cond496.outer ]
  %j2472.0.ph807 = phi i32 [ %133, %if.then534 ], [ %j2472.0.ph, %while.cond496.outer ]
  %k469.0.ph808 = phi i32 [ %inc499, %if.then534 ], [ %k469.0.ph, %while.cond496.outer ]
  %pli404.2.ph809 = phi i32* [ %incdec.ptr535, %if.then534 ], [ %pli404.2.ph, %while.cond496.outer ]
  %exclChecksum.4.ph810 = phi i32 [ %exclChecksum.5, %if.then534 ], [ %exclChecksum.4.ph, %while.cond496.outer ]
  br label %while.cond496.outer811

while.cond496.outer811:                           ; preds = %land.lhs.true527, %while.cond496.outer802
  %idxprom476.pn.ph812 = phi i64 [ %idxprom505, %land.lhs.true527 ], [ %idxprom476.pn.ph803, %while.cond496.outer802 ]
  %p_j_z485.0.ph813 = phi double [ %136, %land.lhs.true527 ], [ %p_j_z485.0.ph804, %while.cond496.outer802 ]
  %p_j_y480.0.ph814 = phi double [ %135, %land.lhs.true527 ], [ %p_j_y480.0.ph805, %while.cond496.outer802 ]
  %p_j_x475.0.ph815 = phi double [ %134, %land.lhs.true527 ], [ %p_j_x475.0.ph806, %while.cond496.outer802 ]
  %j2472.0.ph816 = phi i32 [ %133, %land.lhs.true527 ], [ %j2472.0.ph807, %while.cond496.outer802 ]
  %k469.0.ph817 = phi i32 [ %inc499, %land.lhs.true527 ], [ %k469.0.ph808, %while.cond496.outer802 ]
  %exclChecksum.4.ph818 = phi i32 [ %inc528, %land.lhs.true527 ], [ %exclChecksum.4.ph810, %while.cond496.outer802 ]
  %131 = sext i32 %k469.0.ph817 to i64
  br label %while.cond496

while.cond496:                                    ; preds = %while.body498, %while.cond496.outer811
  %indvars.iv991 = phi i64 [ %131, %while.cond496.outer811 ], [ %indvars.iv.next992, %while.body498 ]
  %idxprom476.pn = phi i64 [ %idxprom476.pn.ph812, %while.cond496.outer811 ], [ %idxprom505, %while.body498 ]
  %p_j_z485.0 = phi double [ %p_j_z485.0.ph813, %while.cond496.outer811 ], [ %136, %while.body498 ]
  %p_j_y480.0 = phi double [ %p_j_y480.0.ph814, %while.cond496.outer811 ], [ %135, %while.body498 ]
  %p_j_x475.0 = phi double [ %p_j_x475.0.ph815, %while.cond496.outer811 ], [ %134, %while.body498 ]
  %j2472.0 = phi i32 [ %j2472.0.ph816, %while.cond496.outer811 ], [ %133, %while.body498 ]
  %k469.0 = phi i32 [ %k469.0.ph817, %while.cond496.outer811 ], [ %inc499, %while.body498 ]
  %132 = trunc i64 %indvars.iv991 to i32
  %cmp497 = icmp slt i32 %132, %pairlistindex.2
  br i1 %cmp497, label %while.body498, label %if.end547

while.body498:                                    ; preds = %while.cond496
  %atom2490.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476.pn, i32 2
  %atom2490.0.in.in = bitcast [4 x i8]* %atom2490.0.in.in.in to i32*
  %atom2490.0.in = load i32* %atom2490.0.in.in, align 4
  %atom2490.0 = and i32 %atom2490.0.in, 4194303
  %indvars.iv.next992 = add nsw i64 %indvars.iv991, 1
  %inc499 = add nsw i32 %k469.0, 1
  %arrayidx501 = getelementptr inbounds i32* %cond114757759765771, i64 %indvars.iv.next992
  %133 = load i32* %arrayidx501, align 4, !tbaa !11
  %sub503 = fsub double %73, %p_j_x475.0
  %mul504 = fmul double %sub503, %sub503
  %idxprom505 = sext i32 %133 to i64
  %x508 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 0
  %134 = load double* %x508, align 8, !tbaa !59
  %sub510 = fsub double %74, %p_j_y480.0
  %mul511 = fmul double %sub510, %sub510
  %add512 = fadd double %mul511, %mul504
  %y516 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 1
  %135 = load double* %y516, align 8, !tbaa !61
  %sub517 = fsub double %75, %p_j_z485.0
  %mul518 = fmul double %sub517, %sub517
  %add519 = fadd double %mul518, %add512
  %z523 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 2
  %136 = load double* %z523, align 8, !tbaa !62
  %cmp524 = fcmp ugt double %add519, %2
  br i1 %cmp524, label %while.cond496, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %while.body498
  %cmp526 = fcmp ugt double %add519, %11
  br i1 %cmp526, label %if.then530, label %land.lhs.true527

land.lhs.true527:                                 ; preds = %land.lhs.true525
  %inc528 = add nsw i32 %exclChecksum.4.ph818, 1
  %tobool529 = icmp eq i32 %inc528, 0
  br i1 %tobool529, label %if.then530, label %while.cond496.outer811

if.then530:                                       ; preds = %land.lhs.true527, %land.lhs.true525
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true527 ], [ %exclChecksum.4.ph818, %land.lhs.true525 ]
  %cmp531 = icmp slt i32 %atom2490.0, %70
  %cmp533 = icmp sgt i32 %atom2490.0, %71
  %or.cond738 = or i1 %cmp531, %cmp533
  br i1 %or.cond738, label %if.else536, label %if.then534

if.then534:                                       ; preds = %if.then530
  %incdec.ptr535 = getelementptr inbounds i32* %pli404.2.ph809, i64 1
  store i32 %j2472.0, i32* %pli404.2.ph809, align 4, !tbaa !11
  br label %while.cond496.outer802

if.else536:                                       ; preds = %if.then530
  %incdec.ptr537 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2472.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond496.outer

if.end547:                                        ; preds = %while.cond496, %if.else468, %for.inc465, %for.cond407.preheader
  %plin.4 = phi i32* [ %cond136767769, %if.else468 ], [ %cond136767769, %for.cond407.preheader ], [ %plin.2.ph, %while.cond496 ], [ %plin.1, %for.inc465 ]
  %pli404.4 = phi i32* [ %cond125761763773, %if.else468 ], [ %cond125761763773, %for.cond407.preheader ], [ %pli404.2.ph809, %while.cond496 ], [ %pli404.1, %for.inc465 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0944, %if.else468 ], [ %exclChecksum.0944, %for.cond407.preheader ], [ %exclChecksum.4.ph818, %while.cond496 ], [ %exclChecksum.3, %for.inc465 ]
  %sub.ptr.lhs.cast548 = ptrtoint i32* %pli404.4 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %sub.ptr.div551678 = lshr exact i64 %sub.ptr.sub550, 2
  %conv552 = trunc i64 %sub.ptr.div551678 to i32
  %tobool553 = icmp eq i32 %conv552, 0
  br i1 %tobool553, label %for.cond562.preheader, label %if.then554

if.then554:                                       ; preds = %if.end547
  %sub555 = shl i64 %sub.ptr.sub550, 30
  %sext727 = add i64 %sub555, -4294967296
  %idxprom556 = ashr exact i64 %sext727, 32
  %arrayidx557 = getelementptr inbounds i32* %cond125761763773, i64 %idxprom556
  %137 = load i32* %arrayidx557, align 4, !tbaa !11
  %idxprom558 = ashr exact i64 %sub555, 32
  %arrayidx559 = getelementptr inbounds i32* %cond125761763773, i64 %idxprom558
  store i32 %137, i32* %arrayidx559, align 4, !tbaa !11
  br label %for.cond562.preheader

for.cond562.preheader:                            ; preds = %if.then554, %if.end547
  %cmp563834 = icmp ult i32* %cond136767769, %plin.4
  br i1 %cmp563834, label %land.lhs.true564, label %for.cond571.loopexit

land.lhs.true564:                                 ; preds = %for.body566, %for.cond562.preheader
  %exclChecksum.8837 = phi i32 [ %dec, %for.body566 ], [ %exclChecksum.7, %for.cond562.preheader ]
  %plix.0836 = phi i32* [ %incdec.ptr567, %for.body566 ], [ %cond147775, %for.cond562.preheader ]
  %pln.0835 = phi i32* [ %incdec.ptr569, %for.body566 ], [ %cond136767769, %for.cond562.preheader ]
  %138 = load i32* %pln.0835, align 4, !tbaa !11
  %cmp565 = icmp slt i32 %138, %j_hgroup.2
  br i1 %cmp565, label %for.body566, label %for.cond571.loopexit

for.body566:                                      ; preds = %land.lhs.true564
  %incdec.ptr567 = getelementptr inbounds i32* %plix.0836, i64 1
  store i32 %138, i32* %plix.0836, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8837, -1
  %incdec.ptr569 = getelementptr inbounds i32* %pln.0835, i64 1
  %cmp563 = icmp ult i32* %incdec.ptr569, %plin.4
  br i1 %cmp563, label %land.lhs.true564, label %for.cond571.loopexit

for.cond571.loopexit:                             ; preds = %for.body566, %land.lhs.true564, %for.cond562.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond562.preheader ], [ %dec, %for.body566 ], [ %exclChecksum.8837, %land.lhs.true564 ]
  %plix.0.lcssa = phi i32* [ %cond147775, %for.cond562.preheader ], [ %incdec.ptr567, %for.body566 ], [ %plix.0836, %land.lhs.true564 ]
  %pln.0.lcssa = phi i32* [ %cond136767769, %for.cond562.preheader ], [ %incdec.ptr569, %for.body566 ], [ %pln.0835, %land.lhs.true564 ]
  %cmp572841 = icmp sgt i32 %conv552, 0
  br i1 %cmp572841, label %land.lhs.true573, label %for.cond585.loopexit

land.lhs.true573:                                 ; preds = %for.body577, %for.cond571.loopexit
  %indvars.iv1005 = phi i64 [ %indvars.iv.next1006, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %exclChecksum.9844 = phi i32 [ %dec581, %for.body577 ], [ %exclChecksum.8.lcssa, %for.cond571.loopexit ]
  %plix.1843 = phi i32* [ %incdec.ptr580, %for.body577 ], [ %plix.0.lcssa, %for.cond571.loopexit ]
  %k561.0842 = phi i32 [ %inc583, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %arrayidx575 = getelementptr inbounds i32* %cond125761763773, i64 %indvars.iv1005
  %139 = load i32* %arrayidx575, align 4, !tbaa !11
  %cmp576 = icmp slt i32 %139, %j_hgroup.2
  br i1 %cmp576, label %for.body577, label %for.cond585.loopexit

for.body577:                                      ; preds = %land.lhs.true573
  %incdec.ptr580 = getelementptr inbounds i32* %plix.1843, i64 1
  store i32 %139, i32* %plix.1843, align 4, !tbaa !11
  %dec581 = add nsw i32 %exclChecksum.9844, -1
  %indvars.iv.next1006 = add nuw nsw i64 %indvars.iv1005, 1
  %inc583 = add nsw i32 %k561.0842, 1
  %140 = trunc i64 %indvars.iv.next1006 to i32
  %cmp572 = icmp slt i32 %140, %conv552
  br i1 %cmp572, label %land.lhs.true573, label %for.cond585.loopexit

for.cond585.loopexit:                             ; preds = %for.body577, %land.lhs.true573, %for.cond571.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond571.loopexit ], [ %dec581, %for.body577 ], [ %exclChecksum.9844, %land.lhs.true573 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond571.loopexit ], [ %incdec.ptr580, %for.body577 ], [ %plix.1843, %land.lhs.true573 ]
  %k561.0.lcssa = phi i32 [ 0, %for.cond571.loopexit ], [ %inc583, %for.body577 ], [ %k561.0842, %land.lhs.true573 ]
  %cmp586848 = icmp slt i32 %k561.0.lcssa, %conv552
  br i1 %cmp586848, label %for.body587.lr.ph, label %for.end607

for.body587.lr.ph:                                ; preds = %for.cond585.loopexit
  %141 = sext i32 %k561.0.lcssa to i64
  %142 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %143 = lshr i64 %142, 2
  %144 = trunc i64 %143 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.inc605, %for.body587.lr.ph
  %indvars.iv1007 = phi i64 [ %141, %for.body587.lr.ph ], [ %indvars.iv.next1008, %for.inc605 ]
  %plin.5852 = phi i32* [ %plin.4, %for.body587.lr.ph ], [ %plin.6, %for.inc605 ]
  %plix.2851 = phi i32* [ %plix.1.lcssa, %for.body587.lr.ph ], [ %plix.3, %for.inc605 ]
  %plim.0850 = phi i32* [ %cond158, %for.body587.lr.ph ], [ %plim.1, %for.inc605 ]
  %arrayidx590 = getelementptr inbounds i32* %cond125761763773, i64 %indvars.iv1007
  %145 = load i32* %arrayidx590, align 4, !tbaa !11
  %idxprom592 = sext i32 %145 to i64
  %id594 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom592, i32 2
  %146 = bitcast [4 x i8]* %id594 to i32*
  %bf.load595 = load i32* %146, align 4
  %bf.clear596 = and i32 %bf.load595, 4194303
  %idxprom597726 = zext i32 %bf.clear596 to i64
  %add.ptr.sum = sub i64 %idxprom597726, %idx.ext
  %arrayidx598 = getelementptr inbounds i8* %72, i64 %add.ptr.sum
  %147 = load i8* %arrayidx598, align 1, !tbaa !68
  %conv599 = sext i8 %147 to i32
  switch i32 %conv599, label %for.inc605 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb601
    i32 2, label %sw.bb603
  ]

sw.bb:                                            ; preds = %for.body587
  %incdec.ptr600 = getelementptr inbounds i32* %plin.5852, i64 1
  store i32 %145, i32* %plin.5852, align 4, !tbaa !11
  br label %for.inc605

sw.bb601:                                         ; preds = %for.body587
  %incdec.ptr602 = getelementptr inbounds i32* %plix.2851, i64 1
  store i32 %145, i32* %plix.2851, align 4, !tbaa !11
  br label %for.inc605

sw.bb603:                                         ; preds = %for.body587
  %incdec.ptr604 = getelementptr inbounds i32* %plim.0850, i64 1
  store i32 %145, i32* %plim.0850, align 4, !tbaa !11
  br label %for.inc605

for.inc605:                                       ; preds = %sw.bb603, %sw.bb601, %sw.bb, %for.body587
  %plim.1 = phi i32* [ %plim.0850, %for.body587 ], [ %incdec.ptr604, %sw.bb603 ], [ %plim.0850, %sw.bb601 ], [ %plim.0850, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2851, %for.body587 ], [ %plix.2851, %sw.bb603 ], [ %incdec.ptr602, %sw.bb601 ], [ %plix.2851, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5852, %for.body587 ], [ %plin.5852, %sw.bb603 ], [ %plin.5852, %sw.bb601 ], [ %incdec.ptr600, %sw.bb ]
  %indvars.iv.next1008 = add nsw i64 %indvars.iv1007, 1
  %lftr.wideiv1009 = trunc i64 %indvars.iv.next1008 to i32
  %exitcond1010 = icmp eq i32 %lftr.wideiv1009, %144
  br i1 %exitcond1010, label %for.end607, label %for.body587

for.end607:                                       ; preds = %for.inc605, %for.cond585.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond585.loopexit ], [ %plin.6, %for.inc605 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond585.loopexit ], [ %plix.3, %for.inc605 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond585.loopexit ], [ %plim.1, %for.inc605 ]
  %sub.ptr.lhs.cast608 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub610 = sub i64 %sub.ptr.lhs.cast608, %sub.ptr.rhs.cast609
  %sub.ptr.div611 = ashr exact i64 %sub.ptr.sub610, 2
  %conv612679 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast615 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub617 = sub i64 %sub.ptr.lhs.cast615, %sub.ptr.rhs.cast616
  %sub.ptr.div618 = ashr exact i64 %sub.ptr.sub617, 2
  %add613 = add i64 %sub.ptr.div618, %conv612679
  %add620 = add i64 %add613, %sub.ptr.div611
  %conv621 = trunc i64 %add620 to i32
  %sub.ptr.lhs.cast622 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast623 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub624 = sub i64 %sub.ptr.lhs.cast622, %sub.ptr.rhs.cast623
  %sub.ptr.div625681 = lshr exact i64 %sub.ptr.sub624, 2
  %conv626 = trunc i64 %sub.ptr.div625681 to i32
  %cmp628856 = icmp sgt i32 %conv626, 0
  br i1 %cmp628856, label %for.body629.lr.ph, label %for.end807

for.body629.lr.ph:                                ; preds = %for.end607
  %x739 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y748 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z755 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x783 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y793 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z801 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body629

for.body629:                                      ; preds = %for.body629.for.body629_crit_edge, %for.body629.lr.ph
  %148 = phi i32* [ %117, %for.body629.lr.ph ], [ %.pre, %for.body629.for.body629_crit_edge ]
  %indvars.iv1011 = phi i64 [ 0, %for.body629.lr.ph ], [ %indvars.iv.next1012, %for.body629.for.body629_crit_edge ]
  %149 = phi <2 x double> [ %62, %for.body629.lr.ph ], [ %180, %for.body629.for.body629_crit_edge ]
  %150 = phi <2 x double> [ %63, %for.body629.lr.ph ], [ %187, %for.body629.for.body629_crit_edge ]
  %151 = phi <2 x double> [ %64, %for.body629.lr.ph ], [ %204, %for.body629.for.body629_crit_edge ]
  %152 = phi <2 x double> [ %65, %for.body629.lr.ph ], [ %208, %for.body629.for.body629_crit_edge ]
  %153 = phi <2 x double> [ %66, %for.body629.lr.ph ], [ %213, %for.body629.for.body629_crit_edge ]
  %154 = phi <2 x double> [ %67, %for.body629.lr.ph ], [ %224, %for.body629.for.body629_crit_edge ]
  %arrayidx632 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv1011
  %155 = load i32* %arrayidx632, align 4, !tbaa !11
  %idx.ext633 = sext i32 %155 to i64
  %x636 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 0
  %156 = load double* %x636, align 8, !tbaa !59
  %sub637 = fsub double %73, %156
  %mul639 = fmul double %sub637, %sub637
  %y641 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 1
  %157 = load double* %y641, align 8, !tbaa !61
  %sub642 = fsub double %74, %157
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %mul639, %mul643
  %z646 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 2
  %158 = load double* %z646, align 8, !tbaa !62
  %sub647 = fsub double %75, %158
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %add644, %mul648
  %conv650 = fptrunc double %add649 to float
  %159 = bitcast float %conv650 to i32
  %shr = ashr i32 %159, 17
  %add652 = add nsw i32 %shr, %mul
  %id653 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 2
  %160 = bitcast [4 x i8]* %id653 to i32*
  %bf.load654 = load i32* %160, align 4
  %bf.clear655 = and i32 %bf.load654, 4194303
  %idxprom.i741781 = zext i32 %bf.clear655 to i64
  %arrayidx.i743 = getelementptr inbounds i32* %148, i64 %idxprom.i741781
  %161 = load i32* %arrayidx.i743, align 4, !tbaa !11
  %conv.i744 = zext i32 %161 to i64
  %conv657 = shl nuw nsw i64 %conv.i744, 1
  %mul658 = and i64 %conv657, 131070
  %mul661 = shl nsw i32 %add652, 4
  %idx.ext662 = sext i32 %mul661 to i64
  %and = and i32 %159, -131072
  %charge682 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 1
  %162 = load float* %charge682, align 4, !tbaa !63
  %conv683 = fpext float %162 to double
  %mul684 = fmul double %mul397, %conv683
  %163 = bitcast i32 %and to float
  %conv686 = fpext float %163 to double
  %sub687 = fsub double %add649, %conv686
  %add.ptr.i.sum782 = add i64 %mul658, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %119, i64 %add.ptr.i.sum782, i32 0
  %164 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %9, %164
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %119, i64 %add.ptr.i.sum782, i32 1
  %165 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %9, %165
  %add.ptr663.sum714 = or i64 %idx.ext662, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr663.sum714
  %166 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %166
  %add.ptr668.sum715 = or i64 %idx.ext662, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr668.sum715
  %167 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %167
  %sub701 = fsub double %mul698, %mul700
  %add.ptr663.sum716 = or i64 %idx.ext662, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr663.sum716
  %168 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %168
  %add.ptr668.sum717 = or i64 %idx.ext662, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr668.sum717
  %169 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %169
  %sub706 = fsub double %mul703, %mul705
  %add.ptr663.sum718 = or i64 %idx.ext662, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr663.sum718
  %170 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %170
  %add.ptr668.sum719 = or i64 %idx.ext662, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr668.sum719
  %171 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %171
  %sub711 = fsub double %mul708, %mul710
  %add.ptr673.sum720 = or i64 %idx.ext662, 11
  %arrayidx713 = getelementptr inbounds double* %7, i64 %add.ptr673.sum720
  %172 = load double* %arrayidx713, align 8, !tbaa !17
  %mul714 = fmul double %mul684, %172
  %add.ptr673.sum721 = or i64 %idx.ext662, 10
  %arrayidx715 = getelementptr inbounds double* %7, i64 %add.ptr673.sum721
  %173 = load double* %arrayidx715, align 8, !tbaa !17
  %mul716 = fmul double %mul684, %173
  %add.ptr673.sum722 = or i64 %idx.ext662, 9
  %arrayidx717 = getelementptr inbounds double* %7, i64 %add.ptr673.sum722
  %174 = load double* %arrayidx717, align 8, !tbaa !17
  %mul718 = fmul double %mul684, %174
  %add719 = fadd double %sub701, %mul714
  %add720 = fadd double %sub706, %mul716
  %add721 = fadd double %sub711, %mul718
  %mul723 = fmul double %sub687, 3.000000e+00
  %mul724 = fmul double %mul723, %add719
  %mul725 = fmul double %add720, 2.000000e+00
  %add726 = fadd double %mul724, %mul725
  %mul727 = fmul double %sub687, %add726
  %add728 = fadd double %add721, %mul727
  %mul729 = fmul double %add728, -2.000000e+00
  %mul732 = fmul double %sub637, %mul729
  %175 = insertelement <2 x double> undef, double %sub637, i32 0
  %176 = insertelement <2 x double> %175, double %sub642, i32 1
  %177 = insertelement <2 x double> undef, double %mul732, i32 0
  %178 = insertelement <2 x double> %177, double %mul732, i32 1
  %179 = fmul <2 x double> %176, %178
  %180 = fadd <2 x double> %149, %179
  %181 = load double* %x739, align 8, !tbaa !72
  %add740 = fadd double %181, %mul732
  store double %add740, double* %x739, align 8, !tbaa !72
  %x741 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext633, i32 0
  %mul743 = fmul double %sub642, %mul729
  %182 = insertelement <2 x double> undef, double %sub642, i32 0
  %183 = insertelement <2 x double> %182, double %sub647, i32 1
  %184 = insertelement <2 x double> undef, double %mul743, i32 0
  %185 = insertelement <2 x double> %184, double %mul743, i32 1
  %186 = fmul <2 x double> %183, %185
  %187 = fadd <2 x double> %150, %186
  %188 = load double* %y748, align 8, !tbaa !73
  %add749 = fadd double %188, %mul743
  store double %add749, double* %y748, align 8, !tbaa !73
  %189 = bitcast double* %x741 to <2 x double>*
  %190 = load <2 x double>* %189, align 8, !tbaa !17
  %191 = insertelement <2 x double> %177, double %mul743, i32 1
  %192 = fsub <2 x double> %190, %191
  %193 = bitcast double* %x741 to <2 x double>*
  store <2 x double> %192, <2 x double>* %193, align 8, !tbaa !17
  %mul752 = fmul double %sub647, %mul729
  %194 = load double* %z755, align 8, !tbaa !74
  %add756 = fadd double %194, %mul752
  store double %add756, double* %z755, align 8, !tbaa !74
  %z757 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext633, i32 2
  %195 = load double* %z757, align 8, !tbaa !74
  %sub758 = fsub double %195, %mul752
  store double %sub758, double* %z757, align 8, !tbaa !74
  %add.ptr679.sum723 = or i64 %idx.ext662, 13
  %arrayidx759 = getelementptr inbounds double* %7, i64 %add.ptr679.sum723
  %196 = load double* %arrayidx759, align 8, !tbaa !17
  %add.ptr679.sum724 = or i64 %idx.ext662, 14
  %arrayidx760 = getelementptr inbounds double* %7, i64 %add.ptr679.sum724
  %197 = load double* %arrayidx760, align 8, !tbaa !17
  %add.ptr679.sum725 = or i64 %idx.ext662, 15
  %arrayidx761 = getelementptr inbounds double* %7, i64 %add.ptr679.sum725
  %198 = load double* %arrayidx761, align 8, !tbaa !17
  %mul762 = fmul double %mul684, %198
  %mul763 = fmul double %mul684, %197
  %mul764 = fmul double %mul684, %196
  %mul767 = fmul double %mul723, %mul762
  %mul768 = fmul double %mul763, 2.000000e+00
  %add769 = fadd double %mul768, %mul767
  %mul770 = fmul double %sub687, %add769
  %add771 = fadd double %mul764, %mul770
  %mul772 = fmul double %add771, -2.000000e+00
  %mul776 = fmul double %sub637, %mul772
  %199 = insertelement <2 x double> undef, double %sub647, i32 0
  %200 = insertelement <2 x double> %199, double %sub637, i32 1
  %201 = insertelement <2 x double> undef, double %mul752, i32 0
  %202 = insertelement <2 x double> %201, double %mul776, i32 1
  %203 = fmul <2 x double> %200, %202
  %204 = fadd <2 x double> %151, %203
  %205 = insertelement <2 x double> undef, double %mul776, i32 0
  %206 = insertelement <2 x double> %205, double %mul776, i32 1
  %207 = fmul <2 x double> %183, %206
  %208 = fadd <2 x double> %152, %207
  %209 = load double* %x783, align 8, !tbaa !72
  %add784 = fadd double %209, %mul776
  store double %add784, double* %x783, align 8, !tbaa !72
  %x785 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext633, i32 0
  %mul788 = fmul double %sub642, %mul772
  %210 = insertelement <2 x double> %199, double %sub642, i32 1
  %211 = insertelement <2 x double> %177, double %mul788, i32 1
  %212 = fmul <2 x double> %210, %211
  %213 = fadd <2 x double> %153, %212
  %214 = load double* %y793, align 8, !tbaa !73
  %add794 = fadd double %214, %mul788
  store double %add794, double* %y793, align 8, !tbaa !73
  %215 = bitcast double* %x785 to <2 x double>*
  %216 = load <2 x double>* %215, align 8, !tbaa !17
  %217 = insertelement <2 x double> %205, double %mul788, i32 1
  %218 = fsub <2 x double> %216, %217
  %219 = bitcast double* %x785 to <2 x double>*
  store <2 x double> %218, <2 x double>* %219, align 8, !tbaa !17
  %mul798 = fmul double %sub647, %mul772
  %220 = insertelement <2 x double> %199, double %sub647, i32 1
  %221 = insertelement <2 x double> undef, double %mul788, i32 0
  %222 = insertelement <2 x double> %221, double %mul798, i32 1
  %223 = fmul <2 x double> %220, %222
  %224 = fadd <2 x double> %154, %223
  %225 = load double* %z801, align 8, !tbaa !74
  %add802 = fadd double %225, %mul798
  store double %add802, double* %z801, align 8, !tbaa !74
  %z803 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext633, i32 2
  %226 = load double* %z803, align 8, !tbaa !74
  %sub804 = fsub double %226, %mul798
  store double %sub804, double* %z803, align 8, !tbaa !74
  %indvars.iv.next1012 = add nuw nsw i64 %indvars.iv1011, 1
  %lftr.wideiv1013 = trunc i64 %indvars.iv.next1012 to i32
  %exitcond1014 = icmp eq i32 %lftr.wideiv1013, %conv626
  br i1 %exitcond1014, label %for.end807, label %for.body629.for.body629_crit_edge

for.body629.for.body629_crit_edge:                ; preds = %for.body629
  %.pre = load i32** %atomVdwType.i746, align 8, !tbaa !64
  br label %for.body629

for.end807:                                       ; preds = %for.body629, %for.end607
  %227 = phi <2 x double> [ %62, %for.end607 ], [ %180, %for.body629 ]
  %228 = phi <2 x double> [ %63, %for.end607 ], [ %187, %for.body629 ]
  %229 = phi <2 x double> [ %64, %for.end607 ], [ %204, %for.body629 ]
  %230 = phi <2 x double> [ %65, %for.end607 ], [ %208, %for.body629 ]
  %231 = phi <2 x double> [ %66, %for.end607 ], [ %213, %for.body629 ]
  %232 = phi <2 x double> [ %67, %for.end607 ], [ %224, %for.body629 ]
  %conv812 = trunc i64 %sub.ptr.div618 to i32
  %cmp814882 = icmp sgt i32 %conv812, 0
  br i1 %cmp814882, label %for.body815.lr.ph, label %for.end1050

for.body815.lr.ph:                                ; preds = %for.end807
  %x959 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y969 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z977 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x1026 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1036 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1044 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body815

for.body815:                                      ; preds = %for.body815, %for.body815.lr.ph
  %indvars.iv1015 = phi i64 [ 0, %for.body815.lr.ph ], [ %indvars.iv.next1016, %for.body815 ]
  %233 = phi <2 x double> [ %227, %for.body815.lr.ph ], [ %265, %for.body815 ]
  %234 = phi <2 x double> [ %228, %for.body815.lr.ph ], [ %272, %for.body815 ]
  %235 = phi <2 x double> [ %229, %for.body815.lr.ph ], [ %292, %for.body815 ]
  %236 = phi <2 x double> [ %230, %for.body815.lr.ph ], [ %296, %for.body815 ]
  %237 = phi <2 x double> [ %231, %for.body815.lr.ph ], [ %301, %for.body815 ]
  %238 = phi <2 x double> [ %232, %for.body815.lr.ph ], [ %312, %for.body815 ]
  %arrayidx818 = getelementptr inbounds i32* %cond158, i64 %indvars.iv1015
  %239 = load i32* %arrayidx818, align 4, !tbaa !11
  %idx.ext820 = sext i32 %239 to i64
  %x824 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 0
  %240 = load double* %x824, align 8, !tbaa !59
  %sub825 = fsub double %73, %240
  %mul827 = fmul double %sub825, %sub825
  %y830 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 1
  %241 = load double* %y830, align 8, !tbaa !61
  %sub831 = fsub double %74, %241
  %mul832 = fmul double %sub831, %sub831
  %add833 = fadd double %mul827, %mul832
  %z836 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 0, i32 2
  %242 = load double* %z836, align 8, !tbaa !62
  %sub837 = fsub double %75, %242
  %mul838 = fmul double %sub837, %sub837
  %add839 = fadd double %add833, %mul838
  %conv841 = fptrunc double %add839 to float
  %243 = bitcast float %conv841 to i32
  %shr845 = ashr i32 %243, 17
  %add846 = add nsw i32 %shr845, %mul
  %id848 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 2
  %244 = bitcast [4 x i8]* %id848 to i32*
  %bf.load849 = load i32* %244, align 4
  %bf.clear850 = and i32 %bf.load849, 4194303
  %idxprom.i739779 = zext i32 %bf.clear850 to i64
  %245 = load i32** %atomVdwType.i746, align 8, !tbaa !64
  %arrayidx.i740 = getelementptr inbounds i32* %245, i64 %idxprom.i739779
  %246 = load i32* %arrayidx.i740, align 4, !tbaa !11
  %conv.i = zext i32 %246 to i64
  %conv852 = shl nuw nsw i64 %conv.i, 1
  %mul853 = and i64 %conv852, 131070
  %add.ptr855.sum691 = or i64 %mul853, 1
  %mul858 = shl nsw i32 %add846, 4
  %idx.ext859 = sext i32 %mul858 to i64
  %and886 = and i32 %243, -131072
  %charge888 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext820, i32 1
  %247 = load float* %charge888, align 4, !tbaa !63
  %conv889 = fpext float %247 to double
  %mul890 = fmul double %mul397, %conv889
  %248 = bitcast i32 %and886 to float
  %conv893 = fpext float %248 to double
  %sub894 = fsub double %add839, %conv893
  %add.ptr.i.sum = add i64 %add.ptr855.sum691, %idx.ext.i
  %A896 = getelementptr inbounds %"struct.LJTable::TableEntry"* %119, i64 %add.ptr.i.sum, i32 0
  %249 = load double* %A896, align 8, !tbaa !69
  %mul897 = fmul double %9, %249
  %B899 = getelementptr inbounds %"struct.LJTable::TableEntry"* %119, i64 %add.ptr.i.sum, i32 1
  %250 = load double* %B899, align 8, !tbaa !71
  %mul900 = fmul double %9, %250
  %add.ptr860.sum695 = or i64 %idx.ext859, 3
  %arrayidx906 = getelementptr inbounds double* %7, i64 %add.ptr860.sum695
  %251 = load double* %arrayidx906, align 8, !tbaa !17
  %mul907 = fmul double %mul897, %251
  %add.ptr867.sum696 = or i64 %idx.ext859, 7
  %arrayidx908 = getelementptr inbounds double* %7, i64 %add.ptr867.sum696
  %252 = load double* %arrayidx908, align 8, !tbaa !17
  %mul909 = fmul double %mul900, %252
  %sub910 = fsub double %mul907, %mul909
  %add.ptr860.sum697 = or i64 %idx.ext859, 2
  %arrayidx912 = getelementptr inbounds double* %7, i64 %add.ptr860.sum697
  %253 = load double* %arrayidx912, align 8, !tbaa !17
  %mul913 = fmul double %mul897, %253
  %add.ptr867.sum698 = or i64 %idx.ext859, 6
  %arrayidx914 = getelementptr inbounds double* %7, i64 %add.ptr867.sum698
  %254 = load double* %arrayidx914, align 8, !tbaa !17
  %mul915 = fmul double %mul900, %254
  %sub916 = fsub double %mul913, %mul915
  %add.ptr860.sum699 = or i64 %idx.ext859, 1
  %arrayidx918 = getelementptr inbounds double* %7, i64 %add.ptr860.sum699
  %255 = load double* %arrayidx918, align 8, !tbaa !17
  %mul919 = fmul double %mul897, %255
  %add.ptr867.sum700 = or i64 %idx.ext859, 5
  %arrayidx920 = getelementptr inbounds double* %7, i64 %add.ptr867.sum700
  %256 = load double* %arrayidx920, align 8, !tbaa !17
  %mul921 = fmul double %mul900, %256
  %sub922 = fsub double %mul919, %mul921
  %mul924 = fmul double %sub923, %mul890
  %add.ptr874.sum701 = or i64 %idx.ext859, 11
  %arrayidx927 = getelementptr inbounds double* %7, i64 %add.ptr874.sum701
  %257 = load double* %arrayidx927, align 8, !tbaa !17
  %mul928 = fmul double %mul924, %257
  %add.ptr874.sum702 = or i64 %idx.ext859, 10
  %arrayidx930 = getelementptr inbounds double* %7, i64 %add.ptr874.sum702
  %258 = load double* %arrayidx930, align 8, !tbaa !17
  %mul931 = fmul double %mul924, %258
  %add.ptr874.sum703 = or i64 %idx.ext859, 9
  %arrayidx933 = getelementptr inbounds double* %7, i64 %add.ptr874.sum703
  %259 = load double* %arrayidx933, align 8, !tbaa !17
  %mul934 = fmul double %mul924, %259
  %add935 = fadd double %sub910, %mul928
  %add936 = fadd double %sub916, %mul931
  %add937 = fadd double %sub922, %mul934
  %mul940 = fmul double %sub894, 3.000000e+00
  %mul941 = fmul double %mul940, %add935
  %mul942 = fmul double %add936, 2.000000e+00
  %add943 = fadd double %mul941, %mul942
  %mul944 = fmul double %sub894, %add943
  %add945 = fadd double %add937, %mul944
  %mul947 = fmul double %add945, -2.000000e+00
  %mul952 = fmul double %sub825, %mul947
  %260 = insertelement <2 x double> undef, double %sub825, i32 0
  %261 = insertelement <2 x double> %260, double %sub831, i32 1
  %262 = insertelement <2 x double> undef, double %mul952, i32 0
  %263 = insertelement <2 x double> %262, double %mul952, i32 1
  %264 = fmul <2 x double> %261, %263
  %265 = fadd <2 x double> %233, %264
  %266 = load double* %x959, align 8, !tbaa !72
  %add960 = fadd double %266, %mul952
  store double %add960, double* %x959, align 8, !tbaa !72
  %x961 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext820, i32 0
  %mul964 = fmul double %sub831, %mul947
  %267 = insertelement <2 x double> undef, double %sub831, i32 0
  %268 = insertelement <2 x double> %267, double %sub837, i32 1
  %269 = insertelement <2 x double> undef, double %mul964, i32 0
  %270 = insertelement <2 x double> %269, double %mul964, i32 1
  %271 = fmul <2 x double> %268, %270
  %272 = fadd <2 x double> %234, %271
  %273 = load double* %y969, align 8, !tbaa !73
  %add970 = fadd double %273, %mul964
  store double %add970, double* %y969, align 8, !tbaa !73
  %274 = bitcast double* %x961 to <2 x double>*
  %275 = load <2 x double>* %274, align 8, !tbaa !17
  %276 = insertelement <2 x double> %262, double %mul964, i32 1
  %277 = fsub <2 x double> %275, %276
  %278 = bitcast double* %x961 to <2 x double>*
  store <2 x double> %277, <2 x double>* %278, align 8, !tbaa !17
  %mul974 = fmul double %sub837, %mul947
  %279 = load double* %z977, align 8, !tbaa !74
  %add978 = fadd double %279, %mul974
  store double %add978, double* %z977, align 8, !tbaa !74
  %z979 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext820, i32 2
  %280 = load double* %z979, align 8, !tbaa !74
  %sub980 = fsub double %280, %mul974
  store double %sub980, double* %z979, align 8, !tbaa !74
  %add.ptr882.sum704 = or i64 %idx.ext859, 13
  %arrayidx982 = getelementptr inbounds double* %7, i64 %add.ptr882.sum704
  %281 = load double* %arrayidx982, align 8, !tbaa !17
  %add.ptr882.sum705 = or i64 %idx.ext859, 14
  %arrayidx984 = getelementptr inbounds double* %7, i64 %add.ptr882.sum705
  %282 = load double* %arrayidx984, align 8, !tbaa !17
  %add.ptr882.sum706 = or i64 %idx.ext859, 15
  %arrayidx986 = getelementptr inbounds double* %7, i64 %add.ptr882.sum706
  %283 = load double* %arrayidx986, align 8, !tbaa !17
  %mul987 = shl nsw i32 %add846, 2
  %idx.ext988 = sext i32 %mul987 to i64
  %add.ptr989.sum707 = or i64 %idx.ext988, 1
  %arrayidx993 = getelementptr inbounds double* %8, i64 %add.ptr989.sum707
  %284 = load double* %arrayidx993, align 8, !tbaa !17
  %mul994 = fmul double %sub, %284
  %sub995 = fsub double %281, %mul994
  %add.ptr989.sum708 = or i64 %idx.ext988, 2
  %arrayidx996 = getelementptr inbounds double* %8, i64 %add.ptr989.sum708
  %285 = load double* %arrayidx996, align 8, !tbaa !17
  %mul997 = fmul double %sub, %285
  %sub998 = fsub double %282, %mul997
  %add.ptr989.sum709 = or i64 %idx.ext988, 3
  %arrayidx999 = getelementptr inbounds double* %8, i64 %add.ptr989.sum709
  %286 = load double* %arrayidx999, align 8, !tbaa !17
  %mul1000 = fmul double %sub, %286
  %sub1001 = fsub double %283, %mul1000
  %mul1002 = fmul double %mul890, %sub1001
  %mul1003 = fmul double %mul890, %sub998
  %mul1004 = fmul double %mul890, %sub995
  %mul1008 = fmul double %mul940, %mul1002
  %mul1009 = fmul double %mul1003, 2.000000e+00
  %add1010 = fadd double %mul1009, %mul1008
  %mul1011 = fmul double %sub894, %add1010
  %add1012 = fadd double %mul1004, %mul1011
  %mul1014 = fmul double %add1012, -2.000000e+00
  %mul1019 = fmul double %sub825, %mul1014
  %287 = insertelement <2 x double> undef, double %sub837, i32 0
  %288 = insertelement <2 x double> %287, double %sub825, i32 1
  %289 = insertelement <2 x double> undef, double %mul974, i32 0
  %290 = insertelement <2 x double> %289, double %mul1019, i32 1
  %291 = fmul <2 x double> %288, %290
  %292 = fadd <2 x double> %235, %291
  %293 = insertelement <2 x double> undef, double %mul1019, i32 0
  %294 = insertelement <2 x double> %293, double %mul1019, i32 1
  %295 = fmul <2 x double> %268, %294
  %296 = fadd <2 x double> %236, %295
  %297 = load double* %x1026, align 8, !tbaa !72
  %add1027 = fadd double %297, %mul1019
  store double %add1027, double* %x1026, align 8, !tbaa !72
  %x1028 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext820, i32 0
  %mul1031 = fmul double %sub831, %mul1014
  %298 = insertelement <2 x double> %287, double %sub831, i32 1
  %299 = insertelement <2 x double> %262, double %mul1031, i32 1
  %300 = fmul <2 x double> %298, %299
  %301 = fadd <2 x double> %237, %300
  %302 = load double* %y1036, align 8, !tbaa !73
  %add1037 = fadd double %302, %mul1031
  store double %add1037, double* %y1036, align 8, !tbaa !73
  %303 = bitcast double* %x1028 to <2 x double>*
  %304 = load <2 x double>* %303, align 8, !tbaa !17
  %305 = insertelement <2 x double> %293, double %mul1031, i32 1
  %306 = fsub <2 x double> %304, %305
  %307 = bitcast double* %x1028 to <2 x double>*
  store <2 x double> %306, <2 x double>* %307, align 8, !tbaa !17
  %mul1041 = fmul double %sub837, %mul1014
  %308 = insertelement <2 x double> %287, double %sub837, i32 1
  %309 = insertelement <2 x double> undef, double %mul1031, i32 0
  %310 = insertelement <2 x double> %309, double %mul1041, i32 1
  %311 = fmul <2 x double> %308, %310
  %312 = fadd <2 x double> %238, %311
  %313 = load double* %z1044, align 8, !tbaa !74
  %add1045 = fadd double %313, %mul1041
  store double %add1045, double* %z1044, align 8, !tbaa !74
  %z1046 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext820, i32 2
  %314 = load double* %z1046, align 8, !tbaa !74
  %sub1047 = fsub double %314, %mul1041
  store double %sub1047, double* %z1046, align 8, !tbaa !74
  %indvars.iv.next1016 = add nuw nsw i64 %indvars.iv1015, 1
  %lftr.wideiv1017 = trunc i64 %indvars.iv.next1016 to i32
  %exitcond1018 = icmp eq i32 %lftr.wideiv1017, %conv812
  br i1 %exitcond1018, label %for.end1050, label %for.body815

for.end1050:                                      ; preds = %for.body815, %for.end807
  %315 = phi <2 x double> [ %227, %for.end807 ], [ %265, %for.body815 ]
  %316 = phi <2 x double> [ %228, %for.end807 ], [ %272, %for.body815 ]
  %317 = phi <2 x double> [ %229, %for.end807 ], [ %292, %for.body815 ]
  %318 = phi <2 x double> [ %230, %for.end807 ], [ %296, %for.body815 ]
  %319 = phi <2 x double> [ %231, %for.end807 ], [ %301, %for.body815 ]
  %320 = phi <2 x double> [ %232, %for.end807 ], [ %312, %for.body815 ]
  %conv1055 = trunc i64 %sub.ptr.div611 to i32
  %cmp1057908 = icmp sgt i32 %conv1055, 0
  br i1 %cmp1057908, label %for.body1058.lr.ph, label %for.inc1175

for.body1058.lr.ph:                               ; preds = %for.end1050
  %321 = extractelement <2 x double> %317, i32 1
  %322 = extractelement <2 x double> %317, i32 0
  %323 = extractelement <2 x double> %319, i32 1
  %324 = extractelement <2 x double> %319, i32 0
  %x1150 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1160 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1168 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  %325 = insertelement <2 x double> undef, double %322, i32 0
  %326 = insertelement <2 x double> undef, double %324, i32 0
  br label %for.body1058

for.body1058:                                     ; preds = %for.body1058, %for.body1058.lr.ph
  %indvars.iv1019 = phi i64 [ 0, %for.body1058.lr.ph ], [ %indvars.iv.next1020, %for.body1058 ]
  %fullElectVirial_xx.3915 = phi double [ %321, %for.body1058.lr.ph ], [ %add1145, %for.body1058 ]
  %fullElectVirial_yy.3912 = phi double [ %323, %for.body1058.lr.ph ], [ %add1157, %for.body1058 ]
  %327 = phi <2 x double> [ %318, %for.body1058.lr.ph ], [ %347, %for.body1058 ]
  %328 = phi <2 x double> [ %320, %for.body1058.lr.ph ], [ %360, %for.body1058 ]
  %arrayidx1061 = getelementptr inbounds i32* %cond147775, i64 %indvars.iv1019
  %329 = load i32* %arrayidx1061, align 4, !tbaa !11
  %idx.ext1063 = sext i32 %329 to i64
  %x1067 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1063, i32 0, i32 0
  %330 = load double* %x1067, align 8, !tbaa !59
  %sub1068 = fsub double %73, %330
  %mul1070 = fmul double %sub1068, %sub1068
  %y1073 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1063, i32 0, i32 1
  %331 = load double* %y1073, align 8, !tbaa !61
  %sub1074 = fsub double %74, %331
  %mul1075 = fmul double %sub1074, %sub1074
  %add1076 = fadd double %mul1070, %mul1075
  %z1079 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1063, i32 0, i32 2
  %332 = load double* %z1079, align 8, !tbaa !62
  %sub1080 = fsub double %75, %332
  %mul1081 = fmul double %sub1080, %sub1080
  %add1082 = fadd double %add1076, %mul1081
  %conv1084 = fptrunc double %add1082 to float
  %333 = bitcast float %conv1084 to i32
  %shr1088 = ashr i32 %333, 17
  %add1089 = add nsw i32 %shr1088, %mul
  %mul1091 = shl nsw i32 %add1089, 4
  %idx.ext1092 = sext i32 %mul1091 to i64
  %and1099 = and i32 %333, -131072
  %charge1101 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1063, i32 1
  %334 = load float* %charge1101, align 4, !tbaa !63
  %conv1102 = fpext float %334 to double
  %mul1103 = fmul double %mul397, %conv1102
  %335 = bitcast i32 %and1099 to float
  %conv1106 = fpext float %335 to double
  %sub1107 = fsub double %add1082, %conv1106
  %add.ptr1095.sum684 = or i64 %idx.ext1092, 13
  %arrayidx1109 = getelementptr inbounds double* %7, i64 %add.ptr1095.sum684
  %336 = load double* %arrayidx1109, align 8, !tbaa !17
  %add.ptr1095.sum685 = or i64 %idx.ext1092, 14
  %arrayidx1111 = getelementptr inbounds double* %7, i64 %add.ptr1095.sum685
  %337 = load double* %arrayidx1111, align 8, !tbaa !17
  %add.ptr1095.sum686 = or i64 %idx.ext1092, 15
  %arrayidx1113 = getelementptr inbounds double* %7, i64 %add.ptr1095.sum686
  %338 = load double* %arrayidx1113, align 8, !tbaa !17
  %mul1115 = shl nsw i32 %add1089, 2
  %idx.ext1116 = sext i32 %mul1115 to i64
  %add.ptr1117.sum687 = or i64 %idx.ext1116, 1
  %arrayidx1120 = getelementptr inbounds double* %8, i64 %add.ptr1117.sum687
  %339 = load double* %arrayidx1120, align 8, !tbaa !17
  %sub1121 = fsub double %336, %339
  %add.ptr1117.sum688 = or i64 %idx.ext1116, 2
  %arrayidx1122 = getelementptr inbounds double* %8, i64 %add.ptr1117.sum688
  %340 = load double* %arrayidx1122, align 8, !tbaa !17
  %sub1123 = fsub double %337, %340
  %add.ptr1117.sum689 = or i64 %idx.ext1116, 3
  %arrayidx1124 = getelementptr inbounds double* %8, i64 %add.ptr1117.sum689
  %341 = load double* %arrayidx1124, align 8, !tbaa !17
  %sub1125 = fsub double %338, %341
  %mul1126 = fmul double %mul1103, %sub1125
  %mul1127 = fmul double %mul1103, %sub1123
  %mul1128 = fmul double %mul1103, %sub1121
  %mul1131 = fmul double %sub1107, 3.000000e+00
  %mul1132 = fmul double %mul1126, %mul1131
  %mul1133 = fmul double %mul1127, 2.000000e+00
  %add1134 = fadd double %mul1133, %mul1132
  %mul1135 = fmul double %sub1107, %add1134
  %add1136 = fadd double %mul1128, %mul1135
  %mul1138 = fmul double %add1136, -2.000000e+00
  %mul1143 = fmul double %sub1068, %mul1138
  %mul1144 = fmul double %sub1068, %mul1143
  %add1145 = fadd double %fullElectVirial_xx.3915, %mul1144
  %342 = insertelement <2 x double> undef, double %sub1074, i32 0
  %343 = insertelement <2 x double> %342, double %sub1080, i32 1
  %344 = insertelement <2 x double> undef, double %mul1143, i32 0
  %345 = insertelement <2 x double> %344, double %mul1143, i32 1
  %346 = fmul <2 x double> %343, %345
  %347 = fadd <2 x double> %327, %346
  %348 = load double* %x1150, align 8, !tbaa !72
  %add1151 = fadd double %348, %mul1143
  store double %add1151, double* %x1150, align 8, !tbaa !72
  %x1152 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1063, i32 0
  %mul1155 = fmul double %sub1074, %mul1138
  %mul1156 = fmul double %sub1074, %mul1155
  %add1157 = fadd double %fullElectVirial_yy.3912, %mul1156
  %349 = load double* %y1160, align 8, !tbaa !73
  %add1161 = fadd double %349, %mul1155
  store double %add1161, double* %y1160, align 8, !tbaa !73
  %350 = bitcast double* %x1152 to <2 x double>*
  %351 = load <2 x double>* %350, align 8, !tbaa !17
  %352 = insertelement <2 x double> %344, double %mul1155, i32 1
  %353 = fsub <2 x double> %351, %352
  %354 = bitcast double* %x1152 to <2 x double>*
  store <2 x double> %353, <2 x double>* %354, align 8, !tbaa !17
  %mul1165 = fmul double %sub1080, %mul1138
  %355 = insertelement <2 x double> undef, double %sub1080, i32 0
  %356 = insertelement <2 x double> %355, double %sub1080, i32 1
  %357 = insertelement <2 x double> undef, double %mul1155, i32 0
  %358 = insertelement <2 x double> %357, double %mul1165, i32 1
  %359 = fmul <2 x double> %356, %358
  %360 = fadd <2 x double> %328, %359
  %361 = load double* %z1168, align 8, !tbaa !74
  %add1169 = fadd double %361, %mul1165
  store double %add1169, double* %z1168, align 8, !tbaa !74
  %z1170 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1063, i32 2
  %362 = load double* %z1170, align 8, !tbaa !74
  %sub1171 = fsub double %362, %mul1165
  store double %sub1171, double* %z1170, align 8, !tbaa !74
  %indvars.iv.next1020 = add nuw nsw i64 %indvars.iv1019, 1
  %lftr.wideiv1021 = trunc i64 %indvars.iv.next1020 to i32
  %exitcond1022 = icmp eq i32 %lftr.wideiv1021, %conv1055
  br i1 %exitcond1022, label %for.inc1175.loopexit, label %for.body1058

for.inc1175.loopexit:                             ; preds = %for.body1058
  %363 = insertelement <2 x double> %325, double %add1145, i32 1
  %364 = insertelement <2 x double> %326, double %add1157, i32 1
  br label %for.inc1175

for.inc1175:                                      ; preds = %for.inc1175.loopexit, %for.end1050, %if.then220
  %pairCount.3 = phi i32 [ %sub216, %if.then220 ], [ %pairCount.2, %for.end1050 ], [ %pairCount.2, %for.inc1175.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0926, %if.then220 ], [ %pairlistoffset.1, %for.end1050 ], [ %pairlistoffset.1, %for.inc1175.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0927, %if.then220 ], [ %pairlistindex.2, %for.end1050 ], [ %pairlistindex.2, %for.inc1175.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0928, %if.then220 ], [ %fixg_lower.3, %for.end1050 ], [ %fixg_lower.3, %for.inc1175.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.0929, %if.then220 ], [ %g_lower.3, %for.end1050 ], [ %g_lower.3, %for.inc1175.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0930, %if.then220 ], [ %j_hgroup.2, %for.end1050 ], [ %j_hgroup.2, %for.inc1175.loopexit ]
  %i.1 = phi i32 [ %add222, %if.then220 ], [ %i.0931, %for.end1050 ], [ %i.0931, %for.inc1175.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0944, %if.then220 ], [ %conv621, %for.end1050 ], [ %conv621, %for.inc1175.loopexit ]
  %365 = phi <2 x double> [ %62, %if.then220 ], [ %315, %for.end1050 ], [ %315, %for.inc1175.loopexit ]
  %366 = phi <2 x double> [ %63, %if.then220 ], [ %316, %for.end1050 ], [ %316, %for.inc1175.loopexit ]
  %367 = phi <2 x double> [ %64, %if.then220 ], [ %317, %for.end1050 ], [ %363, %for.inc1175.loopexit ]
  %368 = phi <2 x double> [ %65, %if.then220 ], [ %318, %for.end1050 ], [ %347, %for.inc1175.loopexit ]
  %369 = phi <2 x double> [ %66, %if.then220 ], [ %319, %for.end1050 ], [ %364, %for.inc1175.loopexit ]
  %370 = phi <2 x double> [ %67, %if.then220 ], [ %320, %for.end1050 ], [ %360, %for.inc1175.loopexit ]
  %inc1176 = add nsw i32 %i.1, 1
  %cmp174 = icmp sgt i32 %sub165, %inc1176
  br i1 %cmp174, label %for.body175, label %for.end1177

for.end1177:                                      ; preds = %for.inc1175, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1175 ]
  %371 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %365, %for.inc1175 ]
  %372 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %366, %for.inc1175 ]
  %373 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %367, %for.inc1175 ]
  %374 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %368, %for.inc1175 ]
  %375 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %369, %for.inc1175 ]
  %376 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %370, %for.inc1175 ]
  %377 = extractelement <2 x double> %376, i32 1
  %378 = extractelement <2 x double> %376, i32 0
  %arraydecay1178 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1179 = icmp eq i32* %cond74975110361042, %arraydecay1178
  br i1 %cmp1179, label %if.end1184, label %delete.notnull1182

delete.notnull1182:                               ; preds = %for.end1177
  %379 = bitcast i32* %cond74975110361042 to i8*
  call void @_ZdaPv(i8* %379) #7
  br label %if.end1184

if.end1184:                                       ; preds = %delete.notnull1182, %for.end1177
  %arraydecay1185 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1186 = icmp eq i32* %cond1975310341043, %arraydecay1185
  br i1 %cmp1186, label %if.end1191, label %delete.notnull1189

delete.notnull1189:                               ; preds = %if.end1184
  %380 = bitcast i32* %cond1975310341043 to i8*
  call void @_ZdaPv(i8* %380) #7
  br label %if.end1191

if.end1191:                                       ; preds = %delete.notnull1189, %if.end1184
  %arraydecay1192 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1193 = icmp eq i32* %cond3010381041, %arraydecay1192
  br i1 %cmp1193, label %if.end1198, label %delete.notnull1196

delete.notnull1196:                               ; preds = %if.end1191
  %381 = bitcast i32* %cond3010381041 to i8*
  call void @_ZdaPv(i8* %381) #7
  br label %if.end1198

if.end1198:                                       ; preds = %delete.notnull1196, %if.end1191
  %arraydecay1199 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1200 = icmp eq i32* %cond114757759765771, %arraydecay1199
  br i1 %cmp1200, label %if.end1205, label %delete.notnull1203

delete.notnull1203:                               ; preds = %if.end1198
  %382 = bitcast i32* %cond114757759765771 to i8*
  call void @_ZdaPv(i8* %382) #7
  br label %if.end1205

if.end1205:                                       ; preds = %delete.notnull1203, %if.end1198
  %arraydecay1206 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1207 = icmp eq i32* %cond125761763773, %arraydecay1206
  br i1 %cmp1207, label %if.end1212, label %delete.notnull1210

delete.notnull1210:                               ; preds = %if.end1205
  %383 = bitcast i32* %cond125761763773 to i8*
  call void @_ZdaPv(i8* %383) #7
  br label %if.end1212

if.end1212:                                       ; preds = %delete.notnull1210, %if.end1205
  %arraydecay1213 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1214 = icmp eq i32* %cond136767769, %arraydecay1213
  br i1 %cmp1214, label %if.end1219, label %delete.notnull1217

delete.notnull1217:                               ; preds = %if.end1212
  %384 = bitcast i32* %cond136767769 to i8*
  call void @_ZdaPv(i8* %384) #7
  br label %if.end1219

if.end1219:                                       ; preds = %delete.notnull1217, %if.end1212
  %arraydecay1220 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1221 = icmp eq i32* %cond147775, %arraydecay1220
  br i1 %cmp1221, label %if.end1226, label %delete.notnull1224

delete.notnull1224:                               ; preds = %if.end1219
  %385 = bitcast i32* %cond147775 to i8*
  call void @_ZdaPv(i8* %385) #7
  br label %if.end1226

if.end1226:                                       ; preds = %delete.notnull1224, %if.end1219
  %arraydecay1227 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1228 = icmp eq i32* %cond158, %arraydecay1227
  br i1 %cmp1228, label %if.end1233, label %delete.notnull1231

delete.notnull1231:                               ; preds = %if.end1226
  %386 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %386) #7
  br label %if.end1233

if.end1233:                                       ; preds = %delete.notnull1231, %if.end1226
  %conv1234 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1235 = getelementptr inbounds double* %1, i64 22
  %387 = load double* %arrayidx1235, align 8, !tbaa !17
  %add1236 = fadd double %conv1234, %387
  store double %add1236, double* %arrayidx1235, align 8, !tbaa !17
  %arrayidx1237 = getelementptr inbounds double* %1, i64 3
  %388 = bitcast double* %arrayidx1237 to <2 x double>*
  %389 = load <2 x double>* %388, align 8, !tbaa !17
  %390 = fadd <2 x double> %371, %389
  %391 = bitcast double* %arrayidx1237 to <2 x double>*
  store <2 x double> %390, <2 x double>* %391, align 8, !tbaa !17
  %arrayidx1241 = getelementptr inbounds double* %1, i64 5
  %392 = bitcast double* %arrayidx1241 to <2 x double>*
  %393 = load <2 x double>* %392, align 8, !tbaa !17
  %394 = shufflevector <2 x double> %375, <2 x double> %371, <2 x i32> <i32 0, i32 3>
  %395 = fadd <2 x double> %394, %393
  %396 = bitcast double* %arrayidx1241 to <2 x double>*
  store <2 x double> %395, <2 x double>* %396, align 8, !tbaa !17
  %arrayidx1245 = getelementptr inbounds double* %1, i64 7
  %397 = bitcast double* %arrayidx1245 to <2 x double>*
  %398 = load <2 x double>* %397, align 8, !tbaa !17
  %399 = fadd <2 x double> %372, %398
  %400 = bitcast double* %arrayidx1245 to <2 x double>*
  store <2 x double> %399, <2 x double>* %400, align 8, !tbaa !17
  %arrayidx1249 = getelementptr inbounds double* %1, i64 9
  %401 = bitcast double* %arrayidx1249 to <2 x double>*
  %402 = load <2 x double>* %401, align 8, !tbaa !17
  %403 = shufflevector <2 x double> %375, <2 x double> %372, <2 x i32> <i32 0, i32 3>
  %404 = fadd <2 x double> %403, %402
  %405 = bitcast double* %arrayidx1249 to <2 x double>*
  store <2 x double> %404, <2 x double>* %405, align 8, !tbaa !17
  %arrayidx1253 = getelementptr inbounds double* %1, i64 11
  %406 = bitcast double* %arrayidx1253 to <2 x double>*
  %407 = load <2 x double>* %406, align 8, !tbaa !17
  %408 = fadd <2 x double> %373, %407
  %409 = bitcast double* %arrayidx1253 to <2 x double>*
  store <2 x double> %408, <2 x double>* %409, align 8, !tbaa !17
  %arrayidx1257 = getelementptr inbounds double* %1, i64 13
  %410 = bitcast double* %arrayidx1257 to <2 x double>*
  %411 = load <2 x double>* %410, align 8, !tbaa !17
  %412 = fadd <2 x double> %374, %411
  %413 = bitcast double* %arrayidx1257 to <2 x double>*
  store <2 x double> %412, <2 x double>* %413, align 8, !tbaa !17
  %arrayidx1261 = getelementptr inbounds double* %1, i64 15
  %414 = bitcast double* %arrayidx1261 to <2 x double>*
  %415 = load <2 x double>* %414, align 8, !tbaa !17
  %416 = shufflevector <2 x double> %374, <2 x double> %375, <2 x i32> <i32 0, i32 3>
  %417 = fadd <2 x double> %416, %415
  %418 = bitcast double* %arrayidx1261 to <2 x double>*
  store <2 x double> %417, <2 x double>* %418, align 8, !tbaa !17
  %arrayidx1265 = getelementptr inbounds double* %1, i64 17
  %419 = load double* %arrayidx1265, align 8, !tbaa !17
  %add1266 = fadd double %378, %419
  store double %add1266, double* %arrayidx1265, align 8, !tbaa !17
  %arrayidx1267 = getelementptr inbounds double* %1, i64 18
  %420 = bitcast double* %arrayidx1267 to <2 x double>*
  %421 = load <2 x double>* %420, align 8, !tbaa !17
  %422 = shufflevector <2 x double> %374, <2 x double> %376, <2 x i32> <i32 1, i32 2>
  %423 = fadd <2 x double> %422, %421
  %424 = bitcast double* %arrayidx1267 to <2 x double>*
  store <2 x double> %423, <2 x double>* %424, align 8, !tbaa !17
  %arrayidx1271 = getelementptr inbounds double* %1, i64 20
  %425 = load double* %arrayidx1271, align 8, !tbaa !17
  %add1272 = fadd double %377, %425
  store double %add1272, double* %arrayidx1271, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1233, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil26calc_self_energy_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %8 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %9 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %10 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %10
  %11 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %12 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %12, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %13 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %14 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %15 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %16 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %17 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %19 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %19) #6
  %cmp = icmp slt i32 %14, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %14, 5
  %20 = sext i32 %add to i64
  %21 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call = call noalias i8* @_Znam(i64 %24) #8
  %25 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %24) #8
  %27 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp311043 = icmp sgt i32 %14, 0
  br i1 %cmp311043, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond301118 = phi i32* [ %27, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond8088101116 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond198121114 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv1106 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1107, %for.inc ]
  %g.01044 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %16, i64 %indvars.iv1106, i32 2
  %28 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %28, align 4
  %29 = and i32 %bf.load, 62914560
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.01044, 1
  %idxprom41 = sext i32 %g.01044 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond8088101116, i64 %idxprom41
  %31 = trunc i64 %indvars.iv1106 to i32
  store i32 %31, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.01044, %for.body ]
  %indvars.iv.next1107 = add nuw nsw i64 %indvars.iv1106, 1
  %lftr.wideiv1108 = trunc i64 %indvars.iv.next1107 to i32
  %exitcond1109 = icmp eq i32 %lftr.wideiv1108, %14
  br i1 %exitcond1109, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond8088101116, i64 %idxprom48
  %32 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond8088101116, i64 %idxprom50
  store i32 %32, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa1123 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond1981211131122 = phi i32* [ %cond198121114, %for.end ], [ %cond198121114, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond80881011151121 = phi i32* [ %cond8088101116, %for.end ], [ %cond8088101116, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond3011171120 = phi i32* [ %cond301118, %for.end ], [ %cond301118, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %33 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %33, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp561037 = icmp sgt i32 %g.0.lcssa1123, 0
  br i1 %cmp561037, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv1102 = phi i64 [ %indvars.iv.next1103, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.01039 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.01038 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond80881011151121, i64 %indvars.iv1102
  %34 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %34 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom60, i32 2
  %35 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %35, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.01039, 1
  %idxprom68 = sext i32 %fixg.01039 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond1981211131122, i64 %idxprom68
  store i32 %34, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.01038, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.01039, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next1103 = add nuw nsw i64 %indvars.iv1102, 1
  %lftr.wideiv1104 = trunc i64 %indvars.iv.next1103 to i32
  %exitcond1105 = icmp eq i32 %lftr.wideiv1104, %g.0.lcssa1123
  br i1 %exitcond1105, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond80881011151121, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %36 = bitcast i32* %cond80881011151121 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond1981211131122, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %37 = bitcast i32* %cond1981211131122 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond3011171120, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %38 = bitcast i32* %cond3011171120 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond1981211131122, i64 %idxprom99
  %39 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond1981211131122, i64 %idxprom101
  store i32 %39, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2815 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %40 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %14, 5
  %45 = sext i32 %add108 to i64
  %46 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %45, i64 4)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 -1, i64 %48
  %call109 = call noalias i8* @_Znam(i64 %49) #8
  %50 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %49) #8
  %51 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %49) #8
  %52 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %49) #8
  %53 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %49) #8
  %54 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147834 = phi i32* [ %arraydecay139, %cond.true149 ], [ %53, %cond.false151 ]
  %cond125820822832 = phi i32* [ %arraydecay117, %cond.true149 ], [ %51, %cond.false151 ]
  %cond114816818824830 = phi i32* [ %arraydecay106, %cond.true149 ], [ %50, %cond.false151 ]
  %cond136826828 = phi i32* [ %arraydecay128, %cond.true149 ], [ %52, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %54, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 0
  %55 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 1, i64 1
  %56 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %57 = load %class.Vector** %arrayidx162, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %58 = load %class.Vector** %arrayidx164, align 8, !tbaa !1
  %sub165 = add nsw i32 %13, -1
  %mul166 = mul nsw i32 %sub165, %14
  %div = sdiv i32 %mul166, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %59 = load i32* %minPart, align 4, !tbaa !50
  %mul167 = mul nsw i32 %59, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %60 = load i32* %numParts, align 4, !tbaa !51
  %div168 = sdiv i32 %mul167, %60
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %61 = load i32* %maxPart, align 4, !tbaa !52
  %mul169 = mul nsw i32 %61, %div
  %div171 = sdiv i32 %mul169, %60
  %cmp174997 = icmp sgt i32 %sub165, 0
  br i1 %cmp174997, label %for.body175.lr.ph, label %for.end1230

for.body175.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i805 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast549 = ptrtoint i32* %cond125820822832 to i64
  %sub.ptr.rhs.cast609 = ptrtoint i32* %cond147834 to i64
  %sub.ptr.rhs.cast616 = ptrtoint i32* %cond158 to i64
  %sub952 = fsub double 1.000000e+00, %sub
  %sub.ptr.rhs.cast = ptrtoint i32* %cond3011171120 to i64
  %sub.ptr.rhs.cast372 = ptrtoint i32* %cond114816818824830 to i64
  br label %for.body175

for.body175:                                      ; preds = %for.inc1228, %for.body175.lr.ph
  %exclChecksum.01020 = phi i32 [ 0, %for.body175.lr.ph ], [ %exclChecksum.10, %for.inc1228 ]
  %fullElectVirial_zz.01005 = phi double [ 0.000000e+00, %for.body175.lr.ph ], [ %fullElectVirial_zz.4, %for.inc1228 ]
  %i.01004 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc1229, %for.inc1228 ]
  %j_hgroup.01003 = phi i32 [ 0, %for.body175.lr.ph ], [ %j_hgroup.3, %for.inc1228 ]
  %g_lower.01002 = phi i32 [ 0, %for.body175.lr.ph ], [ %g_lower.4, %for.inc1228 ]
  %fixg_lower.01001 = phi i32 [ 0, %for.body175.lr.ph ], [ %fixg_lower.4, %for.inc1228 ]
  %pairlistindex.01000 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistindex.3, %for.inc1228 ]
  %pairlistoffset.0999 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairlistoffset.2, %for.inc1228 ]
  %pairCount.0998 = phi i32 [ 0, %for.body175.lr.ph ], [ %pairCount.3, %for.inc1228 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %418, %for.inc1228 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %419, %for.inc1228 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %420, %for.inc1228 ]
  %65 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %421, %for.inc1228 ]
  %66 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %422, %for.inc1228 ]
  %67 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %423, %for.inc1228 ]
  %68 = phi <2 x double> [ zeroinitializer, %for.body175.lr.ph ], [ %424, %for.inc1228 ]
  %idxprom176 = sext i32 %i.01004 to i64
  %id = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 2
  %69 = bitcast [4 x i8]* %id to i32*
  %bf.load178 = load i32* %69, align 4
  %bf.clear179 = and i32 %bf.load178, 4194303
  %idxprom.i836 = zext i32 %bf.clear179 to i64
  %70 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i836, i32 0
  %71 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i836, i32 1
  %72 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %70, i64 %idxprom.i836, i32 2
  %73 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %71 to i64
  %x = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 0
  %74 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 1
  %75 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 0, i32 2
  %76 = load double* %z, align 8, !tbaa !62
  %arrayidx184 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176
  %arrayidx186 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176
  %77 = and i32 %bf.load178, 62914560
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %if.else, label %if.then198

if.then198:                                       ; preds = %for.body175
  %bf.lshr201 = lshr i32 %bf.load178, 22
  %bf.clear202 = and i32 %bf.lshr201, 7
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.end224, label %if.then204

if.then204:                                       ; preds = %if.then198
  %sub210 = sub nsw i32 %sub165, %i.01004
  %mul211 = mul nsw i32 %bf.clear202, %sub210
  %add212 = add nsw i32 %mul211, %pairCount.0998
  %sub213 = add nsw i32 %bf.clear202, -1
  %mul214 = mul nsw i32 %sub213, %bf.clear202
  %div215.neg = sdiv i32 %mul214, -2
  %sub216 = add i32 %add212, %div215.neg
  %cmp217 = icmp sge i32 %pairCount.0998, %div168
  %cmp219 = icmp slt i32 %pairCount.0998, %div171
  %or.cond794 = and i1 %cmp217, %cmp219
  br i1 %or.cond794, label %if.end224, label %if.then220

if.then220:                                       ; preds = %if.then204
  %add222 = add nsw i32 %sub213, %i.01004
  br label %for.inc1228

if.end224:                                        ; preds = %if.then204, %if.then198
  %pairCount.1 = phi i32 [ %pairCount.0998, %if.then198 ], [ %sub216, %if.then204 ]
  %79 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool225 = icmp eq i32 %79, 0
  br i1 %tobool225, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end224
  %bf.clear229 = and i32 %bf.load178, 134217728
  %tobool230 = icmp ne i32 %bf.clear229, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end224
  %80 = phi i1 [ false, %if.end224 ], [ %tobool230, %land.rhs ]
  br i1 %tobool203, label %if.end259, label %if.then236

if.then236:                                       ; preds = %land.end
  %add241 = add nsw i32 %bf.clear202, %i.01004
  %cmp242843 = icmp slt i32 %g_lower.01002, %g.0.lcssa1123
  br i1 %cmp242843, label %land.rhs243.lr.ph, label %while.cond249.loopexit

land.rhs243.lr.ph:                                ; preds = %if.then236
  %81 = sext i32 %g_lower.01002 to i64
  br label %land.rhs243

while.cond:                                       ; preds = %land.rhs243
  %82 = trunc i64 %indvars.iv.next to i32
  %cmp242 = icmp slt i32 %82, %g.0.lcssa1123
  br i1 %cmp242, label %land.rhs243, label %while.cond249.loopexit

land.rhs243:                                      ; preds = %while.cond, %land.rhs243.lr.ph
  %indvars.iv = phi i64 [ %81, %land.rhs243.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1844 = phi i32 [ %g_lower.01002, %land.rhs243.lr.ph ], [ %inc248, %while.cond ]
  %arrayidx245 = getelementptr inbounds i32* %cond80881011151121, i64 %indvars.iv
  %83 = load i32* %arrayidx245, align 4, !tbaa !11
  %cmp246 = icmp slt i32 %83, %add241
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc248 = add nsw i32 %g_lower.1844, 1
  br i1 %cmp246, label %while.cond, label %while.cond249.loopexit

while.cond249.loopexit:                           ; preds = %land.rhs243, %while.cond, %if.then236
  %g_lower.1.lcssa = phi i32 [ %g_lower.01002, %if.then236 ], [ %inc248, %while.cond ], [ %g_lower.1844, %land.rhs243 ]
  %cmp250845 = icmp slt i32 %fixg_lower.01001, %fixg.2815
  br i1 %cmp250845, label %land.rhs251.lr.ph, label %if.end259

land.rhs251.lr.ph:                                ; preds = %while.cond249.loopexit
  %84 = sext i32 %fixg_lower.01001 to i64
  br label %land.rhs251

while.cond249:                                    ; preds = %land.rhs251
  %85 = trunc i64 %indvars.iv.next1052 to i32
  %cmp250 = icmp slt i32 %85, %fixg.2815
  br i1 %cmp250, label %land.rhs251, label %if.end259

land.rhs251:                                      ; preds = %while.cond249, %land.rhs251.lr.ph
  %indvars.iv1051 = phi i64 [ %84, %land.rhs251.lr.ph ], [ %indvars.iv.next1052, %while.cond249 ]
  %fixg_lower.1846 = phi i32 [ %fixg_lower.01001, %land.rhs251.lr.ph ], [ %inc257, %while.cond249 ]
  %arrayidx253 = getelementptr inbounds i32* %cond1981211131122, i64 %indvars.iv1051
  %86 = load i32* %arrayidx253, align 4, !tbaa !11
  %cmp254 = icmp slt i32 %86, %add241
  %indvars.iv.next1052 = add nsw i64 %indvars.iv1051, 1
  %inc257 = add nsw i32 %fixg_lower.1846, 1
  br i1 %cmp254, label %while.cond249, label %if.end259

if.end259:                                        ; preds = %land.rhs251, %while.cond249, %while.cond249.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.01001, %land.end ], [ %fixg_lower.01001, %while.cond249.loopexit ], [ %fixg_lower.1846, %land.rhs251 ], [ %inc257, %while.cond249 ]
  %g_lower.2 = phi i32 [ %g_lower.01002, %land.end ], [ %g_lower.1.lcssa, %while.cond249.loopexit ], [ %g_lower.1.lcssa, %while.cond249 ], [ %g_lower.1.lcssa, %land.rhs251 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.01003, %land.end ], [ %add241, %while.cond249.loopexit ], [ %add241, %while.cond249 ], [ %add241, %land.rhs251 ]
  %j.1848 = add nsw i32 %i.01004, 1
  %cmp262849 = icmp slt i32 %j.1848, %j_hgroup.1
  br i1 %cmp262849, label %for.body263.lr.ph, label %for.end269

for.body263.lr.ph:                                ; preds = %if.end259
  %87 = add i32 %j_hgroup.1, -1
  %88 = sub i32 %87, %i.01004
  %89 = add i32 %j_hgroup.1, -2
  %90 = sub i32 %89, %i.01004
  %91 = zext i32 %90 to i64
  %92 = add i64 %91, 1
  %end.idx = add i64 %91, 1
  %n.vec = and i64 %92, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1848
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body263.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body263.lr.ph ]
  %93 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1848, %93
  %broadcast.splatinsert1164 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat1165 = shufflevector <4 x i32> %broadcast.splatinsert1164, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction1166 = add <4 x i32> %broadcast.splat1165, <i32 0, i32 1, i32 2, i32 3>
  %induction1167 = add <4 x i32> %broadcast.splat1165, <i32 4, i32 5, i32 6, i32 7>
  %94 = getelementptr inbounds i32* %cond114816818824830, i64 %index
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %induction1166, <4 x i32>* %95, align 4
  %.sum1170 = or i64 %index, 4
  %96 = getelementptr i32* %cond114816818824830, i64 %.sum1170
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %induction1167, <4 x i32>* %97, align 4
  %index.next = add i64 %index, 8
  %98 = icmp eq i64 %index.next, %n.vec
  br i1 %98, label %middle.block, label %vector.body, !llvm.loop !105

middle.block:                                     ; preds = %vector.body, %for.body263.lr.ph
  %resume.val = phi i64 [ 0, %for.body263.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val1162 = phi i32 [ %j.1848, %for.body263.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond261.for.end269_crit_edge, label %for.body263

for.body263:                                      ; preds = %for.body263, %middle.block
  %indvars.iv1053 = phi i64 [ %indvars.iv.next1054, %for.body263 ], [ %resume.val, %middle.block ]
  %j.1851 = phi i32 [ %j.1, %for.body263 ], [ %resume.val1162, %middle.block ]
  %indvars.iv.next1054 = add nuw nsw i64 %indvars.iv1053, 1
  %arrayidx266 = getelementptr inbounds i32* %cond114816818824830, i64 %indvars.iv1053
  store i32 %j.1851, i32* %arrayidx266, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1851, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1054 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %for.cond261.for.end269_crit_edge, label %for.body263, !llvm.loop !106

for.cond261.for.end269_crit_edge:                 ; preds = %for.body263, %middle.block
  %phitmp = sext i32 %88 to i64
  br label %for.end269

for.end269:                                       ; preds = %for.cond261.for.end269_crit_edge, %if.end259
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond261.for.end269_crit_edge ], [ 0, %if.end259 ]
  %add.ptr271 = getelementptr inbounds i32* %cond114816818824830, i64 %pairlistindex.1.lcssa
  %cond276 = select i1 %80, i32* %cond1981211131122, i32* %cond80881011151121
  %cond281 = select i1 %80, i32 %fixg_lower.2, i32 %g_lower.2
  %cond286 = select i1 %80, i32 %fixg.2815, i32 %g.0.lcssa1123
  %cmp287 = icmp slt i32 %cond281, %cond286
  br i1 %cmp287, label %if.then288, label %if.end370

if.then288:                                       ; preds = %for.end269
  %idxprom289 = sext i32 %cond281 to i64
  %arrayidx290 = getelementptr inbounds i32* %cond276, i64 %idxprom289
  %99 = load i32* %arrayidx290, align 4, !tbaa !11
  %idxprom291 = sext i32 %99 to i64
  %x294 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 0
  %100 = load double* %x294, align 8, !tbaa !59
  %y298 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 1
  %101 = load double* %y298, align 8, !tbaa !61
  %z302 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom291, i32 0, i32 2
  %102 = load double* %z302, align 8, !tbaa !62
  br label %while.cond303.outer

while.cond303.outer:                              ; preds = %if.then330, %if.then288
  %p_j_z.0.ph = phi double [ %102, %if.then288 ], [ %108, %if.then330 ]
  %p_j_y.0.ph = phi double [ %101, %if.then288 ], [ %107, %if.then330 ]
  %p_j_x.0.ph = phi double [ %100, %if.then288 ], [ %106, %if.then330 ]
  %j2.0.ph = phi i32 [ %99, %if.then288 ], [ %105, %if.then330 ]
  %gli.0.ph = phi i32* [ %cond3011171120, %if.then288 ], [ %incdec.ptr, %if.then330 ]
  %g.3.ph = phi i32 [ %cond281, %if.then288 ], [ %inc306, %if.then330 ]
  %103 = sext i32 %g.3.ph to i64
  br label %while.cond303

while.cond303:                                    ; preds = %while.body305, %while.cond303.outer
  %indvars.iv1059 = phi i64 [ %103, %while.cond303.outer ], [ %indvars.iv.next1060, %while.body305 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond303.outer ], [ %108, %while.body305 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond303.outer ], [ %107, %while.body305 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond303.outer ], [ %106, %while.body305 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond303.outer ], [ %105, %while.body305 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond303.outer ], [ %inc306, %while.body305 ]
  %104 = trunc i64 %indvars.iv1059 to i32
  %cmp304 = icmp slt i32 %104, %cond286
  br i1 %cmp304, label %while.body305, label %while.end332

while.body305:                                    ; preds = %while.cond303
  %indvars.iv.next1060 = add nsw i64 %indvars.iv1059, 1
  %inc306 = add nsw i32 %g.3, 1
  %arrayidx308 = getelementptr inbounds i32* %cond276, i64 %indvars.iv.next1060
  %105 = load i32* %arrayidx308, align 4, !tbaa !11
  %sub309 = fsub double %74, %p_j_x.0
  %mul310 = fmul double %sub309, %sub309
  %idxprom311 = sext i32 %105 to i64
  %x314 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 0
  %106 = load double* %x314, align 8, !tbaa !59
  %sub315 = fsub double %75, %p_j_y.0
  %mul316 = fmul double %sub315, %sub315
  %add317 = fadd double %mul316, %mul310
  %y321 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 1
  %107 = load double* %y321, align 8, !tbaa !61
  %sub322 = fsub double %76, %p_j_z.0
  %mul323 = fmul double %sub322, %sub322
  %add324 = fadd double %mul323, %add317
  %z328 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom311, i32 0, i32 2
  %108 = load double* %z328, align 8, !tbaa !62
  %cmp329 = fcmp ugt double %add324, %3
  br i1 %cmp329, label %while.cond303, label %if.then330

if.then330:                                       ; preds = %while.body305
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond303.outer

while.end332:                                     ; preds = %while.cond303
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div791 = lshr exact i64 %sub.ptr.sub, 2
  %conv333 = trunc i64 %sub.ptr.div791 to i32
  %cmp335857 = icmp sgt i32 %conv333, 0
  br i1 %cmp335857, label %for.body336.lr.ph, label %if.end370

for.body336.lr.ph:                                ; preds = %while.end332
  %109 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %110 = lshr i64 %109, 2
  %111 = trunc i64 %110 to i32
  br label %for.body336

for.body336:                                      ; preds = %cond.end356, %for.body336.lr.ph
  %indvars.iv1061 = phi i64 [ 0, %for.body336.lr.ph ], [ %indvars.iv.next1062, %cond.end356 ]
  %pli.0859 = phi i32* [ %add.ptr271, %for.body336.lr.ph ], [ %add.ptr366, %cond.end356 ]
  %arrayidx339 = getelementptr inbounds i32* %cond3011171120, i64 %indvars.iv1061
  %112 = load i32* %arrayidx339, align 4, !tbaa !11
  %idxprom341 = sext i32 %112 to i64
  %nonbondedGroupIsAtom343 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom341, i32 2
  %113 = bitcast [4 x i8]* %nonbondedGroupIsAtom343 to i32*
  %bf.load344 = load i32* %113, align 4
  %bf.clear346 = and i32 %bf.load344, 33554432
  %tobool347 = icmp eq i32 %bf.clear346, 0
  br i1 %tobool347, label %cond.false349, label %cond.end356

cond.false349:                                    ; preds = %for.body336
  %bf.lshr354 = lshr i32 %bf.load344, 22
  %bf.clear355 = and i32 %bf.lshr354, 7
  %phitmp792 = zext i32 %bf.clear355 to i64
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false349, %for.body336
  %cond357 = phi i64 [ %phitmp792, %cond.false349 ], [ 1, %for.body336 ]
  store i32 %112, i32* %pli.0859, align 4, !tbaa !11
  %add359 = add nsw i32 %112, 1
  %arrayidx360 = getelementptr inbounds i32* %pli.0859, i64 1
  store i32 %add359, i32* %arrayidx360, align 4, !tbaa !11
  %add361 = add nsw i32 %112, 2
  %arrayidx362 = getelementptr inbounds i32* %pli.0859, i64 2
  store i32 %add361, i32* %arrayidx362, align 4, !tbaa !11
  %add363 = add nsw i32 %112, 3
  %arrayidx364 = getelementptr inbounds i32* %pli.0859, i64 3
  store i32 %add363, i32* %arrayidx364, align 4, !tbaa !11
  %add.ptr366 = getelementptr inbounds i32* %pli.0859, i64 %cond357
  %indvars.iv.next1062 = add nuw nsw i64 %indvars.iv1061, 1
  %lftr.wideiv1063 = trunc i64 %indvars.iv.next1062 to i32
  %exitcond1064 = icmp eq i32 %lftr.wideiv1063, %111
  br i1 %exitcond1064, label %if.end370, label %for.body336

if.end370:                                        ; preds = %cond.end356, %while.end332, %for.end269
  %pli.1 = phi i32* [ %add.ptr271, %for.end269 ], [ %add.ptr271, %while.end332 ], [ %add.ptr366, %cond.end356 ]
  %sub.ptr.lhs.cast371 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub373 = sub i64 %sub.ptr.lhs.cast371, %sub.ptr.rhs.cast372
  %sub.ptr.div374788 = lshr exact i64 %sub.ptr.sub373, 2
  %conv375 = trunc i64 %sub.ptr.div374788 to i32
  %tobool376 = icmp eq i32 %conv375, 0
  br i1 %tobool376, label %if.end385, label %if.then377

if.then377:                                       ; preds = %if.end370
  %sub378 = shl i64 %sub.ptr.sub373, 30
  %sext789 = add i64 %sub378, -4294967296
  %idxprom379 = ashr exact i64 %sext789, 32
  %arrayidx380 = getelementptr inbounds i32* %cond114816818824830, i64 %idxprom379
  %114 = load i32* %arrayidx380, align 4, !tbaa !11
  %idxprom381 = ashr exact i64 %sub378, 32
  %arrayidx382 = getelementptr inbounds i32* %cond114816818824830, i64 %idxprom381
  store i32 %114, i32* %arrayidx382, align 4, !tbaa !11
  br label %if.end385

if.else:                                          ; preds = %for.body175
  %inc384 = add nsw i32 %pairlistoffset.0999, 1
  br label %if.end385

if.end385:                                        ; preds = %if.else, %if.then377, %if.end370
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then377 ], [ %pairCount.1, %if.end370 ], [ %pairCount.0998, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then377 ], [ 0, %if.end370 ], [ %inc384, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv375, %if.then377 ], [ 0, %if.end370 ], [ %pairlistindex.01000, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then377 ], [ %fixg_lower.2, %if.end370 ], [ %fixg_lower.01001, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then377 ], [ %g_lower.2, %if.end370 ], [ %g_lower.01002, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then377 ], [ %j_hgroup.1, %if.end370 ], [ %j_hgroup.01003, %if.else ]
  %115 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool386 = icmp eq i32 %115, 0
  %bf.load399.pre = load i32* %69, align 4
  br i1 %tobool386, label %land.end392, label %land.rhs387

land.rhs387:                                      ; preds = %if.end385
  %bf.clear390 = and i32 %bf.load399.pre, 67108864
  %tobool391 = icmp ne i32 %bf.clear390, 0
  br label %land.end392

land.end392:                                      ; preds = %land.rhs387, %if.end385
  %116 = phi i1 [ %tobool391, %land.rhs387 ], [ false, %if.end385 ]
  %charge = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom176, i32 1
  %117 = load float* %charge, align 4, !tbaa !63
  %conv394 = fpext float %117 to double
  %mul395 = fmul double %conv394, 3.320636e+02
  %mul396 = fmul double %9, %mul395
  %mul397 = fmul double %4, %mul396
  %bf.clear400 = and i32 %bf.load399.pre, 4194303
  %idxprom.i804837 = zext i32 %bf.clear400 to i64
  %118 = load i32** %atomVdwType.i805, align 8, !tbaa !64
  %arrayidx.i806 = getelementptr inbounds i32* %118, i64 %idxprom.i804837
  %119 = load i32* %arrayidx.i806, align 4, !tbaa !11
  %120 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %121 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv402 = shl i32 %119, 1
  %mul.i = and i32 %conv402, 131070
  %mul2.i = mul i32 %mul.i, %121
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp408885 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %116, label %for.cond407.preheader, label %if.else468

for.cond407.preheader:                            ; preds = %land.end392
  br i1 %cmp408885, label %for.body409.lr.ph, label %if.end547

for.body409.lr.ph:                                ; preds = %for.cond407.preheader
  %122 = sext i32 %pairlistoffset.1 to i64
  br label %for.body409

for.body409:                                      ; preds = %for.inc465, %for.body409.lr.ph
  %indvars.iv1074 = phi i64 [ %122, %for.body409.lr.ph ], [ %indvars.iv.next1075, %for.inc465 ]
  %exclChecksum.1889 = phi i32 [ %exclChecksum.01020, %for.body409.lr.ph ], [ %exclChecksum.3, %for.inc465 ]
  %pli404.0888 = phi i32* [ %cond125820822832, %for.body409.lr.ph ], [ %pli404.1, %for.inc465 ]
  %plin.0887 = phi i32* [ %cond136826828, %for.body409.lr.ph ], [ %plin.1, %for.inc465 ]
  %arrayidx411 = getelementptr inbounds i32* %cond114816818824830, i64 %indvars.iv1074
  %123 = load i32* %arrayidx411, align 4, !tbaa !11
  %idxprom413 = sext i32 %123 to i64
  %x416 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 0
  %124 = load double* %x416, align 8, !tbaa !59
  %sub418 = fsub double %74, %124
  %mul419 = fmul double %sub418, %sub418
  %y424 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 1
  %125 = load double* %y424, align 8, !tbaa !61
  %sub426 = fsub double %75, %125
  %mul427 = fmul double %sub426, %sub426
  %add428 = fadd double %mul419, %mul427
  %z433 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 0, i32 2
  %126 = load double* %z433, align 8, !tbaa !62
  %sub434 = fsub double %76, %126
  %mul435 = fmul double %sub434, %sub434
  %add436 = fadd double %add428, %mul435
  %atomFixed439 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom413, i32 2
  %127 = bitcast [4 x i8]* %atomFixed439 to i32*
  %bf.load440 = load i32* %127, align 4
  %bf.clear442 = and i32 %bf.load440, 67108864
  %tobool443 = icmp ne i32 %bf.clear442, 0
  %cmp444 = fcmp ugt double %add436, %2
  %or.cond795 = or i1 %tobool443, %cmp444
  br i1 %or.cond795, label %for.inc465, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %for.body409
  %cmp446 = fcmp ugt double %add436, %11
  br i1 %cmp446, label %if.then450, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %land.lhs.true445
  %inc448 = add nsw i32 %exclChecksum.1889, 1
  %tobool449 = icmp eq i32 %inc448, 0
  br i1 %tobool449, label %if.then450, label %for.inc465

if.then450:                                       ; preds = %land.lhs.true447, %land.lhs.true445
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true447 ], [ %exclChecksum.1889, %land.lhs.true445 ]
  %bf.clear455 = and i32 %bf.load440, 4194303
  %cmp456 = icmp slt i32 %bf.clear455, %71
  %cmp458 = icmp sgt i32 %bf.clear455, %72
  %or.cond796 = or i1 %cmp456, %cmp458
  br i1 %or.cond796, label %if.else461, label %if.then459

if.then459:                                       ; preds = %if.then450
  %incdec.ptr460 = getelementptr inbounds i32* %pli404.0888, i64 1
  store i32 %123, i32* %pli404.0888, align 4, !tbaa !11
  br label %for.inc465

if.else461:                                       ; preds = %if.then450
  %incdec.ptr462 = getelementptr inbounds i32* %plin.0887, i64 1
  store i32 %123, i32* %plin.0887, align 4, !tbaa !11
  br label %for.inc465

for.inc465:                                       ; preds = %if.else461, %if.then459, %land.lhs.true447, %for.body409
  %plin.1 = phi i32* [ %plin.0887, %for.body409 ], [ %plin.0887, %land.lhs.true447 ], [ %plin.0887, %if.then459 ], [ %incdec.ptr462, %if.else461 ]
  %pli404.1 = phi i32* [ %pli404.0888, %for.body409 ], [ %pli404.0888, %land.lhs.true447 ], [ %incdec.ptr460, %if.then459 ], [ %pli404.0888, %if.else461 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1889, %for.body409 ], [ %inc448, %land.lhs.true447 ], [ %exclChecksum.2, %if.then459 ], [ %exclChecksum.2, %if.else461 ]
  %indvars.iv.next1075 = add nsw i64 %indvars.iv1074, 1
  %lftr.wideiv1076 = trunc i64 %indvars.iv.next1075 to i32
  %exitcond1077 = icmp eq i32 %lftr.wideiv1076, %pairlistindex.2
  br i1 %exitcond1077, label %if.end547, label %for.body409

if.else468:                                       ; preds = %land.end392
  br i1 %cmp408885, label %if.then471, label %if.end547

if.then471:                                       ; preds = %if.else468
  %idxprom473 = sext i32 %pairlistoffset.1 to i64
  %arrayidx474 = getelementptr inbounds i32* %cond114816818824830, i64 %idxprom473
  %128 = load i32* %arrayidx474, align 4, !tbaa !11
  %idxprom476 = sext i32 %128 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 0
  %129 = load double* %x479, align 8, !tbaa !59
  %y484 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 1
  %130 = load double* %y484, align 8, !tbaa !61
  %z489 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476, i32 0, i32 2
  %131 = load double* %z489, align 8, !tbaa !62
  br label %while.cond496.outer

while.cond496.outer:                              ; preds = %if.else536, %if.then471
  %idxprom476.pn.ph = phi i64 [ %idxprom476, %if.then471 ], [ %idxprom505, %if.else536 ]
  %p_j_z485.0.ph = phi double [ %131, %if.then471 ], [ %137, %if.else536 ]
  %p_j_y480.0.ph = phi double [ %130, %if.then471 ], [ %136, %if.else536 ]
  %p_j_x475.0.ph = phi double [ %129, %if.then471 ], [ %135, %if.else536 ]
  %j2472.0.ph = phi i32 [ %128, %if.then471 ], [ %134, %if.else536 ]
  %k469.0.ph = phi i32 [ %pairlistoffset.1, %if.then471 ], [ %inc499, %if.else536 ]
  %plin.2.ph = phi i32* [ %cond136826828, %if.then471 ], [ %incdec.ptr537, %if.else536 ]
  %pli404.2.ph = phi i32* [ %cond125820822832, %if.then471 ], [ %pli404.2.ph868, %if.else536 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.01020, %if.then471 ], [ %exclChecksum.5, %if.else536 ]
  br label %while.cond496.outer861

while.cond496.outer861:                           ; preds = %if.then534, %while.cond496.outer
  %idxprom476.pn.ph862 = phi i64 [ %idxprom505, %if.then534 ], [ %idxprom476.pn.ph, %while.cond496.outer ]
  %p_j_z485.0.ph863 = phi double [ %137, %if.then534 ], [ %p_j_z485.0.ph, %while.cond496.outer ]
  %p_j_y480.0.ph864 = phi double [ %136, %if.then534 ], [ %p_j_y480.0.ph, %while.cond496.outer ]
  %p_j_x475.0.ph865 = phi double [ %135, %if.then534 ], [ %p_j_x475.0.ph, %while.cond496.outer ]
  %j2472.0.ph866 = phi i32 [ %134, %if.then534 ], [ %j2472.0.ph, %while.cond496.outer ]
  %k469.0.ph867 = phi i32 [ %inc499, %if.then534 ], [ %k469.0.ph, %while.cond496.outer ]
  %pli404.2.ph868 = phi i32* [ %incdec.ptr535, %if.then534 ], [ %pli404.2.ph, %while.cond496.outer ]
  %exclChecksum.4.ph869 = phi i32 [ %exclChecksum.5, %if.then534 ], [ %exclChecksum.4.ph, %while.cond496.outer ]
  br label %while.cond496.outer870

while.cond496.outer870:                           ; preds = %land.lhs.true527, %while.cond496.outer861
  %idxprom476.pn.ph871 = phi i64 [ %idxprom505, %land.lhs.true527 ], [ %idxprom476.pn.ph862, %while.cond496.outer861 ]
  %p_j_z485.0.ph872 = phi double [ %137, %land.lhs.true527 ], [ %p_j_z485.0.ph863, %while.cond496.outer861 ]
  %p_j_y480.0.ph873 = phi double [ %136, %land.lhs.true527 ], [ %p_j_y480.0.ph864, %while.cond496.outer861 ]
  %p_j_x475.0.ph874 = phi double [ %135, %land.lhs.true527 ], [ %p_j_x475.0.ph865, %while.cond496.outer861 ]
  %j2472.0.ph875 = phi i32 [ %134, %land.lhs.true527 ], [ %j2472.0.ph866, %while.cond496.outer861 ]
  %k469.0.ph876 = phi i32 [ %inc499, %land.lhs.true527 ], [ %k469.0.ph867, %while.cond496.outer861 ]
  %exclChecksum.4.ph877 = phi i32 [ %inc528, %land.lhs.true527 ], [ %exclChecksum.4.ph869, %while.cond496.outer861 ]
  %132 = sext i32 %k469.0.ph876 to i64
  br label %while.cond496

while.cond496:                                    ; preds = %while.body498, %while.cond496.outer870
  %indvars.iv1070 = phi i64 [ %132, %while.cond496.outer870 ], [ %indvars.iv.next1071, %while.body498 ]
  %idxprom476.pn = phi i64 [ %idxprom476.pn.ph871, %while.cond496.outer870 ], [ %idxprom505, %while.body498 ]
  %p_j_z485.0 = phi double [ %p_j_z485.0.ph872, %while.cond496.outer870 ], [ %137, %while.body498 ]
  %p_j_y480.0 = phi double [ %p_j_y480.0.ph873, %while.cond496.outer870 ], [ %136, %while.body498 ]
  %p_j_x475.0 = phi double [ %p_j_x475.0.ph874, %while.cond496.outer870 ], [ %135, %while.body498 ]
  %j2472.0 = phi i32 [ %j2472.0.ph875, %while.cond496.outer870 ], [ %134, %while.body498 ]
  %k469.0 = phi i32 [ %k469.0.ph876, %while.cond496.outer870 ], [ %inc499, %while.body498 ]
  %133 = trunc i64 %indvars.iv1070 to i32
  %cmp497 = icmp slt i32 %133, %pairlistindex.2
  br i1 %cmp497, label %while.body498, label %if.end547

while.body498:                                    ; preds = %while.cond496
  %atom2490.0.in.in.in = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom476.pn, i32 2
  %atom2490.0.in.in = bitcast [4 x i8]* %atom2490.0.in.in.in to i32*
  %atom2490.0.in = load i32* %atom2490.0.in.in, align 4
  %atom2490.0 = and i32 %atom2490.0.in, 4194303
  %indvars.iv.next1071 = add nsw i64 %indvars.iv1070, 1
  %inc499 = add nsw i32 %k469.0, 1
  %arrayidx501 = getelementptr inbounds i32* %cond114816818824830, i64 %indvars.iv.next1071
  %134 = load i32* %arrayidx501, align 4, !tbaa !11
  %sub503 = fsub double %74, %p_j_x475.0
  %mul504 = fmul double %sub503, %sub503
  %idxprom505 = sext i32 %134 to i64
  %x508 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 0
  %135 = load double* %x508, align 8, !tbaa !59
  %sub510 = fsub double %75, %p_j_y480.0
  %mul511 = fmul double %sub510, %sub510
  %add512 = fadd double %mul511, %mul504
  %y516 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 1
  %136 = load double* %y516, align 8, !tbaa !61
  %sub517 = fsub double %76, %p_j_z485.0
  %mul518 = fmul double %sub517, %sub517
  %add519 = fadd double %mul518, %add512
  %z523 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom505, i32 0, i32 2
  %137 = load double* %z523, align 8, !tbaa !62
  %cmp524 = fcmp ugt double %add519, %2
  br i1 %cmp524, label %while.cond496, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %while.body498
  %cmp526 = fcmp ugt double %add519, %11
  br i1 %cmp526, label %if.then530, label %land.lhs.true527

land.lhs.true527:                                 ; preds = %land.lhs.true525
  %inc528 = add nsw i32 %exclChecksum.4.ph877, 1
  %tobool529 = icmp eq i32 %inc528, 0
  br i1 %tobool529, label %if.then530, label %while.cond496.outer870

if.then530:                                       ; preds = %land.lhs.true527, %land.lhs.true525
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true527 ], [ %exclChecksum.4.ph877, %land.lhs.true525 ]
  %cmp531 = icmp slt i32 %atom2490.0, %71
  %cmp533 = icmp sgt i32 %atom2490.0, %72
  %or.cond797 = or i1 %cmp531, %cmp533
  br i1 %or.cond797, label %if.else536, label %if.then534

if.then534:                                       ; preds = %if.then530
  %incdec.ptr535 = getelementptr inbounds i32* %pli404.2.ph868, i64 1
  store i32 %j2472.0, i32* %pli404.2.ph868, align 4, !tbaa !11
  br label %while.cond496.outer861

if.else536:                                       ; preds = %if.then530
  %incdec.ptr537 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2472.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond496.outer

if.end547:                                        ; preds = %while.cond496, %if.else468, %for.inc465, %for.cond407.preheader
  %plin.4 = phi i32* [ %cond136826828, %if.else468 ], [ %cond136826828, %for.cond407.preheader ], [ %plin.2.ph, %while.cond496 ], [ %plin.1, %for.inc465 ]
  %pli404.4 = phi i32* [ %cond125820822832, %if.else468 ], [ %cond125820822832, %for.cond407.preheader ], [ %pli404.2.ph868, %while.cond496 ], [ %pli404.1, %for.inc465 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.01020, %if.else468 ], [ %exclChecksum.01020, %for.cond407.preheader ], [ %exclChecksum.4.ph877, %while.cond496 ], [ %exclChecksum.3, %for.inc465 ]
  %sub.ptr.lhs.cast548 = ptrtoint i32* %pli404.4 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %sub.ptr.div551737 = lshr exact i64 %sub.ptr.sub550, 2
  %conv552 = trunc i64 %sub.ptr.div551737 to i32
  %tobool553 = icmp eq i32 %conv552, 0
  br i1 %tobool553, label %for.cond562.preheader, label %if.then554

if.then554:                                       ; preds = %if.end547
  %sub555 = shl i64 %sub.ptr.sub550, 30
  %sext786 = add i64 %sub555, -4294967296
  %idxprom556 = ashr exact i64 %sext786, 32
  %arrayidx557 = getelementptr inbounds i32* %cond125820822832, i64 %idxprom556
  %138 = load i32* %arrayidx557, align 4, !tbaa !11
  %idxprom558 = ashr exact i64 %sub555, 32
  %arrayidx559 = getelementptr inbounds i32* %cond125820822832, i64 %idxprom558
  store i32 %138, i32* %arrayidx559, align 4, !tbaa !11
  br label %for.cond562.preheader

for.cond562.preheader:                            ; preds = %if.then554, %if.end547
  %cmp563893 = icmp ult i32* %cond136826828, %plin.4
  br i1 %cmp563893, label %land.lhs.true564, label %for.cond571.loopexit

land.lhs.true564:                                 ; preds = %for.body566, %for.cond562.preheader
  %exclChecksum.8896 = phi i32 [ %dec, %for.body566 ], [ %exclChecksum.7, %for.cond562.preheader ]
  %plix.0895 = phi i32* [ %incdec.ptr567, %for.body566 ], [ %cond147834, %for.cond562.preheader ]
  %pln.0894 = phi i32* [ %incdec.ptr569, %for.body566 ], [ %cond136826828, %for.cond562.preheader ]
  %139 = load i32* %pln.0894, align 4, !tbaa !11
  %cmp565 = icmp slt i32 %139, %j_hgroup.2
  br i1 %cmp565, label %for.body566, label %for.cond571.loopexit

for.body566:                                      ; preds = %land.lhs.true564
  %incdec.ptr567 = getelementptr inbounds i32* %plix.0895, i64 1
  store i32 %139, i32* %plix.0895, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8896, -1
  %incdec.ptr569 = getelementptr inbounds i32* %pln.0894, i64 1
  %cmp563 = icmp ult i32* %incdec.ptr569, %plin.4
  br i1 %cmp563, label %land.lhs.true564, label %for.cond571.loopexit

for.cond571.loopexit:                             ; preds = %for.body566, %land.lhs.true564, %for.cond562.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond562.preheader ], [ %dec, %for.body566 ], [ %exclChecksum.8896, %land.lhs.true564 ]
  %plix.0.lcssa = phi i32* [ %cond147834, %for.cond562.preheader ], [ %incdec.ptr567, %for.body566 ], [ %plix.0895, %land.lhs.true564 ]
  %pln.0.lcssa = phi i32* [ %cond136826828, %for.cond562.preheader ], [ %incdec.ptr569, %for.body566 ], [ %pln.0894, %land.lhs.true564 ]
  %cmp572900 = icmp sgt i32 %conv552, 0
  br i1 %cmp572900, label %land.lhs.true573, label %for.cond585.loopexit

land.lhs.true573:                                 ; preds = %for.body577, %for.cond571.loopexit
  %indvars.iv1084 = phi i64 [ %indvars.iv.next1085, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %exclChecksum.9903 = phi i32 [ %dec581, %for.body577 ], [ %exclChecksum.8.lcssa, %for.cond571.loopexit ]
  %plix.1902 = phi i32* [ %incdec.ptr580, %for.body577 ], [ %plix.0.lcssa, %for.cond571.loopexit ]
  %k561.0901 = phi i32 [ %inc583, %for.body577 ], [ 0, %for.cond571.loopexit ]
  %arrayidx575 = getelementptr inbounds i32* %cond125820822832, i64 %indvars.iv1084
  %140 = load i32* %arrayidx575, align 4, !tbaa !11
  %cmp576 = icmp slt i32 %140, %j_hgroup.2
  br i1 %cmp576, label %for.body577, label %for.cond585.loopexit

for.body577:                                      ; preds = %land.lhs.true573
  %incdec.ptr580 = getelementptr inbounds i32* %plix.1902, i64 1
  store i32 %140, i32* %plix.1902, align 4, !tbaa !11
  %dec581 = add nsw i32 %exclChecksum.9903, -1
  %indvars.iv.next1085 = add nuw nsw i64 %indvars.iv1084, 1
  %inc583 = add nsw i32 %k561.0901, 1
  %141 = trunc i64 %indvars.iv.next1085 to i32
  %cmp572 = icmp slt i32 %141, %conv552
  br i1 %cmp572, label %land.lhs.true573, label %for.cond585.loopexit

for.cond585.loopexit:                             ; preds = %for.body577, %land.lhs.true573, %for.cond571.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond571.loopexit ], [ %dec581, %for.body577 ], [ %exclChecksum.9903, %land.lhs.true573 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond571.loopexit ], [ %incdec.ptr580, %for.body577 ], [ %plix.1902, %land.lhs.true573 ]
  %k561.0.lcssa = phi i32 [ 0, %for.cond571.loopexit ], [ %inc583, %for.body577 ], [ %k561.0901, %land.lhs.true573 ]
  %cmp586907 = icmp slt i32 %k561.0.lcssa, %conv552
  br i1 %cmp586907, label %for.body587.lr.ph, label %for.end607

for.body587.lr.ph:                                ; preds = %for.cond585.loopexit
  %142 = sext i32 %k561.0.lcssa to i64
  %143 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %144 = lshr i64 %143, 2
  %145 = trunc i64 %144 to i32
  br label %for.body587

for.body587:                                      ; preds = %for.inc605, %for.body587.lr.ph
  %indvars.iv1086 = phi i64 [ %142, %for.body587.lr.ph ], [ %indvars.iv.next1087, %for.inc605 ]
  %plin.5911 = phi i32* [ %plin.4, %for.body587.lr.ph ], [ %plin.6, %for.inc605 ]
  %plix.2910 = phi i32* [ %plix.1.lcssa, %for.body587.lr.ph ], [ %plix.3, %for.inc605 ]
  %plim.0909 = phi i32* [ %cond158, %for.body587.lr.ph ], [ %plim.1, %for.inc605 ]
  %arrayidx590 = getelementptr inbounds i32* %cond125820822832, i64 %indvars.iv1086
  %146 = load i32* %arrayidx590, align 4, !tbaa !11
  %idxprom592 = sext i32 %146 to i64
  %id594 = getelementptr inbounds %struct.CompAtom* %16, i64 %idxprom592, i32 2
  %147 = bitcast [4 x i8]* %id594 to i32*
  %bf.load595 = load i32* %147, align 4
  %bf.clear596 = and i32 %bf.load595, 4194303
  %idxprom597785 = zext i32 %bf.clear596 to i64
  %add.ptr.sum = sub i64 %idxprom597785, %idx.ext
  %arrayidx598 = getelementptr inbounds i8* %73, i64 %add.ptr.sum
  %148 = load i8* %arrayidx598, align 1, !tbaa !68
  %conv599 = sext i8 %148 to i32
  switch i32 %conv599, label %for.inc605 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb601
    i32 2, label %sw.bb603
  ]

sw.bb:                                            ; preds = %for.body587
  %incdec.ptr600 = getelementptr inbounds i32* %plin.5911, i64 1
  store i32 %146, i32* %plin.5911, align 4, !tbaa !11
  br label %for.inc605

sw.bb601:                                         ; preds = %for.body587
  %incdec.ptr602 = getelementptr inbounds i32* %plix.2910, i64 1
  store i32 %146, i32* %plix.2910, align 4, !tbaa !11
  br label %for.inc605

sw.bb603:                                         ; preds = %for.body587
  %incdec.ptr604 = getelementptr inbounds i32* %plim.0909, i64 1
  store i32 %146, i32* %plim.0909, align 4, !tbaa !11
  br label %for.inc605

for.inc605:                                       ; preds = %sw.bb603, %sw.bb601, %sw.bb, %for.body587
  %plim.1 = phi i32* [ %plim.0909, %for.body587 ], [ %incdec.ptr604, %sw.bb603 ], [ %plim.0909, %sw.bb601 ], [ %plim.0909, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2910, %for.body587 ], [ %plix.2910, %sw.bb603 ], [ %incdec.ptr602, %sw.bb601 ], [ %plix.2910, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5911, %for.body587 ], [ %plin.5911, %sw.bb603 ], [ %plin.5911, %sw.bb601 ], [ %incdec.ptr600, %sw.bb ]
  %indvars.iv.next1087 = add nsw i64 %indvars.iv1086, 1
  %lftr.wideiv1088 = trunc i64 %indvars.iv.next1087 to i32
  %exitcond1089 = icmp eq i32 %lftr.wideiv1088, %145
  br i1 %exitcond1089, label %for.end607, label %for.body587

for.end607:                                       ; preds = %for.inc605, %for.cond585.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond585.loopexit ], [ %plin.6, %for.inc605 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond585.loopexit ], [ %plix.3, %for.inc605 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond585.loopexit ], [ %plim.1, %for.inc605 ]
  %sub.ptr.lhs.cast608 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub610 = sub i64 %sub.ptr.lhs.cast608, %sub.ptr.rhs.cast609
  %sub.ptr.div611 = ashr exact i64 %sub.ptr.sub610, 2
  %conv612738 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast615 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub617 = sub i64 %sub.ptr.lhs.cast615, %sub.ptr.rhs.cast616
  %sub.ptr.div618 = ashr exact i64 %sub.ptr.sub617, 2
  %add613 = add i64 %sub.ptr.div618, %conv612738
  %add620 = add i64 %add613, %sub.ptr.div611
  %conv621 = trunc i64 %add620 to i32
  %sub.ptr.lhs.cast622 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast623 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub624 = sub i64 %sub.ptr.lhs.cast622, %sub.ptr.rhs.cast623
  %sub.ptr.div625740 = lshr exact i64 %sub.ptr.sub624, 2
  %conv626 = trunc i64 %sub.ptr.div625740 to i32
  %cmp628915 = icmp sgt i32 %conv626, 0
  br i1 %cmp628915, label %for.body629.lr.ph, label %for.end828

for.body629.lr.ph:                                ; preds = %for.end607
  %x753 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y762 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z769 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x804 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y814 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z822 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body629

for.body629:                                      ; preds = %for.body629.for.body629_crit_edge, %for.body629.lr.ph
  %149 = phi i32* [ %118, %for.body629.lr.ph ], [ %.pre, %for.body629.for.body629_crit_edge ]
  %indvars.iv1090 = phi i64 [ 0, %for.body629.lr.ph ], [ %indvars.iv.next1091, %for.body629.for.body629_crit_edge ]
  %fullElectVirial_zz.1917 = phi double [ %fullElectVirial_zz.01005, %for.body629.lr.ph ], [ %add821, %for.body629.for.body629_crit_edge ]
  %150 = phi <2 x double> [ %62, %for.body629.lr.ph ], [ %226, %for.body629.for.body629_crit_edge ]
  %151 = phi <2 x double> [ %63, %for.body629.lr.ph ], [ %183, %for.body629.for.body629_crit_edge ]
  %152 = phi <2 x double> [ %64, %for.body629.lr.ph ], [ %189, %for.body629.for.body629_crit_edge ]
  %153 = phi <2 x double> [ %65, %for.body629.lr.ph ], [ %202, %for.body629.for.body629_crit_edge ]
  %154 = phi <2 x double> [ %66, %for.body629.lr.ph ], [ %232, %for.body629.for.body629_crit_edge ]
  %155 = phi <2 x double> [ %67, %for.body629.lr.ph ], [ %241, %for.body629.for.body629_crit_edge ]
  %156 = phi <2 x double> [ %68, %for.body629.lr.ph ], [ %237, %for.body629.for.body629_crit_edge ]
  %arrayidx632 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv1090
  %157 = load i32* %arrayidx632, align 4, !tbaa !11
  %idx.ext633 = sext i32 %157 to i64
  %x636 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 0
  %158 = load double* %x636, align 8, !tbaa !59
  %sub637 = fsub double %74, %158
  %mul639 = fmul double %sub637, %sub637
  %y641 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 1
  %159 = load double* %y641, align 8, !tbaa !61
  %sub642 = fsub double %75, %159
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %mul639, %mul643
  %z646 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 0, i32 2
  %160 = load double* %z646, align 8, !tbaa !62
  %sub647 = fsub double %76, %160
  %mul648 = fmul double %sub647, %sub647
  %add649 = fadd double %add644, %mul648
  %conv650 = fptrunc double %add649 to float
  %161 = bitcast float %conv650 to i32
  %shr = ashr i32 %161, 17
  %add652 = add nsw i32 %shr, %mul
  %id653 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 2
  %162 = bitcast [4 x i8]* %id653 to i32*
  %bf.load654 = load i32* %162, align 4
  %bf.clear655 = and i32 %bf.load654, 4194303
  %idxprom.i800840 = zext i32 %bf.clear655 to i64
  %arrayidx.i802 = getelementptr inbounds i32* %149, i64 %idxprom.i800840
  %163 = load i32* %arrayidx.i802, align 4, !tbaa !11
  %conv.i803 = zext i32 %163 to i64
  %conv657 = shl nuw nsw i64 %conv.i803, 1
  %mul658 = and i64 %conv657, 131070
  %mul661 = shl nsw i32 %add652, 4
  %idx.ext662 = sext i32 %mul661 to i64
  %add.ptr663 = getelementptr inbounds double* %7, i64 %idx.ext662
  %164 = load double* %add.ptr663, align 8, !tbaa !17
  %add.ptr663.sum770 = or i64 %idx.ext662, 4
  %add.ptr668 = getelementptr inbounds double* %7, i64 %add.ptr663.sum770
  %165 = load double* %add.ptr668, align 8, !tbaa !17
  %add.ptr663.sum771 = or i64 %idx.ext662, 8
  %add.ptr673 = getelementptr inbounds double* %7, i64 %add.ptr663.sum771
  %166 = load double* %add.ptr673, align 8, !tbaa !17
  %add.ptr673.sum772 = or i64 %idx.ext662, 12
  %add.ptr679 = getelementptr inbounds double* %7, i64 %add.ptr673.sum772
  %167 = load double* %add.ptr679, align 8, !tbaa !17
  %and = and i32 %161, -131072
  %charge682 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext633, i32 1
  %168 = load float* %charge682, align 4, !tbaa !63
  %conv683 = fpext float %168 to double
  %mul684 = fmul double %mul397, %conv683
  %169 = bitcast i32 %and to float
  %conv686 = fpext float %169 to double
  %sub687 = fsub double %add649, %conv686
  %add.ptr.i.sum841 = add i64 %mul658, %idx.ext.i
  %A689 = getelementptr inbounds %"struct.LJTable::TableEntry"* %120, i64 %add.ptr.i.sum841, i32 0
  %170 = load double* %A689, align 8, !tbaa !69
  %mul690 = fmul double %9, %170
  %B692 = getelementptr inbounds %"struct.LJTable::TableEntry"* %120, i64 %add.ptr.i.sum841, i32 1
  %171 = load double* %B692, align 8, !tbaa !71
  %mul693 = fmul double %9, %171
  %mul694 = fmul double %164, %mul690
  %mul695 = fmul double %165, %mul693
  %sub696 = fsub double %mul694, %mul695
  %add.ptr663.sum773 = or i64 %idx.ext662, 3
  %arrayidx697 = getelementptr inbounds double* %7, i64 %add.ptr663.sum773
  %172 = load double* %arrayidx697, align 8, !tbaa !17
  %mul698 = fmul double %mul690, %172
  %add.ptr668.sum774 = or i64 %idx.ext662, 7
  %arrayidx699 = getelementptr inbounds double* %7, i64 %add.ptr668.sum774
  %173 = load double* %arrayidx699, align 8, !tbaa !17
  %mul700 = fmul double %mul693, %173
  %sub701 = fsub double %mul698, %mul700
  %add.ptr663.sum775 = or i64 %idx.ext662, 2
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr663.sum775
  %174 = load double* %arrayidx702, align 8, !tbaa !17
  %mul703 = fmul double %mul690, %174
  %add.ptr668.sum776 = or i64 %idx.ext662, 6
  %arrayidx704 = getelementptr inbounds double* %7, i64 %add.ptr668.sum776
  %175 = load double* %arrayidx704, align 8, !tbaa !17
  %mul705 = fmul double %mul693, %175
  %sub706 = fsub double %mul703, %mul705
  %add.ptr663.sum777 = or i64 %idx.ext662, 1
  %arrayidx707 = getelementptr inbounds double* %7, i64 %add.ptr663.sum777
  %176 = load double* %arrayidx707, align 8, !tbaa !17
  %mul708 = fmul double %mul690, %176
  %add.ptr668.sum778 = or i64 %idx.ext662, 5
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr668.sum778
  %177 = load double* %arrayidx709, align 8, !tbaa !17
  %mul710 = fmul double %mul693, %177
  %sub711 = fsub double %mul708, %mul710
  %mul712 = fmul double %sub687, %sub701
  %add713 = fadd double %mul712, %sub706
  %mul714 = fmul double %sub687, %add713
  %add715 = fadd double %mul714, %sub711
  %mul716 = fmul double %sub687, %add715
  %add717 = fadd double %sub696, %mul716
  %add.ptr673.sum779 = or i64 %idx.ext662, 11
  %arrayidx720 = getelementptr inbounds double* %7, i64 %add.ptr673.sum779
  %178 = load double* %arrayidx720, align 8, !tbaa !17
  %mul721 = fmul double %mul684, %178
  %add.ptr673.sum780 = or i64 %idx.ext662, 10
  %arrayidx722 = getelementptr inbounds double* %7, i64 %add.ptr673.sum780
  %179 = load double* %arrayidx722, align 8, !tbaa !17
  %mul723 = fmul double %mul684, %179
  %add.ptr673.sum781 = or i64 %idx.ext662, 9
  %arrayidx724 = getelementptr inbounds double* %7, i64 %add.ptr673.sum781
  %180 = load double* %arrayidx724, align 8, !tbaa !17
  %mul725 = fmul double %mul684, %180
  %mul726 = fmul double %sub687, %mul721
  %add733 = fadd double %sub701, %mul721
  %add734 = fadd double %sub706, %mul723
  %add735 = fadd double %sub711, %mul725
  %mul737 = fmul double %sub687, 3.000000e+00
  %mul738 = fmul double %mul737, %add733
  %mul739 = fmul double %add734, 2.000000e+00
  %add740 = fadd double %mul738, %mul739
  %mul741 = fmul double %sub687, %add740
  %add742 = fadd double %add735, %mul741
  %mul743 = fmul double %add742, -2.000000e+00
  %mul746 = fmul double %sub637, %mul743
  %mul747 = fmul double %sub637, %mul746
  %181 = insertelement <2 x double> undef, double %add717, i32 0
  %182 = insertelement <2 x double> %181, double %mul747, i32 1
  %183 = fadd <2 x double> %151, %182
  %184 = insertelement <2 x double> undef, double %sub642, i32 0
  %185 = insertelement <2 x double> %184, double %sub647, i32 1
  %186 = insertelement <2 x double> undef, double %mul746, i32 0
  %187 = insertelement <2 x double> %186, double %mul746, i32 1
  %188 = fmul <2 x double> %185, %187
  %189 = fadd <2 x double> %152, %188
  %190 = load double* %x753, align 8, !tbaa !72
  %add754 = fadd double %190, %mul746
  store double %add754, double* %x753, align 8, !tbaa !72
  %x755 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext633, i32 0
  %mul757 = fmul double %sub642, %mul743
  %191 = load double* %y762, align 8, !tbaa !73
  %add763 = fadd double %191, %mul757
  store double %add763, double* %y762, align 8, !tbaa !73
  %192 = bitcast double* %x755 to <2 x double>*
  %193 = load <2 x double>* %192, align 8, !tbaa !17
  %194 = insertelement <2 x double> %186, double %mul757, i32 1
  %195 = fsub <2 x double> %193, %194
  %196 = bitcast double* %x755 to <2 x double>*
  store <2 x double> %195, <2 x double>* %196, align 8, !tbaa !17
  %mul766 = fmul double %sub647, %mul743
  %197 = insertelement <2 x double> undef, double %sub647, i32 0
  %198 = insertelement <2 x double> %197, double %sub647, i32 1
  %199 = insertelement <2 x double> undef, double %mul757, i32 0
  %200 = insertelement <2 x double> %199, double %mul766, i32 1
  %201 = fmul <2 x double> %198, %200
  %202 = fadd <2 x double> %153, %201
  %203 = load double* %z769, align 8, !tbaa !74
  %add770 = fadd double %203, %mul766
  store double %add770, double* %z769, align 8, !tbaa !74
  %z771 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext633, i32 2
  %204 = load double* %z771, align 8, !tbaa !74
  %sub772 = fsub double %204, %mul766
  store double %sub772, double* %z771, align 8, !tbaa !74
  %add.ptr679.sum782 = or i64 %idx.ext662, 13
  %arrayidx773 = getelementptr inbounds double* %7, i64 %add.ptr679.sum782
  %205 = load double* %arrayidx773, align 8, !tbaa !17
  %add.ptr679.sum783 = or i64 %idx.ext662, 14
  %arrayidx774 = getelementptr inbounds double* %7, i64 %add.ptr679.sum783
  %206 = load double* %arrayidx774, align 8, !tbaa !17
  %add.ptr679.sum784 = or i64 %idx.ext662, 15
  %arrayidx775 = getelementptr inbounds double* %7, i64 %add.ptr679.sum784
  %207 = load double* %arrayidx775, align 8, !tbaa !17
  %mul776 = fmul double %mul684, %207
  %mul777 = fmul double %mul684, %206
  %mul778 = fmul double %mul684, %205
  %208 = insertelement <2 x double> undef, double %mul684, i32 0
  %209 = insertelement <2 x double> %208, double %mul684, i32 1
  %210 = insertelement <2 x double> undef, double %166, i32 0
  %211 = insertelement <2 x double> %210, double %167, i32 1
  %212 = fmul <2 x double> %209, %211
  %mul780 = fmul double %sub687, %mul776
  %213 = insertelement <2 x double> undef, double %mul726, i32 0
  %214 = insertelement <2 x double> %213, double %mul777, i32 1
  %215 = insertelement <2 x double> undef, double %mul723, i32 0
  %216 = insertelement <2 x double> %215, double %mul780, i32 1
  %217 = fadd <2 x double> %214, %216
  %218 = insertelement <2 x double> undef, double %sub687, i32 0
  %219 = insertelement <2 x double> %218, double %sub687, i32 1
  %220 = fmul <2 x double> %217, %219
  %221 = insertelement <2 x double> undef, double %mul725, i32 0
  %222 = insertelement <2 x double> %221, double %mul778, i32 1
  %223 = fadd <2 x double> %222, %220
  %224 = fmul <2 x double> %223, %219
  %225 = fadd <2 x double> %212, %224
  %226 = fadd <2 x double> %150, %225
  %mul788 = fmul double %mul737, %mul776
  %mul789 = fmul double %mul777, 2.000000e+00
  %add790 = fadd double %mul789, %mul788
  %mul791 = fmul double %sub687, %add790
  %add792 = fadd double %mul778, %mul791
  %mul793 = fmul double %add792, -2.000000e+00
  %mul797 = fmul double %sub637, %mul793
  %227 = insertelement <2 x double> undef, double %sub637, i32 0
  %228 = insertelement <2 x double> %227, double %sub642, i32 1
  %229 = insertelement <2 x double> undef, double %mul797, i32 0
  %230 = insertelement <2 x double> %229, double %mul797, i32 1
  %231 = fmul <2 x double> %228, %230
  %232 = fadd <2 x double> %154, %231
  %233 = load double* %x804, align 8, !tbaa !72
  %add805 = fadd double %233, %mul797
  store double %add805, double* %x804, align 8, !tbaa !72
  %x806 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext633, i32 0
  %mul809 = fmul double %sub642, %mul793
  %234 = insertelement <2 x double> %184, double %sub642, i32 1
  %235 = insertelement <2 x double> %199, double %mul809, i32 1
  %236 = fmul <2 x double> %234, %235
  %237 = fadd <2 x double> %156, %236
  %238 = insertelement <2 x double> undef, double %mul809, i32 0
  %239 = insertelement <2 x double> %238, double %mul797, i32 1
  %240 = fmul <2 x double> %198, %239
  %241 = fadd <2 x double> %155, %240
  %242 = load double* %y814, align 8, !tbaa !73
  %add815 = fadd double %242, %mul809
  store double %add815, double* %y814, align 8, !tbaa !73
  %243 = bitcast double* %x806 to <2 x double>*
  %244 = load <2 x double>* %243, align 8, !tbaa !17
  %245 = insertelement <2 x double> %229, double %mul809, i32 1
  %246 = fsub <2 x double> %244, %245
  %247 = bitcast double* %x806 to <2 x double>*
  store <2 x double> %246, <2 x double>* %247, align 8, !tbaa !17
  %mul819 = fmul double %sub647, %mul793
  %mul820 = fmul double %sub647, %mul819
  %add821 = fadd double %fullElectVirial_zz.1917, %mul820
  %248 = load double* %z822, align 8, !tbaa !74
  %add823 = fadd double %248, %mul819
  store double %add823, double* %z822, align 8, !tbaa !74
  %z824 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext633, i32 2
  %249 = load double* %z824, align 8, !tbaa !74
  %sub825 = fsub double %249, %mul819
  store double %sub825, double* %z824, align 8, !tbaa !74
  %indvars.iv.next1091 = add nuw nsw i64 %indvars.iv1090, 1
  %lftr.wideiv1092 = trunc i64 %indvars.iv.next1091 to i32
  %exitcond1093 = icmp eq i32 %lftr.wideiv1092, %conv626
  br i1 %exitcond1093, label %for.end828, label %for.body629.for.body629_crit_edge

for.body629.for.body629_crit_edge:                ; preds = %for.body629
  %.pre = load i32** %atomVdwType.i805, align 8, !tbaa !64
  br label %for.body629

for.end828:                                       ; preds = %for.body629, %for.end607
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.01005, %for.end607 ], [ %add821, %for.body629 ]
  %250 = phi <2 x double> [ %62, %for.end607 ], [ %226, %for.body629 ]
  %251 = phi <2 x double> [ %63, %for.end607 ], [ %183, %for.body629 ]
  %252 = phi <2 x double> [ %64, %for.end607 ], [ %189, %for.body629 ]
  %253 = phi <2 x double> [ %65, %for.end607 ], [ %202, %for.body629 ]
  %254 = phi <2 x double> [ %66, %for.end607 ], [ %232, %for.body629 ]
  %255 = phi <2 x double> [ %67, %for.end607 ], [ %241, %for.body629 ]
  %256 = phi <2 x double> [ %68, %for.end607 ], [ %237, %for.body629 ]
  %conv833 = trunc i64 %sub.ptr.div618 to i32
  %cmp835947 = icmp sgt i32 %conv833, 0
  br i1 %cmp835947, label %for.body836.lr.ph, label %for.end1095

for.body836.lr.ph:                                ; preds = %for.end828
  %x996 = getelementptr inbounds %class.Vector* %arrayidx184, i64 0, i32 0
  %y1006 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 1
  %z1014 = getelementptr inbounds %class.Vector* %55, i64 %idxprom176, i32 2
  %x1071 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1081 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1089 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  br label %for.body836

for.body836:                                      ; preds = %for.body836, %for.body836.lr.ph
  %indvars.iv1094 = phi i64 [ 0, %for.body836.lr.ph ], [ %indvars.iv.next1095, %for.body836 ]
  %fullElectVirial_zz.2949 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body836.lr.ph ], [ %add1088, %for.body836 ]
  %257 = phi <2 x double> [ %250, %for.body836.lr.ph ], [ %340, %for.body836 ]
  %258 = phi <2 x double> [ %251, %for.body836.lr.ph ], [ %291, %for.body836 ]
  %259 = phi <2 x double> [ %252, %for.body836.lr.ph ], [ %297, %for.body836 ]
  %260 = phi <2 x double> [ %253, %for.body836.lr.ph ], [ %310, %for.body836 ]
  %261 = phi <2 x double> [ %254, %for.body836.lr.ph ], [ %347, %for.body836 ]
  %262 = phi <2 x double> [ %255, %for.body836.lr.ph ], [ %356, %for.body836 ]
  %263 = phi <2 x double> [ %256, %for.body836.lr.ph ], [ %352, %for.body836 ]
  %arrayidx839 = getelementptr inbounds i32* %cond158, i64 %indvars.iv1094
  %264 = load i32* %arrayidx839, align 4, !tbaa !11
  %idx.ext841 = sext i32 %264 to i64
  %x845 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext841, i32 0, i32 0
  %265 = load double* %x845, align 8, !tbaa !59
  %sub846 = fsub double %74, %265
  %mul848 = fmul double %sub846, %sub846
  %y851 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext841, i32 0, i32 1
  %266 = load double* %y851, align 8, !tbaa !61
  %sub852 = fsub double %75, %266
  %mul853 = fmul double %sub852, %sub852
  %add854 = fadd double %mul848, %mul853
  %z857 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext841, i32 0, i32 2
  %267 = load double* %z857, align 8, !tbaa !62
  %sub858 = fsub double %76, %267
  %mul859 = fmul double %sub858, %sub858
  %add860 = fadd double %add854, %mul859
  %conv862 = fptrunc double %add860 to float
  %268 = bitcast float %conv862 to i32
  %shr866 = ashr i32 %268, 17
  %add867 = add nsw i32 %shr866, %mul
  %id869 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext841, i32 2
  %269 = bitcast [4 x i8]* %id869 to i32*
  %bf.load870 = load i32* %269, align 4
  %bf.clear871 = and i32 %bf.load870, 4194303
  %idxprom.i798838 = zext i32 %bf.clear871 to i64
  %270 = load i32** %atomVdwType.i805, align 8, !tbaa !64
  %arrayidx.i799 = getelementptr inbounds i32* %270, i64 %idxprom.i798838
  %271 = load i32* %arrayidx.i799, align 4, !tbaa !11
  %conv.i = zext i32 %271 to i64
  %conv873 = shl nuw nsw i64 %conv.i, 1
  %mul874 = and i64 %conv873, 131070
  %add.ptr876.sum750 = or i64 %mul874, 1
  %mul879 = shl nsw i32 %add867, 4
  %idx.ext880 = sext i32 %mul879 to i64
  %add.ptr881 = getelementptr inbounds double* %7, i64 %idx.ext880
  %272 = load double* %add.ptr881, align 8, !tbaa !17
  %add.ptr881.sum751 = or i64 %idx.ext880, 4
  %add.ptr888 = getelementptr inbounds double* %7, i64 %add.ptr881.sum751
  %273 = load double* %add.ptr888, align 8, !tbaa !17
  %add.ptr881.sum752 = or i64 %idx.ext880, 8
  %add.ptr895 = getelementptr inbounds double* %7, i64 %add.ptr881.sum752
  %274 = load double* %add.ptr895, align 8, !tbaa !17
  %add.ptr895.sum753 = or i64 %idx.ext880, 12
  %add.ptr903 = getelementptr inbounds double* %7, i64 %add.ptr895.sum753
  %275 = load double* %add.ptr903, align 8, !tbaa !17
  %and907 = and i32 %268, -131072
  %charge909 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext841, i32 1
  %276 = load float* %charge909, align 4, !tbaa !63
  %conv910 = fpext float %276 to double
  %mul911 = fmul double %mul397, %conv910
  %277 = bitcast i32 %and907 to float
  %conv914 = fpext float %277 to double
  %sub915 = fsub double %add860, %conv914
  %add.ptr.i.sum = add i64 %add.ptr876.sum750, %idx.ext.i
  %A917 = getelementptr inbounds %"struct.LJTable::TableEntry"* %120, i64 %add.ptr.i.sum, i32 0
  %278 = load double* %A917, align 8, !tbaa !69
  %mul918 = fmul double %9, %278
  %B920 = getelementptr inbounds %"struct.LJTable::TableEntry"* %120, i64 %add.ptr.i.sum, i32 1
  %279 = load double* %B920, align 8, !tbaa !71
  %mul921 = fmul double %9, %279
  %mul923 = fmul double %272, %mul918
  %mul924 = fmul double %273, %mul921
  %sub925 = fsub double %mul923, %mul924
  %add.ptr881.sum754 = or i64 %idx.ext880, 3
  %arrayidx927 = getelementptr inbounds double* %7, i64 %add.ptr881.sum754
  %280 = load double* %arrayidx927, align 8, !tbaa !17
  %mul928 = fmul double %mul918, %280
  %add.ptr888.sum755 = or i64 %idx.ext880, 7
  %arrayidx929 = getelementptr inbounds double* %7, i64 %add.ptr888.sum755
  %281 = load double* %arrayidx929, align 8, !tbaa !17
  %mul930 = fmul double %mul921, %281
  %sub931 = fsub double %mul928, %mul930
  %add.ptr881.sum756 = or i64 %idx.ext880, 2
  %arrayidx933 = getelementptr inbounds double* %7, i64 %add.ptr881.sum756
  %282 = load double* %arrayidx933, align 8, !tbaa !17
  %mul934 = fmul double %mul918, %282
  %add.ptr888.sum757 = or i64 %idx.ext880, 6
  %arrayidx935 = getelementptr inbounds double* %7, i64 %add.ptr888.sum757
  %283 = load double* %arrayidx935, align 8, !tbaa !17
  %mul936 = fmul double %mul921, %283
  %sub937 = fsub double %mul934, %mul936
  %add.ptr881.sum758 = or i64 %idx.ext880, 1
  %arrayidx939 = getelementptr inbounds double* %7, i64 %add.ptr881.sum758
  %284 = load double* %arrayidx939, align 8, !tbaa !17
  %mul940 = fmul double %mul918, %284
  %add.ptr888.sum759 = or i64 %idx.ext880, 5
  %arrayidx941 = getelementptr inbounds double* %7, i64 %add.ptr888.sum759
  %285 = load double* %arrayidx941, align 8, !tbaa !17
  %mul942 = fmul double %mul921, %285
  %sub943 = fsub double %mul940, %mul942
  %mul945 = fmul double %sub915, %sub931
  %add946 = fadd double %mul945, %sub937
  %mul947 = fmul double %sub915, %add946
  %add948 = fadd double %mul947, %sub943
  %mul949 = fmul double %sub915, %add948
  %add950 = fadd double %sub925, %mul949
  %mul953 = fmul double %sub952, %mul911
  %add.ptr895.sum760 = or i64 %idx.ext880, 11
  %arrayidx956 = getelementptr inbounds double* %7, i64 %add.ptr895.sum760
  %286 = load double* %arrayidx956, align 8, !tbaa !17
  %mul957 = fmul double %mul953, %286
  %add.ptr895.sum761 = or i64 %idx.ext880, 10
  %arrayidx959 = getelementptr inbounds double* %7, i64 %add.ptr895.sum761
  %287 = load double* %arrayidx959, align 8, !tbaa !17
  %mul960 = fmul double %mul953, %287
  %add.ptr895.sum762 = or i64 %idx.ext880, 9
  %arrayidx962 = getelementptr inbounds double* %7, i64 %add.ptr895.sum762
  %288 = load double* %arrayidx962, align 8, !tbaa !17
  %mul963 = fmul double %mul953, %288
  %add972 = fadd double %sub931, %mul957
  %add973 = fadd double %sub937, %mul960
  %add974 = fadd double %sub943, %mul963
  %mul977 = fmul double %sub915, 3.000000e+00
  %mul978 = fmul double %mul977, %add972
  %mul979 = fmul double %add973, 2.000000e+00
  %add980 = fadd double %mul978, %mul979
  %mul981 = fmul double %sub915, %add980
  %add982 = fadd double %add974, %mul981
  %mul984 = fmul double %add982, -2.000000e+00
  %mul989 = fmul double %sub846, %mul984
  %mul990 = fmul double %sub846, %mul989
  %289 = insertelement <2 x double> undef, double %add950, i32 0
  %290 = insertelement <2 x double> %289, double %mul990, i32 1
  %291 = fadd <2 x double> %258, %290
  %292 = insertelement <2 x double> undef, double %sub852, i32 0
  %293 = insertelement <2 x double> %292, double %sub858, i32 1
  %294 = insertelement <2 x double> undef, double %mul989, i32 0
  %295 = insertelement <2 x double> %294, double %mul989, i32 1
  %296 = fmul <2 x double> %293, %295
  %297 = fadd <2 x double> %259, %296
  %298 = load double* %x996, align 8, !tbaa !72
  %add997 = fadd double %298, %mul989
  store double %add997, double* %x996, align 8, !tbaa !72
  %x998 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext841, i32 0
  %mul1001 = fmul double %sub852, %mul984
  %299 = load double* %y1006, align 8, !tbaa !73
  %add1007 = fadd double %299, %mul1001
  store double %add1007, double* %y1006, align 8, !tbaa !73
  %300 = bitcast double* %x998 to <2 x double>*
  %301 = load <2 x double>* %300, align 8, !tbaa !17
  %302 = insertelement <2 x double> %294, double %mul1001, i32 1
  %303 = fsub <2 x double> %301, %302
  %304 = bitcast double* %x998 to <2 x double>*
  store <2 x double> %303, <2 x double>* %304, align 8, !tbaa !17
  %mul1011 = fmul double %sub858, %mul984
  %305 = insertelement <2 x double> undef, double %sub858, i32 0
  %306 = insertelement <2 x double> %305, double %sub858, i32 1
  %307 = insertelement <2 x double> undef, double %mul1001, i32 0
  %308 = insertelement <2 x double> %307, double %mul1011, i32 1
  %309 = fmul <2 x double> %306, %308
  %310 = fadd <2 x double> %260, %309
  %311 = load double* %z1014, align 8, !tbaa !74
  %add1015 = fadd double %311, %mul1011
  store double %add1015, double* %z1014, align 8, !tbaa !74
  %z1016 = getelementptr inbounds %class.Vector* %56, i64 %idx.ext841, i32 2
  %312 = load double* %z1016, align 8, !tbaa !74
  %sub1017 = fsub double %312, %mul1011
  store double %sub1017, double* %z1016, align 8, !tbaa !74
  %add.ptr903.sum763 = or i64 %idx.ext880, 13
  %arrayidx1019 = getelementptr inbounds double* %7, i64 %add.ptr903.sum763
  %313 = load double* %arrayidx1019, align 8, !tbaa !17
  %add.ptr903.sum764 = or i64 %idx.ext880, 14
  %arrayidx1021 = getelementptr inbounds double* %7, i64 %add.ptr903.sum764
  %314 = load double* %arrayidx1021, align 8, !tbaa !17
  %add.ptr903.sum765 = or i64 %idx.ext880, 15
  %arrayidx1023 = getelementptr inbounds double* %7, i64 %add.ptr903.sum765
  %315 = load double* %arrayidx1023, align 8, !tbaa !17
  %mul1024 = shl nsw i32 %add867, 2
  %idx.ext1025 = sext i32 %mul1024 to i64
  %add.ptr1026 = getelementptr inbounds double* %8, i64 %idx.ext1025
  %316 = load double* %add.ptr1026, align 8, !tbaa !17
  %mul1028 = fmul double %sub, %316
  %sub1029 = fsub double %275, %mul1028
  %add.ptr1026.sum766 = or i64 %idx.ext1025, 1
  %arrayidx1030 = getelementptr inbounds double* %8, i64 %add.ptr1026.sum766
  %317 = load double* %arrayidx1030, align 8, !tbaa !17
  %mul1031 = fmul double %sub, %317
  %sub1032 = fsub double %313, %mul1031
  %add.ptr1026.sum767 = or i64 %idx.ext1025, 2
  %arrayidx1033 = getelementptr inbounds double* %8, i64 %add.ptr1026.sum767
  %318 = load double* %arrayidx1033, align 8, !tbaa !17
  %mul1034 = fmul double %sub, %318
  %sub1035 = fsub double %314, %mul1034
  %add.ptr1026.sum768 = or i64 %idx.ext1025, 3
  %arrayidx1036 = getelementptr inbounds double* %8, i64 %add.ptr1026.sum768
  %319 = load double* %arrayidx1036, align 8, !tbaa !17
  %mul1037 = fmul double %sub, %319
  %sub1038 = fsub double %315, %mul1037
  %mul1039 = fmul double %mul911, %sub1038
  %320 = insertelement <2 x double> undef, double %sub915, i32 0
  %321 = insertelement <2 x double> %320, double %sub1035, i32 1
  %322 = insertelement <2 x double> undef, double %mul957, i32 0
  %323 = insertelement <2 x double> %322, double %mul911, i32 1
  %324 = fmul <2 x double> %321, %323
  %mul1041 = fmul double %mul911, %sub1032
  %325 = insertelement <2 x double> undef, double %mul953, i32 0
  %326 = insertelement <2 x double> %325, double %sub1029, i32 1
  %327 = insertelement <2 x double> undef, double %274, i32 0
  %328 = insertelement <2 x double> %327, double %mul911, i32 1
  %329 = fmul <2 x double> %326, %328
  %mul1044 = fmul double %sub915, %mul1039
  %330 = insertelement <2 x double> undef, double %mul960, i32 0
  %331 = insertelement <2 x double> %330, double %mul1044, i32 1
  %332 = fadd <2 x double> %324, %331
  %333 = insertelement <2 x double> %320, double %sub915, i32 1
  %334 = fmul <2 x double> %332, %333
  %335 = insertelement <2 x double> undef, double %mul963, i32 0
  %336 = insertelement <2 x double> %335, double %mul1041, i32 1
  %337 = fadd <2 x double> %336, %334
  %338 = fmul <2 x double> %337, %333
  %339 = fadd <2 x double> %329, %338
  %340 = fadd <2 x double> %257, %339
  %mul1053 = fmul double %mul977, %mul1039
  %341 = extractelement <2 x double> %324, i32 1
  %mul1054 = fmul double %341, 2.000000e+00
  %add1055 = fadd double %mul1054, %mul1053
  %mul1056 = fmul double %sub915, %add1055
  %add1057 = fadd double %mul1041, %mul1056
  %mul1059 = fmul double %add1057, -2.000000e+00
  %mul1064 = fmul double %sub846, %mul1059
  %342 = insertelement <2 x double> undef, double %sub846, i32 0
  %343 = insertelement <2 x double> %342, double %sub852, i32 1
  %344 = insertelement <2 x double> undef, double %mul1064, i32 0
  %345 = insertelement <2 x double> %344, double %mul1064, i32 1
  %346 = fmul <2 x double> %343, %345
  %347 = fadd <2 x double> %261, %346
  %348 = load double* %x1071, align 8, !tbaa !72
  %add1072 = fadd double %348, %mul1064
  store double %add1072, double* %x1071, align 8, !tbaa !72
  %x1073 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext841, i32 0
  %mul1076 = fmul double %sub852, %mul1059
  %349 = insertelement <2 x double> %292, double %sub852, i32 1
  %350 = insertelement <2 x double> %307, double %mul1076, i32 1
  %351 = fmul <2 x double> %349, %350
  %352 = fadd <2 x double> %263, %351
  %353 = insertelement <2 x double> undef, double %mul1076, i32 0
  %354 = insertelement <2 x double> %353, double %mul1064, i32 1
  %355 = fmul <2 x double> %306, %354
  %356 = fadd <2 x double> %262, %355
  %357 = load double* %y1081, align 8, !tbaa !73
  %add1082 = fadd double %357, %mul1076
  store double %add1082, double* %y1081, align 8, !tbaa !73
  %358 = bitcast double* %x1073 to <2 x double>*
  %359 = load <2 x double>* %358, align 8, !tbaa !17
  %360 = insertelement <2 x double> %344, double %mul1076, i32 1
  %361 = fsub <2 x double> %359, %360
  %362 = bitcast double* %x1073 to <2 x double>*
  store <2 x double> %361, <2 x double>* %362, align 8, !tbaa !17
  %mul1086 = fmul double %sub858, %mul1059
  %mul1087 = fmul double %sub858, %mul1086
  %add1088 = fadd double %fullElectVirial_zz.2949, %mul1087
  %363 = load double* %z1089, align 8, !tbaa !74
  %add1090 = fadd double %363, %mul1086
  store double %add1090, double* %z1089, align 8, !tbaa !74
  %z1091 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext841, i32 2
  %364 = load double* %z1091, align 8, !tbaa !74
  %sub1092 = fsub double %364, %mul1086
  store double %sub1092, double* %z1091, align 8, !tbaa !74
  %indvars.iv.next1095 = add nuw nsw i64 %indvars.iv1094, 1
  %lftr.wideiv1096 = trunc i64 %indvars.iv.next1095 to i32
  %exitcond1097 = icmp eq i32 %lftr.wideiv1096, %conv833
  br i1 %exitcond1097, label %for.end1095, label %for.body836

for.end1095:                                      ; preds = %for.body836, %for.end828
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end828 ], [ %add1088, %for.body836 ]
  %365 = phi <2 x double> [ %250, %for.end828 ], [ %340, %for.body836 ]
  %366 = phi <2 x double> [ %251, %for.end828 ], [ %291, %for.body836 ]
  %367 = phi <2 x double> [ %252, %for.end828 ], [ %297, %for.body836 ]
  %368 = phi <2 x double> [ %253, %for.end828 ], [ %310, %for.body836 ]
  %369 = phi <2 x double> [ %254, %for.end828 ], [ %347, %for.body836 ]
  %370 = phi <2 x double> [ %255, %for.end828 ], [ %356, %for.body836 ]
  %371 = phi <2 x double> [ %256, %for.end828 ], [ %352, %for.body836 ]
  %conv1100 = trunc i64 %sub.ptr.div611 to i32
  %cmp1102979 = icmp sgt i32 %conv1100, 0
  br i1 %cmp1102979, label %for.body1103.lr.ph, label %for.inc1228

for.body1103.lr.ph:                               ; preds = %for.end1095
  %372 = extractelement <2 x double> %365, i32 1
  %373 = extractelement <2 x double> %365, i32 0
  %374 = extractelement <2 x double> %371, i32 1
  %375 = extractelement <2 x double> %371, i32 0
  %x1203 = getelementptr inbounds %class.Vector* %arrayidx186, i64 0, i32 0
  %y1213 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 1
  %z1221 = getelementptr inbounds %class.Vector* %57, i64 %idxprom176, i32 2
  %376 = insertelement <2 x double> undef, double %373, i32 0
  %377 = insertelement <2 x double> undef, double %375, i32 0
  br label %for.body1103

for.body1103:                                     ; preds = %for.body1103, %for.body1103.lr.ph
  %indvars.iv1098 = phi i64 [ 0, %for.body1103.lr.ph ], [ %indvars.iv.next1099, %for.body1103 ]
  %fullElectEnergy.3987 = phi double [ %372, %for.body1103.lr.ph ], [ %add1182, %for.body1103 ]
  %fullElectVirial_yy.3983 = phi double [ %374, %for.body1103.lr.ph ], [ %add1210, %for.body1103 ]
  %fullElectVirial_zz.3981 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body1103.lr.ph ], [ %add1220, %for.body1103 ]
  %378 = phi <2 x double> [ %369, %for.body1103.lr.ph ], [ %400, %for.body1103 ]
  %379 = phi <2 x double> [ %370, %for.body1103.lr.ph ], [ %407, %for.body1103 ]
  %arrayidx1106 = getelementptr inbounds i32* %cond147834, i64 %indvars.iv1098
  %380 = load i32* %arrayidx1106, align 4, !tbaa !11
  %idx.ext1108 = sext i32 %380 to i64
  %x1112 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1108, i32 0, i32 0
  %381 = load double* %x1112, align 8, !tbaa !59
  %sub1113 = fsub double %74, %381
  %mul1115 = fmul double %sub1113, %sub1113
  %y1118 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1108, i32 0, i32 1
  %382 = load double* %y1118, align 8, !tbaa !61
  %sub1119 = fsub double %75, %382
  %mul1120 = fmul double %sub1119, %sub1119
  %add1121 = fadd double %mul1115, %mul1120
  %z1124 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1108, i32 0, i32 2
  %383 = load double* %z1124, align 8, !tbaa !62
  %sub1125 = fsub double %76, %383
  %mul1126 = fmul double %sub1125, %sub1125
  %add1127 = fadd double %add1121, %mul1126
  %conv1129 = fptrunc double %add1127 to float
  %384 = bitcast float %conv1129 to i32
  %shr1133 = ashr i32 %384, 17
  %add1134 = add nsw i32 %shr1133, %mul
  %mul1136 = shl nsw i32 %add1134, 4
  %idx.ext1137 = sext i32 %mul1136 to i64
  %add.ptr1139.sum742 = or i64 %idx.ext1137, 12
  %add.ptr1140 = getelementptr inbounds double* %7, i64 %add.ptr1139.sum742
  %385 = load double* %add.ptr1140, align 8, !tbaa !17
  %and1144 = and i32 %384, -131072
  %charge1146 = getelementptr inbounds %struct.CompAtom* %16, i64 %idx.ext1108, i32 1
  %386 = load float* %charge1146, align 4, !tbaa !63
  %conv1147 = fpext float %386 to double
  %mul1148 = fmul double %mul397, %conv1147
  %387 = bitcast i32 %and1144 to float
  %conv1151 = fpext float %387 to double
  %sub1152 = fsub double %add1127, %conv1151
  %add.ptr1140.sum743 = or i64 %idx.ext1137, 13
  %arrayidx1154 = getelementptr inbounds double* %7, i64 %add.ptr1140.sum743
  %388 = load double* %arrayidx1154, align 8, !tbaa !17
  %add.ptr1140.sum744 = or i64 %idx.ext1137, 14
  %arrayidx1156 = getelementptr inbounds double* %7, i64 %add.ptr1140.sum744
  %389 = load double* %arrayidx1156, align 8, !tbaa !17
  %add.ptr1140.sum745 = or i64 %idx.ext1137, 15
  %arrayidx1158 = getelementptr inbounds double* %7, i64 %add.ptr1140.sum745
  %390 = load double* %arrayidx1158, align 8, !tbaa !17
  %mul1160 = shl nsw i32 %add1134, 2
  %idx.ext1161 = sext i32 %mul1160 to i64
  %add.ptr1162 = getelementptr inbounds double* %8, i64 %idx.ext1161
  %391 = load double* %add.ptr1162, align 8, !tbaa !17
  %sub1164 = fsub double %385, %391
  %add.ptr1162.sum746 = or i64 %idx.ext1161, 1
  %arrayidx1165 = getelementptr inbounds double* %8, i64 %add.ptr1162.sum746
  %392 = load double* %arrayidx1165, align 8, !tbaa !17
  %sub1166 = fsub double %388, %392
  %add.ptr1162.sum747 = or i64 %idx.ext1161, 2
  %arrayidx1167 = getelementptr inbounds double* %8, i64 %add.ptr1162.sum747
  %393 = load double* %arrayidx1167, align 8, !tbaa !17
  %sub1168 = fsub double %389, %393
  %add.ptr1162.sum748 = or i64 %idx.ext1161, 3
  %arrayidx1169 = getelementptr inbounds double* %8, i64 %add.ptr1162.sum748
  %394 = load double* %arrayidx1169, align 8, !tbaa !17
  %sub1170 = fsub double %390, %394
  %mul1171 = fmul double %mul1148, %sub1170
  %mul1172 = fmul double %mul1148, %sub1168
  %mul1173 = fmul double %mul1148, %sub1166
  %mul1174 = fmul double %mul1148, %sub1164
  %mul1176 = fmul double %sub1152, %mul1171
  %add1177 = fadd double %mul1172, %mul1176
  %mul1178 = fmul double %sub1152, %add1177
  %add1179 = fadd double %mul1173, %mul1178
  %mul1180 = fmul double %sub1152, %add1179
  %add1181 = fadd double %mul1174, %mul1180
  %add1182 = fadd double %fullElectEnergy.3987, %add1181
  %mul1184 = fmul double %sub1152, 3.000000e+00
  %mul1185 = fmul double %mul1184, %mul1171
  %mul1186 = fmul double %mul1172, 2.000000e+00
  %add1187 = fadd double %mul1186, %mul1185
  %mul1188 = fmul double %sub1152, %add1187
  %add1189 = fadd double %mul1173, %mul1188
  %mul1191 = fmul double %add1189, -2.000000e+00
  %mul1196 = fmul double %sub1113, %mul1191
  %395 = insertelement <2 x double> undef, double %sub1113, i32 0
  %396 = insertelement <2 x double> %395, double %sub1119, i32 1
  %397 = insertelement <2 x double> undef, double %mul1196, i32 0
  %398 = insertelement <2 x double> %397, double %mul1196, i32 1
  %399 = fmul <2 x double> %396, %398
  %400 = fadd <2 x double> %378, %399
  %401 = load double* %x1203, align 8, !tbaa !72
  %add1204 = fadd double %401, %mul1196
  store double %add1204, double* %x1203, align 8, !tbaa !72
  %x1205 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1108, i32 0
  %mul1208 = fmul double %sub1119, %mul1191
  %mul1209 = fmul double %sub1119, %mul1208
  %add1210 = fadd double %fullElectVirial_yy.3983, %mul1209
  %402 = insertelement <2 x double> undef, double %sub1125, i32 0
  %403 = insertelement <2 x double> %402, double %sub1125, i32 1
  %404 = insertelement <2 x double> undef, double %mul1208, i32 0
  %405 = insertelement <2 x double> %404, double %mul1196, i32 1
  %406 = fmul <2 x double> %403, %405
  %407 = fadd <2 x double> %379, %406
  %408 = load double* %y1213, align 8, !tbaa !73
  %add1214 = fadd double %408, %mul1208
  store double %add1214, double* %y1213, align 8, !tbaa !73
  %409 = bitcast double* %x1205 to <2 x double>*
  %410 = load <2 x double>* %409, align 8, !tbaa !17
  %411 = insertelement <2 x double> %397, double %mul1208, i32 1
  %412 = fsub <2 x double> %410, %411
  %413 = bitcast double* %x1205 to <2 x double>*
  store <2 x double> %412, <2 x double>* %413, align 8, !tbaa !17
  %mul1218 = fmul double %sub1125, %mul1191
  %mul1219 = fmul double %sub1125, %mul1218
  %add1220 = fadd double %fullElectVirial_zz.3981, %mul1219
  %414 = load double* %z1221, align 8, !tbaa !74
  %add1222 = fadd double %414, %mul1218
  store double %add1222, double* %z1221, align 8, !tbaa !74
  %z1223 = getelementptr inbounds %class.Vector* %58, i64 %idx.ext1108, i32 2
  %415 = load double* %z1223, align 8, !tbaa !74
  %sub1224 = fsub double %415, %mul1218
  store double %sub1224, double* %z1223, align 8, !tbaa !74
  %indvars.iv.next1099 = add nuw nsw i64 %indvars.iv1098, 1
  %lftr.wideiv1100 = trunc i64 %indvars.iv.next1099 to i32
  %exitcond1101 = icmp eq i32 %lftr.wideiv1100, %conv1100
  br i1 %exitcond1101, label %for.inc1228.loopexit, label %for.body1103

for.inc1228.loopexit:                             ; preds = %for.body1103
  %416 = insertelement <2 x double> %376, double %add1182, i32 1
  %417 = insertelement <2 x double> %377, double %add1210, i32 1
  br label %for.inc1228

for.inc1228:                                      ; preds = %for.inc1228.loopexit, %for.end1095, %if.then220
  %pairCount.3 = phi i32 [ %sub216, %if.then220 ], [ %pairCount.2, %for.end1095 ], [ %pairCount.2, %for.inc1228.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0999, %if.then220 ], [ %pairlistoffset.1, %for.end1095 ], [ %pairlistoffset.1, %for.inc1228.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.01000, %if.then220 ], [ %pairlistindex.2, %for.end1095 ], [ %pairlistindex.2, %for.inc1228.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.01001, %if.then220 ], [ %fixg_lower.3, %for.end1095 ], [ %fixg_lower.3, %for.inc1228.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.01002, %if.then220 ], [ %g_lower.3, %for.end1095 ], [ %g_lower.3, %for.inc1228.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.01003, %if.then220 ], [ %j_hgroup.2, %for.end1095 ], [ %j_hgroup.2, %for.inc1228.loopexit ]
  %i.1 = phi i32 [ %add222, %if.then220 ], [ %i.01004, %for.end1095 ], [ %i.01004, %for.inc1228.loopexit ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.01005, %if.then220 ], [ %fullElectVirial_zz.2.lcssa, %for.end1095 ], [ %add1220, %for.inc1228.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.01020, %if.then220 ], [ %conv621, %for.end1095 ], [ %conv621, %for.inc1228.loopexit ]
  %418 = phi <2 x double> [ %62, %if.then220 ], [ %365, %for.end1095 ], [ %416, %for.inc1228.loopexit ]
  %419 = phi <2 x double> [ %63, %if.then220 ], [ %366, %for.end1095 ], [ %366, %for.inc1228.loopexit ]
  %420 = phi <2 x double> [ %64, %if.then220 ], [ %367, %for.end1095 ], [ %367, %for.inc1228.loopexit ]
  %421 = phi <2 x double> [ %65, %if.then220 ], [ %368, %for.end1095 ], [ %368, %for.inc1228.loopexit ]
  %422 = phi <2 x double> [ %66, %if.then220 ], [ %369, %for.end1095 ], [ %400, %for.inc1228.loopexit ]
  %423 = phi <2 x double> [ %67, %if.then220 ], [ %370, %for.end1095 ], [ %407, %for.inc1228.loopexit ]
  %424 = phi <2 x double> [ %68, %if.then220 ], [ %371, %for.end1095 ], [ %417, %for.inc1228.loopexit ]
  %inc1229 = add nsw i32 %i.1, 1
  %cmp174 = icmp sgt i32 %sub165, %inc1229
  br i1 %cmp174, label %for.body175, label %for.end1230

for.end1230:                                      ; preds = %for.inc1228, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1228 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end157 ], [ %fullElectVirial_zz.4, %for.inc1228 ]
  %425 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %418, %for.inc1228 ]
  %426 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %419, %for.inc1228 ]
  %427 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %420, %for.inc1228 ]
  %428 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %421, %for.inc1228 ]
  %429 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %422, %for.inc1228 ]
  %430 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %423, %for.inc1228 ]
  %431 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %424, %for.inc1228 ]
  %432 = extractelement <2 x double> %430, i32 1
  %433 = extractelement <2 x double> %430, i32 0
  %arraydecay1231 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1232 = icmp eq i32* %cond80881011151121, %arraydecay1231
  br i1 %cmp1232, label %if.end1237, label %delete.notnull1235

delete.notnull1235:                               ; preds = %for.end1230
  %434 = bitcast i32* %cond80881011151121 to i8*
  call void @_ZdaPv(i8* %434) #7
  br label %if.end1237

if.end1237:                                       ; preds = %delete.notnull1235, %for.end1230
  %arraydecay1238 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1239 = icmp eq i32* %cond1981211131122, %arraydecay1238
  br i1 %cmp1239, label %if.end1244, label %delete.notnull1242

delete.notnull1242:                               ; preds = %if.end1237
  %435 = bitcast i32* %cond1981211131122 to i8*
  call void @_ZdaPv(i8* %435) #7
  br label %if.end1244

if.end1244:                                       ; preds = %delete.notnull1242, %if.end1237
  %arraydecay1245 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1246 = icmp eq i32* %cond3011171120, %arraydecay1245
  br i1 %cmp1246, label %if.end1251, label %delete.notnull1249

delete.notnull1249:                               ; preds = %if.end1244
  %436 = bitcast i32* %cond3011171120 to i8*
  call void @_ZdaPv(i8* %436) #7
  br label %if.end1251

if.end1251:                                       ; preds = %delete.notnull1249, %if.end1244
  %arraydecay1252 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1253 = icmp eq i32* %cond114816818824830, %arraydecay1252
  br i1 %cmp1253, label %if.end1258, label %delete.notnull1256

delete.notnull1256:                               ; preds = %if.end1251
  %437 = bitcast i32* %cond114816818824830 to i8*
  call void @_ZdaPv(i8* %437) #7
  br label %if.end1258

if.end1258:                                       ; preds = %delete.notnull1256, %if.end1251
  %arraydecay1259 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1260 = icmp eq i32* %cond125820822832, %arraydecay1259
  br i1 %cmp1260, label %if.end1265, label %delete.notnull1263

delete.notnull1263:                               ; preds = %if.end1258
  %438 = bitcast i32* %cond125820822832 to i8*
  call void @_ZdaPv(i8* %438) #7
  br label %if.end1265

if.end1265:                                       ; preds = %delete.notnull1263, %if.end1258
  %arraydecay1266 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1267 = icmp eq i32* %cond136826828, %arraydecay1266
  br i1 %cmp1267, label %if.end1272, label %delete.notnull1270

delete.notnull1270:                               ; preds = %if.end1265
  %439 = bitcast i32* %cond136826828 to i8*
  call void @_ZdaPv(i8* %439) #7
  br label %if.end1272

if.end1272:                                       ; preds = %delete.notnull1270, %if.end1265
  %arraydecay1273 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1274 = icmp eq i32* %cond147834, %arraydecay1273
  br i1 %cmp1274, label %if.end1279, label %delete.notnull1277

delete.notnull1277:                               ; preds = %if.end1272
  %440 = bitcast i32* %cond147834 to i8*
  call void @_ZdaPv(i8* %440) #7
  br label %if.end1279

if.end1279:                                       ; preds = %delete.notnull1277, %if.end1272
  %arraydecay1280 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1281 = icmp eq i32* %cond158, %arraydecay1280
  br i1 %cmp1281, label %if.end1286, label %delete.notnull1284

delete.notnull1284:                               ; preds = %if.end1279
  %441 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %441) #7
  br label %if.end1286

if.end1286:                                       ; preds = %delete.notnull1284, %if.end1279
  %conv1287 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1288 = getelementptr inbounds double* %1, i64 22
  %442 = load double* %arrayidx1288, align 8, !tbaa !17
  %add1289 = fadd double %conv1287, %442
  store double %add1289, double* %arrayidx1288, align 8, !tbaa !17
  %arrayidx1290 = getelementptr inbounds double* %1, i64 2
  %443 = bitcast double* %arrayidx1290 to <2 x double>*
  %444 = load <2 x double>* %443, align 8, !tbaa !17
  %445 = fadd <2 x double> %426, %444
  %446 = bitcast double* %arrayidx1290 to <2 x double>*
  store <2 x double> %445, <2 x double>* %446, align 8, !tbaa !17
  %arrayidx1296 = getelementptr inbounds double* %1, i64 4
  %447 = bitcast double* %arrayidx1296 to <2 x double>*
  %448 = load <2 x double>* %447, align 8, !tbaa !17
  %449 = fadd <2 x double> %427, %448
  %450 = bitcast double* %arrayidx1296 to <2 x double>*
  store <2 x double> %449, <2 x double>* %450, align 8, !tbaa !17
  %arrayidx1300 = getelementptr inbounds double* %1, i64 6
  %451 = bitcast double* %arrayidx1300 to <2 x double>*
  %452 = load <2 x double>* %451, align 8, !tbaa !17
  %453 = shufflevector <2 x double> %427, <2 x double> %431, <2 x i32> <i32 0, i32 2>
  %454 = fadd <2 x double> %453, %452
  %455 = bitcast double* %arrayidx1300 to <2 x double>*
  store <2 x double> %454, <2 x double>* %455, align 8, !tbaa !17
  %arrayidx1304 = getelementptr inbounds double* %1, i64 8
  %456 = bitcast double* %arrayidx1304 to <2 x double>*
  %457 = load <2 x double>* %456, align 8, !tbaa !17
  %458 = shufflevector <2 x double> %428, <2 x double> %427, <2 x i32> <i32 0, i32 3>
  %459 = fadd <2 x double> %458, %457
  %460 = bitcast double* %arrayidx1304 to <2 x double>*
  store <2 x double> %459, <2 x double>* %460, align 8, !tbaa !17
  %arrayidx1308 = getelementptr inbounds double* %1, i64 10
  %461 = bitcast double* %arrayidx1308 to <2 x double>*
  %462 = load <2 x double>* %461, align 8, !tbaa !17
  %463 = fadd <2 x double> %428, %462
  %464 = bitcast double* %arrayidx1308 to <2 x double>*
  store <2 x double> %463, <2 x double>* %464, align 8, !tbaa !17
  %465 = bitcast double* %1 to <2 x double>*
  %466 = load <2 x double>* %465, align 8, !tbaa !17
  %467 = fadd <2 x double> %425, %466
  %468 = bitcast double* %1 to <2 x double>*
  store <2 x double> %467, <2 x double>* %468, align 8, !tbaa !17
  %arrayidx1314 = getelementptr inbounds double* %1, i64 12
  %469 = bitcast double* %arrayidx1314 to <2 x double>*
  %470 = load <2 x double>* %469, align 8, !tbaa !17
  %471 = fadd <2 x double> %429, %470
  %472 = bitcast double* %arrayidx1314 to <2 x double>*
  store <2 x double> %471, <2 x double>* %472, align 8, !tbaa !17
  %arrayidx1318 = getelementptr inbounds double* %1, i64 14
  %473 = load double* %arrayidx1318, align 8, !tbaa !17
  %add1319 = fadd double %432, %473
  store double %add1319, double* %arrayidx1318, align 8, !tbaa !17
  %arrayidx1320 = getelementptr inbounds double* %1, i64 15
  %474 = bitcast double* %arrayidx1320 to <2 x double>*
  %475 = load <2 x double>* %474, align 8, !tbaa !17
  %476 = shufflevector <2 x double> %429, <2 x double> %431, <2 x i32> <i32 1, i32 3>
  %477 = fadd <2 x double> %476, %475
  %478 = bitcast double* %arrayidx1320 to <2 x double>*
  store <2 x double> %477, <2 x double>* %478, align 8, !tbaa !17
  %arrayidx1324 = getelementptr inbounds double* %1, i64 17
  %479 = bitcast double* %arrayidx1324 to <2 x double>*
  %480 = load <2 x double>* %479, align 8, !tbaa !17
  %481 = fadd <2 x double> %430, %480
  %482 = bitcast double* %arrayidx1324 to <2 x double>*
  store <2 x double> %481, <2 x double>* %482, align 8, !tbaa !17
  %arrayidx1328 = getelementptr inbounds double* %1, i64 19
  %483 = bitcast double* %arrayidx1328 to <2 x double>*
  %484 = load <2 x double>* %483, align 8, !tbaa !17
  %485 = insertelement <2 x double> undef, double %433, i32 0
  %486 = insertelement <2 x double> %485, double %fullElectVirial_zz.0.lcssa, i32 1
  %487 = fadd <2 x double> %486, %484
  %488 = bitcast double* %arrayidx1328 to <2 x double>*
  store <2 x double> %487, <2 x double>* %488, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1286, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil25calc_pair_merge_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31770 = icmp sgt i32 %13, 0
  br i1 %cmp31770, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30827 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond607609825 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19611823 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv816 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next817, %for.inc ]
  %g.0771 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv816, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0771, 1
  %idxprom41 = sext i32 %g.0771 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond607609825, i64 %idxprom41
  %30 = trunc i64 %indvars.iv816 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0771, %for.body ]
  %indvars.iv.next817 = add nuw nsw i64 %indvars.iv816, 1
  %lftr.wideiv818 = trunc i64 %indvars.iv.next817 to i32
  %exitcond819 = icmp eq i32 %lftr.wideiv818, %13
  br i1 %exitcond819, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond607609825, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond607609825, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa832 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19611822831 = phi i32* [ %cond19611823, %for.end ], [ %cond19611823, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond607609824830 = phi i32* [ %cond607609825, %for.end ], [ %cond607609825, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30826829 = phi i32* [ %cond30827, %for.end ], [ %cond30827, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56764 = icmp sgt i32 %g.0.lcssa832, 0
  br i1 %cmp56764, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75758 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76759 = icmp sgt i32 %12, 0
  %or.cond591760 = and i1 %tobool75758, %cmp76759
  br i1 %or.cond591760, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv812 = phi i64 [ %indvars.iv.next813, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0766 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0765 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond607609824830, i64 %indvars.iv812
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0766, 1
  %idxprom68 = sext i32 %fixg.0766 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19611822831, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0765, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0766, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next813 = add nuw nsw i64 %indvars.iv812, 1
  %lftr.wideiv814 = trunc i64 %indvars.iv.next813 to i32
  %exitcond815 = icmp eq i32 %lftr.wideiv814, %g.0.lcssa832
  br i1 %exitcond815, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv810 = phi i64 [ %indvars.iv.next811, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2761 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv810, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2761
  %indvars.iv.next811 = add nuw nsw i64 %indvars.iv810, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next811 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond591 = and i1 %tobool75, %cmp76
  br i1 %or.cond591, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75758, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond607609824830, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond607609824830 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19611822831, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19611822831 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30826829, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30826829 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19611822831, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19611822831, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2614 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162633 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140619621631 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129615617623629 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151625627 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183733 = icmp sgt i32 %12, 0
  br i1 %cmp183733, label %for.body184.lr.ph, label %for.end1012

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i604 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140619621631 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162633 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151625627 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30826829 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129615617623629 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc1010, %for.body184.lr.ph
  %exclChecksum.0749 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc1010 ]
  %i.1736 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc1011, %for.inc1010 ]
  %pairlistindex.0735 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc1010 ]
  %pairCount.0734 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc1010 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %275, %for.inc1010 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %276, %for.inc1010 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %277, %for.inc1010 ]
  %idxprom185 = sext i32 %i.1736 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i635 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i635, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i635, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i635, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0734
  %cmp218 = icmp sge i32 %pairCount.0734, %div
  %cmp220 = icmp slt i32 %pairCount.0734, %div181
  %or.cond593 = and i1 %cmp218, %cmp220
  br i1 %or.cond593, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1736, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc1010

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0734, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19611822831, i32* %cond607609824830
  %cond243 = select i1 %75, i32 %fixg.2614, i32 %g.0.lcssa832
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30826829, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div588 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div588 to i32
  %cmp289646 = icmp sgt i32 %conv287, 0
  br i1 %cmp289646, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv778 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next779, %cond.end310 ]
  %pli.0648 = phi i32* [ %cond129615617623629, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30826829, i64 %indvars.iv778
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp589590 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp589590, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0648, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0648, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0648, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0648, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0648, i64 %cond311
  %indvars.iv.next779 = add nuw nsw i64 %indvars.iv778, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next779 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129615617623629, %land.end ], [ %cond129615617623629, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328585 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328585 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext586 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext586, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129615617623629, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129615617623629, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1736
  br label %for.inc1010

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0734, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0735, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  %bf.load369.pre = load i32* %64, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load369.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %93 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %94 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %94 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  %bf.clear370 = and i32 %bf.load369.pre, 4194303
  %idxprom.i603636 = zext i32 %bf.clear370 to i64
  %95 = load i32** %atomVdwType.i604, align 8, !tbaa !64
  %arrayidx.i605 = getelementptr inbounds i32* %95, i64 %idxprom.i603636
  %96 = load i32* %arrayidx.i605, align 4, !tbaa !11
  %97 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %98 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv372 = shl i32 %96, 1
  %mul.i = and i32 %conv372, 131070
  %mul2.i = mul i32 %mul.i, %98
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp378673 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %93, label %for.cond377.preheader, label %if.else439

for.cond377.preheader:                            ; preds = %land.end362
  br i1 %cmp378673, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv789 = phi i64 [ %indvars.iv.next790, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1677 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0749, %for.cond377.preheader ]
  %pli374.0676 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140619621631, %for.cond377.preheader ]
  %plin.0675 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151625627, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129615617623629, i64 %indvars.iv789
  %99 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %99 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %100 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %69, %100
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %101 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %70, %101
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %102 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %71, %102
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %103 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %103, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond594 = or i1 %tobool413, %cmp415
  br i1 %or.cond594, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1677, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1677, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %66
  %cmp429 = icmp sgt i32 %bf.clear426, %67
  %or.cond595 = or i1 %cmp427, %cmp429
  br i1 %or.cond595, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0676, i64 1
  store i32 %99, i32* %pli374.0676, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0675, i64 1
  store i32 %99, i32* %plin.0675, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0675, %for.body379 ], [ %plin.0675, %land.lhs.true418 ], [ %plin.0675, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0676, %for.body379 ], [ %pli374.0676, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0676, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1677, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next790 = add nuw nsw i64 %indvars.iv789, 1
  %lftr.wideiv791 = trunc i64 %indvars.iv.next790 to i32
  %exitcond792 = icmp eq i32 %lftr.wideiv791, %pairlistindex.1
  br i1 %exitcond792, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362
  br i1 %cmp378673, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %104 = load i32* %cond129615617623629, align 4, !tbaa !11
  %idxprom447 = sext i32 %104 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %105 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %106 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %107 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %107, %if.then442 ], [ %113, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %106, %if.then442 ], [ %112, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %105, %if.then442 ], [ %111, %if.else507 ]
  %j2443.0.ph = phi i32 [ %104, %if.then442 ], [ %110, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151625627, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140619621631, %if.then442 ], [ %pli374.2.ph656, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0749, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer649

while.cond467.outer649:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph650 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph651 = phi double [ %113, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph652 = phi double [ %112, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph653 = phi double [ %111, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph654 = phi i32 [ %110, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph655 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph656 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph657 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer658

while.cond467.outer658:                           ; preds = %land.lhs.true498, %while.cond467.outer649
  %idxprom447.pn.ph659 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph650, %while.cond467.outer649 ]
  %p_j_z456.0.ph660 = phi double [ %113, %land.lhs.true498 ], [ %p_j_z456.0.ph651, %while.cond467.outer649 ]
  %p_j_y451.0.ph661 = phi double [ %112, %land.lhs.true498 ], [ %p_j_y451.0.ph652, %while.cond467.outer649 ]
  %p_j_x446.0.ph662 = phi double [ %111, %land.lhs.true498 ], [ %p_j_x446.0.ph653, %while.cond467.outer649 ]
  %j2443.0.ph663 = phi i32 [ %110, %land.lhs.true498 ], [ %j2443.0.ph654, %while.cond467.outer649 ]
  %k440.0.ph664 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph655, %while.cond467.outer649 ]
  %exclChecksum.4.ph665 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph657, %while.cond467.outer649 ]
  %108 = sext i32 %k440.0.ph664 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer658
  %indvars.iv785 = phi i64 [ %108, %while.cond467.outer658 ], [ %indvars.iv.next786, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph659, %while.cond467.outer658 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph660, %while.cond467.outer658 ], [ %113, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph661, %while.cond467.outer658 ], [ %112, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph662, %while.cond467.outer658 ], [ %111, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph663, %while.cond467.outer658 ], [ %110, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph664, %while.cond467.outer658 ], [ %inc470, %while.body469 ]
  %109 = trunc i64 %indvars.iv785 to i32
  %cmp468 = icmp slt i32 %109, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next786 = add nsw i64 %indvars.iv785, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129615617623629, i64 %indvars.iv.next786
  %110 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %69, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %110 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %111 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %70, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %112 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %71, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %113 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph665, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer658

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph665, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %66
  %cmp504 = icmp sgt i32 %atom2461.0, %67
  %or.cond596 = or i1 %cmp502, %cmp504
  br i1 %or.cond596, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph656, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph656, align 4, !tbaa !11
  br label %while.cond467.outer649

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %plin.4 = phi i32* [ %cond151625627, %if.else439 ], [ %cond151625627, %for.cond377.preheader ], [ %plin.2.ph, %while.cond467 ], [ %plin.1, %for.inc436 ]
  %pli374.4 = phi i32* [ %cond140619621631, %if.else439 ], [ %cond140619621631, %for.cond377.preheader ], [ %pli374.2.ph656, %while.cond467 ], [ %pli374.1, %for.inc436 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0749, %if.else439 ], [ %exclChecksum.0749, %for.cond377.preheader ], [ %exclChecksum.4.ph665, %while.cond467 ], [ %exclChecksum.3, %for.inc436 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522541 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522541 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext583 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext583, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140619621631, i64 %idxprom527
  %114 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140619621631, i64 %idxprom529
  store i32 %114, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534681 = icmp sgt i32 %conv523, 0
  br i1 %cmp534681, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %115 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %116 = lshr i64 %115, 2
  %117 = trunc i64 %116 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv793 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next794, %for.inc553 ]
  %plin.5685 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0684 = phi i32* [ %cond162633, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0683 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140619621631, i64 %indvars.iv793
  %118 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %118 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %119 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %119, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545582 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545582, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %120 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %120 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5685, i64 1
  store i32 %118, i32* %plin.5685, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0684, i64 1
  store i32 %118, i32* %plix.0684, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0683, i64 1
  store i32 %118, i32* %plim.0683, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0683, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0683, %sw.bb549 ], [ %plim.0683, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0684, %for.body535 ], [ %plix.0684, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0684, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5685, %for.body535 ], [ %plin.5685, %sw.bb551 ], [ %plin.5685, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next794 = add nuw nsw i64 %indvars.iv793, 1
  %lftr.wideiv795 = trunc i64 %indvars.iv.next794 to i32
  %exitcond796 = icmp eq i32 %lftr.wideiv795, %117
  br i1 %exitcond796, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162633, %for.cond533.preheader ], [ %cond162633, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559 = ashr exact i64 %sub.ptr.sub558, 2
  %conv560542 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560542
  %add568 = add i64 %add561, %sub.ptr.div559
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573544 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573544 to i32
  %cmp576689 = icmp sgt i32 %conv574, 0
  br i1 %cmp576689, label %for.body577.lr.ph, label %for.end703

for.body577.lr.ph:                                ; preds = %for.end555
  %x681 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y690 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z697 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %121 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %122 = lshr i64 %121, 2
  %123 = trunc i64 %122 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577.for.body577_crit_edge, %for.body577.lr.ph
  %124 = phi i32* [ %95, %for.body577.lr.ph ], [ %.pre, %for.body577.for.body577_crit_edge ]
  %indvars.iv797 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next798, %for.body577.for.body577_crit_edge ]
  %125 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %153, %for.body577.for.body577_crit_edge ]
  %126 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %160, %for.body577.for.body577_crit_edge ]
  %127 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %171, %for.body577.for.body577_crit_edge ]
  %arrayidx580 = getelementptr inbounds i32* %cond151625627, i64 %indvars.iv797
  %128 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %128 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %129 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %69, %129
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %130 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %70, %130
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %131 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %71, %131
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %132 = bitcast float %conv598 to i32
  %shr = ashr i32 %132, 17
  %add600 = add nsw i32 %shr, %mul
  %id601 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 2
  %133 = bitcast [4 x i8]* %id601 to i32*
  %bf.load602 = load i32* %133, align 4
  %bf.clear603 = and i32 %bf.load602, 4194303
  %idxprom.i599639 = zext i32 %bf.clear603 to i64
  %arrayidx.i601 = getelementptr inbounds i32* %124, i64 %idxprom.i599639
  %134 = load i32* %arrayidx.i601, align 4, !tbaa !11
  %conv.i602 = zext i32 %134 to i64
  %conv605 = shl nuw nsw i64 %conv.i602, 1
  %mul606 = and i64 %conv605, 131070
  %mul609 = shl nsw i32 %add600, 4
  %idx.ext610 = sext i32 %mul609 to i64
  %and = and i32 %132, -131072
  %charge624 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %135 = load float* %charge624, align 4, !tbaa !63
  %conv625 = fpext float %135 to double
  %mul626 = fmul double %mul367, %conv625
  %136 = bitcast i32 %and to float
  %conv628 = fpext float %136 to double
  %sub629 = fsub double %add597, %conv628
  %add.ptr.i.sum640 = add i64 %mul606, %idx.ext.i
  %A631 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum640, i32 0
  %137 = load double* %A631, align 8, !tbaa !69
  %mul632 = fmul double %8, %137
  %B634 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum640, i32 1
  %138 = load double* %B634, align 8, !tbaa !71
  %mul635 = fmul double %8, %138
  %add.ptr611.sum573 = or i64 %idx.ext610, 3
  %arrayidx639 = getelementptr inbounds double* %7, i64 %add.ptr611.sum573
  %139 = load double* %arrayidx639, align 8, !tbaa !17
  %mul640 = fmul double %mul632, %139
  %add.ptr616.sum574 = or i64 %idx.ext610, 7
  %arrayidx641 = getelementptr inbounds double* %7, i64 %add.ptr616.sum574
  %140 = load double* %arrayidx641, align 8, !tbaa !17
  %mul642 = fmul double %mul635, %140
  %sub643 = fsub double %mul640, %mul642
  %add.ptr611.sum575 = or i64 %idx.ext610, 2
  %arrayidx644 = getelementptr inbounds double* %7, i64 %add.ptr611.sum575
  %141 = load double* %arrayidx644, align 8, !tbaa !17
  %mul645 = fmul double %mul632, %141
  %add.ptr616.sum576 = or i64 %idx.ext610, 6
  %arrayidx646 = getelementptr inbounds double* %7, i64 %add.ptr616.sum576
  %142 = load double* %arrayidx646, align 8, !tbaa !17
  %mul647 = fmul double %mul635, %142
  %sub648 = fsub double %mul645, %mul647
  %add.ptr611.sum577 = or i64 %idx.ext610, 1
  %arrayidx649 = getelementptr inbounds double* %7, i64 %add.ptr611.sum577
  %143 = load double* %arrayidx649, align 8, !tbaa !17
  %mul650 = fmul double %mul632, %143
  %add.ptr616.sum578 = or i64 %idx.ext610, 5
  %arrayidx651 = getelementptr inbounds double* %7, i64 %add.ptr616.sum578
  %144 = load double* %arrayidx651, align 8, !tbaa !17
  %mul652 = fmul double %mul635, %144
  %sub653 = fsub double %mul650, %mul652
  %add.ptr621.sum579 = or i64 %idx.ext610, 9
  %arrayidx654 = getelementptr inbounds double* %7, i64 %add.ptr621.sum579
  %145 = load double* %arrayidx654, align 8, !tbaa !17
  %add.ptr621.sum580 = or i64 %idx.ext610, 10
  %arrayidx655 = getelementptr inbounds double* %7, i64 %add.ptr621.sum580
  %146 = load double* %arrayidx655, align 8, !tbaa !17
  %add.ptr621.sum581 = or i64 %idx.ext610, 11
  %arrayidx656 = getelementptr inbounds double* %7, i64 %add.ptr621.sum581
  %147 = load double* %arrayidx656, align 8, !tbaa !17
  %mul657 = fmul double %mul626, %147
  %mul658 = fmul double %mul626, %146
  %mul659 = fmul double %mul626, %145
  %add661 = fadd double %sub643, %mul657
  %add662 = fadd double %sub648, %mul658
  %add663 = fadd double %mul659, %sub653
  %mul665 = fmul double %sub629, 3.000000e+00
  %mul666 = fmul double %mul665, %add661
  %mul667 = fmul double %add662, 2.000000e+00
  %add668 = fadd double %mul667, %mul666
  %mul669 = fmul double %sub629, %add668
  %add670 = fadd double %add663, %mul669
  %mul671 = fmul double %add670, -2.000000e+00
  %mul674 = fmul double %sub585, %mul671
  %148 = insertelement <2 x double> undef, double %sub585, i32 0
  %149 = insertelement <2 x double> %148, double %sub590, i32 1
  %150 = insertelement <2 x double> undef, double %mul674, i32 0
  %151 = insertelement <2 x double> %150, double %mul674, i32 1
  %152 = fmul <2 x double> %149, %151
  %153 = fadd <2 x double> %125, %152
  %154 = load double* %x681, align 8, !tbaa !72
  %add682 = fadd double %154, %mul674
  store double %add682, double* %x681, align 8, !tbaa !72
  %x683 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul685 = fmul double %sub590, %mul671
  %155 = insertelement <2 x double> undef, double %sub590, i32 0
  %156 = insertelement <2 x double> %155, double %sub595, i32 1
  %157 = insertelement <2 x double> undef, double %mul685, i32 0
  %158 = insertelement <2 x double> %157, double %mul685, i32 1
  %159 = fmul <2 x double> %156, %158
  %160 = fadd <2 x double> %126, %159
  %161 = load double* %y690, align 8, !tbaa !73
  %add691 = fadd double %161, %mul685
  store double %add691, double* %y690, align 8, !tbaa !73
  %162 = bitcast double* %x683 to <2 x double>*
  %163 = load <2 x double>* %162, align 8, !tbaa !17
  %164 = insertelement <2 x double> %150, double %mul685, i32 1
  %165 = fsub <2 x double> %163, %164
  %166 = bitcast double* %x683 to <2 x double>*
  store <2 x double> %165, <2 x double>* %166, align 8, !tbaa !17
  %mul694 = fmul double %sub595, %mul671
  %167 = insertelement <2 x double> undef, double %sub595, i32 0
  %168 = insertelement <2 x double> %167, double %sub595, i32 1
  %169 = insertelement <2 x double> %150, double %mul694, i32 1
  %170 = fmul <2 x double> %168, %169
  %171 = fadd <2 x double> %127, %170
  %172 = load double* %z697, align 8, !tbaa !74
  %add698 = fadd double %172, %mul694
  store double %add698, double* %z697, align 8, !tbaa !74
  %z699 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %173 = load double* %z699, align 8, !tbaa !74
  %sub700 = fsub double %173, %mul694
  store double %sub700, double* %z699, align 8, !tbaa !74
  %indvars.iv.next798 = add nuw nsw i64 %indvars.iv797, 1
  %lftr.wideiv799 = trunc i64 %indvars.iv.next798 to i32
  %exitcond800 = icmp eq i32 %lftr.wideiv799, %123
  br i1 %exitcond800, label %for.end703, label %for.body577.for.body577_crit_edge

for.body577.for.body577_crit_edge:                ; preds = %for.body577
  %.pre = load i32** %atomVdwType.i604, align 8, !tbaa !64
  br label %for.body577

for.end703:                                       ; preds = %for.body577, %for.end555
  %174 = phi <2 x double> [ %61, %for.end555 ], [ %153, %for.body577 ]
  %175 = phi <2 x double> [ %62, %for.end555 ], [ %160, %for.body577 ]
  %176 = phi <2 x double> [ %63, %for.end555 ], [ %171, %for.body577 ]
  %conv708 = trunc i64 %sub.ptr.div566 to i32
  %cmp710703 = icmp sgt i32 %conv708, 0
  br i1 %cmp710703, label %for.body711.lr.ph, label %for.end885

for.body711.lr.ph:                                ; preds = %for.end703
  %x861 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y871 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z879 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body711

for.body711:                                      ; preds = %for.body711, %for.body711.lr.ph
  %indvars.iv801 = phi i64 [ 0, %for.body711.lr.ph ], [ %indvars.iv.next802, %for.body711 ]
  %177 = phi <2 x double> [ %174, %for.body711.lr.ph ], [ %209, %for.body711 ]
  %178 = phi <2 x double> [ %175, %for.body711.lr.ph ], [ %216, %for.body711 ]
  %179 = phi <2 x double> [ %176, %for.body711.lr.ph ], [ %227, %for.body711 ]
  %arrayidx714 = getelementptr inbounds i32* %cond173, i64 %indvars.iv801
  %180 = load i32* %arrayidx714, align 4, !tbaa !11
  %idx.ext716 = sext i32 %180 to i64
  %x720 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 0
  %181 = load double* %x720, align 8, !tbaa !59
  %sub721 = fsub double %69, %181
  %mul723 = fmul double %sub721, %sub721
  %y726 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 1
  %182 = load double* %y726, align 8, !tbaa !61
  %sub727 = fsub double %70, %182
  %mul728 = fmul double %sub727, %sub727
  %add729 = fadd double %mul723, %mul728
  %z732 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 0, i32 2
  %183 = load double* %z732, align 8, !tbaa !62
  %sub733 = fsub double %71, %183
  %mul734 = fmul double %sub733, %sub733
  %add735 = fadd double %add729, %mul734
  %conv737 = fptrunc double %add735 to float
  %184 = bitcast float %conv737 to i32
  %shr741 = ashr i32 %184, 17
  %add742 = add nsw i32 %shr741, %mul
  %id744 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 2
  %185 = bitcast [4 x i8]* %id744 to i32*
  %bf.load745 = load i32* %185, align 4
  %bf.clear746 = and i32 %bf.load745, 4194303
  %idxprom.i597637 = zext i32 %bf.clear746 to i64
  %186 = load i32** %atomVdwType.i604, align 8, !tbaa !64
  %arrayidx.i598 = getelementptr inbounds i32* %186, i64 %idxprom.i597637
  %187 = load i32* %arrayidx.i598, align 4, !tbaa !11
  %conv.i = zext i32 %187 to i64
  %conv748 = shl nuw nsw i64 %conv.i, 1
  %mul749 = and i64 %conv748, 131070
  %add.ptr751.sum554 = or i64 %mul749, 1
  %mul754 = shl nsw i32 %add742, 4
  %idx.ext755 = sext i32 %mul754 to i64
  %and774 = and i32 %184, -131072
  %charge776 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext716, i32 1
  %188 = load float* %charge776, align 4, !tbaa !63
  %conv777 = fpext float %188 to double
  %mul778 = fmul double %mul367, %conv777
  %189 = bitcast i32 %and774 to float
  %conv781 = fpext float %189 to double
  %sub782 = fsub double %add735, %conv781
  %add.ptr.i.sum = add i64 %add.ptr751.sum554, %idx.ext.i
  %A784 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum, i32 0
  %190 = load double* %A784, align 8, !tbaa !69
  %mul785 = fmul double %8, %190
  %B787 = getelementptr inbounds %"struct.LJTable::TableEntry"* %97, i64 %add.ptr.i.sum, i32 1
  %191 = load double* %B787, align 8, !tbaa !71
  %mul788 = fmul double %8, %191
  %add.ptr756.sum557 = or i64 %idx.ext755, 3
  %arrayidx794 = getelementptr inbounds double* %7, i64 %add.ptr756.sum557
  %192 = load double* %arrayidx794, align 8, !tbaa !17
  %mul795 = fmul double %mul785, %192
  %add.ptr763.sum558 = or i64 %idx.ext755, 7
  %arrayidx796 = getelementptr inbounds double* %7, i64 %add.ptr763.sum558
  %193 = load double* %arrayidx796, align 8, !tbaa !17
  %mul797 = fmul double %mul788, %193
  %sub798 = fsub double %mul795, %mul797
  %add.ptr756.sum559 = or i64 %idx.ext755, 2
  %arrayidx800 = getelementptr inbounds double* %7, i64 %add.ptr756.sum559
  %194 = load double* %arrayidx800, align 8, !tbaa !17
  %mul801 = fmul double %mul785, %194
  %add.ptr763.sum560 = or i64 %idx.ext755, 6
  %arrayidx802 = getelementptr inbounds double* %7, i64 %add.ptr763.sum560
  %195 = load double* %arrayidx802, align 8, !tbaa !17
  %mul803 = fmul double %mul788, %195
  %sub804 = fsub double %mul801, %mul803
  %add.ptr756.sum561 = or i64 %idx.ext755, 1
  %arrayidx806 = getelementptr inbounds double* %7, i64 %add.ptr756.sum561
  %196 = load double* %arrayidx806, align 8, !tbaa !17
  %mul807 = fmul double %mul785, %196
  %add.ptr763.sum562 = or i64 %idx.ext755, 5
  %arrayidx808 = getelementptr inbounds double* %7, i64 %add.ptr763.sum562
  %197 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = fmul double %mul788, %197
  %sub810 = fsub double %mul807, %mul809
  %add.ptr770.sum563 = or i64 %idx.ext755, 9
  %arrayidx812 = getelementptr inbounds double* %7, i64 %add.ptr770.sum563
  %198 = load double* %arrayidx812, align 8, !tbaa !17
  %add.ptr770.sum564 = or i64 %idx.ext755, 10
  %arrayidx814 = getelementptr inbounds double* %7, i64 %add.ptr770.sum564
  %199 = load double* %arrayidx814, align 8, !tbaa !17
  %add.ptr770.sum565 = or i64 %idx.ext755, 11
  %arrayidx816 = getelementptr inbounds double* %7, i64 %add.ptr770.sum565
  %200 = load double* %arrayidx816, align 8, !tbaa !17
  %add.ptr820.sum567 = or i64 %idx.ext755, 13
  %arrayidx824 = getelementptr inbounds double* %7, i64 %add.ptr820.sum567
  %201 = load double* %arrayidx824, align 8, !tbaa !17
  %mul825 = fmul double %sub, %201
  %sub826 = fsub double %198, %mul825
  %add.ptr820.sum568 = or i64 %idx.ext755, 14
  %arrayidx827 = getelementptr inbounds double* %7, i64 %add.ptr820.sum568
  %202 = load double* %arrayidx827, align 8, !tbaa !17
  %mul828 = fmul double %sub, %202
  %sub829 = fsub double %199, %mul828
  %add.ptr820.sum569 = or i64 %idx.ext755, 15
  %arrayidx830 = getelementptr inbounds double* %7, i64 %add.ptr820.sum569
  %203 = load double* %arrayidx830, align 8, !tbaa !17
  %mul831 = fmul double %sub, %203
  %sub832 = fsub double %200, %mul831
  %mul833 = fmul double %mul778, %sub832
  %mul834 = fmul double %mul778, %sub829
  %mul835 = fmul double %mul778, %sub826
  %add837 = fadd double %sub798, %mul833
  %add838 = fadd double %sub804, %mul834
  %add839 = fadd double %sub810, %mul835
  %mul842 = fmul double %sub782, 3.000000e+00
  %mul843 = fmul double %mul842, %add837
  %mul844 = fmul double %add838, 2.000000e+00
  %add845 = fadd double %mul844, %mul843
  %mul846 = fmul double %sub782, %add845
  %add847 = fadd double %add839, %mul846
  %mul849 = fmul double %add847, -2.000000e+00
  %mul854 = fmul double %sub721, %mul849
  %204 = insertelement <2 x double> undef, double %sub721, i32 0
  %205 = insertelement <2 x double> %204, double %sub727, i32 1
  %206 = insertelement <2 x double> undef, double %mul854, i32 0
  %207 = insertelement <2 x double> %206, double %mul854, i32 1
  %208 = fmul <2 x double> %205, %207
  %209 = fadd <2 x double> %177, %208
  %210 = load double* %x861, align 8, !tbaa !72
  %add862 = fadd double %210, %mul854
  store double %add862, double* %x861, align 8, !tbaa !72
  %x863 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext716, i32 0
  %mul866 = fmul double %sub727, %mul849
  %211 = insertelement <2 x double> undef, double %sub727, i32 0
  %212 = insertelement <2 x double> %211, double %sub733, i32 1
  %213 = insertelement <2 x double> undef, double %mul866, i32 0
  %214 = insertelement <2 x double> %213, double %mul866, i32 1
  %215 = fmul <2 x double> %212, %214
  %216 = fadd <2 x double> %178, %215
  %217 = load double* %y871, align 8, !tbaa !73
  %add872 = fadd double %217, %mul866
  store double %add872, double* %y871, align 8, !tbaa !73
  %218 = bitcast double* %x863 to <2 x double>*
  %219 = load <2 x double>* %218, align 8, !tbaa !17
  %220 = insertelement <2 x double> %206, double %mul866, i32 1
  %221 = fsub <2 x double> %219, %220
  %222 = bitcast double* %x863 to <2 x double>*
  store <2 x double> %221, <2 x double>* %222, align 8, !tbaa !17
  %mul876 = fmul double %sub733, %mul849
  %223 = insertelement <2 x double> undef, double %sub733, i32 0
  %224 = insertelement <2 x double> %223, double %sub733, i32 1
  %225 = insertelement <2 x double> %206, double %mul876, i32 1
  %226 = fmul <2 x double> %224, %225
  %227 = fadd <2 x double> %179, %226
  %228 = load double* %z879, align 8, !tbaa !74
  %add880 = fadd double %228, %mul876
  store double %add880, double* %z879, align 8, !tbaa !74
  %z881 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext716, i32 2
  %229 = load double* %z881, align 8, !tbaa !74
  %sub882 = fsub double %229, %mul876
  store double %sub882, double* %z881, align 8, !tbaa !74
  %indvars.iv.next802 = add nuw nsw i64 %indvars.iv801, 1
  %lftr.wideiv803 = trunc i64 %indvars.iv.next802 to i32
  %exitcond804 = icmp eq i32 %lftr.wideiv803, %conv708
  br i1 %exitcond804, label %for.end885, label %for.body711

for.end885:                                       ; preds = %for.body711, %for.end703
  %230 = phi <2 x double> [ %174, %for.end703 ], [ %209, %for.body711 ]
  %231 = phi <2 x double> [ %175, %for.end703 ], [ %216, %for.body711 ]
  %232 = phi <2 x double> [ %176, %for.end703 ], [ %227, %for.body711 ]
  %conv890 = trunc i64 %sub.ptr.div559 to i32
  %cmp892717 = icmp sgt i32 %conv890, 0
  br i1 %cmp892717, label %for.body893.lr.ph, label %for.inc1010

for.body893.lr.ph:                                ; preds = %for.end885
  %x985 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y995 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z1003 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body893

for.body893:                                      ; preds = %for.body893, %for.body893.lr.ph
  %indvars.iv805 = phi i64 [ 0, %for.body893.lr.ph ], [ %indvars.iv.next806, %for.body893 ]
  %233 = phi <2 x double> [ %230, %for.body893.lr.ph ], [ %254, %for.body893 ]
  %234 = phi <2 x double> [ %231, %for.body893.lr.ph ], [ %261, %for.body893 ]
  %235 = phi <2 x double> [ %232, %for.body893.lr.ph ], [ %272, %for.body893 ]
  %arrayidx896 = getelementptr inbounds i32* %cond162633, i64 %indvars.iv805
  %236 = load i32* %arrayidx896, align 4, !tbaa !11
  %idx.ext898 = sext i32 %236 to i64
  %x902 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext898, i32 0, i32 0
  %237 = load double* %x902, align 8, !tbaa !59
  %sub903 = fsub double %69, %237
  %mul905 = fmul double %sub903, %sub903
  %y908 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext898, i32 0, i32 1
  %238 = load double* %y908, align 8, !tbaa !61
  %sub909 = fsub double %70, %238
  %mul910 = fmul double %sub909, %sub909
  %add911 = fadd double %mul905, %mul910
  %z914 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext898, i32 0, i32 2
  %239 = load double* %z914, align 8, !tbaa !62
  %sub915 = fsub double %71, %239
  %mul916 = fmul double %sub915, %sub915
  %add917 = fadd double %add911, %mul916
  %conv919 = fptrunc double %add917 to float
  %240 = bitcast float %conv919 to i32
  %shr923 = ashr i32 %240, 17
  %add924 = add nsw i32 %shr923, %mul
  %mul926 = shl nsw i32 %add924, 4
  %idx.ext927 = sext i32 %mul926 to i64
  %and933 = and i32 %240, -131072
  %charge935 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext898, i32 1
  %241 = load float* %charge935, align 4, !tbaa !63
  %conv936 = fpext float %241 to double
  %mul937 = fmul double %mul367, %conv936
  %242 = bitcast i32 %and933 to float
  %conv940 = fpext float %242 to double
  %sub941 = fsub double %add917, %conv940
  %add.ptr929.sum546 = or i64 %idx.ext927, 9
  %arrayidx943 = getelementptr inbounds double* %7, i64 %add.ptr929.sum546
  %243 = load double* %arrayidx943, align 8, !tbaa !17
  %add.ptr929.sum547 = or i64 %idx.ext927, 10
  %arrayidx945 = getelementptr inbounds double* %7, i64 %add.ptr929.sum547
  %244 = load double* %arrayidx945, align 8, !tbaa !17
  %add.ptr929.sum548 = or i64 %idx.ext927, 11
  %arrayidx947 = getelementptr inbounds double* %7, i64 %add.ptr929.sum548
  %245 = load double* %arrayidx947, align 8, !tbaa !17
  %add.ptr952.sum550 = or i64 %idx.ext927, 13
  %arrayidx955 = getelementptr inbounds double* %7, i64 %add.ptr952.sum550
  %246 = load double* %arrayidx955, align 8, !tbaa !17
  %sub956 = fsub double %243, %246
  %add.ptr952.sum551 = or i64 %idx.ext927, 14
  %arrayidx957 = getelementptr inbounds double* %7, i64 %add.ptr952.sum551
  %247 = load double* %arrayidx957, align 8, !tbaa !17
  %sub958 = fsub double %244, %247
  %add.ptr952.sum552 = or i64 %idx.ext927, 15
  %arrayidx959 = getelementptr inbounds double* %7, i64 %add.ptr952.sum552
  %248 = load double* %arrayidx959, align 8, !tbaa !17
  %sub960 = fsub double %245, %248
  %mul961 = fmul double %mul937, %sub960
  %mul962 = fmul double %mul937, %sub958
  %mul963 = fmul double %mul937, %sub956
  %mul966 = fmul double %sub941, 3.000000e+00
  %mul967 = fmul double %mul961, %mul966
  %mul968 = fmul double %mul962, 2.000000e+00
  %add969 = fadd double %mul968, %mul967
  %mul970 = fmul double %sub941, %add969
  %add971 = fadd double %mul963, %mul970
  %mul973 = fmul double %add971, -2.000000e+00
  %mul978 = fmul double %sub903, %mul973
  %249 = insertelement <2 x double> undef, double %sub903, i32 0
  %250 = insertelement <2 x double> %249, double %sub909, i32 1
  %251 = insertelement <2 x double> undef, double %mul978, i32 0
  %252 = insertelement <2 x double> %251, double %mul978, i32 1
  %253 = fmul <2 x double> %250, %252
  %254 = fadd <2 x double> %233, %253
  %255 = load double* %x985, align 8, !tbaa !72
  %add986 = fadd double %255, %mul978
  store double %add986, double* %x985, align 8, !tbaa !72
  %x987 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext898, i32 0
  %mul990 = fmul double %sub909, %mul973
  %256 = insertelement <2 x double> undef, double %sub909, i32 0
  %257 = insertelement <2 x double> %256, double %sub915, i32 1
  %258 = insertelement <2 x double> undef, double %mul990, i32 0
  %259 = insertelement <2 x double> %258, double %mul990, i32 1
  %260 = fmul <2 x double> %257, %259
  %261 = fadd <2 x double> %234, %260
  %262 = load double* %y995, align 8, !tbaa !73
  %add996 = fadd double %262, %mul990
  store double %add996, double* %y995, align 8, !tbaa !73
  %263 = bitcast double* %x987 to <2 x double>*
  %264 = load <2 x double>* %263, align 8, !tbaa !17
  %265 = insertelement <2 x double> %251, double %mul990, i32 1
  %266 = fsub <2 x double> %264, %265
  %267 = bitcast double* %x987 to <2 x double>*
  store <2 x double> %266, <2 x double>* %267, align 8, !tbaa !17
  %mul1000 = fmul double %sub915, %mul973
  %268 = insertelement <2 x double> undef, double %sub915, i32 0
  %269 = insertelement <2 x double> %268, double %sub915, i32 1
  %270 = insertelement <2 x double> %251, double %mul1000, i32 1
  %271 = fmul <2 x double> %269, %270
  %272 = fadd <2 x double> %235, %271
  %273 = load double* %z1003, align 8, !tbaa !74
  %add1004 = fadd double %273, %mul1000
  store double %add1004, double* %z1003, align 8, !tbaa !74
  %z1005 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext898, i32 2
  %274 = load double* %z1005, align 8, !tbaa !74
  %sub1006 = fsub double %274, %mul1000
  store double %sub1006, double* %z1005, align 8, !tbaa !74
  %indvars.iv.next806 = add nuw nsw i64 %indvars.iv805, 1
  %lftr.wideiv807 = trunc i64 %indvars.iv.next806 to i32
  %exitcond808 = icmp eq i32 %lftr.wideiv807, %conv890
  br i1 %exitcond808, label %for.inc1010, label %for.body893

for.inc1010:                                      ; preds = %for.body893, %for.end885, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end885 ], [ %pairCount.2, %for.body893 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0735, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end885 ], [ %pairlistindex.1, %for.body893 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1736, %for.end885 ], [ %i.1736, %for.body893 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0749, %if.then221 ], [ %exclChecksum.0749, %cond.end349 ], [ %conv569, %for.end885 ], [ %conv569, %for.body893 ]
  %275 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %230, %for.end885 ], [ %254, %for.body893 ]
  %276 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %231, %for.end885 ], [ %261, %for.body893 ]
  %277 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %232, %for.end885 ], [ %272, %for.body893 ]
  %inc1011 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc1011, %12
  br i1 %cmp183, label %for.body184, label %for.end1012

for.end1012:                                      ; preds = %for.inc1010, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1010 ]
  %278 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %275, %for.inc1010 ]
  %279 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %276, %for.inc1010 ]
  %280 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %277, %for.inc1010 ]
  %281 = extractelement <2 x double> %280, i32 1
  %arraydecay1013 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1014 = icmp eq i32* %cond607609824830, %arraydecay1013
  br i1 %cmp1014, label %if.end1019, label %delete.notnull1017

delete.notnull1017:                               ; preds = %for.end1012
  %282 = bitcast i32* %cond607609824830 to i8*
  call void @_ZdaPv(i8* %282) #7
  br label %if.end1019

if.end1019:                                       ; preds = %delete.notnull1017, %for.end1012
  %arraydecay1020 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1021 = icmp eq i32* %cond19611822831, %arraydecay1020
  br i1 %cmp1021, label %if.end1026, label %delete.notnull1024

delete.notnull1024:                               ; preds = %if.end1019
  %283 = bitcast i32* %cond19611822831 to i8*
  call void @_ZdaPv(i8* %283) #7
  br label %if.end1026

if.end1026:                                       ; preds = %delete.notnull1024, %if.end1019
  %arraydecay1027 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1028 = icmp eq i32* %cond30826829, %arraydecay1027
  br i1 %cmp1028, label %if.end1033, label %delete.notnull1031

delete.notnull1031:                               ; preds = %if.end1026
  %284 = bitcast i32* %cond30826829 to i8*
  call void @_ZdaPv(i8* %284) #7
  br label %if.end1033

if.end1033:                                       ; preds = %delete.notnull1031, %if.end1026
  %arraydecay1034 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1035 = icmp eq i32* %cond129615617623629, %arraydecay1034
  br i1 %cmp1035, label %if.end1040, label %delete.notnull1038

delete.notnull1038:                               ; preds = %if.end1033
  %285 = bitcast i32* %cond129615617623629 to i8*
  call void @_ZdaPv(i8* %285) #7
  br label %if.end1040

if.end1040:                                       ; preds = %delete.notnull1038, %if.end1033
  %arraydecay1041 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1042 = icmp eq i32* %cond140619621631, %arraydecay1041
  br i1 %cmp1042, label %if.end1047, label %delete.notnull1045

delete.notnull1045:                               ; preds = %if.end1040
  %286 = bitcast i32* %cond140619621631 to i8*
  call void @_ZdaPv(i8* %286) #7
  br label %if.end1047

if.end1047:                                       ; preds = %delete.notnull1045, %if.end1040
  %arraydecay1048 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1049 = icmp eq i32* %cond151625627, %arraydecay1048
  br i1 %cmp1049, label %if.end1054, label %delete.notnull1052

delete.notnull1052:                               ; preds = %if.end1047
  %287 = bitcast i32* %cond151625627 to i8*
  call void @_ZdaPv(i8* %287) #7
  br label %if.end1054

if.end1054:                                       ; preds = %delete.notnull1052, %if.end1047
  %arraydecay1055 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1056 = icmp eq i32* %cond162633, %arraydecay1055
  br i1 %cmp1056, label %if.end1061, label %delete.notnull1059

delete.notnull1059:                               ; preds = %if.end1054
  %288 = bitcast i32* %cond162633 to i8*
  call void @_ZdaPv(i8* %288) #7
  br label %if.end1061

if.end1061:                                       ; preds = %delete.notnull1059, %if.end1054
  %arraydecay1062 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1063 = icmp eq i32* %cond173, %arraydecay1062
  br i1 %cmp1063, label %if.end1068, label %delete.notnull1066

delete.notnull1066:                               ; preds = %if.end1061
  %289 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %289) #7
  br label %if.end1068

if.end1068:                                       ; preds = %delete.notnull1066, %if.end1061
  %conv1069 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1070 = getelementptr inbounds double* %1, i64 22
  %290 = load double* %arrayidx1070, align 8, !tbaa !17
  %add1071 = fadd double %conv1069, %290
  store double %add1071, double* %arrayidx1070, align 8, !tbaa !17
  %arrayidx1072 = getelementptr inbounds double* %1, i64 12
  %291 = bitcast double* %arrayidx1072 to <2 x double>*
  %292 = load <2 x double>* %291, align 8, !tbaa !17
  %293 = fadd <2 x double> %278, %292
  %294 = bitcast double* %arrayidx1072 to <2 x double>*
  store <2 x double> %293, <2 x double>* %294, align 8, !tbaa !17
  %arrayidx1076 = getelementptr inbounds double* %1, i64 14
  %295 = bitcast double* %arrayidx1076 to <2 x double>*
  %296 = load <2 x double>* %295, align 8, !tbaa !17
  %297 = shufflevector <2 x double> %280, <2 x double> %278, <2 x i32> <i32 0, i32 3>
  %298 = fadd <2 x double> %297, %296
  %299 = bitcast double* %arrayidx1076 to <2 x double>*
  store <2 x double> %298, <2 x double>* %299, align 8, !tbaa !17
  %arrayidx1080 = getelementptr inbounds double* %1, i64 16
  %300 = bitcast double* %arrayidx1080 to <2 x double>*
  %301 = load <2 x double>* %300, align 8, !tbaa !17
  %302 = fadd <2 x double> %279, %301
  %303 = bitcast double* %arrayidx1080 to <2 x double>*
  store <2 x double> %302, <2 x double>* %303, align 8, !tbaa !17
  %arrayidx1084 = getelementptr inbounds double* %1, i64 18
  %304 = bitcast double* %arrayidx1084 to <2 x double>*
  %305 = load <2 x double>* %304, align 8, !tbaa !17
  %306 = shufflevector <2 x double> %280, <2 x double> %279, <2 x i32> <i32 0, i32 3>
  %307 = fadd <2 x double> %306, %305
  %308 = bitcast double* %arrayidx1084 to <2 x double>*
  store <2 x double> %307, <2 x double>* %308, align 8, !tbaa !17
  %arrayidx1088 = getelementptr inbounds double* %1, i64 20
  %309 = load double* %arrayidx1088, align 8, !tbaa !17
  %add1089 = fadd double %281, %309
  store double %add1089, double* %arrayidx1088, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1068, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil32calc_pair_energy_merge_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31828 = icmp sgt i32 %13, 0
  br i1 %cmp31828, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30885 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond649651883 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19653881 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv874 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next875, %for.inc ]
  %g.0829 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv874, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0829, 1
  %idxprom41 = sext i32 %g.0829 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond649651883, i64 %idxprom41
  %30 = trunc i64 %indvars.iv874 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0829, %for.body ]
  %indvars.iv.next875 = add nuw nsw i64 %indvars.iv874, 1
  %lftr.wideiv876 = trunc i64 %indvars.iv.next875 to i32
  %exitcond877 = icmp eq i32 %lftr.wideiv876, %13
  br i1 %exitcond877, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond649651883, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond649651883, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa890 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19653880889 = phi i32* [ %cond19653881, %for.end ], [ %cond19653881, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond649651882888 = phi i32* [ %cond649651883, %for.end ], [ %cond649651883, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30884887 = phi i32* [ %cond30885, %for.end ], [ %cond30885, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56822 = icmp sgt i32 %g.0.lcssa890, 0
  br i1 %cmp56822, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75816 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76817 = icmp sgt i32 %12, 0
  %or.cond633818 = and i1 %tobool75816, %cmp76817
  br i1 %or.cond633818, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv870 = phi i64 [ %indvars.iv.next871, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0824 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0823 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond649651882888, i64 %indvars.iv870
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0824, 1
  %idxprom68 = sext i32 %fixg.0824 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19653880889, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0823, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0824, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next871 = add nuw nsw i64 %indvars.iv870, 1
  %lftr.wideiv872 = trunc i64 %indvars.iv.next871 to i32
  %exitcond873 = icmp eq i32 %lftr.wideiv872, %g.0.lcssa890
  br i1 %exitcond873, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv868 = phi i64 [ %indvars.iv.next869, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2819 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv868, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2819
  %indvars.iv.next869 = add nuw nsw i64 %indvars.iv868, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next869 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond633 = and i1 %tobool75, %cmp76
  br i1 %or.cond633, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75816, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond649651882888, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond649651882888 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19653880889, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19653880889 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30884887, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30884887 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19653880889, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19653880889, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2656 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162675 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140661663673 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129657659665671 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151667669 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183785 = icmp sgt i32 %12, 0
  br i1 %cmp183785, label %for.body184.lr.ph, label %for.end1050

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i646 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140661663673 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162675 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151667669 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30884887 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129657659665671 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc1048, %for.body184.lr.ph
  %exclChecksum.0805 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc1048 ]
  %i.1788 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc1049, %for.inc1048 ]
  %pairlistindex.0787 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc1048 ]
  %pairCount.0786 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc1048 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %324, %for.inc1048 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %325, %for.inc1048 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %326, %for.inc1048 ]
  %64 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %327, %for.inc1048 ]
  %idxprom185 = sext i32 %i.1788 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %65 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %65, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i677 = zext i32 %bf.clear188 to i64
  %66 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i677, i32 0
  %67 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i677, i32 1
  %68 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %66, i64 %idxprom.i677, i32 2
  %69 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %67 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %70 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %71 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %72 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %73 = and i32 %bf.load187, 62914560
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0786
  %cmp218 = icmp sge i32 %pairCount.0786, %div
  %cmp220 = icmp slt i32 %pairCount.0786, %div181
  %or.cond635 = and i1 %cmp218, %cmp220
  br i1 %or.cond635, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1788, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc1048

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0786, %if.then205 ], [ %add217, %if.then211 ]
  %75 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %75, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %76 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %76, i32* %cond19653880889, i32* %cond649651882888
  %cond243 = select i1 %76, i32 %fixg.2656, i32 %g.0.lcssa890
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %77 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %77 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %78 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %79 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %80 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %80, %if.then245 ], [ %86, %if.then285 ]
  %p_j_y.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_x.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %j2.0.ph = phi i32 [ %77, %if.then245 ], [ %83, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30884887, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %81 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %81, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %86, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %82 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %82, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %83 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %70, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %83 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %84 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %71, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %85 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %72, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %86 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div630 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div630 to i32
  %cmp289688 = icmp sgt i32 %conv287, 0
  br i1 %cmp289688, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %87 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %88 = lshr i64 %87, 2
  %89 = trunc i64 %88 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv836 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next837, %cond.end310 ]
  %pli.0690 = phi i32* [ %cond129657659665671, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30884887, i64 %indvars.iv836
  %90 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %90 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %91 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %91, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp631632 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp631632, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %90, i32* %pli.0690, align 4, !tbaa !11
  %add313 = add nsw i32 %90, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0690, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %90, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0690, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %90, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0690, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0690, i64 %cond311
  %indvars.iv.next837 = add nuw nsw i64 %indvars.iv836, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next837 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129657659665671, %land.end ], [ %cond129657659665671, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328627 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328627 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext628 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext628, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129657659665671, i64 %idxprom333
  %92 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129657659665671, i64 %idxprom335
  store i32 %92, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %65, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1788
  br label %for.inc1048

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0786, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0787, %for.body184 ]
  %93 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %93, 0
  %bf.load369.pre = load i32* %65, align 4
  br i1 %tobool355, label %land.end362, label %land.rhs356

land.rhs356:                                      ; preds = %if.end354
  %bf.clear360 = and i32 %bf.load369.pre, 67108864
  %tobool361 = icmp ne i32 %bf.clear360, 0
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %if.end354
  %94 = phi i1 [ %tobool361, %land.rhs356 ], [ false, %if.end354 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %95 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %95 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  %bf.clear370 = and i32 %bf.load369.pre, 4194303
  %idxprom.i645678 = zext i32 %bf.clear370 to i64
  %96 = load i32** %atomVdwType.i646, align 8, !tbaa !64
  %arrayidx.i647 = getelementptr inbounds i32* %96, i64 %idxprom.i645678
  %97 = load i32* %arrayidx.i647, align 4, !tbaa !11
  %98 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %99 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv372 = shl i32 %97, 1
  %mul.i = and i32 %conv372, 131070
  %mul2.i = mul i32 %mul.i, %99
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp378715 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %94, label %for.cond377.preheader, label %if.else439

for.cond377.preheader:                            ; preds = %land.end362
  br i1 %cmp378715, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv847 = phi i64 [ %indvars.iv.next848, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1719 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0805, %for.cond377.preheader ]
  %pli374.0718 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140661663673, %for.cond377.preheader ]
  %plin.0717 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151667669, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129657659665671, i64 %indvars.iv847
  %100 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %100 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %101 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %70, %101
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %102 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %71, %102
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %103 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %72, %103
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %104 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %104, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond636 = or i1 %tobool413, %cmp415
  br i1 %or.cond636, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1719, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1719, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %67
  %cmp429 = icmp sgt i32 %bf.clear426, %68
  %or.cond637 = or i1 %cmp427, %cmp429
  br i1 %or.cond637, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0718, i64 1
  store i32 %100, i32* %pli374.0718, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0717, i64 1
  store i32 %100, i32* %plin.0717, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0717, %for.body379 ], [ %plin.0717, %land.lhs.true418 ], [ %plin.0717, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0718, %for.body379 ], [ %pli374.0718, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0718, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1719, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next848 = add nuw nsw i64 %indvars.iv847, 1
  %lftr.wideiv849 = trunc i64 %indvars.iv.next848 to i32
  %exitcond850 = icmp eq i32 %lftr.wideiv849, %pairlistindex.1
  br i1 %exitcond850, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362
  br i1 %cmp378715, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %105 = load i32* %cond129657659665671, align 4, !tbaa !11
  %idxprom447 = sext i32 %105 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %106 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %107 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %108 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %108, %if.then442 ], [ %114, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %107, %if.then442 ], [ %113, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %106, %if.then442 ], [ %112, %if.else507 ]
  %j2443.0.ph = phi i32 [ %105, %if.then442 ], [ %111, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151667669, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140661663673, %if.then442 ], [ %pli374.2.ph698, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0805, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer691

while.cond467.outer691:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph692 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph693 = phi double [ %114, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph694 = phi double [ %113, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph695 = phi double [ %112, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph696 = phi i32 [ %111, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph697 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph698 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph699 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer700

while.cond467.outer700:                           ; preds = %land.lhs.true498, %while.cond467.outer691
  %idxprom447.pn.ph701 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph692, %while.cond467.outer691 ]
  %p_j_z456.0.ph702 = phi double [ %114, %land.lhs.true498 ], [ %p_j_z456.0.ph693, %while.cond467.outer691 ]
  %p_j_y451.0.ph703 = phi double [ %113, %land.lhs.true498 ], [ %p_j_y451.0.ph694, %while.cond467.outer691 ]
  %p_j_x446.0.ph704 = phi double [ %112, %land.lhs.true498 ], [ %p_j_x446.0.ph695, %while.cond467.outer691 ]
  %j2443.0.ph705 = phi i32 [ %111, %land.lhs.true498 ], [ %j2443.0.ph696, %while.cond467.outer691 ]
  %k440.0.ph706 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph697, %while.cond467.outer691 ]
  %exclChecksum.4.ph707 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph699, %while.cond467.outer691 ]
  %109 = sext i32 %k440.0.ph706 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer700
  %indvars.iv843 = phi i64 [ %109, %while.cond467.outer700 ], [ %indvars.iv.next844, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph701, %while.cond467.outer700 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph702, %while.cond467.outer700 ], [ %114, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph703, %while.cond467.outer700 ], [ %113, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph704, %while.cond467.outer700 ], [ %112, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph705, %while.cond467.outer700 ], [ %111, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph706, %while.cond467.outer700 ], [ %inc470, %while.body469 ]
  %110 = trunc i64 %indvars.iv843 to i32
  %cmp468 = icmp slt i32 %110, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next844 = add nsw i64 %indvars.iv843, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129657659665671, i64 %indvars.iv.next844
  %111 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %70, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %111 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %112 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %71, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %113 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %72, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %114 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph707, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer700

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph707, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %67
  %cmp504 = icmp sgt i32 %atom2461.0, %68
  %or.cond638 = or i1 %cmp502, %cmp504
  br i1 %or.cond638, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph698, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph698, align 4, !tbaa !11
  br label %while.cond467.outer691

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %plin.4 = phi i32* [ %cond151667669, %if.else439 ], [ %cond151667669, %for.cond377.preheader ], [ %plin.2.ph, %while.cond467 ], [ %plin.1, %for.inc436 ]
  %pli374.4 = phi i32* [ %cond140661663673, %if.else439 ], [ %cond140661663673, %for.cond377.preheader ], [ %pli374.2.ph698, %while.cond467 ], [ %pli374.1, %for.inc436 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0805, %if.else439 ], [ %exclChecksum.0805, %for.cond377.preheader ], [ %exclChecksum.4.ph707, %while.cond467 ], [ %exclChecksum.3, %for.inc436 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522583 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522583 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext625 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext625, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140661663673, i64 %idxprom527
  %115 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140661663673, i64 %idxprom529
  store i32 %115, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534723 = icmp sgt i32 %conv523, 0
  br i1 %cmp534723, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %116 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %117 = lshr i64 %116, 2
  %118 = trunc i64 %117 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv851 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next852, %for.inc553 ]
  %plin.5727 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0726 = phi i32* [ %cond162675, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0725 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140661663673, i64 %indvars.iv851
  %119 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %119 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %120 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %120, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545624 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545624, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %69, i64 %add.ptr.sum
  %121 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %121 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5727, i64 1
  store i32 %119, i32* %plin.5727, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0726, i64 1
  store i32 %119, i32* %plix.0726, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0725, i64 1
  store i32 %119, i32* %plim.0725, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0725, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0725, %sw.bb549 ], [ %plim.0725, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0726, %for.body535 ], [ %plix.0726, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0726, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5727, %for.body535 ], [ %plin.5727, %sw.bb551 ], [ %plin.5727, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next852 = add nuw nsw i64 %indvars.iv851, 1
  %lftr.wideiv853 = trunc i64 %indvars.iv.next852 to i32
  %exitcond854 = icmp eq i32 %lftr.wideiv853, %118
  br i1 %exitcond854, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162675, %for.cond533.preheader ], [ %cond162675, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559 = ashr exact i64 %sub.ptr.sub558, 2
  %conv560584 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560584
  %add568 = add i64 %add561, %sub.ptr.div559
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573586 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573586 to i32
  %cmp576731 = icmp sgt i32 %conv574, 0
  br i1 %cmp576731, label %for.body577.lr.ph, label %for.end717

for.body577.lr.ph:                                ; preds = %for.end555
  %x695 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y704 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z711 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %122 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %123 = lshr i64 %122, 2
  %124 = trunc i64 %123 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577.for.body577_crit_edge, %for.body577.lr.ph
  %125 = phi i32* [ %96, %for.body577.lr.ph ], [ %.pre, %for.body577.for.body577_crit_edge ]
  %indvars.iv855 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next856, %for.body577.for.body577_crit_edge ]
  %126 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %167, %for.body577.for.body577_crit_edge ]
  %127 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %174, %for.body577.for.body577_crit_edge ]
  %128 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %181, %for.body577.for.body577_crit_edge ]
  %129 = phi <2 x double> [ %64, %for.body577.lr.ph ], [ %192, %for.body577.for.body577_crit_edge ]
  %arrayidx580 = getelementptr inbounds i32* %cond151667669, i64 %indvars.iv855
  %130 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %130 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %131 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %70, %131
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %132 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %71, %132
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %133 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %72, %133
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %134 = bitcast float %conv598 to i32
  %shr = ashr i32 %134, 17
  %add600 = add nsw i32 %shr, %mul
  %id601 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 2
  %135 = bitcast [4 x i8]* %id601 to i32*
  %bf.load602 = load i32* %135, align 4
  %bf.clear603 = and i32 %bf.load602, 4194303
  %idxprom.i641681 = zext i32 %bf.clear603 to i64
  %arrayidx.i643 = getelementptr inbounds i32* %125, i64 %idxprom.i641681
  %136 = load i32* %arrayidx.i643, align 4, !tbaa !11
  %conv.i644 = zext i32 %136 to i64
  %conv605 = shl nuw nsw i64 %conv.i644, 1
  %mul606 = and i64 %conv605, 131070
  %mul609 = shl nsw i32 %add600, 4
  %idx.ext610 = sext i32 %mul609 to i64
  %add.ptr611 = getelementptr inbounds double* %7, i64 %idx.ext610
  %137 = load double* %add.ptr611, align 8, !tbaa !17
  %add.ptr611.sum613 = or i64 %idx.ext610, 4
  %add.ptr616 = getelementptr inbounds double* %7, i64 %add.ptr611.sum613
  %138 = load double* %add.ptr616, align 8, !tbaa !17
  %add.ptr611.sum614 = or i64 %idx.ext610, 8
  %add.ptr621 = getelementptr inbounds double* %7, i64 %add.ptr611.sum614
  %139 = load double* %add.ptr621, align 8, !tbaa !17
  %and = and i32 %134, -131072
  %charge624 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %140 = load float* %charge624, align 4, !tbaa !63
  %conv625 = fpext float %140 to double
  %mul626 = fmul double %mul367, %conv625
  %141 = bitcast i32 %and to float
  %conv628 = fpext float %141 to double
  %sub629 = fsub double %add597, %conv628
  %add.ptr.i.sum682 = add i64 %mul606, %idx.ext.i
  %A631 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum682, i32 0
  %142 = load double* %A631, align 8, !tbaa !69
  %mul632 = fmul double %8, %142
  %B634 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum682, i32 1
  %143 = load double* %B634, align 8, !tbaa !71
  %mul635 = fmul double %8, %143
  %mul636 = fmul double %137, %mul632
  %mul637 = fmul double %138, %mul635
  %sub638 = fsub double %mul636, %mul637
  %add.ptr611.sum615 = or i64 %idx.ext610, 3
  %arrayidx639 = getelementptr inbounds double* %7, i64 %add.ptr611.sum615
  %144 = load double* %arrayidx639, align 8, !tbaa !17
  %mul640 = fmul double %mul632, %144
  %add.ptr616.sum616 = or i64 %idx.ext610, 7
  %arrayidx641 = getelementptr inbounds double* %7, i64 %add.ptr616.sum616
  %145 = load double* %arrayidx641, align 8, !tbaa !17
  %mul642 = fmul double %mul635, %145
  %sub643 = fsub double %mul640, %mul642
  %add.ptr611.sum617 = or i64 %idx.ext610, 2
  %arrayidx644 = getelementptr inbounds double* %7, i64 %add.ptr611.sum617
  %146 = load double* %arrayidx644, align 8, !tbaa !17
  %mul645 = fmul double %mul632, %146
  %add.ptr616.sum618 = or i64 %idx.ext610, 6
  %arrayidx646 = getelementptr inbounds double* %7, i64 %add.ptr616.sum618
  %147 = load double* %arrayidx646, align 8, !tbaa !17
  %mul647 = fmul double %mul635, %147
  %sub648 = fsub double %mul645, %mul647
  %add.ptr611.sum619 = or i64 %idx.ext610, 1
  %arrayidx649 = getelementptr inbounds double* %7, i64 %add.ptr611.sum619
  %148 = load double* %arrayidx649, align 8, !tbaa !17
  %mul650 = fmul double %mul632, %148
  %add.ptr616.sum620 = or i64 %idx.ext610, 5
  %arrayidx651 = getelementptr inbounds double* %7, i64 %add.ptr616.sum620
  %149 = load double* %arrayidx651, align 8, !tbaa !17
  %mul652 = fmul double %mul635, %149
  %sub653 = fsub double %mul650, %mul652
  %mul654 = fmul double %sub629, %sub643
  %add655 = fadd double %mul654, %sub648
  %add.ptr621.sum621 = or i64 %idx.ext610, 9
  %arrayidx661 = getelementptr inbounds double* %7, i64 %add.ptr621.sum621
  %150 = load double* %arrayidx661, align 8, !tbaa !17
  %add.ptr621.sum622 = or i64 %idx.ext610, 10
  %arrayidx662 = getelementptr inbounds double* %7, i64 %add.ptr621.sum622
  %151 = load double* %arrayidx662, align 8, !tbaa !17
  %add.ptr621.sum623 = or i64 %idx.ext610, 11
  %arrayidx663 = getelementptr inbounds double* %7, i64 %add.ptr621.sum623
  %152 = load double* %arrayidx663, align 8, !tbaa !17
  %mul664 = fmul double %mul626, %152
  %mul665 = fmul double %mul626, %151
  %153 = insertelement <2 x double> undef, double %mul626, i32 0
  %154 = insertelement <2 x double> %153, double %add655, i32 1
  %155 = insertelement <2 x double> undef, double %150, i32 0
  %156 = insertelement <2 x double> %155, double %sub629, i32 1
  %157 = fmul <2 x double> %154, %156
  %mul667 = fmul double %139, %mul626
  %mul668 = fmul double %sub629, %mul664
  %add669 = fadd double %mul665, %mul668
  %mul670 = fmul double %sub629, %add669
  %158 = insertelement <2 x double> undef, double %mul670, i32 0
  %159 = insertelement <2 x double> %158, double %sub653, i32 1
  %160 = fadd <2 x double> %157, %159
  %161 = insertelement <2 x double> undef, double %sub629, i32 0
  %162 = insertelement <2 x double> %161, double %sub629, i32 1
  %163 = fmul <2 x double> %160, %162
  %164 = insertelement <2 x double> undef, double %mul667, i32 0
  %165 = insertelement <2 x double> %164, double %sub638, i32 1
  %166 = fadd <2 x double> %165, %163
  %167 = fadd <2 x double> %126, %166
  %add675 = fadd double %sub643, %mul664
  %add676 = fadd double %sub648, %mul665
  %168 = extractelement <2 x double> %157, i32 0
  %add677 = fadd double %168, %sub653
  %mul679 = fmul double %sub629, 3.000000e+00
  %mul680 = fmul double %mul679, %add675
  %mul681 = fmul double %add676, 2.000000e+00
  %add682 = fadd double %mul681, %mul680
  %mul683 = fmul double %sub629, %add682
  %add684 = fadd double %add677, %mul683
  %mul685 = fmul double %add684, -2.000000e+00
  %mul688 = fmul double %sub585, %mul685
  %169 = insertelement <2 x double> undef, double %sub585, i32 0
  %170 = insertelement <2 x double> %169, double %sub590, i32 1
  %171 = insertelement <2 x double> undef, double %mul688, i32 0
  %172 = insertelement <2 x double> %171, double %mul688, i32 1
  %173 = fmul <2 x double> %170, %172
  %174 = fadd <2 x double> %127, %173
  %175 = load double* %x695, align 8, !tbaa !72
  %add696 = fadd double %175, %mul688
  store double %add696, double* %x695, align 8, !tbaa !72
  %x697 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul699 = fmul double %sub590, %mul685
  %176 = insertelement <2 x double> undef, double %sub590, i32 0
  %177 = insertelement <2 x double> %176, double %sub595, i32 1
  %178 = insertelement <2 x double> undef, double %mul699, i32 0
  %179 = insertelement <2 x double> %178, double %mul699, i32 1
  %180 = fmul <2 x double> %177, %179
  %181 = fadd <2 x double> %128, %180
  %182 = load double* %y704, align 8, !tbaa !73
  %add705 = fadd double %182, %mul699
  store double %add705, double* %y704, align 8, !tbaa !73
  %183 = bitcast double* %x697 to <2 x double>*
  %184 = load <2 x double>* %183, align 8, !tbaa !17
  %185 = insertelement <2 x double> %171, double %mul699, i32 1
  %186 = fsub <2 x double> %184, %185
  %187 = bitcast double* %x697 to <2 x double>*
  store <2 x double> %186, <2 x double>* %187, align 8, !tbaa !17
  %mul708 = fmul double %sub595, %mul685
  %188 = insertelement <2 x double> undef, double %sub595, i32 0
  %189 = insertelement <2 x double> %188, double %sub595, i32 1
  %190 = insertelement <2 x double> %171, double %mul708, i32 1
  %191 = fmul <2 x double> %189, %190
  %192 = fadd <2 x double> %129, %191
  %193 = load double* %z711, align 8, !tbaa !74
  %add712 = fadd double %193, %mul708
  store double %add712, double* %z711, align 8, !tbaa !74
  %z713 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %194 = load double* %z713, align 8, !tbaa !74
  %sub714 = fsub double %194, %mul708
  store double %sub714, double* %z713, align 8, !tbaa !74
  %indvars.iv.next856 = add nuw nsw i64 %indvars.iv855, 1
  %lftr.wideiv857 = trunc i64 %indvars.iv.next856 to i32
  %exitcond858 = icmp eq i32 %lftr.wideiv857, %124
  br i1 %exitcond858, label %for.end717, label %for.body577.for.body577_crit_edge

for.body577.for.body577_crit_edge:                ; preds = %for.body577
  %.pre = load i32** %atomVdwType.i646, align 8, !tbaa !64
  br label %for.body577

for.end717:                                       ; preds = %for.body577, %for.end555
  %195 = phi <2 x double> [ %61, %for.end555 ], [ %167, %for.body577 ]
  %196 = phi <2 x double> [ %62, %for.end555 ], [ %174, %for.body577 ]
  %197 = phi <2 x double> [ %63, %for.end555 ], [ %181, %for.body577 ]
  %198 = phi <2 x double> [ %64, %for.end555 ], [ %192, %for.body577 ]
  %conv722 = trunc i64 %sub.ptr.div566 to i32
  %cmp724749 = icmp sgt i32 %conv722, 0
  br i1 %cmp724749, label %for.body725.lr.ph, label %for.end915

for.body725.lr.ph:                                ; preds = %for.end717
  %x891 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y901 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z909 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body725

for.body725:                                      ; preds = %for.body725, %for.body725.lr.ph
  %indvars.iv859 = phi i64 [ 0, %for.body725.lr.ph ], [ %indvars.iv.next860, %for.body725 ]
  %199 = phi <2 x double> [ %195, %for.body725.lr.ph ], [ %245, %for.body725 ]
  %200 = phi <2 x double> [ %196, %for.body725.lr.ph ], [ %252, %for.body725 ]
  %201 = phi <2 x double> [ %197, %for.body725.lr.ph ], [ %259, %for.body725 ]
  %202 = phi <2 x double> [ %198, %for.body725.lr.ph ], [ %270, %for.body725 ]
  %arrayidx728 = getelementptr inbounds i32* %cond173, i64 %indvars.iv859
  %203 = load i32* %arrayidx728, align 4, !tbaa !11
  %idx.ext730 = sext i32 %203 to i64
  %x734 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 0
  %204 = load double* %x734, align 8, !tbaa !59
  %sub735 = fsub double %70, %204
  %mul737 = fmul double %sub735, %sub735
  %y740 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 1
  %205 = load double* %y740, align 8, !tbaa !61
  %sub741 = fsub double %71, %205
  %mul742 = fmul double %sub741, %sub741
  %add743 = fadd double %mul737, %mul742
  %z746 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 0, i32 2
  %206 = load double* %z746, align 8, !tbaa !62
  %sub747 = fsub double %72, %206
  %mul748 = fmul double %sub747, %sub747
  %add749 = fadd double %add743, %mul748
  %conv751 = fptrunc double %add749 to float
  %207 = bitcast float %conv751 to i32
  %shr755 = ashr i32 %207, 17
  %add756 = add nsw i32 %shr755, %mul
  %id758 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 2
  %208 = bitcast [4 x i8]* %id758 to i32*
  %bf.load759 = load i32* %208, align 4
  %bf.clear760 = and i32 %bf.load759, 4194303
  %idxprom.i639679 = zext i32 %bf.clear760 to i64
  %209 = load i32** %atomVdwType.i646, align 8, !tbaa !64
  %arrayidx.i640 = getelementptr inbounds i32* %209, i64 %idxprom.i639679
  %210 = load i32* %arrayidx.i640, align 4, !tbaa !11
  %conv.i = zext i32 %210 to i64
  %conv762 = shl nuw nsw i64 %conv.i, 1
  %mul763 = and i64 %conv762, 131070
  %add.ptr765.sum596 = or i64 %mul763, 1
  %mul768 = shl nsw i32 %add756, 4
  %idx.ext769 = sext i32 %mul768 to i64
  %add.ptr770 = getelementptr inbounds double* %7, i64 %idx.ext769
  %211 = load double* %add.ptr770, align 8, !tbaa !17
  %add.ptr770.sum597 = or i64 %idx.ext769, 4
  %add.ptr777 = getelementptr inbounds double* %7, i64 %add.ptr770.sum597
  %212 = load double* %add.ptr777, align 8, !tbaa !17
  %add.ptr770.sum598 = or i64 %idx.ext769, 8
  %add.ptr784 = getelementptr inbounds double* %7, i64 %add.ptr770.sum598
  %213 = load double* %add.ptr784, align 8, !tbaa !17
  %and788 = and i32 %207, -131072
  %charge790 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext730, i32 1
  %214 = load float* %charge790, align 4, !tbaa !63
  %conv791 = fpext float %214 to double
  %mul792 = fmul double %mul367, %conv791
  %215 = bitcast i32 %and788 to float
  %conv795 = fpext float %215 to double
  %sub796 = fsub double %add749, %conv795
  %add.ptr.i.sum = add i64 %add.ptr765.sum596, %idx.ext.i
  %A798 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum, i32 0
  %216 = load double* %A798, align 8, !tbaa !69
  %mul799 = fmul double %8, %216
  %B801 = getelementptr inbounds %"struct.LJTable::TableEntry"* %98, i64 %add.ptr.i.sum, i32 1
  %217 = load double* %B801, align 8, !tbaa !71
  %mul802 = fmul double %8, %217
  %mul804 = fmul double %211, %mul799
  %mul805 = fmul double %212, %mul802
  %sub806 = fsub double %mul804, %mul805
  %add.ptr770.sum599 = or i64 %idx.ext769, 3
  %arrayidx808 = getelementptr inbounds double* %7, i64 %add.ptr770.sum599
  %218 = load double* %arrayidx808, align 8, !tbaa !17
  %mul809 = fmul double %mul799, %218
  %add.ptr777.sum600 = or i64 %idx.ext769, 7
  %arrayidx810 = getelementptr inbounds double* %7, i64 %add.ptr777.sum600
  %219 = load double* %arrayidx810, align 8, !tbaa !17
  %mul811 = fmul double %mul802, %219
  %sub812 = fsub double %mul809, %mul811
  %add.ptr770.sum601 = or i64 %idx.ext769, 2
  %arrayidx814 = getelementptr inbounds double* %7, i64 %add.ptr770.sum601
  %220 = load double* %arrayidx814, align 8, !tbaa !17
  %mul815 = fmul double %mul799, %220
  %add.ptr777.sum602 = or i64 %idx.ext769, 6
  %arrayidx816 = getelementptr inbounds double* %7, i64 %add.ptr777.sum602
  %221 = load double* %arrayidx816, align 8, !tbaa !17
  %mul817 = fmul double %mul802, %221
  %sub818 = fsub double %mul815, %mul817
  %add.ptr770.sum603 = or i64 %idx.ext769, 1
  %arrayidx820 = getelementptr inbounds double* %7, i64 %add.ptr770.sum603
  %222 = load double* %arrayidx820, align 8, !tbaa !17
  %mul821 = fmul double %mul799, %222
  %add.ptr777.sum604 = or i64 %idx.ext769, 5
  %arrayidx822 = getelementptr inbounds double* %7, i64 %add.ptr777.sum604
  %223 = load double* %arrayidx822, align 8, !tbaa !17
  %mul823 = fmul double %mul802, %223
  %sub824 = fsub double %mul821, %mul823
  %mul826 = fmul double %sub796, %sub812
  %add827 = fadd double %mul826, %sub818
  %add.ptr784.sum605 = or i64 %idx.ext769, 9
  %arrayidx834 = getelementptr inbounds double* %7, i64 %add.ptr784.sum605
  %224 = load double* %arrayidx834, align 8, !tbaa !17
  %add.ptr784.sum606 = or i64 %idx.ext769, 10
  %arrayidx836 = getelementptr inbounds double* %7, i64 %add.ptr784.sum606
  %225 = load double* %arrayidx836, align 8, !tbaa !17
  %add.ptr784.sum607 = or i64 %idx.ext769, 11
  %arrayidx838 = getelementptr inbounds double* %7, i64 %add.ptr784.sum607
  %226 = load double* %arrayidx838, align 8, !tbaa !17
  %add.ptr839.sum608 = or i64 %idx.ext769, 12
  %add.ptr842 = getelementptr inbounds double* %7, i64 %add.ptr839.sum608
  %227 = load double* %add.ptr842, align 8, !tbaa !17
  %mul844 = fmul double %sub, %227
  %sub845 = fsub double %213, %mul844
  %add.ptr842.sum609 = or i64 %idx.ext769, 13
  %arrayidx846 = getelementptr inbounds double* %7, i64 %add.ptr842.sum609
  %228 = load double* %arrayidx846, align 8, !tbaa !17
  %mul847 = fmul double %sub, %228
  %sub848 = fsub double %224, %mul847
  %add.ptr842.sum610 = or i64 %idx.ext769, 14
  %arrayidx849 = getelementptr inbounds double* %7, i64 %add.ptr842.sum610
  %229 = load double* %arrayidx849, align 8, !tbaa !17
  %mul850 = fmul double %sub, %229
  %sub851 = fsub double %225, %mul850
  %add.ptr842.sum611 = or i64 %idx.ext769, 15
  %arrayidx852 = getelementptr inbounds double* %7, i64 %add.ptr842.sum611
  %230 = load double* %arrayidx852, align 8, !tbaa !17
  %mul853 = fmul double %sub, %230
  %sub854 = fsub double %226, %mul853
  %mul855 = fmul double %mul792, %sub854
  %mul856 = fmul double %mul792, %sub851
  %231 = insertelement <2 x double> undef, double %sub848, i32 0
  %232 = insertelement <2 x double> %231, double %add827, i32 1
  %233 = insertelement <2 x double> undef, double %mul792, i32 0
  %234 = insertelement <2 x double> %233, double %sub796, i32 1
  %235 = fmul <2 x double> %232, %234
  %mul858 = fmul double %mul792, %sub845
  %mul860 = fmul double %sub796, %mul855
  %add861 = fadd double %mul856, %mul860
  %mul862 = fmul double %sub796, %add861
  %236 = insertelement <2 x double> undef, double %mul862, i32 0
  %237 = insertelement <2 x double> %236, double %sub824, i32 1
  %238 = fadd <2 x double> %235, %237
  %239 = insertelement <2 x double> undef, double %sub796, i32 0
  %240 = insertelement <2 x double> %239, double %sub796, i32 1
  %241 = fmul <2 x double> %238, %240
  %242 = insertelement <2 x double> undef, double %mul858, i32 0
  %243 = insertelement <2 x double> %242, double %sub806, i32 1
  %244 = fadd <2 x double> %243, %241
  %245 = fadd <2 x double> %199, %244
  %add867 = fadd double %sub812, %mul855
  %add868 = fadd double %sub818, %mul856
  %246 = extractelement <2 x double> %235, i32 0
  %add869 = fadd double %sub824, %246
  %mul872 = fmul double %sub796, 3.000000e+00
  %mul873 = fmul double %mul872, %add867
  %mul874 = fmul double %add868, 2.000000e+00
  %add875 = fadd double %mul874, %mul873
  %mul876 = fmul double %sub796, %add875
  %add877 = fadd double %add869, %mul876
  %mul879 = fmul double %add877, -2.000000e+00
  %mul884 = fmul double %sub735, %mul879
  %247 = insertelement <2 x double> undef, double %sub735, i32 0
  %248 = insertelement <2 x double> %247, double %sub741, i32 1
  %249 = insertelement <2 x double> undef, double %mul884, i32 0
  %250 = insertelement <2 x double> %249, double %mul884, i32 1
  %251 = fmul <2 x double> %248, %250
  %252 = fadd <2 x double> %200, %251
  %253 = load double* %x891, align 8, !tbaa !72
  %add892 = fadd double %253, %mul884
  store double %add892, double* %x891, align 8, !tbaa !72
  %x893 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext730, i32 0
  %mul896 = fmul double %sub741, %mul879
  %254 = insertelement <2 x double> undef, double %sub741, i32 0
  %255 = insertelement <2 x double> %254, double %sub747, i32 1
  %256 = insertelement <2 x double> undef, double %mul896, i32 0
  %257 = insertelement <2 x double> %256, double %mul896, i32 1
  %258 = fmul <2 x double> %255, %257
  %259 = fadd <2 x double> %201, %258
  %260 = load double* %y901, align 8, !tbaa !73
  %add902 = fadd double %260, %mul896
  store double %add902, double* %y901, align 8, !tbaa !73
  %261 = bitcast double* %x893 to <2 x double>*
  %262 = load <2 x double>* %261, align 8, !tbaa !17
  %263 = insertelement <2 x double> %249, double %mul896, i32 1
  %264 = fsub <2 x double> %262, %263
  %265 = bitcast double* %x893 to <2 x double>*
  store <2 x double> %264, <2 x double>* %265, align 8, !tbaa !17
  %mul906 = fmul double %sub747, %mul879
  %266 = insertelement <2 x double> undef, double %sub747, i32 0
  %267 = insertelement <2 x double> %266, double %sub747, i32 1
  %268 = insertelement <2 x double> %249, double %mul906, i32 1
  %269 = fmul <2 x double> %267, %268
  %270 = fadd <2 x double> %202, %269
  %271 = load double* %z909, align 8, !tbaa !74
  %add910 = fadd double %271, %mul906
  store double %add910, double* %z909, align 8, !tbaa !74
  %z911 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext730, i32 2
  %272 = load double* %z911, align 8, !tbaa !74
  %sub912 = fsub double %272, %mul906
  store double %sub912, double* %z911, align 8, !tbaa !74
  %indvars.iv.next860 = add nuw nsw i64 %indvars.iv859, 1
  %lftr.wideiv861 = trunc i64 %indvars.iv.next860 to i32
  %exitcond862 = icmp eq i32 %lftr.wideiv861, %conv722
  br i1 %exitcond862, label %for.end915, label %for.body725

for.end915:                                       ; preds = %for.body725, %for.end717
  %273 = phi <2 x double> [ %195, %for.end717 ], [ %245, %for.body725 ]
  %274 = phi <2 x double> [ %196, %for.end717 ], [ %252, %for.body725 ]
  %275 = phi <2 x double> [ %197, %for.end717 ], [ %259, %for.body725 ]
  %276 = phi <2 x double> [ %198, %for.end717 ], [ %270, %for.body725 ]
  %conv920 = trunc i64 %sub.ptr.div559 to i32
  %cmp922767 = icmp sgt i32 %conv920, 0
  br i1 %cmp922767, label %for.body923.lr.ph, label %for.inc1048

for.body923.lr.ph:                                ; preds = %for.end915
  %277 = extractelement <2 x double> %273, i32 0
  %x1023 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y1033 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z1041 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body923

for.body923:                                      ; preds = %for.body923, %for.body923.lr.ph
  %indvars.iv863 = phi i64 [ 0, %for.body923.lr.ph ], [ %indvars.iv.next864, %for.body923 ]
  %fullElectEnergy.3775 = phi double [ %277, %for.body923.lr.ph ], [ %add1002, %for.body923 ]
  %278 = phi <2 x double> [ %274, %for.body923.lr.ph ], [ %301, %for.body923 ]
  %279 = phi <2 x double> [ %275, %for.body923.lr.ph ], [ %308, %for.body923 ]
  %280 = phi <2 x double> [ %276, %for.body923.lr.ph ], [ %319, %for.body923 ]
  %arrayidx926 = getelementptr inbounds i32* %cond162675, i64 %indvars.iv863
  %281 = load i32* %arrayidx926, align 4, !tbaa !11
  %idx.ext928 = sext i32 %281 to i64
  %x932 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext928, i32 0, i32 0
  %282 = load double* %x932, align 8, !tbaa !59
  %sub933 = fsub double %70, %282
  %mul935 = fmul double %sub933, %sub933
  %y938 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext928, i32 0, i32 1
  %283 = load double* %y938, align 8, !tbaa !61
  %sub939 = fsub double %71, %283
  %mul940 = fmul double %sub939, %sub939
  %add941 = fadd double %mul935, %mul940
  %z944 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext928, i32 0, i32 2
  %284 = load double* %z944, align 8, !tbaa !62
  %sub945 = fsub double %72, %284
  %mul946 = fmul double %sub945, %sub945
  %add947 = fadd double %add941, %mul946
  %conv949 = fptrunc double %add947 to float
  %285 = bitcast float %conv949 to i32
  %shr953 = ashr i32 %285, 17
  %add954 = add nsw i32 %shr953, %mul
  %mul956 = shl nsw i32 %add954, 4
  %idx.ext957 = sext i32 %mul956 to i64
  %add.ptr958.sum587 = or i64 %idx.ext957, 8
  %add.ptr959 = getelementptr inbounds double* %7, i64 %add.ptr958.sum587
  %286 = load double* %add.ptr959, align 8, !tbaa !17
  %and963 = and i32 %285, -131072
  %charge965 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext928, i32 1
  %287 = load float* %charge965, align 4, !tbaa !63
  %conv966 = fpext float %287 to double
  %mul967 = fmul double %mul367, %conv966
  %288 = bitcast i32 %and963 to float
  %conv970 = fpext float %288 to double
  %sub971 = fsub double %add947, %conv970
  %add.ptr959.sum588 = or i64 %idx.ext957, 9
  %arrayidx973 = getelementptr inbounds double* %7, i64 %add.ptr959.sum588
  %289 = load double* %arrayidx973, align 8, !tbaa !17
  %add.ptr959.sum589 = or i64 %idx.ext957, 10
  %arrayidx975 = getelementptr inbounds double* %7, i64 %add.ptr959.sum589
  %290 = load double* %arrayidx975, align 8, !tbaa !17
  %add.ptr959.sum590 = or i64 %idx.ext957, 11
  %arrayidx977 = getelementptr inbounds double* %7, i64 %add.ptr959.sum590
  %291 = load double* %arrayidx977, align 8, !tbaa !17
  %add.ptr979.sum591 = or i64 %idx.ext957, 12
  %add.ptr982 = getelementptr inbounds double* %7, i64 %add.ptr979.sum591
  %292 = load double* %add.ptr982, align 8, !tbaa !17
  %sub984 = fsub double %286, %292
  %add.ptr982.sum592 = or i64 %idx.ext957, 13
  %arrayidx985 = getelementptr inbounds double* %7, i64 %add.ptr982.sum592
  %293 = load double* %arrayidx985, align 8, !tbaa !17
  %sub986 = fsub double %289, %293
  %add.ptr982.sum593 = or i64 %idx.ext957, 14
  %arrayidx987 = getelementptr inbounds double* %7, i64 %add.ptr982.sum593
  %294 = load double* %arrayidx987, align 8, !tbaa !17
  %sub988 = fsub double %290, %294
  %add.ptr982.sum594 = or i64 %idx.ext957, 15
  %arrayidx989 = getelementptr inbounds double* %7, i64 %add.ptr982.sum594
  %295 = load double* %arrayidx989, align 8, !tbaa !17
  %sub990 = fsub double %291, %295
  %mul991 = fmul double %mul967, %sub990
  %mul992 = fmul double %mul967, %sub988
  %mul993 = fmul double %mul967, %sub986
  %mul994 = fmul double %mul967, %sub984
  %mul996 = fmul double %sub971, %mul991
  %add997 = fadd double %mul992, %mul996
  %mul998 = fmul double %sub971, %add997
  %add999 = fadd double %mul993, %mul998
  %mul1000 = fmul double %sub971, %add999
  %add1001 = fadd double %mul994, %mul1000
  %add1002 = fadd double %fullElectEnergy.3775, %add1001
  %mul1004 = fmul double %sub971, 3.000000e+00
  %mul1005 = fmul double %mul1004, %mul991
  %mul1006 = fmul double %mul992, 2.000000e+00
  %add1007 = fadd double %mul1006, %mul1005
  %mul1008 = fmul double %sub971, %add1007
  %add1009 = fadd double %mul993, %mul1008
  %mul1011 = fmul double %add1009, -2.000000e+00
  %mul1016 = fmul double %sub933, %mul1011
  %296 = insertelement <2 x double> undef, double %sub933, i32 0
  %297 = insertelement <2 x double> %296, double %sub939, i32 1
  %298 = insertelement <2 x double> undef, double %mul1016, i32 0
  %299 = insertelement <2 x double> %298, double %mul1016, i32 1
  %300 = fmul <2 x double> %297, %299
  %301 = fadd <2 x double> %278, %300
  %302 = load double* %x1023, align 8, !tbaa !72
  %add1024 = fadd double %302, %mul1016
  store double %add1024, double* %x1023, align 8, !tbaa !72
  %x1025 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext928, i32 0
  %mul1028 = fmul double %sub939, %mul1011
  %303 = insertelement <2 x double> undef, double %sub939, i32 0
  %304 = insertelement <2 x double> %303, double %sub945, i32 1
  %305 = insertelement <2 x double> undef, double %mul1028, i32 0
  %306 = insertelement <2 x double> %305, double %mul1028, i32 1
  %307 = fmul <2 x double> %304, %306
  %308 = fadd <2 x double> %279, %307
  %309 = load double* %y1033, align 8, !tbaa !73
  %add1034 = fadd double %309, %mul1028
  store double %add1034, double* %y1033, align 8, !tbaa !73
  %310 = bitcast double* %x1025 to <2 x double>*
  %311 = load <2 x double>* %310, align 8, !tbaa !17
  %312 = insertelement <2 x double> %298, double %mul1028, i32 1
  %313 = fsub <2 x double> %311, %312
  %314 = bitcast double* %x1025 to <2 x double>*
  store <2 x double> %313, <2 x double>* %314, align 8, !tbaa !17
  %mul1038 = fmul double %sub945, %mul1011
  %315 = insertelement <2 x double> undef, double %sub945, i32 0
  %316 = insertelement <2 x double> %315, double %sub945, i32 1
  %317 = insertelement <2 x double> %298, double %mul1038, i32 1
  %318 = fmul <2 x double> %316, %317
  %319 = fadd <2 x double> %280, %318
  %320 = load double* %z1041, align 8, !tbaa !74
  %add1042 = fadd double %320, %mul1038
  store double %add1042, double* %z1041, align 8, !tbaa !74
  %z1043 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext928, i32 2
  %321 = load double* %z1043, align 8, !tbaa !74
  %sub1044 = fsub double %321, %mul1038
  store double %sub1044, double* %z1043, align 8, !tbaa !74
  %indvars.iv.next864 = add nuw nsw i64 %indvars.iv863, 1
  %lftr.wideiv865 = trunc i64 %indvars.iv.next864 to i32
  %exitcond866 = icmp eq i32 %lftr.wideiv865, %conv920
  br i1 %exitcond866, label %for.inc1048.loopexit, label %for.body923

for.inc1048.loopexit:                             ; preds = %for.body923
  %322 = insertelement <2 x double> undef, double %add1002, i32 0
  %323 = shufflevector <2 x double> %322, <2 x double> %273, <2 x i32> <i32 0, i32 3>
  br label %for.inc1048

for.inc1048:                                      ; preds = %for.inc1048.loopexit, %for.end915, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end915 ], [ %pairCount.2, %for.inc1048.loopexit ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0787, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end915 ], [ %pairlistindex.1, %for.inc1048.loopexit ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1788, %for.end915 ], [ %i.1788, %for.inc1048.loopexit ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0805, %if.then221 ], [ %exclChecksum.0805, %cond.end349 ], [ %conv569, %for.end915 ], [ %conv569, %for.inc1048.loopexit ]
  %324 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %273, %for.end915 ], [ %323, %for.inc1048.loopexit ]
  %325 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %274, %for.end915 ], [ %301, %for.inc1048.loopexit ]
  %326 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %275, %for.end915 ], [ %308, %for.inc1048.loopexit ]
  %327 = phi <2 x double> [ %64, %if.then221 ], [ %64, %cond.end349 ], [ %276, %for.end915 ], [ %319, %for.inc1048.loopexit ]
  %inc1049 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc1049, %12
  br i1 %cmp183, label %for.body184, label %for.end1050

for.end1050:                                      ; preds = %for.inc1048, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc1048 ]
  %328 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %324, %for.inc1048 ]
  %329 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %325, %for.inc1048 ]
  %330 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %326, %for.inc1048 ]
  %331 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %327, %for.inc1048 ]
  %332 = extractelement <2 x double> %331, i32 1
  %arraydecay1051 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1052 = icmp eq i32* %cond649651882888, %arraydecay1051
  br i1 %cmp1052, label %if.end1057, label %delete.notnull1055

delete.notnull1055:                               ; preds = %for.end1050
  %333 = bitcast i32* %cond649651882888 to i8*
  call void @_ZdaPv(i8* %333) #7
  br label %if.end1057

if.end1057:                                       ; preds = %delete.notnull1055, %for.end1050
  %arraydecay1058 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1059 = icmp eq i32* %cond19653880889, %arraydecay1058
  br i1 %cmp1059, label %if.end1064, label %delete.notnull1062

delete.notnull1062:                               ; preds = %if.end1057
  %334 = bitcast i32* %cond19653880889 to i8*
  call void @_ZdaPv(i8* %334) #7
  br label %if.end1064

if.end1064:                                       ; preds = %delete.notnull1062, %if.end1057
  %arraydecay1065 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1066 = icmp eq i32* %cond30884887, %arraydecay1065
  br i1 %cmp1066, label %if.end1071, label %delete.notnull1069

delete.notnull1069:                               ; preds = %if.end1064
  %335 = bitcast i32* %cond30884887 to i8*
  call void @_ZdaPv(i8* %335) #7
  br label %if.end1071

if.end1071:                                       ; preds = %delete.notnull1069, %if.end1064
  %arraydecay1072 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1073 = icmp eq i32* %cond129657659665671, %arraydecay1072
  br i1 %cmp1073, label %if.end1078, label %delete.notnull1076

delete.notnull1076:                               ; preds = %if.end1071
  %336 = bitcast i32* %cond129657659665671 to i8*
  call void @_ZdaPv(i8* %336) #7
  br label %if.end1078

if.end1078:                                       ; preds = %delete.notnull1076, %if.end1071
  %arraydecay1079 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1080 = icmp eq i32* %cond140661663673, %arraydecay1079
  br i1 %cmp1080, label %if.end1085, label %delete.notnull1083

delete.notnull1083:                               ; preds = %if.end1078
  %337 = bitcast i32* %cond140661663673 to i8*
  call void @_ZdaPv(i8* %337) #7
  br label %if.end1085

if.end1085:                                       ; preds = %delete.notnull1083, %if.end1078
  %arraydecay1086 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1087 = icmp eq i32* %cond151667669, %arraydecay1086
  br i1 %cmp1087, label %if.end1092, label %delete.notnull1090

delete.notnull1090:                               ; preds = %if.end1085
  %338 = bitcast i32* %cond151667669 to i8*
  call void @_ZdaPv(i8* %338) #7
  br label %if.end1092

if.end1092:                                       ; preds = %delete.notnull1090, %if.end1085
  %arraydecay1093 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1094 = icmp eq i32* %cond162675, %arraydecay1093
  br i1 %cmp1094, label %if.end1099, label %delete.notnull1097

delete.notnull1097:                               ; preds = %if.end1092
  %339 = bitcast i32* %cond162675 to i8*
  call void @_ZdaPv(i8* %339) #7
  br label %if.end1099

if.end1099:                                       ; preds = %delete.notnull1097, %if.end1092
  %arraydecay1100 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1101 = icmp eq i32* %cond173, %arraydecay1100
  br i1 %cmp1101, label %if.end1106, label %delete.notnull1104

delete.notnull1104:                               ; preds = %if.end1099
  %340 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %340) #7
  br label %if.end1106

if.end1106:                                       ; preds = %delete.notnull1104, %if.end1099
  %conv1107 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1108 = getelementptr inbounds double* %1, i64 22
  %341 = load double* %arrayidx1108, align 8, !tbaa !17
  %add1109 = fadd double %conv1107, %341
  store double %add1109, double* %arrayidx1108, align 8, !tbaa !17
  %arrayidx1112 = getelementptr inbounds double* %1, i64 1
  %342 = bitcast double* %arrayidx1112 to <2 x double>*
  %343 = load <2 x double>* %342, align 8, !tbaa !17
  %344 = fadd <2 x double> %328, %343
  %345 = bitcast double* %arrayidx1112 to <2 x double>*
  store <2 x double> %344, <2 x double>* %345, align 8, !tbaa !17
  %arrayidx1114 = getelementptr inbounds double* %1, i64 12
  %346 = bitcast double* %arrayidx1114 to <2 x double>*
  %347 = load <2 x double>* %346, align 8, !tbaa !17
  %348 = fadd <2 x double> %329, %347
  %349 = bitcast double* %arrayidx1114 to <2 x double>*
  store <2 x double> %348, <2 x double>* %349, align 8, !tbaa !17
  %arrayidx1118 = getelementptr inbounds double* %1, i64 14
  %350 = bitcast double* %arrayidx1118 to <2 x double>*
  %351 = load <2 x double>* %350, align 8, !tbaa !17
  %352 = shufflevector <2 x double> %331, <2 x double> %329, <2 x i32> <i32 0, i32 3>
  %353 = fadd <2 x double> %352, %351
  %354 = bitcast double* %arrayidx1118 to <2 x double>*
  store <2 x double> %353, <2 x double>* %354, align 8, !tbaa !17
  %arrayidx1122 = getelementptr inbounds double* %1, i64 16
  %355 = bitcast double* %arrayidx1122 to <2 x double>*
  %356 = load <2 x double>* %355, align 8, !tbaa !17
  %357 = fadd <2 x double> %330, %356
  %358 = bitcast double* %arrayidx1122 to <2 x double>*
  store <2 x double> %357, <2 x double>* %358, align 8, !tbaa !17
  %arrayidx1126 = getelementptr inbounds double* %1, i64 18
  %359 = bitcast double* %arrayidx1126 to <2 x double>*
  %360 = load <2 x double>* %359, align 8, !tbaa !17
  %361 = shufflevector <2 x double> %331, <2 x double> %330, <2 x i32> <i32 0, i32 3>
  %362 = fadd <2 x double> %361, %360
  %363 = bitcast double* %arrayidx1126 to <2 x double>*
  store <2 x double> %362, <2 x double>* %363, align 8, !tbaa !17
  %arrayidx1130 = getelementptr inbounds double* %1, i64 20
  %364 = load double* %arrayidx1130, align 8, !tbaa !17
  %add1131 = fadd double %332, %364
  store double %add1131, double* %arrayidx1130, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1106, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil25calc_self_merge_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31820 = icmp sgt i32 %13, 0
  br i1 %cmp31820, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30895 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond641643893 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19645891 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv883 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next884, %for.inc ]
  %g.0821 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv883, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0821, 1
  %idxprom41 = sext i32 %g.0821 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond641643893, i64 %idxprom41
  %30 = trunc i64 %indvars.iv883 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0821, %for.body ]
  %indvars.iv.next884 = add nuw nsw i64 %indvars.iv883, 1
  %lftr.wideiv885 = trunc i64 %indvars.iv.next884 to i32
  %exitcond886 = icmp eq i32 %lftr.wideiv885, %13
  br i1 %exitcond886, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond641643893, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond641643893, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa900 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19645890899 = phi i32* [ %cond19645891, %for.end ], [ %cond19645891, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond641643892898 = phi i32* [ %cond641643893, %for.end ], [ %cond641643893, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30894897 = phi i32* [ %cond30895, %for.end ], [ %cond30895, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56814 = icmp sgt i32 %g.0.lcssa900, 0
  br i1 %cmp56814, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv879 = phi i64 [ %indvars.iv.next880, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0816 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0815 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond641643892898, i64 %indvars.iv879
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0816, 1
  %idxprom68 = sext i32 %fixg.0816 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19645890899, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0815, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0816, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next880 = add nuw nsw i64 %indvars.iv879, 1
  %lftr.wideiv881 = trunc i64 %indvars.iv.next880 to i32
  %exitcond882 = icmp eq i32 %lftr.wideiv881, %g.0.lcssa900
  br i1 %exitcond882, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond641643892898, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond641643892898 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19645890899, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19645890899 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30894897, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30894897 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19645890899, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19645890899, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2648 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147667 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125653655665 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114649651657663 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136659661 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171792 = icmp sgt i32 %sub162, 0
  br i1 %cmp171792, label %for.body172.lr.ph, label %for.end1059

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i638 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125653655665 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147667 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30894897 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114649651657663 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1057, %for.body172.lr.ph
  %exclChecksum.0806 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1057 ]
  %i.0799 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1058, %for.inc1057 ]
  %j_hgroup.0798 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1057 ]
  %g_lower.0797 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1057 ]
  %fixg_lower.0796 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1057 ]
  %pairlistindex.0795 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1057 ]
  %pairlistoffset.0794 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1057 ]
  %pairCount.0793 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1057 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %293, %for.inc1057 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %294, %for.inc1057 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %295, %for.inc1057 ]
  %idxprom173 = sext i32 %i.0799 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i669 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i669, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i669, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i669, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0799
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0793
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0793, %div165
  %cmp214 = icmp slt i32 %pairCount.0793, %div168
  %or.cond627 = and i1 %cmp212, %cmp214
  br i1 %or.cond627, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0799
  br label %for.inc1057

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0793, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0799
  %cmp237676 = icmp slt i32 %g_lower.0797, %g.0.lcssa900
  br i1 %cmp237676, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0797 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa900
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1677 = phi i32 [ %g_lower.0797, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond641643892898, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1677, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0797, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1677, %land.rhs238 ]
  %cmp245678 = icmp slt i32 %fixg_lower.0796, %fixg.2648
  br i1 %cmp245678, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0796 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next829 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2648
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv828 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next829, %while.cond244 ]
  %fixg_lower.1679 = phi i32 [ %fixg_lower.0796, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19645890899, i64 %indvars.iv828
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next829 = add nsw i64 %indvars.iv828, 1
  %inc252 = add nsw i32 %fixg_lower.1679, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0796, %land.end ], [ %fixg_lower.0796, %while.cond244.loopexit ], [ %fixg_lower.1679, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0797, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0798, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1681 = add nsw i32 %i.0799, 1
  %cmp257682 = icmp slt i32 %j.1681, %j_hgroup.1
  br i1 %cmp257682, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0799
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0799
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1681
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1681, %86
  %broadcast.splatinsert928 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat929 = shufflevector <4 x i32> %broadcast.splatinsert928, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction930 = add <4 x i32> %broadcast.splat929, <i32 0, i32 1, i32 2, i32 3>
  %induction931 = add <4 x i32> %broadcast.splat929, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114649651657663, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction930, <4 x i32>* %88, align 4
  %.sum934 = or i64 %index, 4
  %89 = getelementptr i32* %cond114649651657663, i64 %.sum934
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction931, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !107

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val926 = phi i32 [ %j.1681, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv830 = phi i64 [ %indvars.iv.next831, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1684 = phi i32 [ %j.1, %for.body258 ], [ %resume.val926, %middle.block ]
  %indvars.iv.next831 = add nuw nsw i64 %indvars.iv830, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114649651657663, i64 %indvars.iv830
  store i32 %j.1684, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1684, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next831 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !108

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114649651657663, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19645890899, i32* %cond641643892898
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2648, i32 %g.0.lcssa900
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30894897, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv836 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next837, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv836 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next837 = add nsw i64 %indvars.iv836, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next837
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div624 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div624 to i32
  %cmp330690 = icmp sgt i32 %conv328, 0
  br i1 %cmp330690, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv838 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next839, %cond.end351 ]
  %pli.0692 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30894897, i64 %indvars.iv838
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp625 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp625, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0692, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0692, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0692, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0692, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0692, i64 %cond352
  %indvars.iv.next839 = add nuw nsw i64 %indvars.iv838, 1
  %lftr.wideiv840 = trunc i64 %indvars.iv.next839 to i32
  %exitcond841 = icmp eq i32 %lftr.wideiv840, %104
  br i1 %exitcond841, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369621 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369621 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext622 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext622, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114649651657663, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114649651657663, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0794, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0793, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0795, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0796, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0797, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0798, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  %bf.load394.pre = load i32* %62, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load394.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %109 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %110 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %110 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  %bf.clear395 = and i32 %bf.load394.pre, 4194303
  %idxprom.i637670 = zext i32 %bf.clear395 to i64
  %111 = load i32** %atomVdwType.i638, align 8, !tbaa !64
  %arrayidx.i639 = getelementptr inbounds i32* %111, i64 %idxprom.i637670
  %112 = load i32* %arrayidx.i639, align 4, !tbaa !11
  %113 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %114 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv397 = shl i32 %112, 1
  %mul.i = and i32 %conv397, 131070
  %mul2.i = mul i32 %mul.i, %114
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp403718 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %109, label %for.cond402.preheader, label %if.else463

for.cond402.preheader:                            ; preds = %land.end387
  br i1 %cmp403718, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %115 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv851 = phi i64 [ %115, %for.body404.lr.ph ], [ %indvars.iv.next852, %for.inc460 ]
  %exclChecksum.1722 = phi i32 [ %exclChecksum.0806, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0721 = phi i32* [ %cond125653655665, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0720 = phi i32* [ %cond136659661, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114649651657663, i64 %indvars.iv851
  %116 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %116 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %117 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %67, %117
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %118 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %68, %118
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %119 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %69, %119
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %120 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %120, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond628 = or i1 %tobool438, %cmp439
  br i1 %or.cond628, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1722, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1722, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %64
  %cmp453 = icmp sgt i32 %bf.clear450, %65
  %or.cond629 = or i1 %cmp451, %cmp453
  br i1 %or.cond629, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0721, i64 1
  store i32 %116, i32* %pli399.0721, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0720, i64 1
  store i32 %116, i32* %plin.0720, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0720, %for.body404 ], [ %plin.0720, %land.lhs.true442 ], [ %plin.0720, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0721, %for.body404 ], [ %pli399.0721, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0721, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1722, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next852 = add nsw i64 %indvars.iv851, 1
  %lftr.wideiv853 = trunc i64 %indvars.iv.next852 to i32
  %exitcond854 = icmp eq i32 %lftr.wideiv853, %pairlistindex.2
  br i1 %exitcond854, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387
  br i1 %cmp403718, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114649651657663, i64 %idxprom468
  %121 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %121 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %122 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %123 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %124 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %124, %if.then466 ], [ %130, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %123, %if.then466 ], [ %129, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %122, %if.then466 ], [ %128, %if.else531 ]
  %j2467.0.ph = phi i32 [ %121, %if.then466 ], [ %127, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136659661, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125653655665, %if.then466 ], [ %pli399.2.ph701, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0806, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer694

while.cond491.outer694:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph695 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph696 = phi double [ %130, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph697 = phi double [ %129, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph698 = phi double [ %128, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph699 = phi i32 [ %127, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph700 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph701 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph702 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer703

while.cond491.outer703:                           ; preds = %land.lhs.true522, %while.cond491.outer694
  %idxprom471.pn.ph704 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph695, %while.cond491.outer694 ]
  %p_j_z480.0.ph705 = phi double [ %130, %land.lhs.true522 ], [ %p_j_z480.0.ph696, %while.cond491.outer694 ]
  %p_j_y475.0.ph706 = phi double [ %129, %land.lhs.true522 ], [ %p_j_y475.0.ph697, %while.cond491.outer694 ]
  %p_j_x470.0.ph707 = phi double [ %128, %land.lhs.true522 ], [ %p_j_x470.0.ph698, %while.cond491.outer694 ]
  %j2467.0.ph708 = phi i32 [ %127, %land.lhs.true522 ], [ %j2467.0.ph699, %while.cond491.outer694 ]
  %k464.0.ph709 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph700, %while.cond491.outer694 ]
  %exclChecksum.4.ph710 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph702, %while.cond491.outer694 ]
  %125 = sext i32 %k464.0.ph709 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer703
  %indvars.iv847 = phi i64 [ %125, %while.cond491.outer703 ], [ %indvars.iv.next848, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph704, %while.cond491.outer703 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph705, %while.cond491.outer703 ], [ %130, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph706, %while.cond491.outer703 ], [ %129, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph707, %while.cond491.outer703 ], [ %128, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph708, %while.cond491.outer703 ], [ %127, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph709, %while.cond491.outer703 ], [ %inc494, %while.body493 ]
  %126 = trunc i64 %indvars.iv847 to i32
  %cmp492 = icmp slt i32 %126, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next848 = add nsw i64 %indvars.iv847, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114649651657663, i64 %indvars.iv.next848
  %127 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %67, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %127 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %128 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %68, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %129 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %69, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %130 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph710, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer703

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph710, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %64
  %cmp528 = icmp sgt i32 %atom2485.0, %65
  %or.cond630 = or i1 %cmp526, %cmp528
  br i1 %or.cond630, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph701, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph701, align 4, !tbaa !11
  br label %while.cond491.outer694

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %plin.4 = phi i32* [ %cond136659661, %if.else463 ], [ %cond136659661, %for.cond402.preheader ], [ %plin.2.ph, %while.cond491 ], [ %plin.1, %for.inc460 ]
  %pli399.4 = phi i32* [ %cond125653655665, %if.else463 ], [ %cond125653655665, %for.cond402.preheader ], [ %pli399.2.ph701, %while.cond491 ], [ %pli399.1, %for.inc460 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0806, %if.else463 ], [ %exclChecksum.0806, %for.cond402.preheader ], [ %exclChecksum.4.ph710, %while.cond491 ], [ %exclChecksum.3, %for.inc460 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546577 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546577 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext619 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext619, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125653655665, i64 %idxprom551
  %131 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125653655665, i64 %idxprom553
  store i32 %131, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558726 = icmp ult i32* %cond136659661, %plin.4
  br i1 %cmp558726, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8729 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0728 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147667, %for.cond557.preheader ]
  %pln.0727 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136659661, %for.cond557.preheader ]
  %132 = load i32* %pln.0727, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %132, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0728, i64 1
  store i32 %132, i32* %plix.0728, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8729, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0727, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8729, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147667, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0728, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136659661, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0727, %land.lhs.true559 ]
  %cmp567733 = icmp sgt i32 %conv547, 0
  br i1 %cmp567733, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv861 = phi i64 [ %indvars.iv.next862, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9736 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1735 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0734 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125653655665, i64 %indvars.iv861
  %133 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %133, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1735, i64 1
  store i32 %133, i32* %plix.1735, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9736, -1
  %indvars.iv.next862 = add nuw nsw i64 %indvars.iv861, 1
  %inc578 = add nsw i32 %k556.0734, 1
  %134 = trunc i64 %indvars.iv.next862 to i32
  %cmp567 = icmp slt i32 %134, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9736, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1735, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0734, %land.lhs.true568 ]
  %cmp581740 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581740, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %135 = sext i32 %k556.0.lcssa to i64
  %136 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %137 = lshr i64 %136, 2
  %138 = trunc i64 %137 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv863 = phi i64 [ %135, %for.body582.lr.ph ], [ %indvars.iv.next864, %for.inc600 ]
  %plin.5744 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2743 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0742 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125653655665, i64 %indvars.iv863
  %139 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %139 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %140 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %140, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592618 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592618, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %141 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %141 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5744, i64 1
  store i32 %139, i32* %plin.5744, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2743, i64 1
  store i32 %139, i32* %plix.2743, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0742, i64 1
  store i32 %139, i32* %plim.0742, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0742, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0742, %sw.bb596 ], [ %plim.0742, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2743, %for.body582 ], [ %plix.2743, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2743, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5744, %for.body582 ], [ %plin.5744, %sw.bb598 ], [ %plin.5744, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next864 = add nsw i64 %indvars.iv863, 1
  %lftr.wideiv865 = trunc i64 %indvars.iv.next864 to i32
  %exitcond866 = icmp eq i32 %lftr.wideiv865, %138
  br i1 %exitcond866, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606 = ashr exact i64 %sub.ptr.sub605, 2
  %conv607578 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607578
  %add615 = add i64 %add608, %sub.ptr.div606
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620580 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620580 to i32
  %cmp623748 = icmp sgt i32 %conv621, 0
  br i1 %cmp623748, label %for.body624.lr.ph, label %for.end750

for.body624.lr.ph:                                ; preds = %for.end602
  %x728 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y737 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z744 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624.for.body624_crit_edge, %for.body624.lr.ph
  %142 = phi i32* [ %111, %for.body624.lr.ph ], [ %.pre, %for.body624.for.body624_crit_edge ]
  %indvars.iv867 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next868, %for.body624.for.body624_crit_edge ]
  %143 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %171, %for.body624.for.body624_crit_edge ]
  %144 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %178, %for.body624.for.body624_crit_edge ]
  %145 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %189, %for.body624.for.body624_crit_edge ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv867
  %146 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %146 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %147 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %67, %147
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %148 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %68, %148
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %149 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %69, %149
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %150 = bitcast float %conv645 to i32
  %shr = ashr i32 %150, 17
  %add647 = add nsw i32 %shr, %mul
  %id648 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 2
  %151 = bitcast [4 x i8]* %id648 to i32*
  %bf.load649 = load i32* %151, align 4
  %bf.clear650 = and i32 %bf.load649, 4194303
  %idxprom.i633673 = zext i32 %bf.clear650 to i64
  %arrayidx.i635 = getelementptr inbounds i32* %142, i64 %idxprom.i633673
  %152 = load i32* %arrayidx.i635, align 4, !tbaa !11
  %conv.i636 = zext i32 %152 to i64
  %conv652 = shl nuw nsw i64 %conv.i636, 1
  %mul653 = and i64 %conv652, 131070
  %mul656 = shl nsw i32 %add647, 4
  %idx.ext657 = sext i32 %mul656 to i64
  %and = and i32 %150, -131072
  %charge671 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %153 = load float* %charge671, align 4, !tbaa !63
  %conv672 = fpext float %153 to double
  %mul673 = fmul double %mul392, %conv672
  %154 = bitcast i32 %and to float
  %conv675 = fpext float %154 to double
  %sub676 = fsub double %add644, %conv675
  %add.ptr.i.sum674 = add i64 %mul653, %idx.ext.i
  %A678 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum674, i32 0
  %155 = load double* %A678, align 8, !tbaa !69
  %mul679 = fmul double %8, %155
  %B681 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum674, i32 1
  %156 = load double* %B681, align 8, !tbaa !71
  %mul682 = fmul double %8, %156
  %add.ptr658.sum609 = or i64 %idx.ext657, 3
  %arrayidx686 = getelementptr inbounds double* %7, i64 %add.ptr658.sum609
  %157 = load double* %arrayidx686, align 8, !tbaa !17
  %mul687 = fmul double %mul679, %157
  %add.ptr663.sum610 = or i64 %idx.ext657, 7
  %arrayidx688 = getelementptr inbounds double* %7, i64 %add.ptr663.sum610
  %158 = load double* %arrayidx688, align 8, !tbaa !17
  %mul689 = fmul double %mul682, %158
  %sub690 = fsub double %mul687, %mul689
  %add.ptr658.sum611 = or i64 %idx.ext657, 2
  %arrayidx691 = getelementptr inbounds double* %7, i64 %add.ptr658.sum611
  %159 = load double* %arrayidx691, align 8, !tbaa !17
  %mul692 = fmul double %mul679, %159
  %add.ptr663.sum612 = or i64 %idx.ext657, 6
  %arrayidx693 = getelementptr inbounds double* %7, i64 %add.ptr663.sum612
  %160 = load double* %arrayidx693, align 8, !tbaa !17
  %mul694 = fmul double %mul682, %160
  %sub695 = fsub double %mul692, %mul694
  %add.ptr658.sum613 = or i64 %idx.ext657, 1
  %arrayidx696 = getelementptr inbounds double* %7, i64 %add.ptr658.sum613
  %161 = load double* %arrayidx696, align 8, !tbaa !17
  %mul697 = fmul double %mul679, %161
  %add.ptr663.sum614 = or i64 %idx.ext657, 5
  %arrayidx698 = getelementptr inbounds double* %7, i64 %add.ptr663.sum614
  %162 = load double* %arrayidx698, align 8, !tbaa !17
  %mul699 = fmul double %mul682, %162
  %sub700 = fsub double %mul697, %mul699
  %add.ptr668.sum615 = or i64 %idx.ext657, 9
  %arrayidx701 = getelementptr inbounds double* %7, i64 %add.ptr668.sum615
  %163 = load double* %arrayidx701, align 8, !tbaa !17
  %add.ptr668.sum616 = or i64 %idx.ext657, 10
  %arrayidx702 = getelementptr inbounds double* %7, i64 %add.ptr668.sum616
  %164 = load double* %arrayidx702, align 8, !tbaa !17
  %add.ptr668.sum617 = or i64 %idx.ext657, 11
  %arrayidx703 = getelementptr inbounds double* %7, i64 %add.ptr668.sum617
  %165 = load double* %arrayidx703, align 8, !tbaa !17
  %mul704 = fmul double %mul673, %165
  %mul705 = fmul double %mul673, %164
  %mul706 = fmul double %mul673, %163
  %add708 = fadd double %sub690, %mul704
  %add709 = fadd double %sub695, %mul705
  %add710 = fadd double %mul706, %sub700
  %mul712 = fmul double %sub676, 3.000000e+00
  %mul713 = fmul double %mul712, %add708
  %mul714 = fmul double %add709, 2.000000e+00
  %add715 = fadd double %mul714, %mul713
  %mul716 = fmul double %sub676, %add715
  %add717 = fadd double %add710, %mul716
  %mul718 = fmul double %add717, -2.000000e+00
  %mul721 = fmul double %sub632, %mul718
  %166 = insertelement <2 x double> undef, double %sub632, i32 0
  %167 = insertelement <2 x double> %166, double %sub637, i32 1
  %168 = insertelement <2 x double> undef, double %mul721, i32 0
  %169 = insertelement <2 x double> %168, double %mul721, i32 1
  %170 = fmul <2 x double> %167, %169
  %171 = fadd <2 x double> %143, %170
  %172 = load double* %x728, align 8, !tbaa !72
  %add729 = fadd double %172, %mul721
  store double %add729, double* %x728, align 8, !tbaa !72
  %x730 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul732 = fmul double %sub637, %mul718
  %173 = insertelement <2 x double> undef, double %sub637, i32 0
  %174 = insertelement <2 x double> %173, double %sub642, i32 1
  %175 = insertelement <2 x double> undef, double %mul732, i32 0
  %176 = insertelement <2 x double> %175, double %mul732, i32 1
  %177 = fmul <2 x double> %174, %176
  %178 = fadd <2 x double> %144, %177
  %179 = load double* %y737, align 8, !tbaa !73
  %add738 = fadd double %179, %mul732
  store double %add738, double* %y737, align 8, !tbaa !73
  %180 = bitcast double* %x730 to <2 x double>*
  %181 = load <2 x double>* %180, align 8, !tbaa !17
  %182 = insertelement <2 x double> %168, double %mul732, i32 1
  %183 = fsub <2 x double> %181, %182
  %184 = bitcast double* %x730 to <2 x double>*
  store <2 x double> %183, <2 x double>* %184, align 8, !tbaa !17
  %mul741 = fmul double %sub642, %mul718
  %185 = insertelement <2 x double> undef, double %sub642, i32 0
  %186 = insertelement <2 x double> %185, double %sub642, i32 1
  %187 = insertelement <2 x double> %168, double %mul741, i32 1
  %188 = fmul <2 x double> %186, %187
  %189 = fadd <2 x double> %145, %188
  %190 = load double* %z744, align 8, !tbaa !74
  %add745 = fadd double %190, %mul741
  store double %add745, double* %z744, align 8, !tbaa !74
  %z746 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %191 = load double* %z746, align 8, !tbaa !74
  %sub747 = fsub double %191, %mul741
  store double %sub747, double* %z746, align 8, !tbaa !74
  %indvars.iv.next868 = add nuw nsw i64 %indvars.iv867, 1
  %lftr.wideiv869 = trunc i64 %indvars.iv.next868 to i32
  %exitcond870 = icmp eq i32 %lftr.wideiv869, %conv621
  br i1 %exitcond870, label %for.end750, label %for.body624.for.body624_crit_edge

for.body624.for.body624_crit_edge:                ; preds = %for.body624
  %.pre = load i32** %atomVdwType.i638, align 8, !tbaa !64
  br label %for.body624

for.end750:                                       ; preds = %for.body624, %for.end602
  %192 = phi <2 x double> [ %59, %for.end602 ], [ %171, %for.body624 ]
  %193 = phi <2 x double> [ %60, %for.end602 ], [ %178, %for.body624 ]
  %194 = phi <2 x double> [ %61, %for.end602 ], [ %189, %for.body624 ]
  %conv755 = trunc i64 %sub.ptr.div613 to i32
  %cmp757762 = icmp sgt i32 %conv755, 0
  br i1 %cmp757762, label %for.body758.lr.ph, label %for.end932

for.body758.lr.ph:                                ; preds = %for.end750
  %x908 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y918 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z926 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body758

for.body758:                                      ; preds = %for.body758, %for.body758.lr.ph
  %indvars.iv871 = phi i64 [ 0, %for.body758.lr.ph ], [ %indvars.iv.next872, %for.body758 ]
  %195 = phi <2 x double> [ %192, %for.body758.lr.ph ], [ %227, %for.body758 ]
  %196 = phi <2 x double> [ %193, %for.body758.lr.ph ], [ %234, %for.body758 ]
  %197 = phi <2 x double> [ %194, %for.body758.lr.ph ], [ %245, %for.body758 ]
  %arrayidx761 = getelementptr inbounds i32* %cond158, i64 %indvars.iv871
  %198 = load i32* %arrayidx761, align 4, !tbaa !11
  %idx.ext763 = sext i32 %198 to i64
  %x767 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 0
  %199 = load double* %x767, align 8, !tbaa !59
  %sub768 = fsub double %67, %199
  %mul770 = fmul double %sub768, %sub768
  %y773 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 1
  %200 = load double* %y773, align 8, !tbaa !61
  %sub774 = fsub double %68, %200
  %mul775 = fmul double %sub774, %sub774
  %add776 = fadd double %mul770, %mul775
  %z779 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 0, i32 2
  %201 = load double* %z779, align 8, !tbaa !62
  %sub780 = fsub double %69, %201
  %mul781 = fmul double %sub780, %sub780
  %add782 = fadd double %add776, %mul781
  %conv784 = fptrunc double %add782 to float
  %202 = bitcast float %conv784 to i32
  %shr788 = ashr i32 %202, 17
  %add789 = add nsw i32 %shr788, %mul
  %id791 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 2
  %203 = bitcast [4 x i8]* %id791 to i32*
  %bf.load792 = load i32* %203, align 4
  %bf.clear793 = and i32 %bf.load792, 4194303
  %idxprom.i631671 = zext i32 %bf.clear793 to i64
  %204 = load i32** %atomVdwType.i638, align 8, !tbaa !64
  %arrayidx.i632 = getelementptr inbounds i32* %204, i64 %idxprom.i631671
  %205 = load i32* %arrayidx.i632, align 4, !tbaa !11
  %conv.i = zext i32 %205 to i64
  %conv795 = shl nuw nsw i64 %conv.i, 1
  %mul796 = and i64 %conv795, 131070
  %add.ptr798.sum590 = or i64 %mul796, 1
  %mul801 = shl nsw i32 %add789, 4
  %idx.ext802 = sext i32 %mul801 to i64
  %and821 = and i32 %202, -131072
  %charge823 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext763, i32 1
  %206 = load float* %charge823, align 4, !tbaa !63
  %conv824 = fpext float %206 to double
  %mul825 = fmul double %mul392, %conv824
  %207 = bitcast i32 %and821 to float
  %conv828 = fpext float %207 to double
  %sub829 = fsub double %add782, %conv828
  %add.ptr.i.sum = add i64 %add.ptr798.sum590, %idx.ext.i
  %A831 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum, i32 0
  %208 = load double* %A831, align 8, !tbaa !69
  %mul832 = fmul double %8, %208
  %B834 = getelementptr inbounds %"struct.LJTable::TableEntry"* %113, i64 %add.ptr.i.sum, i32 1
  %209 = load double* %B834, align 8, !tbaa !71
  %mul835 = fmul double %8, %209
  %add.ptr803.sum593 = or i64 %idx.ext802, 3
  %arrayidx841 = getelementptr inbounds double* %7, i64 %add.ptr803.sum593
  %210 = load double* %arrayidx841, align 8, !tbaa !17
  %mul842 = fmul double %mul832, %210
  %add.ptr810.sum594 = or i64 %idx.ext802, 7
  %arrayidx843 = getelementptr inbounds double* %7, i64 %add.ptr810.sum594
  %211 = load double* %arrayidx843, align 8, !tbaa !17
  %mul844 = fmul double %mul835, %211
  %sub845 = fsub double %mul842, %mul844
  %add.ptr803.sum595 = or i64 %idx.ext802, 2
  %arrayidx847 = getelementptr inbounds double* %7, i64 %add.ptr803.sum595
  %212 = load double* %arrayidx847, align 8, !tbaa !17
  %mul848 = fmul double %mul832, %212
  %add.ptr810.sum596 = or i64 %idx.ext802, 6
  %arrayidx849 = getelementptr inbounds double* %7, i64 %add.ptr810.sum596
  %213 = load double* %arrayidx849, align 8, !tbaa !17
  %mul850 = fmul double %mul835, %213
  %sub851 = fsub double %mul848, %mul850
  %add.ptr803.sum597 = or i64 %idx.ext802, 1
  %arrayidx853 = getelementptr inbounds double* %7, i64 %add.ptr803.sum597
  %214 = load double* %arrayidx853, align 8, !tbaa !17
  %mul854 = fmul double %mul832, %214
  %add.ptr810.sum598 = or i64 %idx.ext802, 5
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr810.sum598
  %215 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul835, %215
  %sub857 = fsub double %mul854, %mul856
  %add.ptr817.sum599 = or i64 %idx.ext802, 9
  %arrayidx859 = getelementptr inbounds double* %7, i64 %add.ptr817.sum599
  %216 = load double* %arrayidx859, align 8, !tbaa !17
  %add.ptr817.sum600 = or i64 %idx.ext802, 10
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr817.sum600
  %217 = load double* %arrayidx861, align 8, !tbaa !17
  %add.ptr817.sum601 = or i64 %idx.ext802, 11
  %arrayidx863 = getelementptr inbounds double* %7, i64 %add.ptr817.sum601
  %218 = load double* %arrayidx863, align 8, !tbaa !17
  %add.ptr867.sum603 = or i64 %idx.ext802, 13
  %arrayidx871 = getelementptr inbounds double* %7, i64 %add.ptr867.sum603
  %219 = load double* %arrayidx871, align 8, !tbaa !17
  %mul872 = fmul double %sub, %219
  %sub873 = fsub double %216, %mul872
  %add.ptr867.sum604 = or i64 %idx.ext802, 14
  %arrayidx874 = getelementptr inbounds double* %7, i64 %add.ptr867.sum604
  %220 = load double* %arrayidx874, align 8, !tbaa !17
  %mul875 = fmul double %sub, %220
  %sub876 = fsub double %217, %mul875
  %add.ptr867.sum605 = or i64 %idx.ext802, 15
  %arrayidx877 = getelementptr inbounds double* %7, i64 %add.ptr867.sum605
  %221 = load double* %arrayidx877, align 8, !tbaa !17
  %mul878 = fmul double %sub, %221
  %sub879 = fsub double %218, %mul878
  %mul880 = fmul double %mul825, %sub879
  %mul881 = fmul double %mul825, %sub876
  %mul882 = fmul double %mul825, %sub873
  %add884 = fadd double %sub845, %mul880
  %add885 = fadd double %sub851, %mul881
  %add886 = fadd double %sub857, %mul882
  %mul889 = fmul double %sub829, 3.000000e+00
  %mul890 = fmul double %mul889, %add884
  %mul891 = fmul double %add885, 2.000000e+00
  %add892 = fadd double %mul891, %mul890
  %mul893 = fmul double %sub829, %add892
  %add894 = fadd double %add886, %mul893
  %mul896 = fmul double %add894, -2.000000e+00
  %mul901 = fmul double %sub768, %mul896
  %222 = insertelement <2 x double> undef, double %sub768, i32 0
  %223 = insertelement <2 x double> %222, double %sub774, i32 1
  %224 = insertelement <2 x double> undef, double %mul901, i32 0
  %225 = insertelement <2 x double> %224, double %mul901, i32 1
  %226 = fmul <2 x double> %223, %225
  %227 = fadd <2 x double> %195, %226
  %228 = load double* %x908, align 8, !tbaa !72
  %add909 = fadd double %228, %mul901
  store double %add909, double* %x908, align 8, !tbaa !72
  %x910 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext763, i32 0
  %mul913 = fmul double %sub774, %mul896
  %229 = insertelement <2 x double> undef, double %sub774, i32 0
  %230 = insertelement <2 x double> %229, double %sub780, i32 1
  %231 = insertelement <2 x double> undef, double %mul913, i32 0
  %232 = insertelement <2 x double> %231, double %mul913, i32 1
  %233 = fmul <2 x double> %230, %232
  %234 = fadd <2 x double> %196, %233
  %235 = load double* %y918, align 8, !tbaa !73
  %add919 = fadd double %235, %mul913
  store double %add919, double* %y918, align 8, !tbaa !73
  %236 = bitcast double* %x910 to <2 x double>*
  %237 = load <2 x double>* %236, align 8, !tbaa !17
  %238 = insertelement <2 x double> %224, double %mul913, i32 1
  %239 = fsub <2 x double> %237, %238
  %240 = bitcast double* %x910 to <2 x double>*
  store <2 x double> %239, <2 x double>* %240, align 8, !tbaa !17
  %mul923 = fmul double %sub780, %mul896
  %241 = insertelement <2 x double> undef, double %sub780, i32 0
  %242 = insertelement <2 x double> %241, double %sub780, i32 1
  %243 = insertelement <2 x double> %224, double %mul923, i32 1
  %244 = fmul <2 x double> %242, %243
  %245 = fadd <2 x double> %197, %244
  %246 = load double* %z926, align 8, !tbaa !74
  %add927 = fadd double %246, %mul923
  store double %add927, double* %z926, align 8, !tbaa !74
  %z928 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext763, i32 2
  %247 = load double* %z928, align 8, !tbaa !74
  %sub929 = fsub double %247, %mul923
  store double %sub929, double* %z928, align 8, !tbaa !74
  %indvars.iv.next872 = add nuw nsw i64 %indvars.iv871, 1
  %lftr.wideiv873 = trunc i64 %indvars.iv.next872 to i32
  %exitcond874 = icmp eq i32 %lftr.wideiv873, %conv755
  br i1 %exitcond874, label %for.end932, label %for.body758

for.end932:                                       ; preds = %for.body758, %for.end750
  %248 = phi <2 x double> [ %192, %for.end750 ], [ %227, %for.body758 ]
  %249 = phi <2 x double> [ %193, %for.end750 ], [ %234, %for.body758 ]
  %250 = phi <2 x double> [ %194, %for.end750 ], [ %245, %for.body758 ]
  %conv937 = trunc i64 %sub.ptr.div606 to i32
  %cmp939776 = icmp sgt i32 %conv937, 0
  br i1 %cmp939776, label %for.body940.lr.ph, label %for.inc1057

for.body940.lr.ph:                                ; preds = %for.end932
  %x1032 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1042 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1050 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body940

for.body940:                                      ; preds = %for.body940, %for.body940.lr.ph
  %indvars.iv875 = phi i64 [ 0, %for.body940.lr.ph ], [ %indvars.iv.next876, %for.body940 ]
  %251 = phi <2 x double> [ %248, %for.body940.lr.ph ], [ %272, %for.body940 ]
  %252 = phi <2 x double> [ %249, %for.body940.lr.ph ], [ %279, %for.body940 ]
  %253 = phi <2 x double> [ %250, %for.body940.lr.ph ], [ %290, %for.body940 ]
  %arrayidx943 = getelementptr inbounds i32* %cond147667, i64 %indvars.iv875
  %254 = load i32* %arrayidx943, align 4, !tbaa !11
  %idx.ext945 = sext i32 %254 to i64
  %x949 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext945, i32 0, i32 0
  %255 = load double* %x949, align 8, !tbaa !59
  %sub950 = fsub double %67, %255
  %mul952 = fmul double %sub950, %sub950
  %y955 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext945, i32 0, i32 1
  %256 = load double* %y955, align 8, !tbaa !61
  %sub956 = fsub double %68, %256
  %mul957 = fmul double %sub956, %sub956
  %add958 = fadd double %mul952, %mul957
  %z961 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext945, i32 0, i32 2
  %257 = load double* %z961, align 8, !tbaa !62
  %sub962 = fsub double %69, %257
  %mul963 = fmul double %sub962, %sub962
  %add964 = fadd double %add958, %mul963
  %conv966 = fptrunc double %add964 to float
  %258 = bitcast float %conv966 to i32
  %shr970 = ashr i32 %258, 17
  %add971 = add nsw i32 %shr970, %mul
  %mul973 = shl nsw i32 %add971, 4
  %idx.ext974 = sext i32 %mul973 to i64
  %and980 = and i32 %258, -131072
  %charge982 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext945, i32 1
  %259 = load float* %charge982, align 4, !tbaa !63
  %conv983 = fpext float %259 to double
  %mul984 = fmul double %mul392, %conv983
  %260 = bitcast i32 %and980 to float
  %conv987 = fpext float %260 to double
  %sub988 = fsub double %add964, %conv987
  %add.ptr976.sum582 = or i64 %idx.ext974, 9
  %arrayidx990 = getelementptr inbounds double* %7, i64 %add.ptr976.sum582
  %261 = load double* %arrayidx990, align 8, !tbaa !17
  %add.ptr976.sum583 = or i64 %idx.ext974, 10
  %arrayidx992 = getelementptr inbounds double* %7, i64 %add.ptr976.sum583
  %262 = load double* %arrayidx992, align 8, !tbaa !17
  %add.ptr976.sum584 = or i64 %idx.ext974, 11
  %arrayidx994 = getelementptr inbounds double* %7, i64 %add.ptr976.sum584
  %263 = load double* %arrayidx994, align 8, !tbaa !17
  %add.ptr999.sum586 = or i64 %idx.ext974, 13
  %arrayidx1002 = getelementptr inbounds double* %7, i64 %add.ptr999.sum586
  %264 = load double* %arrayidx1002, align 8, !tbaa !17
  %sub1003 = fsub double %261, %264
  %add.ptr999.sum587 = or i64 %idx.ext974, 14
  %arrayidx1004 = getelementptr inbounds double* %7, i64 %add.ptr999.sum587
  %265 = load double* %arrayidx1004, align 8, !tbaa !17
  %sub1005 = fsub double %262, %265
  %add.ptr999.sum588 = or i64 %idx.ext974, 15
  %arrayidx1006 = getelementptr inbounds double* %7, i64 %add.ptr999.sum588
  %266 = load double* %arrayidx1006, align 8, !tbaa !17
  %sub1007 = fsub double %263, %266
  %mul1008 = fmul double %mul984, %sub1007
  %mul1009 = fmul double %mul984, %sub1005
  %mul1010 = fmul double %mul984, %sub1003
  %mul1013 = fmul double %sub988, 3.000000e+00
  %mul1014 = fmul double %mul1008, %mul1013
  %mul1015 = fmul double %mul1009, 2.000000e+00
  %add1016 = fadd double %mul1015, %mul1014
  %mul1017 = fmul double %sub988, %add1016
  %add1018 = fadd double %mul1010, %mul1017
  %mul1020 = fmul double %add1018, -2.000000e+00
  %mul1025 = fmul double %sub950, %mul1020
  %267 = insertelement <2 x double> undef, double %sub950, i32 0
  %268 = insertelement <2 x double> %267, double %sub956, i32 1
  %269 = insertelement <2 x double> undef, double %mul1025, i32 0
  %270 = insertelement <2 x double> %269, double %mul1025, i32 1
  %271 = fmul <2 x double> %268, %270
  %272 = fadd <2 x double> %251, %271
  %273 = load double* %x1032, align 8, !tbaa !72
  %add1033 = fadd double %273, %mul1025
  store double %add1033, double* %x1032, align 8, !tbaa !72
  %x1034 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext945, i32 0
  %mul1037 = fmul double %sub956, %mul1020
  %274 = insertelement <2 x double> undef, double %sub956, i32 0
  %275 = insertelement <2 x double> %274, double %sub962, i32 1
  %276 = insertelement <2 x double> undef, double %mul1037, i32 0
  %277 = insertelement <2 x double> %276, double %mul1037, i32 1
  %278 = fmul <2 x double> %275, %277
  %279 = fadd <2 x double> %252, %278
  %280 = load double* %y1042, align 8, !tbaa !73
  %add1043 = fadd double %280, %mul1037
  store double %add1043, double* %y1042, align 8, !tbaa !73
  %281 = bitcast double* %x1034 to <2 x double>*
  %282 = load <2 x double>* %281, align 8, !tbaa !17
  %283 = insertelement <2 x double> %269, double %mul1037, i32 1
  %284 = fsub <2 x double> %282, %283
  %285 = bitcast double* %x1034 to <2 x double>*
  store <2 x double> %284, <2 x double>* %285, align 8, !tbaa !17
  %mul1047 = fmul double %sub962, %mul1020
  %286 = insertelement <2 x double> undef, double %sub962, i32 0
  %287 = insertelement <2 x double> %286, double %sub962, i32 1
  %288 = insertelement <2 x double> %269, double %mul1047, i32 1
  %289 = fmul <2 x double> %287, %288
  %290 = fadd <2 x double> %253, %289
  %291 = load double* %z1050, align 8, !tbaa !74
  %add1051 = fadd double %291, %mul1047
  store double %add1051, double* %z1050, align 8, !tbaa !74
  %z1052 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext945, i32 2
  %292 = load double* %z1052, align 8, !tbaa !74
  %sub1053 = fsub double %292, %mul1047
  store double %sub1053, double* %z1052, align 8, !tbaa !74
  %indvars.iv.next876 = add nuw nsw i64 %indvars.iv875, 1
  %lftr.wideiv877 = trunc i64 %indvars.iv.next876 to i32
  %exitcond878 = icmp eq i32 %lftr.wideiv877, %conv937
  br i1 %exitcond878, label %for.inc1057, label %for.body940

for.inc1057:                                      ; preds = %for.body940, %for.end932, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end932 ], [ %pairCount.2, %for.body940 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0794, %if.then215 ], [ %pairlistoffset.1, %for.end932 ], [ %pairlistoffset.1, %for.body940 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0795, %if.then215 ], [ %pairlistindex.2, %for.end932 ], [ %pairlistindex.2, %for.body940 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0796, %if.then215 ], [ %fixg_lower.3, %for.end932 ], [ %fixg_lower.3, %for.body940 ]
  %g_lower.4 = phi i32 [ %g_lower.0797, %if.then215 ], [ %g_lower.3, %for.end932 ], [ %g_lower.3, %for.body940 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0798, %if.then215 ], [ %j_hgroup.2, %for.end932 ], [ %j_hgroup.2, %for.body940 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0799, %for.end932 ], [ %i.0799, %for.body940 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0806, %if.then215 ], [ %conv616, %for.end932 ], [ %conv616, %for.body940 ]
  %293 = phi <2 x double> [ %59, %if.then215 ], [ %248, %for.end932 ], [ %272, %for.body940 ]
  %294 = phi <2 x double> [ %60, %if.then215 ], [ %249, %for.end932 ], [ %279, %for.body940 ]
  %295 = phi <2 x double> [ %61, %if.then215 ], [ %250, %for.end932 ], [ %290, %for.body940 ]
  %inc1058 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1058
  br i1 %cmp171, label %for.body172, label %for.end1059

for.end1059:                                      ; preds = %for.inc1057, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1057 ]
  %296 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %293, %for.inc1057 ]
  %297 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %294, %for.inc1057 ]
  %298 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %295, %for.inc1057 ]
  %299 = extractelement <2 x double> %298, i32 1
  %arraydecay1060 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1061 = icmp eq i32* %cond641643892898, %arraydecay1060
  br i1 %cmp1061, label %if.end1066, label %delete.notnull1064

delete.notnull1064:                               ; preds = %for.end1059
  %300 = bitcast i32* %cond641643892898 to i8*
  call void @_ZdaPv(i8* %300) #7
  br label %if.end1066

if.end1066:                                       ; preds = %delete.notnull1064, %for.end1059
  %arraydecay1067 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1068 = icmp eq i32* %cond19645890899, %arraydecay1067
  br i1 %cmp1068, label %if.end1073, label %delete.notnull1071

delete.notnull1071:                               ; preds = %if.end1066
  %301 = bitcast i32* %cond19645890899 to i8*
  call void @_ZdaPv(i8* %301) #7
  br label %if.end1073

if.end1073:                                       ; preds = %delete.notnull1071, %if.end1066
  %arraydecay1074 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1075 = icmp eq i32* %cond30894897, %arraydecay1074
  br i1 %cmp1075, label %if.end1080, label %delete.notnull1078

delete.notnull1078:                               ; preds = %if.end1073
  %302 = bitcast i32* %cond30894897 to i8*
  call void @_ZdaPv(i8* %302) #7
  br label %if.end1080

if.end1080:                                       ; preds = %delete.notnull1078, %if.end1073
  %arraydecay1081 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1082 = icmp eq i32* %cond114649651657663, %arraydecay1081
  br i1 %cmp1082, label %if.end1087, label %delete.notnull1085

delete.notnull1085:                               ; preds = %if.end1080
  %303 = bitcast i32* %cond114649651657663 to i8*
  call void @_ZdaPv(i8* %303) #7
  br label %if.end1087

if.end1087:                                       ; preds = %delete.notnull1085, %if.end1080
  %arraydecay1088 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1089 = icmp eq i32* %cond125653655665, %arraydecay1088
  br i1 %cmp1089, label %if.end1094, label %delete.notnull1092

delete.notnull1092:                               ; preds = %if.end1087
  %304 = bitcast i32* %cond125653655665 to i8*
  call void @_ZdaPv(i8* %304) #7
  br label %if.end1094

if.end1094:                                       ; preds = %delete.notnull1092, %if.end1087
  %arraydecay1095 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1096 = icmp eq i32* %cond136659661, %arraydecay1095
  br i1 %cmp1096, label %if.end1101, label %delete.notnull1099

delete.notnull1099:                               ; preds = %if.end1094
  %305 = bitcast i32* %cond136659661 to i8*
  call void @_ZdaPv(i8* %305) #7
  br label %if.end1101

if.end1101:                                       ; preds = %delete.notnull1099, %if.end1094
  %arraydecay1102 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1103 = icmp eq i32* %cond147667, %arraydecay1102
  br i1 %cmp1103, label %if.end1108, label %delete.notnull1106

delete.notnull1106:                               ; preds = %if.end1101
  %306 = bitcast i32* %cond147667 to i8*
  call void @_ZdaPv(i8* %306) #7
  br label %if.end1108

if.end1108:                                       ; preds = %delete.notnull1106, %if.end1101
  %arraydecay1109 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1110 = icmp eq i32* %cond158, %arraydecay1109
  br i1 %cmp1110, label %if.end1115, label %delete.notnull1113

delete.notnull1113:                               ; preds = %if.end1108
  %307 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %307) #7
  br label %if.end1115

if.end1115:                                       ; preds = %delete.notnull1113, %if.end1108
  %conv1116 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1117 = getelementptr inbounds double* %1, i64 22
  %308 = load double* %arrayidx1117, align 8, !tbaa !17
  %add1118 = fadd double %conv1116, %308
  store double %add1118, double* %arrayidx1117, align 8, !tbaa !17
  %arrayidx1119 = getelementptr inbounds double* %1, i64 12
  %309 = bitcast double* %arrayidx1119 to <2 x double>*
  %310 = load <2 x double>* %309, align 8, !tbaa !17
  %311 = fadd <2 x double> %296, %310
  %312 = bitcast double* %arrayidx1119 to <2 x double>*
  store <2 x double> %311, <2 x double>* %312, align 8, !tbaa !17
  %arrayidx1123 = getelementptr inbounds double* %1, i64 14
  %313 = bitcast double* %arrayidx1123 to <2 x double>*
  %314 = load <2 x double>* %313, align 8, !tbaa !17
  %315 = shufflevector <2 x double> %298, <2 x double> %296, <2 x i32> <i32 0, i32 3>
  %316 = fadd <2 x double> %315, %314
  %317 = bitcast double* %arrayidx1123 to <2 x double>*
  store <2 x double> %316, <2 x double>* %317, align 8, !tbaa !17
  %arrayidx1127 = getelementptr inbounds double* %1, i64 16
  %318 = bitcast double* %arrayidx1127 to <2 x double>*
  %319 = load <2 x double>* %318, align 8, !tbaa !17
  %320 = fadd <2 x double> %297, %319
  %321 = bitcast double* %arrayidx1127 to <2 x double>*
  store <2 x double> %320, <2 x double>* %321, align 8, !tbaa !17
  %arrayidx1131 = getelementptr inbounds double* %1, i64 18
  %322 = bitcast double* %arrayidx1131 to <2 x double>*
  %323 = load <2 x double>* %322, align 8, !tbaa !17
  %324 = shufflevector <2 x double> %298, <2 x double> %297, <2 x i32> <i32 0, i32 3>
  %325 = fadd <2 x double> %324, %323
  %326 = bitcast double* %arrayidx1131 to <2 x double>*
  store <2 x double> %325, <2 x double>* %326, align 8, !tbaa !17
  %arrayidx1135 = getelementptr inbounds double* %1, i64 20
  %327 = load double* %arrayidx1135, align 8, !tbaa !17
  %add1136 = fadd double %299, %327
  store double %add1136, double* %arrayidx1135, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1115, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil32calc_self_energy_merge_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.LJTable** @_ZN20ComputeNonbondedUtil7ljTableE, align 8, !tbaa !1
  %6 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil13table_noshortE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31876 = icmp sgt i32 %13, 0
  br i1 %cmp31876, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30951 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond683685949 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19687947 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv939 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next940, %for.inc ]
  %g.0877 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv939, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0877, 1
  %idxprom41 = sext i32 %g.0877 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond683685949, i64 %idxprom41
  %30 = trunc i64 %indvars.iv939 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0877, %for.body ]
  %indvars.iv.next940 = add nuw nsw i64 %indvars.iv939, 1
  %lftr.wideiv941 = trunc i64 %indvars.iv.next940 to i32
  %exitcond942 = icmp eq i32 %lftr.wideiv941, %13
  br i1 %exitcond942, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond683685949, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond683685949, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa956 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19687946955 = phi i32* [ %cond19687947, %for.end ], [ %cond19687947, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond683685948954 = phi i32* [ %cond683685949, %for.end ], [ %cond683685949, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30950953 = phi i32* [ %cond30951, %for.end ], [ %cond30951, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56870 = icmp sgt i32 %g.0.lcssa956, 0
  br i1 %cmp56870, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv935 = phi i64 [ %indvars.iv.next936, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0872 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0871 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond683685948954, i64 %indvars.iv935
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0872, 1
  %idxprom68 = sext i32 %fixg.0872 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19687946955, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0871, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0872, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next936 = add nuw nsw i64 %indvars.iv935, 1
  %lftr.wideiv937 = trunc i64 %indvars.iv.next936 to i32
  %exitcond938 = icmp eq i32 %lftr.wideiv937, %g.0.lcssa956
  br i1 %exitcond938, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond683685948954, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond683685948954 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19687946955, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19687946955 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30950953, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30950953 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19687946955, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19687946955, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2690 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147709 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125695697707 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114691693699705 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136701703 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171844 = icmp sgt i32 %sub162, 0
  br i1 %cmp171844, label %for.body172.lr.ph, label %for.end1097

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %6, i64 0, i32 1
  %atomVdwType.i680 = getelementptr inbounds %class.Molecule* %6, i64 0, i32 4
  %table.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 1
  %table_dim.i = getelementptr inbounds %class.LJTable* %5, i64 0, i32 2
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125695697707 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147709 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30950953 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114691693699705 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc1095, %for.body172.lr.ph
  %exclChecksum.0860 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc1095 ]
  %i.0851 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc1096, %for.inc1095 ]
  %j_hgroup.0850 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc1095 ]
  %g_lower.0849 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc1095 ]
  %fixg_lower.0848 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc1095 ]
  %pairlistindex.0847 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc1095 ]
  %pairlistoffset.0846 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc1095 ]
  %pairCount.0845 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc1095 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %342, %for.inc1095 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %343, %for.inc1095 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %344, %for.inc1095 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %345, %for.inc1095 ]
  %idxprom173 = sext i32 %i.0851 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %63 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %63, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i711 = zext i32 %bf.clear176 to i64
  %64 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i711, i32 0
  %65 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i711, i32 1
  %66 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %64, i64 %idxprom.i711, i32 2
  %67 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %65 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %68 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %69 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %70 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %71 = and i32 %bf.load175, 62914560
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0851
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0845
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0845, %div165
  %cmp214 = icmp slt i32 %pairCount.0845, %div168
  %or.cond669 = and i1 %cmp212, %cmp214
  br i1 %or.cond669, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0851
  br label %for.inc1095

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0845, %if.then193 ], [ %sub211, %if.then199 ]
  %73 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %73, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %74 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0851
  %cmp237718 = icmp slt i32 %g_lower.0849, %g.0.lcssa956
  br i1 %cmp237718, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %75 = sext i32 %g_lower.0849 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %76, %g.0.lcssa956
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %75, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1719 = phi i32 [ %g_lower.0849, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond683685948954, i64 %indvars.iv
  %77 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %77, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1719, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0849, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1719, %land.rhs238 ]
  %cmp245720 = icmp slt i32 %fixg_lower.0848, %fixg.2690
  br i1 %cmp245720, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %78 = sext i32 %fixg_lower.0848 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %79 = trunc i64 %indvars.iv.next885 to i32
  %cmp245 = icmp slt i32 %79, %fixg.2690
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv884 = phi i64 [ %78, %land.rhs246.lr.ph ], [ %indvars.iv.next885, %while.cond244 ]
  %fixg_lower.1721 = phi i32 [ %fixg_lower.0848, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19687946955, i64 %indvars.iv884
  %80 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %80, %add236
  %indvars.iv.next885 = add nsw i64 %indvars.iv884, 1
  %inc252 = add nsw i32 %fixg_lower.1721, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0848, %land.end ], [ %fixg_lower.0848, %while.cond244.loopexit ], [ %fixg_lower.1721, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0849, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0850, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1723 = add nsw i32 %i.0851, 1
  %cmp257724 = icmp slt i32 %j.1723, %j_hgroup.1
  br i1 %cmp257724, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %81 = add i32 %j_hgroup.1, -1
  %82 = sub i32 %81, %i.0851
  %83 = add i32 %j_hgroup.1, -2
  %84 = sub i32 %83, %i.0851
  %85 = zext i32 %84 to i64
  %86 = add i64 %85, 1
  %end.idx = add i64 %85, 1
  %n.vec = and i64 %86, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1723
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %87 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1723, %87
  %broadcast.splatinsert988 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat989 = shufflevector <4 x i32> %broadcast.splatinsert988, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction990 = add <4 x i32> %broadcast.splat989, <i32 0, i32 1, i32 2, i32 3>
  %induction991 = add <4 x i32> %broadcast.splat989, <i32 4, i32 5, i32 6, i32 7>
  %88 = getelementptr inbounds i32* %cond114691693699705, i64 %index
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %induction990, <4 x i32>* %89, align 4
  %.sum994 = or i64 %index, 4
  %90 = getelementptr i32* %cond114691693699705, i64 %.sum994
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %induction991, <4 x i32>* %91, align 4
  %index.next = add i64 %index, 8
  %92 = icmp eq i64 %index.next, %n.vec
  br i1 %92, label %middle.block, label %vector.body, !llvm.loop !109

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val986 = phi i32 [ %j.1723, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv886 = phi i64 [ %indvars.iv.next887, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1726 = phi i32 [ %j.1, %for.body258 ], [ %resume.val986, %middle.block ]
  %indvars.iv.next887 = add nuw nsw i64 %indvars.iv886, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114691693699705, i64 %indvars.iv886
  store i32 %j.1726, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1726, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next887 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %82
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !110

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %82 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114691693699705, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %74, i32* %cond19687946955, i32* %cond683685948954
  %cond276 = select i1 %74, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %74, i32 %fixg.2690, i32 %g.0.lcssa956
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %93 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %93 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %94 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %95 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %96 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %96, %if.then283 ], [ %102, %if.then325 ]
  %p_j_y.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_x.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %j2.0.ph = phi i32 [ %93, %if.then283 ], [ %99, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30950953, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %97 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv892 = phi i64 [ %97, %while.cond298.outer ], [ %indvars.iv.next893, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %102, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %98 = trunc i64 %indvars.iv892 to i32
  %cmp299 = icmp slt i32 %98, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next893 = add nsw i64 %indvars.iv892, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next893
  %99 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %68, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %99 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %100 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %69, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %101 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %70, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %102 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div666 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div666 to i32
  %cmp330732 = icmp sgt i32 %conv328, 0
  br i1 %cmp330732, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %103 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %104 = lshr i64 %103, 2
  %105 = trunc i64 %104 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv894 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next895, %cond.end351 ]
  %pli.0734 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30950953, i64 %indvars.iv894
  %106 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %106 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %107 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %107, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp667 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp667, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %106, i32* %pli.0734, align 4, !tbaa !11
  %add354 = add nsw i32 %106, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0734, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %106, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0734, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %106, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0734, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0734, i64 %cond352
  %indvars.iv.next895 = add nuw nsw i64 %indvars.iv894, 1
  %lftr.wideiv896 = trunc i64 %indvars.iv.next895 to i32
  %exitcond897 = icmp eq i32 %lftr.wideiv896, %105
  br i1 %exitcond897, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369663 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369663 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext664 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext664, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114691693699705, i64 %idxprom374
  %108 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114691693699705, i64 %idxprom376
  store i32 %108, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0846, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0845, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0847, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0848, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0849, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0850, %if.else ]
  %109 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %109, 0
  %bf.load394.pre = load i32* %63, align 4
  br i1 %tobool381, label %land.end387, label %land.rhs382

land.rhs382:                                      ; preds = %if.end380
  %bf.clear385 = and i32 %bf.load394.pre, 67108864
  %tobool386 = icmp ne i32 %bf.clear385, 0
  br label %land.end387

land.end387:                                      ; preds = %land.rhs382, %if.end380
  %110 = phi i1 [ %tobool386, %land.rhs382 ], [ false, %if.end380 ]
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %111 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %111 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  %bf.clear395 = and i32 %bf.load394.pre, 4194303
  %idxprom.i679712 = zext i32 %bf.clear395 to i64
  %112 = load i32** %atomVdwType.i680, align 8, !tbaa !64
  %arrayidx.i681 = getelementptr inbounds i32* %112, i64 %idxprom.i679712
  %113 = load i32* %arrayidx.i681, align 4, !tbaa !11
  %114 = load %"struct.LJTable::TableEntry"** %table.i, align 8, !tbaa !65
  %115 = load i32* %table_dim.i, align 4, !tbaa !67
  %conv397 = shl i32 %113, 1
  %mul.i = and i32 %conv397, 131070
  %mul2.i = mul i32 %mul.i, %115
  %idx.ext.i = zext i32 %mul2.i to i64
  %cmp403760 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %110, label %for.cond402.preheader, label %if.else463

for.cond402.preheader:                            ; preds = %land.end387
  br i1 %cmp403760, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %116 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv907 = phi i64 [ %116, %for.body404.lr.ph ], [ %indvars.iv.next908, %for.inc460 ]
  %exclChecksum.1764 = phi i32 [ %exclChecksum.0860, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0763 = phi i32* [ %cond125695697707, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0762 = phi i32* [ %cond136701703, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114691693699705, i64 %indvars.iv907
  %117 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %117 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %118 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %68, %118
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %119 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %69, %119
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %120 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %70, %120
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %121 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %121, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond670 = or i1 %tobool438, %cmp439
  br i1 %or.cond670, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1764, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1764, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %65
  %cmp453 = icmp sgt i32 %bf.clear450, %66
  %or.cond671 = or i1 %cmp451, %cmp453
  br i1 %or.cond671, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0763, i64 1
  store i32 %117, i32* %pli399.0763, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0762, i64 1
  store i32 %117, i32* %plin.0762, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0762, %for.body404 ], [ %plin.0762, %land.lhs.true442 ], [ %plin.0762, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0763, %for.body404 ], [ %pli399.0763, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0763, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1764, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next908 = add nsw i64 %indvars.iv907, 1
  %lftr.wideiv909 = trunc i64 %indvars.iv.next908 to i32
  %exitcond910 = icmp eq i32 %lftr.wideiv909, %pairlistindex.2
  br i1 %exitcond910, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387
  br i1 %cmp403760, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114691693699705, i64 %idxprom468
  %122 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %122 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %123 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %124 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %125 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %125, %if.then466 ], [ %131, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %124, %if.then466 ], [ %130, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %123, %if.then466 ], [ %129, %if.else531 ]
  %j2467.0.ph = phi i32 [ %122, %if.then466 ], [ %128, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136701703, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125695697707, %if.then466 ], [ %pli399.2.ph743, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0860, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer736

while.cond491.outer736:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph737 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph738 = phi double [ %131, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph739 = phi double [ %130, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph740 = phi double [ %129, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph741 = phi i32 [ %128, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph742 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph743 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph744 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer745

while.cond491.outer745:                           ; preds = %land.lhs.true522, %while.cond491.outer736
  %idxprom471.pn.ph746 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph737, %while.cond491.outer736 ]
  %p_j_z480.0.ph747 = phi double [ %131, %land.lhs.true522 ], [ %p_j_z480.0.ph738, %while.cond491.outer736 ]
  %p_j_y475.0.ph748 = phi double [ %130, %land.lhs.true522 ], [ %p_j_y475.0.ph739, %while.cond491.outer736 ]
  %p_j_x470.0.ph749 = phi double [ %129, %land.lhs.true522 ], [ %p_j_x470.0.ph740, %while.cond491.outer736 ]
  %j2467.0.ph750 = phi i32 [ %128, %land.lhs.true522 ], [ %j2467.0.ph741, %while.cond491.outer736 ]
  %k464.0.ph751 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph742, %while.cond491.outer736 ]
  %exclChecksum.4.ph752 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph744, %while.cond491.outer736 ]
  %126 = sext i32 %k464.0.ph751 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer745
  %indvars.iv903 = phi i64 [ %126, %while.cond491.outer745 ], [ %indvars.iv.next904, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph746, %while.cond491.outer745 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph747, %while.cond491.outer745 ], [ %131, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph748, %while.cond491.outer745 ], [ %130, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph749, %while.cond491.outer745 ], [ %129, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph750, %while.cond491.outer745 ], [ %128, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph751, %while.cond491.outer745 ], [ %inc494, %while.body493 ]
  %127 = trunc i64 %indvars.iv903 to i32
  %cmp492 = icmp slt i32 %127, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next904 = add nsw i64 %indvars.iv903, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114691693699705, i64 %indvars.iv.next904
  %128 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %68, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %128 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %129 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %69, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %130 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %70, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %131 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph752, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer745

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph752, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %65
  %cmp528 = icmp sgt i32 %atom2485.0, %66
  %or.cond672 = or i1 %cmp526, %cmp528
  br i1 %or.cond672, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph743, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph743, align 4, !tbaa !11
  br label %while.cond491.outer736

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %plin.4 = phi i32* [ %cond136701703, %if.else463 ], [ %cond136701703, %for.cond402.preheader ], [ %plin.2.ph, %while.cond491 ], [ %plin.1, %for.inc460 ]
  %pli399.4 = phi i32* [ %cond125695697707, %if.else463 ], [ %cond125695697707, %for.cond402.preheader ], [ %pli399.2.ph743, %while.cond491 ], [ %pli399.1, %for.inc460 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0860, %if.else463 ], [ %exclChecksum.0860, %for.cond402.preheader ], [ %exclChecksum.4.ph752, %while.cond491 ], [ %exclChecksum.3, %for.inc460 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546619 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546619 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext661 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext661, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125695697707, i64 %idxprom551
  %132 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125695697707, i64 %idxprom553
  store i32 %132, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558768 = icmp ult i32* %cond136701703, %plin.4
  br i1 %cmp558768, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8771 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0770 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147709, %for.cond557.preheader ]
  %pln.0769 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136701703, %for.cond557.preheader ]
  %133 = load i32* %pln.0769, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %133, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0770, i64 1
  store i32 %133, i32* %plix.0770, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8771, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0769, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8771, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147709, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0770, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136701703, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0769, %land.lhs.true559 ]
  %cmp567775 = icmp sgt i32 %conv547, 0
  br i1 %cmp567775, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv917 = phi i64 [ %indvars.iv.next918, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9778 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1777 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0776 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125695697707, i64 %indvars.iv917
  %134 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %134, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1777, i64 1
  store i32 %134, i32* %plix.1777, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9778, -1
  %indvars.iv.next918 = add nuw nsw i64 %indvars.iv917, 1
  %inc578 = add nsw i32 %k556.0776, 1
  %135 = trunc i64 %indvars.iv.next918 to i32
  %cmp567 = icmp slt i32 %135, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9778, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1777, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0776, %land.lhs.true568 ]
  %cmp581782 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581782, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %136 = sext i32 %k556.0.lcssa to i64
  %137 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %138 = lshr i64 %137, 2
  %139 = trunc i64 %138 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv919 = phi i64 [ %136, %for.body582.lr.ph ], [ %indvars.iv.next920, %for.inc600 ]
  %plin.5786 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2785 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0784 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125695697707, i64 %indvars.iv919
  %140 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %140 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %141 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %141, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592660 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592660, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %67, i64 %add.ptr.sum
  %142 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %142 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5786, i64 1
  store i32 %140, i32* %plin.5786, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2785, i64 1
  store i32 %140, i32* %plix.2785, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0784, i64 1
  store i32 %140, i32* %plim.0784, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0784, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0784, %sw.bb596 ], [ %plim.0784, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2785, %for.body582 ], [ %plix.2785, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2785, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5786, %for.body582 ], [ %plin.5786, %sw.bb598 ], [ %plin.5786, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next920 = add nsw i64 %indvars.iv919, 1
  %lftr.wideiv921 = trunc i64 %indvars.iv.next920 to i32
  %exitcond922 = icmp eq i32 %lftr.wideiv921, %139
  br i1 %exitcond922, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606 = ashr exact i64 %sub.ptr.sub605, 2
  %conv607620 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607620
  %add615 = add i64 %add608, %sub.ptr.div606
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620622 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620622 to i32
  %cmp623790 = icmp sgt i32 %conv621, 0
  br i1 %cmp623790, label %for.body624.lr.ph, label %for.end764

for.body624.lr.ph:                                ; preds = %for.end602
  %x742 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y751 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z758 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624.for.body624_crit_edge, %for.body624.lr.ph
  %143 = phi i32* [ %112, %for.body624.lr.ph ], [ %.pre, %for.body624.for.body624_crit_edge ]
  %indvars.iv923 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next924, %for.body624.for.body624_crit_edge ]
  %144 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %185, %for.body624.for.body624_crit_edge ]
  %145 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %192, %for.body624.for.body624_crit_edge ]
  %146 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %199, %for.body624.for.body624_crit_edge ]
  %147 = phi <2 x double> [ %62, %for.body624.lr.ph ], [ %210, %for.body624.for.body624_crit_edge ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv923
  %148 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %148 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %149 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %68, %149
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %150 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %69, %150
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %151 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %70, %151
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %152 = bitcast float %conv645 to i32
  %shr = ashr i32 %152, 17
  %add647 = add nsw i32 %shr, %mul
  %id648 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 2
  %153 = bitcast [4 x i8]* %id648 to i32*
  %bf.load649 = load i32* %153, align 4
  %bf.clear650 = and i32 %bf.load649, 4194303
  %idxprom.i675715 = zext i32 %bf.clear650 to i64
  %arrayidx.i677 = getelementptr inbounds i32* %143, i64 %idxprom.i675715
  %154 = load i32* %arrayidx.i677, align 4, !tbaa !11
  %conv.i678 = zext i32 %154 to i64
  %conv652 = shl nuw nsw i64 %conv.i678, 1
  %mul653 = and i64 %conv652, 131070
  %mul656 = shl nsw i32 %add647, 4
  %idx.ext657 = sext i32 %mul656 to i64
  %add.ptr658 = getelementptr inbounds double* %7, i64 %idx.ext657
  %155 = load double* %add.ptr658, align 8, !tbaa !17
  %add.ptr658.sum649 = or i64 %idx.ext657, 4
  %add.ptr663 = getelementptr inbounds double* %7, i64 %add.ptr658.sum649
  %156 = load double* %add.ptr663, align 8, !tbaa !17
  %add.ptr658.sum650 = or i64 %idx.ext657, 8
  %add.ptr668 = getelementptr inbounds double* %7, i64 %add.ptr658.sum650
  %157 = load double* %add.ptr668, align 8, !tbaa !17
  %and = and i32 %152, -131072
  %charge671 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %158 = load float* %charge671, align 4, !tbaa !63
  %conv672 = fpext float %158 to double
  %mul673 = fmul double %mul392, %conv672
  %159 = bitcast i32 %and to float
  %conv675 = fpext float %159 to double
  %sub676 = fsub double %add644, %conv675
  %add.ptr.i.sum716 = add i64 %mul653, %idx.ext.i
  %A678 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum716, i32 0
  %160 = load double* %A678, align 8, !tbaa !69
  %mul679 = fmul double %8, %160
  %B681 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum716, i32 1
  %161 = load double* %B681, align 8, !tbaa !71
  %mul682 = fmul double %8, %161
  %mul683 = fmul double %155, %mul679
  %mul684 = fmul double %156, %mul682
  %sub685 = fsub double %mul683, %mul684
  %add.ptr658.sum651 = or i64 %idx.ext657, 3
  %arrayidx686 = getelementptr inbounds double* %7, i64 %add.ptr658.sum651
  %162 = load double* %arrayidx686, align 8, !tbaa !17
  %mul687 = fmul double %mul679, %162
  %add.ptr663.sum652 = or i64 %idx.ext657, 7
  %arrayidx688 = getelementptr inbounds double* %7, i64 %add.ptr663.sum652
  %163 = load double* %arrayidx688, align 8, !tbaa !17
  %mul689 = fmul double %mul682, %163
  %sub690 = fsub double %mul687, %mul689
  %add.ptr658.sum653 = or i64 %idx.ext657, 2
  %arrayidx691 = getelementptr inbounds double* %7, i64 %add.ptr658.sum653
  %164 = load double* %arrayidx691, align 8, !tbaa !17
  %mul692 = fmul double %mul679, %164
  %add.ptr663.sum654 = or i64 %idx.ext657, 6
  %arrayidx693 = getelementptr inbounds double* %7, i64 %add.ptr663.sum654
  %165 = load double* %arrayidx693, align 8, !tbaa !17
  %mul694 = fmul double %mul682, %165
  %sub695 = fsub double %mul692, %mul694
  %add.ptr658.sum655 = or i64 %idx.ext657, 1
  %arrayidx696 = getelementptr inbounds double* %7, i64 %add.ptr658.sum655
  %166 = load double* %arrayidx696, align 8, !tbaa !17
  %mul697 = fmul double %mul679, %166
  %add.ptr663.sum656 = or i64 %idx.ext657, 5
  %arrayidx698 = getelementptr inbounds double* %7, i64 %add.ptr663.sum656
  %167 = load double* %arrayidx698, align 8, !tbaa !17
  %mul699 = fmul double %mul682, %167
  %sub700 = fsub double %mul697, %mul699
  %mul701 = fmul double %sub676, %sub690
  %add702 = fadd double %mul701, %sub695
  %add.ptr668.sum657 = or i64 %idx.ext657, 9
  %arrayidx708 = getelementptr inbounds double* %7, i64 %add.ptr668.sum657
  %168 = load double* %arrayidx708, align 8, !tbaa !17
  %add.ptr668.sum658 = or i64 %idx.ext657, 10
  %arrayidx709 = getelementptr inbounds double* %7, i64 %add.ptr668.sum658
  %169 = load double* %arrayidx709, align 8, !tbaa !17
  %add.ptr668.sum659 = or i64 %idx.ext657, 11
  %arrayidx710 = getelementptr inbounds double* %7, i64 %add.ptr668.sum659
  %170 = load double* %arrayidx710, align 8, !tbaa !17
  %mul711 = fmul double %mul673, %170
  %mul712 = fmul double %mul673, %169
  %171 = insertelement <2 x double> undef, double %mul673, i32 0
  %172 = insertelement <2 x double> %171, double %add702, i32 1
  %173 = insertelement <2 x double> undef, double %168, i32 0
  %174 = insertelement <2 x double> %173, double %sub676, i32 1
  %175 = fmul <2 x double> %172, %174
  %mul714 = fmul double %157, %mul673
  %mul715 = fmul double %sub676, %mul711
  %add716 = fadd double %mul712, %mul715
  %mul717 = fmul double %sub676, %add716
  %176 = insertelement <2 x double> undef, double %mul717, i32 0
  %177 = insertelement <2 x double> %176, double %sub700, i32 1
  %178 = fadd <2 x double> %175, %177
  %179 = insertelement <2 x double> undef, double %sub676, i32 0
  %180 = insertelement <2 x double> %179, double %sub676, i32 1
  %181 = fmul <2 x double> %178, %180
  %182 = insertelement <2 x double> undef, double %mul714, i32 0
  %183 = insertelement <2 x double> %182, double %sub685, i32 1
  %184 = fadd <2 x double> %183, %181
  %185 = fadd <2 x double> %144, %184
  %add722 = fadd double %sub690, %mul711
  %add723 = fadd double %sub695, %mul712
  %186 = extractelement <2 x double> %175, i32 0
  %add724 = fadd double %186, %sub700
  %mul726 = fmul double %sub676, 3.000000e+00
  %mul727 = fmul double %mul726, %add722
  %mul728 = fmul double %add723, 2.000000e+00
  %add729 = fadd double %mul728, %mul727
  %mul730 = fmul double %sub676, %add729
  %add731 = fadd double %add724, %mul730
  %mul732 = fmul double %add731, -2.000000e+00
  %mul735 = fmul double %sub632, %mul732
  %187 = insertelement <2 x double> undef, double %sub632, i32 0
  %188 = insertelement <2 x double> %187, double %sub637, i32 1
  %189 = insertelement <2 x double> undef, double %mul735, i32 0
  %190 = insertelement <2 x double> %189, double %mul735, i32 1
  %191 = fmul <2 x double> %188, %190
  %192 = fadd <2 x double> %145, %191
  %193 = load double* %x742, align 8, !tbaa !72
  %add743 = fadd double %193, %mul735
  store double %add743, double* %x742, align 8, !tbaa !72
  %x744 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul746 = fmul double %sub637, %mul732
  %194 = insertelement <2 x double> undef, double %sub637, i32 0
  %195 = insertelement <2 x double> %194, double %sub642, i32 1
  %196 = insertelement <2 x double> undef, double %mul746, i32 0
  %197 = insertelement <2 x double> %196, double %mul746, i32 1
  %198 = fmul <2 x double> %195, %197
  %199 = fadd <2 x double> %146, %198
  %200 = load double* %y751, align 8, !tbaa !73
  %add752 = fadd double %200, %mul746
  store double %add752, double* %y751, align 8, !tbaa !73
  %201 = bitcast double* %x744 to <2 x double>*
  %202 = load <2 x double>* %201, align 8, !tbaa !17
  %203 = insertelement <2 x double> %189, double %mul746, i32 1
  %204 = fsub <2 x double> %202, %203
  %205 = bitcast double* %x744 to <2 x double>*
  store <2 x double> %204, <2 x double>* %205, align 8, !tbaa !17
  %mul755 = fmul double %sub642, %mul732
  %206 = insertelement <2 x double> undef, double %sub642, i32 0
  %207 = insertelement <2 x double> %206, double %sub642, i32 1
  %208 = insertelement <2 x double> %189, double %mul755, i32 1
  %209 = fmul <2 x double> %207, %208
  %210 = fadd <2 x double> %147, %209
  %211 = load double* %z758, align 8, !tbaa !74
  %add759 = fadd double %211, %mul755
  store double %add759, double* %z758, align 8, !tbaa !74
  %z760 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %212 = load double* %z760, align 8, !tbaa !74
  %sub761 = fsub double %212, %mul755
  store double %sub761, double* %z760, align 8, !tbaa !74
  %indvars.iv.next924 = add nuw nsw i64 %indvars.iv923, 1
  %lftr.wideiv925 = trunc i64 %indvars.iv.next924 to i32
  %exitcond926 = icmp eq i32 %lftr.wideiv925, %conv621
  br i1 %exitcond926, label %for.end764, label %for.body624.for.body624_crit_edge

for.body624.for.body624_crit_edge:                ; preds = %for.body624
  %.pre = load i32** %atomVdwType.i680, align 8, !tbaa !64
  br label %for.body624

for.end764:                                       ; preds = %for.body624, %for.end602
  %213 = phi <2 x double> [ %59, %for.end602 ], [ %185, %for.body624 ]
  %214 = phi <2 x double> [ %60, %for.end602 ], [ %192, %for.body624 ]
  %215 = phi <2 x double> [ %61, %for.end602 ], [ %199, %for.body624 ]
  %216 = phi <2 x double> [ %62, %for.end602 ], [ %210, %for.body624 ]
  %conv769 = trunc i64 %sub.ptr.div613 to i32
  %cmp771808 = icmp sgt i32 %conv769, 0
  br i1 %cmp771808, label %for.body772.lr.ph, label %for.end962

for.body772.lr.ph:                                ; preds = %for.end764
  %x938 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y948 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z956 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body772

for.body772:                                      ; preds = %for.body772, %for.body772.lr.ph
  %indvars.iv927 = phi i64 [ 0, %for.body772.lr.ph ], [ %indvars.iv.next928, %for.body772 ]
  %217 = phi <2 x double> [ %213, %for.body772.lr.ph ], [ %263, %for.body772 ]
  %218 = phi <2 x double> [ %214, %for.body772.lr.ph ], [ %270, %for.body772 ]
  %219 = phi <2 x double> [ %215, %for.body772.lr.ph ], [ %277, %for.body772 ]
  %220 = phi <2 x double> [ %216, %for.body772.lr.ph ], [ %288, %for.body772 ]
  %arrayidx775 = getelementptr inbounds i32* %cond158, i64 %indvars.iv927
  %221 = load i32* %arrayidx775, align 4, !tbaa !11
  %idx.ext777 = sext i32 %221 to i64
  %x781 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 0
  %222 = load double* %x781, align 8, !tbaa !59
  %sub782 = fsub double %68, %222
  %mul784 = fmul double %sub782, %sub782
  %y787 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 1
  %223 = load double* %y787, align 8, !tbaa !61
  %sub788 = fsub double %69, %223
  %mul789 = fmul double %sub788, %sub788
  %add790 = fadd double %mul784, %mul789
  %z793 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 0, i32 2
  %224 = load double* %z793, align 8, !tbaa !62
  %sub794 = fsub double %70, %224
  %mul795 = fmul double %sub794, %sub794
  %add796 = fadd double %add790, %mul795
  %conv798 = fptrunc double %add796 to float
  %225 = bitcast float %conv798 to i32
  %shr802 = ashr i32 %225, 17
  %add803 = add nsw i32 %shr802, %mul
  %id805 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 2
  %226 = bitcast [4 x i8]* %id805 to i32*
  %bf.load806 = load i32* %226, align 4
  %bf.clear807 = and i32 %bf.load806, 4194303
  %idxprom.i673713 = zext i32 %bf.clear807 to i64
  %227 = load i32** %atomVdwType.i680, align 8, !tbaa !64
  %arrayidx.i674 = getelementptr inbounds i32* %227, i64 %idxprom.i673713
  %228 = load i32* %arrayidx.i674, align 4, !tbaa !11
  %conv.i = zext i32 %228 to i64
  %conv809 = shl nuw nsw i64 %conv.i, 1
  %mul810 = and i64 %conv809, 131070
  %add.ptr812.sum632 = or i64 %mul810, 1
  %mul815 = shl nsw i32 %add803, 4
  %idx.ext816 = sext i32 %mul815 to i64
  %add.ptr817 = getelementptr inbounds double* %7, i64 %idx.ext816
  %229 = load double* %add.ptr817, align 8, !tbaa !17
  %add.ptr817.sum633 = or i64 %idx.ext816, 4
  %add.ptr824 = getelementptr inbounds double* %7, i64 %add.ptr817.sum633
  %230 = load double* %add.ptr824, align 8, !tbaa !17
  %add.ptr817.sum634 = or i64 %idx.ext816, 8
  %add.ptr831 = getelementptr inbounds double* %7, i64 %add.ptr817.sum634
  %231 = load double* %add.ptr831, align 8, !tbaa !17
  %and835 = and i32 %225, -131072
  %charge837 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext777, i32 1
  %232 = load float* %charge837, align 4, !tbaa !63
  %conv838 = fpext float %232 to double
  %mul839 = fmul double %mul392, %conv838
  %233 = bitcast i32 %and835 to float
  %conv842 = fpext float %233 to double
  %sub843 = fsub double %add796, %conv842
  %add.ptr.i.sum = add i64 %add.ptr812.sum632, %idx.ext.i
  %A845 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum, i32 0
  %234 = load double* %A845, align 8, !tbaa !69
  %mul846 = fmul double %8, %234
  %B848 = getelementptr inbounds %"struct.LJTable::TableEntry"* %114, i64 %add.ptr.i.sum, i32 1
  %235 = load double* %B848, align 8, !tbaa !71
  %mul849 = fmul double %8, %235
  %mul851 = fmul double %229, %mul846
  %mul852 = fmul double %230, %mul849
  %sub853 = fsub double %mul851, %mul852
  %add.ptr817.sum635 = or i64 %idx.ext816, 3
  %arrayidx855 = getelementptr inbounds double* %7, i64 %add.ptr817.sum635
  %236 = load double* %arrayidx855, align 8, !tbaa !17
  %mul856 = fmul double %mul846, %236
  %add.ptr824.sum636 = or i64 %idx.ext816, 7
  %arrayidx857 = getelementptr inbounds double* %7, i64 %add.ptr824.sum636
  %237 = load double* %arrayidx857, align 8, !tbaa !17
  %mul858 = fmul double %mul849, %237
  %sub859 = fsub double %mul856, %mul858
  %add.ptr817.sum637 = or i64 %idx.ext816, 2
  %arrayidx861 = getelementptr inbounds double* %7, i64 %add.ptr817.sum637
  %238 = load double* %arrayidx861, align 8, !tbaa !17
  %mul862 = fmul double %mul846, %238
  %add.ptr824.sum638 = or i64 %idx.ext816, 6
  %arrayidx863 = getelementptr inbounds double* %7, i64 %add.ptr824.sum638
  %239 = load double* %arrayidx863, align 8, !tbaa !17
  %mul864 = fmul double %mul849, %239
  %sub865 = fsub double %mul862, %mul864
  %add.ptr817.sum639 = or i64 %idx.ext816, 1
  %arrayidx867 = getelementptr inbounds double* %7, i64 %add.ptr817.sum639
  %240 = load double* %arrayidx867, align 8, !tbaa !17
  %mul868 = fmul double %mul846, %240
  %add.ptr824.sum640 = or i64 %idx.ext816, 5
  %arrayidx869 = getelementptr inbounds double* %7, i64 %add.ptr824.sum640
  %241 = load double* %arrayidx869, align 8, !tbaa !17
  %mul870 = fmul double %mul849, %241
  %sub871 = fsub double %mul868, %mul870
  %mul873 = fmul double %sub843, %sub859
  %add874 = fadd double %mul873, %sub865
  %add.ptr831.sum641 = or i64 %idx.ext816, 9
  %arrayidx881 = getelementptr inbounds double* %7, i64 %add.ptr831.sum641
  %242 = load double* %arrayidx881, align 8, !tbaa !17
  %add.ptr831.sum642 = or i64 %idx.ext816, 10
  %arrayidx883 = getelementptr inbounds double* %7, i64 %add.ptr831.sum642
  %243 = load double* %arrayidx883, align 8, !tbaa !17
  %add.ptr831.sum643 = or i64 %idx.ext816, 11
  %arrayidx885 = getelementptr inbounds double* %7, i64 %add.ptr831.sum643
  %244 = load double* %arrayidx885, align 8, !tbaa !17
  %add.ptr886.sum644 = or i64 %idx.ext816, 12
  %add.ptr889 = getelementptr inbounds double* %7, i64 %add.ptr886.sum644
  %245 = load double* %add.ptr889, align 8, !tbaa !17
  %mul891 = fmul double %sub, %245
  %sub892 = fsub double %231, %mul891
  %add.ptr889.sum645 = or i64 %idx.ext816, 13
  %arrayidx893 = getelementptr inbounds double* %7, i64 %add.ptr889.sum645
  %246 = load double* %arrayidx893, align 8, !tbaa !17
  %mul894 = fmul double %sub, %246
  %sub895 = fsub double %242, %mul894
  %add.ptr889.sum646 = or i64 %idx.ext816, 14
  %arrayidx896 = getelementptr inbounds double* %7, i64 %add.ptr889.sum646
  %247 = load double* %arrayidx896, align 8, !tbaa !17
  %mul897 = fmul double %sub, %247
  %sub898 = fsub double %243, %mul897
  %add.ptr889.sum647 = or i64 %idx.ext816, 15
  %arrayidx899 = getelementptr inbounds double* %7, i64 %add.ptr889.sum647
  %248 = load double* %arrayidx899, align 8, !tbaa !17
  %mul900 = fmul double %sub, %248
  %sub901 = fsub double %244, %mul900
  %mul902 = fmul double %mul839, %sub901
  %mul903 = fmul double %mul839, %sub898
  %249 = insertelement <2 x double> undef, double %sub895, i32 0
  %250 = insertelement <2 x double> %249, double %add874, i32 1
  %251 = insertelement <2 x double> undef, double %mul839, i32 0
  %252 = insertelement <2 x double> %251, double %sub843, i32 1
  %253 = fmul <2 x double> %250, %252
  %mul905 = fmul double %mul839, %sub892
  %mul907 = fmul double %sub843, %mul902
  %add908 = fadd double %mul903, %mul907
  %mul909 = fmul double %sub843, %add908
  %254 = insertelement <2 x double> undef, double %mul909, i32 0
  %255 = insertelement <2 x double> %254, double %sub871, i32 1
  %256 = fadd <2 x double> %253, %255
  %257 = insertelement <2 x double> undef, double %sub843, i32 0
  %258 = insertelement <2 x double> %257, double %sub843, i32 1
  %259 = fmul <2 x double> %256, %258
  %260 = insertelement <2 x double> undef, double %mul905, i32 0
  %261 = insertelement <2 x double> %260, double %sub853, i32 1
  %262 = fadd <2 x double> %261, %259
  %263 = fadd <2 x double> %217, %262
  %add914 = fadd double %sub859, %mul902
  %add915 = fadd double %sub865, %mul903
  %264 = extractelement <2 x double> %253, i32 0
  %add916 = fadd double %sub871, %264
  %mul919 = fmul double %sub843, 3.000000e+00
  %mul920 = fmul double %mul919, %add914
  %mul921 = fmul double %add915, 2.000000e+00
  %add922 = fadd double %mul921, %mul920
  %mul923 = fmul double %sub843, %add922
  %add924 = fadd double %add916, %mul923
  %mul926 = fmul double %add924, -2.000000e+00
  %mul931 = fmul double %sub782, %mul926
  %265 = insertelement <2 x double> undef, double %sub782, i32 0
  %266 = insertelement <2 x double> %265, double %sub788, i32 1
  %267 = insertelement <2 x double> undef, double %mul931, i32 0
  %268 = insertelement <2 x double> %267, double %mul931, i32 1
  %269 = fmul <2 x double> %266, %268
  %270 = fadd <2 x double> %218, %269
  %271 = load double* %x938, align 8, !tbaa !72
  %add939 = fadd double %271, %mul931
  store double %add939, double* %x938, align 8, !tbaa !72
  %x940 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext777, i32 0
  %mul943 = fmul double %sub788, %mul926
  %272 = insertelement <2 x double> undef, double %sub788, i32 0
  %273 = insertelement <2 x double> %272, double %sub794, i32 1
  %274 = insertelement <2 x double> undef, double %mul943, i32 0
  %275 = insertelement <2 x double> %274, double %mul943, i32 1
  %276 = fmul <2 x double> %273, %275
  %277 = fadd <2 x double> %219, %276
  %278 = load double* %y948, align 8, !tbaa !73
  %add949 = fadd double %278, %mul943
  store double %add949, double* %y948, align 8, !tbaa !73
  %279 = bitcast double* %x940 to <2 x double>*
  %280 = load <2 x double>* %279, align 8, !tbaa !17
  %281 = insertelement <2 x double> %267, double %mul943, i32 1
  %282 = fsub <2 x double> %280, %281
  %283 = bitcast double* %x940 to <2 x double>*
  store <2 x double> %282, <2 x double>* %283, align 8, !tbaa !17
  %mul953 = fmul double %sub794, %mul926
  %284 = insertelement <2 x double> undef, double %sub794, i32 0
  %285 = insertelement <2 x double> %284, double %sub794, i32 1
  %286 = insertelement <2 x double> %267, double %mul953, i32 1
  %287 = fmul <2 x double> %285, %286
  %288 = fadd <2 x double> %220, %287
  %289 = load double* %z956, align 8, !tbaa !74
  %add957 = fadd double %289, %mul953
  store double %add957, double* %z956, align 8, !tbaa !74
  %z958 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext777, i32 2
  %290 = load double* %z958, align 8, !tbaa !74
  %sub959 = fsub double %290, %mul953
  store double %sub959, double* %z958, align 8, !tbaa !74
  %indvars.iv.next928 = add nuw nsw i64 %indvars.iv927, 1
  %lftr.wideiv929 = trunc i64 %indvars.iv.next928 to i32
  %exitcond930 = icmp eq i32 %lftr.wideiv929, %conv769
  br i1 %exitcond930, label %for.end962, label %for.body772

for.end962:                                       ; preds = %for.body772, %for.end764
  %291 = phi <2 x double> [ %213, %for.end764 ], [ %263, %for.body772 ]
  %292 = phi <2 x double> [ %214, %for.end764 ], [ %270, %for.body772 ]
  %293 = phi <2 x double> [ %215, %for.end764 ], [ %277, %for.body772 ]
  %294 = phi <2 x double> [ %216, %for.end764 ], [ %288, %for.body772 ]
  %conv967 = trunc i64 %sub.ptr.div606 to i32
  %cmp969826 = icmp sgt i32 %conv967, 0
  br i1 %cmp969826, label %for.body970.lr.ph, label %for.inc1095

for.body970.lr.ph:                                ; preds = %for.end962
  %295 = extractelement <2 x double> %291, i32 0
  %x1070 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y1080 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z1088 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body970

for.body970:                                      ; preds = %for.body970, %for.body970.lr.ph
  %indvars.iv931 = phi i64 [ 0, %for.body970.lr.ph ], [ %indvars.iv.next932, %for.body970 ]
  %fullElectEnergy.3834 = phi double [ %295, %for.body970.lr.ph ], [ %add1049, %for.body970 ]
  %296 = phi <2 x double> [ %292, %for.body970.lr.ph ], [ %319, %for.body970 ]
  %297 = phi <2 x double> [ %293, %for.body970.lr.ph ], [ %326, %for.body970 ]
  %298 = phi <2 x double> [ %294, %for.body970.lr.ph ], [ %337, %for.body970 ]
  %arrayidx973 = getelementptr inbounds i32* %cond147709, i64 %indvars.iv931
  %299 = load i32* %arrayidx973, align 4, !tbaa !11
  %idx.ext975 = sext i32 %299 to i64
  %x979 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext975, i32 0, i32 0
  %300 = load double* %x979, align 8, !tbaa !59
  %sub980 = fsub double %68, %300
  %mul982 = fmul double %sub980, %sub980
  %y985 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext975, i32 0, i32 1
  %301 = load double* %y985, align 8, !tbaa !61
  %sub986 = fsub double %69, %301
  %mul987 = fmul double %sub986, %sub986
  %add988 = fadd double %mul982, %mul987
  %z991 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext975, i32 0, i32 2
  %302 = load double* %z991, align 8, !tbaa !62
  %sub992 = fsub double %70, %302
  %mul993 = fmul double %sub992, %sub992
  %add994 = fadd double %add988, %mul993
  %conv996 = fptrunc double %add994 to float
  %303 = bitcast float %conv996 to i32
  %shr1000 = ashr i32 %303, 17
  %add1001 = add nsw i32 %shr1000, %mul
  %mul1003 = shl nsw i32 %add1001, 4
  %idx.ext1004 = sext i32 %mul1003 to i64
  %add.ptr1005.sum623 = or i64 %idx.ext1004, 8
  %add.ptr1006 = getelementptr inbounds double* %7, i64 %add.ptr1005.sum623
  %304 = load double* %add.ptr1006, align 8, !tbaa !17
  %and1010 = and i32 %303, -131072
  %charge1012 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext975, i32 1
  %305 = load float* %charge1012, align 4, !tbaa !63
  %conv1013 = fpext float %305 to double
  %mul1014 = fmul double %mul392, %conv1013
  %306 = bitcast i32 %and1010 to float
  %conv1017 = fpext float %306 to double
  %sub1018 = fsub double %add994, %conv1017
  %add.ptr1006.sum624 = or i64 %idx.ext1004, 9
  %arrayidx1020 = getelementptr inbounds double* %7, i64 %add.ptr1006.sum624
  %307 = load double* %arrayidx1020, align 8, !tbaa !17
  %add.ptr1006.sum625 = or i64 %idx.ext1004, 10
  %arrayidx1022 = getelementptr inbounds double* %7, i64 %add.ptr1006.sum625
  %308 = load double* %arrayidx1022, align 8, !tbaa !17
  %add.ptr1006.sum626 = or i64 %idx.ext1004, 11
  %arrayidx1024 = getelementptr inbounds double* %7, i64 %add.ptr1006.sum626
  %309 = load double* %arrayidx1024, align 8, !tbaa !17
  %add.ptr1026.sum627 = or i64 %idx.ext1004, 12
  %add.ptr1029 = getelementptr inbounds double* %7, i64 %add.ptr1026.sum627
  %310 = load double* %add.ptr1029, align 8, !tbaa !17
  %sub1031 = fsub double %304, %310
  %add.ptr1029.sum628 = or i64 %idx.ext1004, 13
  %arrayidx1032 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum628
  %311 = load double* %arrayidx1032, align 8, !tbaa !17
  %sub1033 = fsub double %307, %311
  %add.ptr1029.sum629 = or i64 %idx.ext1004, 14
  %arrayidx1034 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum629
  %312 = load double* %arrayidx1034, align 8, !tbaa !17
  %sub1035 = fsub double %308, %312
  %add.ptr1029.sum630 = or i64 %idx.ext1004, 15
  %arrayidx1036 = getelementptr inbounds double* %7, i64 %add.ptr1029.sum630
  %313 = load double* %arrayidx1036, align 8, !tbaa !17
  %sub1037 = fsub double %309, %313
  %mul1038 = fmul double %mul1014, %sub1037
  %mul1039 = fmul double %mul1014, %sub1035
  %mul1040 = fmul double %mul1014, %sub1033
  %mul1041 = fmul double %mul1014, %sub1031
  %mul1043 = fmul double %sub1018, %mul1038
  %add1044 = fadd double %mul1039, %mul1043
  %mul1045 = fmul double %sub1018, %add1044
  %add1046 = fadd double %mul1040, %mul1045
  %mul1047 = fmul double %sub1018, %add1046
  %add1048 = fadd double %mul1041, %mul1047
  %add1049 = fadd double %fullElectEnergy.3834, %add1048
  %mul1051 = fmul double %sub1018, 3.000000e+00
  %mul1052 = fmul double %mul1051, %mul1038
  %mul1053 = fmul double %mul1039, 2.000000e+00
  %add1054 = fadd double %mul1053, %mul1052
  %mul1055 = fmul double %sub1018, %add1054
  %add1056 = fadd double %mul1040, %mul1055
  %mul1058 = fmul double %add1056, -2.000000e+00
  %mul1063 = fmul double %sub980, %mul1058
  %314 = insertelement <2 x double> undef, double %sub980, i32 0
  %315 = insertelement <2 x double> %314, double %sub986, i32 1
  %316 = insertelement <2 x double> undef, double %mul1063, i32 0
  %317 = insertelement <2 x double> %316, double %mul1063, i32 1
  %318 = fmul <2 x double> %315, %317
  %319 = fadd <2 x double> %296, %318
  %320 = load double* %x1070, align 8, !tbaa !72
  %add1071 = fadd double %320, %mul1063
  store double %add1071, double* %x1070, align 8, !tbaa !72
  %x1072 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext975, i32 0
  %mul1075 = fmul double %sub986, %mul1058
  %321 = insertelement <2 x double> undef, double %sub986, i32 0
  %322 = insertelement <2 x double> %321, double %sub992, i32 1
  %323 = insertelement <2 x double> undef, double %mul1075, i32 0
  %324 = insertelement <2 x double> %323, double %mul1075, i32 1
  %325 = fmul <2 x double> %322, %324
  %326 = fadd <2 x double> %297, %325
  %327 = load double* %y1080, align 8, !tbaa !73
  %add1081 = fadd double %327, %mul1075
  store double %add1081, double* %y1080, align 8, !tbaa !73
  %328 = bitcast double* %x1072 to <2 x double>*
  %329 = load <2 x double>* %328, align 8, !tbaa !17
  %330 = insertelement <2 x double> %316, double %mul1075, i32 1
  %331 = fsub <2 x double> %329, %330
  %332 = bitcast double* %x1072 to <2 x double>*
  store <2 x double> %331, <2 x double>* %332, align 8, !tbaa !17
  %mul1085 = fmul double %sub992, %mul1058
  %333 = insertelement <2 x double> undef, double %sub992, i32 0
  %334 = insertelement <2 x double> %333, double %sub992, i32 1
  %335 = insertelement <2 x double> %316, double %mul1085, i32 1
  %336 = fmul <2 x double> %334, %335
  %337 = fadd <2 x double> %298, %336
  %338 = load double* %z1088, align 8, !tbaa !74
  %add1089 = fadd double %338, %mul1085
  store double %add1089, double* %z1088, align 8, !tbaa !74
  %z1090 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext975, i32 2
  %339 = load double* %z1090, align 8, !tbaa !74
  %sub1091 = fsub double %339, %mul1085
  store double %sub1091, double* %z1090, align 8, !tbaa !74
  %indvars.iv.next932 = add nuw nsw i64 %indvars.iv931, 1
  %lftr.wideiv933 = trunc i64 %indvars.iv.next932 to i32
  %exitcond934 = icmp eq i32 %lftr.wideiv933, %conv967
  br i1 %exitcond934, label %for.inc1095.loopexit, label %for.body970

for.inc1095.loopexit:                             ; preds = %for.body970
  %340 = insertelement <2 x double> undef, double %add1049, i32 0
  %341 = shufflevector <2 x double> %340, <2 x double> %291, <2 x i32> <i32 0, i32 3>
  br label %for.inc1095

for.inc1095:                                      ; preds = %for.inc1095.loopexit, %for.end962, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end962 ], [ %pairCount.2, %for.inc1095.loopexit ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0846, %if.then215 ], [ %pairlistoffset.1, %for.end962 ], [ %pairlistoffset.1, %for.inc1095.loopexit ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0847, %if.then215 ], [ %pairlistindex.2, %for.end962 ], [ %pairlistindex.2, %for.inc1095.loopexit ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0848, %if.then215 ], [ %fixg_lower.3, %for.end962 ], [ %fixg_lower.3, %for.inc1095.loopexit ]
  %g_lower.4 = phi i32 [ %g_lower.0849, %if.then215 ], [ %g_lower.3, %for.end962 ], [ %g_lower.3, %for.inc1095.loopexit ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0850, %if.then215 ], [ %j_hgroup.2, %for.end962 ], [ %j_hgroup.2, %for.inc1095.loopexit ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0851, %for.end962 ], [ %i.0851, %for.inc1095.loopexit ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0860, %if.then215 ], [ %conv616, %for.end962 ], [ %conv616, %for.inc1095.loopexit ]
  %342 = phi <2 x double> [ %59, %if.then215 ], [ %291, %for.end962 ], [ %341, %for.inc1095.loopexit ]
  %343 = phi <2 x double> [ %60, %if.then215 ], [ %292, %for.end962 ], [ %319, %for.inc1095.loopexit ]
  %344 = phi <2 x double> [ %61, %if.then215 ], [ %293, %for.end962 ], [ %326, %for.inc1095.loopexit ]
  %345 = phi <2 x double> [ %62, %if.then215 ], [ %294, %for.end962 ], [ %337, %for.inc1095.loopexit ]
  %inc1096 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc1096
  br i1 %cmp171, label %for.body172, label %for.end1097

for.end1097:                                      ; preds = %for.inc1095, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc1095 ]
  %346 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %342, %for.inc1095 ]
  %347 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %343, %for.inc1095 ]
  %348 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %344, %for.inc1095 ]
  %349 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %345, %for.inc1095 ]
  %350 = extractelement <2 x double> %349, i32 1
  %arraydecay1098 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp1099 = icmp eq i32* %cond683685948954, %arraydecay1098
  br i1 %cmp1099, label %if.end1104, label %delete.notnull1102

delete.notnull1102:                               ; preds = %for.end1097
  %351 = bitcast i32* %cond683685948954 to i8*
  call void @_ZdaPv(i8* %351) #7
  br label %if.end1104

if.end1104:                                       ; preds = %delete.notnull1102, %for.end1097
  %arraydecay1105 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp1106 = icmp eq i32* %cond19687946955, %arraydecay1105
  br i1 %cmp1106, label %if.end1111, label %delete.notnull1109

delete.notnull1109:                               ; preds = %if.end1104
  %352 = bitcast i32* %cond19687946955 to i8*
  call void @_ZdaPv(i8* %352) #7
  br label %if.end1111

if.end1111:                                       ; preds = %delete.notnull1109, %if.end1104
  %arraydecay1112 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp1113 = icmp eq i32* %cond30950953, %arraydecay1112
  br i1 %cmp1113, label %if.end1118, label %delete.notnull1116

delete.notnull1116:                               ; preds = %if.end1111
  %353 = bitcast i32* %cond30950953 to i8*
  call void @_ZdaPv(i8* %353) #7
  br label %if.end1118

if.end1118:                                       ; preds = %delete.notnull1116, %if.end1111
  %arraydecay1119 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1120 = icmp eq i32* %cond114691693699705, %arraydecay1119
  br i1 %cmp1120, label %if.end1125, label %delete.notnull1123

delete.notnull1123:                               ; preds = %if.end1118
  %354 = bitcast i32* %cond114691693699705 to i8*
  call void @_ZdaPv(i8* %354) #7
  br label %if.end1125

if.end1125:                                       ; preds = %delete.notnull1123, %if.end1118
  %arraydecay1126 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1127 = icmp eq i32* %cond125695697707, %arraydecay1126
  br i1 %cmp1127, label %if.end1132, label %delete.notnull1130

delete.notnull1130:                               ; preds = %if.end1125
  %355 = bitcast i32* %cond125695697707 to i8*
  call void @_ZdaPv(i8* %355) #7
  br label %if.end1132

if.end1132:                                       ; preds = %delete.notnull1130, %if.end1125
  %arraydecay1133 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1134 = icmp eq i32* %cond136701703, %arraydecay1133
  br i1 %cmp1134, label %if.end1139, label %delete.notnull1137

delete.notnull1137:                               ; preds = %if.end1132
  %356 = bitcast i32* %cond136701703 to i8*
  call void @_ZdaPv(i8* %356) #7
  br label %if.end1139

if.end1139:                                       ; preds = %delete.notnull1137, %if.end1132
  %arraydecay1140 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1141 = icmp eq i32* %cond147709, %arraydecay1140
  br i1 %cmp1141, label %if.end1146, label %delete.notnull1144

delete.notnull1144:                               ; preds = %if.end1139
  %357 = bitcast i32* %cond147709 to i8*
  call void @_ZdaPv(i8* %357) #7
  br label %if.end1146

if.end1146:                                       ; preds = %delete.notnull1144, %if.end1139
  %arraydecay1147 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1148 = icmp eq i32* %cond158, %arraydecay1147
  br i1 %cmp1148, label %if.end1153, label %delete.notnull1151

delete.notnull1151:                               ; preds = %if.end1146
  %358 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %358) #7
  br label %if.end1153

if.end1153:                                       ; preds = %delete.notnull1151, %if.end1146
  %conv1154 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1155 = getelementptr inbounds double* %1, i64 22
  %359 = load double* %arrayidx1155, align 8, !tbaa !17
  %add1156 = fadd double %conv1154, %359
  store double %add1156, double* %arrayidx1155, align 8, !tbaa !17
  %arrayidx1159 = getelementptr inbounds double* %1, i64 1
  %360 = bitcast double* %arrayidx1159 to <2 x double>*
  %361 = load <2 x double>* %360, align 8, !tbaa !17
  %362 = fadd <2 x double> %346, %361
  %363 = bitcast double* %arrayidx1159 to <2 x double>*
  store <2 x double> %362, <2 x double>* %363, align 8, !tbaa !17
  %arrayidx1161 = getelementptr inbounds double* %1, i64 12
  %364 = bitcast double* %arrayidx1161 to <2 x double>*
  %365 = load <2 x double>* %364, align 8, !tbaa !17
  %366 = fadd <2 x double> %347, %365
  %367 = bitcast double* %arrayidx1161 to <2 x double>*
  store <2 x double> %366, <2 x double>* %367, align 8, !tbaa !17
  %arrayidx1165 = getelementptr inbounds double* %1, i64 14
  %368 = bitcast double* %arrayidx1165 to <2 x double>*
  %369 = load <2 x double>* %368, align 8, !tbaa !17
  %370 = shufflevector <2 x double> %349, <2 x double> %347, <2 x i32> <i32 0, i32 3>
  %371 = fadd <2 x double> %370, %369
  %372 = bitcast double* %arrayidx1165 to <2 x double>*
  store <2 x double> %371, <2 x double>* %372, align 8, !tbaa !17
  %arrayidx1169 = getelementptr inbounds double* %1, i64 16
  %373 = bitcast double* %arrayidx1169 to <2 x double>*
  %374 = load <2 x double>* %373, align 8, !tbaa !17
  %375 = fadd <2 x double> %348, %374
  %376 = bitcast double* %arrayidx1169 to <2 x double>*
  store <2 x double> %375, <2 x double>* %376, align 8, !tbaa !17
  %arrayidx1173 = getelementptr inbounds double* %1, i64 18
  %377 = bitcast double* %arrayidx1173 to <2 x double>*
  %378 = load <2 x double>* %377, align 8, !tbaa !17
  %379 = shufflevector <2 x double> %349, <2 x double> %348, <2 x i32> <i32 0, i32 3>
  %380 = fadd <2 x double> %379, %378
  %381 = bitcast double* %arrayidx1173 to <2 x double>*
  store <2 x double> %380, <2 x double>* %381, align 8, !tbaa !17
  %arrayidx1177 = getelementptr inbounds double* %1, i64 20
  %382 = load double* %arrayidx1177, align 8, !tbaa !17
  %add1178 = fadd double %350, %382
  store double %add1178, double* %arrayidx1177, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1153, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil24calc_pair_slow_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31689 = icmp sgt i32 %13, 0
  br i1 %cmp31689, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30745 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond531533743 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19535741 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv735 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next736, %for.inc ]
  %g.0690 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv735, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0690, 1
  %idxprom41 = sext i32 %g.0690 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond531533743, i64 %idxprom41
  %30 = trunc i64 %indvars.iv735 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0690, %for.body ]
  %indvars.iv.next736 = add nuw nsw i64 %indvars.iv735, 1
  %lftr.wideiv737 = trunc i64 %indvars.iv.next736 to i32
  %exitcond738 = icmp eq i32 %lftr.wideiv737, %13
  br i1 %exitcond738, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond531533743, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond531533743, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa750 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19535740749 = phi i32* [ %cond19535741, %for.end ], [ %cond19535741, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond531533742748 = phi i32* [ %cond531533743, %for.end ], [ %cond531533743, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30744747 = phi i32* [ %cond30745, %for.end ], [ %cond30745, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56683 = icmp sgt i32 %g.0.lcssa750, 0
  br i1 %cmp56683, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75677 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76678 = icmp sgt i32 %12, 0
  %or.cond523679 = and i1 %tobool75677, %cmp76678
  br i1 %or.cond523679, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv731 = phi i64 [ %indvars.iv.next732, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0685 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0684 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond531533742748, i64 %indvars.iv731
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0685, 1
  %idxprom68 = sext i32 %fixg.0685 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19535740749, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0684, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0685, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next732 = add nuw nsw i64 %indvars.iv731, 1
  %lftr.wideiv733 = trunc i64 %indvars.iv.next732 to i32
  %exitcond734 = icmp eq i32 %lftr.wideiv733, %g.0.lcssa750
  br i1 %exitcond734, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv729 = phi i64 [ %indvars.iv.next730, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2680 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv729, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2680
  %indvars.iv.next730 = add nuw nsw i64 %indvars.iv729, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next730 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond523 = and i1 %tobool75, %cmp76
  br i1 %or.cond523, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75677, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond531533742748, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond531533742748 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19535740749, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19535740749 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30744747, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30744747 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19535740749, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19535740749, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2538 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162557 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140543545555 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129539541547553 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151549551 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183652 = icmp sgt i32 %12, 0
  br i1 %cmp183652, label %for.body184.lr.ph, label %for.end913

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140543545555 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162557 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151549551 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30744747 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129539541547553 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc911, %for.body184.lr.ph
  %exclChecksum.0668 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc911 ]
  %i.1655 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc912, %for.inc911 ]
  %pairlistindex.0654 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc911 ]
  %pairCount.0653 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc911 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %249, %for.inc911 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %250, %for.inc911 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %251, %for.inc911 ]
  %idxprom185 = sext i32 %i.1655 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i559 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i559, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i559, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i559, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0653
  %cmp218 = icmp sge i32 %pairCount.0653, %div
  %cmp220 = icmp slt i32 %pairCount.0653, %div181
  %or.cond525 = and i1 %cmp218, %cmp220
  br i1 %or.cond525, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1655, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc911

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0653, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19535740749, i32* %cond531533742748
  %cond243 = select i1 %75, i32 %fixg.2538, i32 %g.0.lcssa750
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30744747, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div520 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div520 to i32
  %cmp289565 = icmp sgt i32 %conv287, 0
  br i1 %cmp289565, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv697 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next698, %cond.end310 ]
  %pli.0567 = phi i32* [ %cond129539541547553, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30744747, i64 %indvars.iv697
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp521522 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp521522, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0567, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0567, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0567, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0567, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0567, i64 %cond311
  %indvars.iv.next698 = add nuw nsw i64 %indvars.iv697, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next698 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129539541547553, %land.end ], [ %cond129539541547553, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328517 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328517 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext518 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext518, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129539541547553, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129539541547553, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1655
  br label %for.inc911

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0653, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0654, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  br i1 %tobool355, label %land.end362.thread, label %land.end362

land.end362.thread:                               ; preds = %if.end354
  %charge751 = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %93 = load float* %charge751, align 4, !tbaa !63
  %conv364752 = fpext float %93 to double
  %mul365753 = fmul double %conv364752, 3.320636e+02
  %mul366754 = fmul double %8, %mul365753
  %mul367755 = fmul double %4, %mul366754
  br label %if.else439

land.end362:                                      ; preds = %if.end354
  %bf.load358 = load i32* %64, align 4
  %bf.clear360 = and i32 %bf.load358, 67108864
  %tobool361 = icmp eq i32 %bf.clear360, 0
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %94 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %94 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  br i1 %tobool361, label %if.else439, label %for.cond377.preheader

for.cond377.preheader:                            ; preds = %land.end362
  %cmp378592 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %cmp378592, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv708 = phi i64 [ %indvars.iv.next709, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1596 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0668, %for.cond377.preheader ]
  %pli374.0595 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140543545555, %for.cond377.preheader ]
  %plin.0594 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151549551, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129539541547553, i64 %indvars.iv708
  %95 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %95 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %96 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %69, %96
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %97 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %70, %97
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %98 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %71, %98
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %99 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %99, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond526 = or i1 %tobool413, %cmp415
  br i1 %or.cond526, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1596, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1596, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %66
  %cmp429 = icmp sgt i32 %bf.clear426, %67
  %or.cond527 = or i1 %cmp427, %cmp429
  br i1 %or.cond527, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0595, i64 1
  store i32 %95, i32* %pli374.0595, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0594, i64 1
  store i32 %95, i32* %plin.0594, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0594, %for.body379 ], [ %plin.0594, %land.lhs.true418 ], [ %plin.0594, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0595, %for.body379 ], [ %pli374.0595, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0595, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1596, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next709 = add nuw nsw i64 %indvars.iv708, 1
  %lftr.wideiv710 = trunc i64 %indvars.iv.next709 to i32
  %exitcond711 = icmp eq i32 %lftr.wideiv710, %pairlistindex.1
  br i1 %exitcond711, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362, %land.end362.thread
  %mul367757 = phi double [ %mul367755, %land.end362.thread ], [ %mul367, %land.end362 ]
  %cmp441 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %cmp441, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %100 = load i32* %cond129539541547553, align 4, !tbaa !11
  %idxprom447 = sext i32 %100 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %101 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %102 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %103 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %103, %if.then442 ], [ %109, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %102, %if.then442 ], [ %108, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %101, %if.then442 ], [ %107, %if.else507 ]
  %j2443.0.ph = phi i32 [ %100, %if.then442 ], [ %106, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151549551, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140543545555, %if.then442 ], [ %pli374.2.ph575, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0668, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer568

while.cond467.outer568:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph569 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph570 = phi double [ %109, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph571 = phi double [ %108, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph572 = phi double [ %107, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph573 = phi i32 [ %106, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph574 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph575 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph576 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer577

while.cond467.outer577:                           ; preds = %land.lhs.true498, %while.cond467.outer568
  %idxprom447.pn.ph578 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph569, %while.cond467.outer568 ]
  %p_j_z456.0.ph579 = phi double [ %109, %land.lhs.true498 ], [ %p_j_z456.0.ph570, %while.cond467.outer568 ]
  %p_j_y451.0.ph580 = phi double [ %108, %land.lhs.true498 ], [ %p_j_y451.0.ph571, %while.cond467.outer568 ]
  %p_j_x446.0.ph581 = phi double [ %107, %land.lhs.true498 ], [ %p_j_x446.0.ph572, %while.cond467.outer568 ]
  %j2443.0.ph582 = phi i32 [ %106, %land.lhs.true498 ], [ %j2443.0.ph573, %while.cond467.outer568 ]
  %k440.0.ph583 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph574, %while.cond467.outer568 ]
  %exclChecksum.4.ph584 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph576, %while.cond467.outer568 ]
  %104 = sext i32 %k440.0.ph583 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer577
  %indvars.iv704 = phi i64 [ %104, %while.cond467.outer577 ], [ %indvars.iv.next705, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph578, %while.cond467.outer577 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph579, %while.cond467.outer577 ], [ %109, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph580, %while.cond467.outer577 ], [ %108, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph581, %while.cond467.outer577 ], [ %107, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph582, %while.cond467.outer577 ], [ %106, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph583, %while.cond467.outer577 ], [ %inc470, %while.body469 ]
  %105 = trunc i64 %indvars.iv704 to i32
  %cmp468 = icmp slt i32 %105, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next705 = add nsw i64 %indvars.iv704, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129539541547553, i64 %indvars.iv.next705
  %106 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %69, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %106 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %107 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %70, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %108 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %71, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %109 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph584, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer577

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph584, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %66
  %cmp504 = icmp sgt i32 %atom2461.0, %67
  %or.cond528 = or i1 %cmp502, %cmp504
  br i1 %or.cond528, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph575, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph575, align 4, !tbaa !11
  br label %while.cond467.outer568

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %mul367756 = phi double [ %mul367757, %if.else439 ], [ %mul367, %for.cond377.preheader ], [ %mul367, %for.inc436 ], [ %mul367757, %while.cond467 ]
  %plin.4 = phi i32* [ %cond151549551, %if.else439 ], [ %cond151549551, %for.cond377.preheader ], [ %plin.1, %for.inc436 ], [ %plin.2.ph, %while.cond467 ]
  %pli374.4 = phi i32* [ %cond140543545555, %if.else439 ], [ %cond140543545555, %for.cond377.preheader ], [ %pli374.1, %for.inc436 ], [ %pli374.2.ph575, %while.cond467 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0668, %if.else439 ], [ %exclChecksum.0668, %for.cond377.preheader ], [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.4.ph584, %while.cond467 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522489 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522489 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext515 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext515, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140543545555, i64 %idxprom527
  %110 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140543545555, i64 %idxprom529
  store i32 %110, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534600 = icmp sgt i32 %conv523, 0
  br i1 %cmp534600, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %111 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %112 = lshr i64 %111, 2
  %113 = trunc i64 %112 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv712 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next713, %for.inc553 ]
  %plin.5604 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0603 = phi i32* [ %cond162557, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0602 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140543545555, i64 %indvars.iv712
  %114 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %114 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %115 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %115, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545514 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545514, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %116 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %116 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5604, i64 1
  store i32 %114, i32* %plin.5604, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0603, i64 1
  store i32 %114, i32* %plix.0603, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0602, i64 1
  store i32 %114, i32* %plim.0602, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0602, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0602, %sw.bb549 ], [ %plim.0602, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0603, %for.body535 ], [ %plix.0603, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0603, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5604, %for.body535 ], [ %plin.5604, %sw.bb551 ], [ %plin.5604, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next713 = add nuw nsw i64 %indvars.iv712, 1
  %lftr.wideiv714 = trunc i64 %indvars.iv.next713 to i32
  %exitcond715 = icmp eq i32 %lftr.wideiv714, %113
  br i1 %exitcond715, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162557, %for.cond533.preheader ], [ %cond162557, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559 = ashr exact i64 %sub.ptr.sub558, 2
  %conv560490 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560490
  %add568 = add i64 %add561, %sub.ptr.div559
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573492 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573492 to i32
  %cmp576608 = icmp sgt i32 %conv574, 0
  br i1 %cmp576608, label %for.body577.lr.ph, label %for.end659

for.body577.lr.ph:                                ; preds = %for.end555
  %x637 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y646 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z653 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %117 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %118 = lshr i64 %117, 2
  %119 = trunc i64 %118 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577, %for.body577.lr.ph
  %indvars.iv716 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next717, %for.body577 ]
  %120 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %138, %for.body577 ]
  %121 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %145, %for.body577 ]
  %122 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %156, %for.body577 ]
  %arrayidx580 = getelementptr inbounds i32* %cond151549551, i64 %indvars.iv716
  %123 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %123 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %124 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %69, %124
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %125 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %70, %125
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %126 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %71, %126
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %127 = bitcast float %conv598 to i32
  %shr = ashr i32 %127, 17
  %add600 = add nsw i32 %shr, %mul
  %mul601 = shl nsw i32 %add600, 4
  %idx.ext602 = sext i32 %mul601 to i64
  %and = and i32 %127, -131072
  %charge608 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %128 = load float* %charge608, align 4, !tbaa !63
  %conv609 = fpext float %128 to double
  %mul610 = fmul double %mul367756, %conv609
  %129 = bitcast i32 %and to float
  %conv612 = fpext float %129 to double
  %sub613 = fsub double %add597, %conv612
  %add.ptr605.sum511 = or i64 %idx.ext602, 13
  %arrayidx614 = getelementptr inbounds double* %6, i64 %add.ptr605.sum511
  %130 = load double* %arrayidx614, align 8, !tbaa !17
  %add.ptr605.sum512 = or i64 %idx.ext602, 14
  %arrayidx615 = getelementptr inbounds double* %6, i64 %add.ptr605.sum512
  %131 = load double* %arrayidx615, align 8, !tbaa !17
  %add.ptr605.sum513 = or i64 %idx.ext602, 15
  %arrayidx616 = getelementptr inbounds double* %6, i64 %add.ptr605.sum513
  %132 = load double* %arrayidx616, align 8, !tbaa !17
  %mul617 = fmul double %mul610, %132
  %mul618 = fmul double %131, %mul610
  %mul619 = fmul double %130, %mul610
  %mul621 = fmul double %sub613, 3.000000e+00
  %mul622 = fmul double %mul617, %mul621
  %mul623 = fmul double %mul618, 2.000000e+00
  %add624 = fadd double %mul623, %mul622
  %mul625 = fmul double %sub613, %add624
  %add626 = fadd double %mul619, %mul625
  %mul627 = fmul double %add626, -2.000000e+00
  %mul630 = fmul double %sub585, %mul627
  %133 = insertelement <2 x double> undef, double %sub585, i32 0
  %134 = insertelement <2 x double> %133, double %sub590, i32 1
  %135 = insertelement <2 x double> undef, double %mul630, i32 0
  %136 = insertelement <2 x double> %135, double %mul630, i32 1
  %137 = fmul <2 x double> %134, %136
  %138 = fadd <2 x double> %120, %137
  %139 = load double* %x637, align 8, !tbaa !72
  %add638 = fadd double %139, %mul630
  store double %add638, double* %x637, align 8, !tbaa !72
  %x639 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul641 = fmul double %sub590, %mul627
  %140 = insertelement <2 x double> undef, double %sub590, i32 0
  %141 = insertelement <2 x double> %140, double %sub595, i32 1
  %142 = insertelement <2 x double> undef, double %mul641, i32 0
  %143 = insertelement <2 x double> %142, double %mul641, i32 1
  %144 = fmul <2 x double> %141, %143
  %145 = fadd <2 x double> %121, %144
  %146 = load double* %y646, align 8, !tbaa !73
  %add647 = fadd double %146, %mul641
  store double %add647, double* %y646, align 8, !tbaa !73
  %147 = bitcast double* %x639 to <2 x double>*
  %148 = load <2 x double>* %147, align 8, !tbaa !17
  %149 = insertelement <2 x double> %135, double %mul641, i32 1
  %150 = fsub <2 x double> %148, %149
  %151 = bitcast double* %x639 to <2 x double>*
  store <2 x double> %150, <2 x double>* %151, align 8, !tbaa !17
  %mul650 = fmul double %sub595, %mul627
  %152 = insertelement <2 x double> undef, double %sub595, i32 0
  %153 = insertelement <2 x double> %152, double %sub595, i32 1
  %154 = insertelement <2 x double> %135, double %mul650, i32 1
  %155 = fmul <2 x double> %153, %154
  %156 = fadd <2 x double> %122, %155
  %157 = load double* %z653, align 8, !tbaa !74
  %add654 = fadd double %157, %mul650
  store double %add654, double* %z653, align 8, !tbaa !74
  %z655 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %158 = load double* %z655, align 8, !tbaa !74
  %sub656 = fsub double %158, %mul650
  store double %sub656, double* %z655, align 8, !tbaa !74
  %indvars.iv.next717 = add nuw nsw i64 %indvars.iv716, 1
  %lftr.wideiv718 = trunc i64 %indvars.iv.next717 to i32
  %exitcond719 = icmp eq i32 %lftr.wideiv718, %119
  br i1 %exitcond719, label %for.end659, label %for.body577

for.end659:                                       ; preds = %for.body577, %for.end555
  %159 = phi <2 x double> [ %61, %for.end555 ], [ %138, %for.body577 ]
  %160 = phi <2 x double> [ %62, %for.end555 ], [ %145, %for.body577 ]
  %161 = phi <2 x double> [ %63, %for.end555 ], [ %156, %for.body577 ]
  %conv664 = trunc i64 %sub.ptr.div566 to i32
  %cmp666622 = icmp sgt i32 %conv664, 0
  br i1 %cmp666622, label %for.body667.lr.ph, label %for.end786

for.body667.lr.ph:                                ; preds = %for.end659
  %x762 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y772 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z780 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body667

for.body667:                                      ; preds = %for.body667, %for.body667.lr.ph
  %indvars.iv720 = phi i64 [ 0, %for.body667.lr.ph ], [ %indvars.iv.next721, %for.body667 ]
  %162 = phi <2 x double> [ %159, %for.body667.lr.ph ], [ %183, %for.body667 ]
  %163 = phi <2 x double> [ %160, %for.body667.lr.ph ], [ %190, %for.body667 ]
  %164 = phi <2 x double> [ %161, %for.body667.lr.ph ], [ %201, %for.body667 ]
  %arrayidx670 = getelementptr inbounds i32* %cond173, i64 %indvars.iv720
  %165 = load i32* %arrayidx670, align 4, !tbaa !11
  %idx.ext672 = sext i32 %165 to i64
  %x676 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext672, i32 0, i32 0
  %166 = load double* %x676, align 8, !tbaa !59
  %sub677 = fsub double %69, %166
  %mul679 = fmul double %sub677, %sub677
  %y682 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext672, i32 0, i32 1
  %167 = load double* %y682, align 8, !tbaa !61
  %sub683 = fsub double %70, %167
  %mul684 = fmul double %sub683, %sub683
  %add685 = fadd double %mul679, %mul684
  %z688 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext672, i32 0, i32 2
  %168 = load double* %z688, align 8, !tbaa !62
  %sub689 = fsub double %71, %168
  %mul690 = fmul double %sub689, %sub689
  %add691 = fadd double %add685, %mul690
  %conv693 = fptrunc double %add691 to float
  %169 = bitcast float %conv693 to i32
  %shr697 = ashr i32 %169, 17
  %add698 = add nsw i32 %shr697, %mul
  %mul700 = shl nsw i32 %add698, 4
  %idx.ext701 = sext i32 %mul700 to i64
  %and708 = and i32 %169, -131072
  %charge710 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext672, i32 1
  %170 = load float* %charge710, align 4, !tbaa !63
  %conv711 = fpext float %170 to double
  %mul712 = fmul double %mul367756, %conv711
  %171 = bitcast i32 %and708 to float
  %conv715 = fpext float %171 to double
  %sub716 = fsub double %add691, %conv715
  %add.ptr704.sum503 = or i64 %idx.ext701, 13
  %arrayidx718 = getelementptr inbounds double* %6, i64 %add.ptr704.sum503
  %172 = load double* %arrayidx718, align 8, !tbaa !17
  %add.ptr704.sum504 = or i64 %idx.ext701, 14
  %arrayidx720 = getelementptr inbounds double* %6, i64 %add.ptr704.sum504
  %173 = load double* %arrayidx720, align 8, !tbaa !17
  %add.ptr704.sum505 = or i64 %idx.ext701, 15
  %arrayidx722 = getelementptr inbounds double* %6, i64 %add.ptr704.sum505
  %174 = load double* %arrayidx722, align 8, !tbaa !17
  %mul723 = shl nsw i32 %add698, 2
  %idx.ext724 = sext i32 %mul723 to i64
  %add.ptr725.sum506 = or i64 %idx.ext724, 1
  %arrayidx729 = getelementptr inbounds double* %7, i64 %add.ptr725.sum506
  %175 = load double* %arrayidx729, align 8, !tbaa !17
  %mul730 = fmul double %sub, %175
  %sub731 = fsub double %172, %mul730
  %add.ptr725.sum507 = or i64 %idx.ext724, 2
  %arrayidx732 = getelementptr inbounds double* %7, i64 %add.ptr725.sum507
  %176 = load double* %arrayidx732, align 8, !tbaa !17
  %mul733 = fmul double %sub, %176
  %sub734 = fsub double %173, %mul733
  %add.ptr725.sum508 = or i64 %idx.ext724, 3
  %arrayidx735 = getelementptr inbounds double* %7, i64 %add.ptr725.sum508
  %177 = load double* %arrayidx735, align 8, !tbaa !17
  %mul736 = fmul double %sub, %177
  %sub737 = fsub double %174, %mul736
  %mul738 = fmul double %mul712, %sub737
  %mul739 = fmul double %mul712, %sub734
  %mul740 = fmul double %mul712, %sub731
  %mul743 = fmul double %sub716, 3.000000e+00
  %mul744 = fmul double %mul743, %mul738
  %mul745 = fmul double %mul739, 2.000000e+00
  %add746 = fadd double %mul745, %mul744
  %mul747 = fmul double %sub716, %add746
  %add748 = fadd double %mul740, %mul747
  %mul750 = fmul double %add748, -2.000000e+00
  %mul755 = fmul double %sub677, %mul750
  %178 = insertelement <2 x double> undef, double %sub677, i32 0
  %179 = insertelement <2 x double> %178, double %sub683, i32 1
  %180 = insertelement <2 x double> undef, double %mul755, i32 0
  %181 = insertelement <2 x double> %180, double %mul755, i32 1
  %182 = fmul <2 x double> %179, %181
  %183 = fadd <2 x double> %162, %182
  %184 = load double* %x762, align 8, !tbaa !72
  %add763 = fadd double %184, %mul755
  store double %add763, double* %x762, align 8, !tbaa !72
  %x764 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext672, i32 0
  %mul767 = fmul double %sub683, %mul750
  %185 = insertelement <2 x double> undef, double %sub683, i32 0
  %186 = insertelement <2 x double> %185, double %sub689, i32 1
  %187 = insertelement <2 x double> undef, double %mul767, i32 0
  %188 = insertelement <2 x double> %187, double %mul767, i32 1
  %189 = fmul <2 x double> %186, %188
  %190 = fadd <2 x double> %163, %189
  %191 = load double* %y772, align 8, !tbaa !73
  %add773 = fadd double %191, %mul767
  store double %add773, double* %y772, align 8, !tbaa !73
  %192 = bitcast double* %x764 to <2 x double>*
  %193 = load <2 x double>* %192, align 8, !tbaa !17
  %194 = insertelement <2 x double> %180, double %mul767, i32 1
  %195 = fsub <2 x double> %193, %194
  %196 = bitcast double* %x764 to <2 x double>*
  store <2 x double> %195, <2 x double>* %196, align 8, !tbaa !17
  %mul777 = fmul double %sub689, %mul750
  %197 = insertelement <2 x double> undef, double %sub689, i32 0
  %198 = insertelement <2 x double> %197, double %sub689, i32 1
  %199 = insertelement <2 x double> %180, double %mul777, i32 1
  %200 = fmul <2 x double> %198, %199
  %201 = fadd <2 x double> %164, %200
  %202 = load double* %z780, align 8, !tbaa !74
  %add781 = fadd double %202, %mul777
  store double %add781, double* %z780, align 8, !tbaa !74
  %z782 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext672, i32 2
  %203 = load double* %z782, align 8, !tbaa !74
  %sub783 = fsub double %203, %mul777
  store double %sub783, double* %z782, align 8, !tbaa !74
  %indvars.iv.next721 = add nuw nsw i64 %indvars.iv720, 1
  %lftr.wideiv722 = trunc i64 %indvars.iv.next721 to i32
  %exitcond723 = icmp eq i32 %lftr.wideiv722, %conv664
  br i1 %exitcond723, label %for.end786, label %for.body667

for.end786:                                       ; preds = %for.body667, %for.end659
  %204 = phi <2 x double> [ %159, %for.end659 ], [ %183, %for.body667 ]
  %205 = phi <2 x double> [ %160, %for.end659 ], [ %190, %for.body667 ]
  %206 = phi <2 x double> [ %161, %for.end659 ], [ %201, %for.body667 ]
  %conv791 = trunc i64 %sub.ptr.div559 to i32
  %cmp793636 = icmp sgt i32 %conv791, 0
  br i1 %cmp793636, label %for.body794.lr.ph, label %for.inc911

for.body794.lr.ph:                                ; preds = %for.end786
  %x886 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y896 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z904 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body794

for.body794:                                      ; preds = %for.body794, %for.body794.lr.ph
  %indvars.iv724 = phi i64 [ 0, %for.body794.lr.ph ], [ %indvars.iv.next725, %for.body794 ]
  %207 = phi <2 x double> [ %204, %for.body794.lr.ph ], [ %228, %for.body794 ]
  %208 = phi <2 x double> [ %205, %for.body794.lr.ph ], [ %235, %for.body794 ]
  %209 = phi <2 x double> [ %206, %for.body794.lr.ph ], [ %246, %for.body794 ]
  %arrayidx797 = getelementptr inbounds i32* %cond162557, i64 %indvars.iv724
  %210 = load i32* %arrayidx797, align 4, !tbaa !11
  %idx.ext799 = sext i32 %210 to i64
  %x803 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 0
  %211 = load double* %x803, align 8, !tbaa !59
  %sub804 = fsub double %69, %211
  %mul806 = fmul double %sub804, %sub804
  %y809 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 1
  %212 = load double* %y809, align 8, !tbaa !61
  %sub810 = fsub double %70, %212
  %mul811 = fmul double %sub810, %sub810
  %add812 = fadd double %mul806, %mul811
  %z815 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 0, i32 2
  %213 = load double* %z815, align 8, !tbaa !62
  %sub816 = fsub double %71, %213
  %mul817 = fmul double %sub816, %sub816
  %add818 = fadd double %add812, %mul817
  %conv820 = fptrunc double %add818 to float
  %214 = bitcast float %conv820 to i32
  %shr824 = ashr i32 %214, 17
  %add825 = add nsw i32 %shr824, %mul
  %mul827 = shl nsw i32 %add825, 4
  %idx.ext828 = sext i32 %mul827 to i64
  %and835 = and i32 %214, -131072
  %charge837 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext799, i32 1
  %215 = load float* %charge837, align 4, !tbaa !63
  %conv838 = fpext float %215 to double
  %mul839 = fmul double %mul367756, %conv838
  %216 = bitcast i32 %and835 to float
  %conv842 = fpext float %216 to double
  %sub843 = fsub double %add818, %conv842
  %add.ptr831.sum495 = or i64 %idx.ext828, 13
  %arrayidx845 = getelementptr inbounds double* %6, i64 %add.ptr831.sum495
  %217 = load double* %arrayidx845, align 8, !tbaa !17
  %add.ptr831.sum496 = or i64 %idx.ext828, 14
  %arrayidx847 = getelementptr inbounds double* %6, i64 %add.ptr831.sum496
  %218 = load double* %arrayidx847, align 8, !tbaa !17
  %add.ptr831.sum497 = or i64 %idx.ext828, 15
  %arrayidx849 = getelementptr inbounds double* %6, i64 %add.ptr831.sum497
  %219 = load double* %arrayidx849, align 8, !tbaa !17
  %mul851 = shl nsw i32 %add825, 2
  %idx.ext852 = sext i32 %mul851 to i64
  %add.ptr853.sum498 = or i64 %idx.ext852, 1
  %arrayidx856 = getelementptr inbounds double* %7, i64 %add.ptr853.sum498
  %220 = load double* %arrayidx856, align 8, !tbaa !17
  %sub857 = fsub double %217, %220
  %add.ptr853.sum499 = or i64 %idx.ext852, 2
  %arrayidx858 = getelementptr inbounds double* %7, i64 %add.ptr853.sum499
  %221 = load double* %arrayidx858, align 8, !tbaa !17
  %sub859 = fsub double %218, %221
  %add.ptr853.sum500 = or i64 %idx.ext852, 3
  %arrayidx860 = getelementptr inbounds double* %7, i64 %add.ptr853.sum500
  %222 = load double* %arrayidx860, align 8, !tbaa !17
  %sub861 = fsub double %219, %222
  %mul862 = fmul double %mul839, %sub861
  %mul863 = fmul double %mul839, %sub859
  %mul864 = fmul double %mul839, %sub857
  %mul867 = fmul double %sub843, 3.000000e+00
  %mul868 = fmul double %mul862, %mul867
  %mul869 = fmul double %mul863, 2.000000e+00
  %add870 = fadd double %mul869, %mul868
  %mul871 = fmul double %sub843, %add870
  %add872 = fadd double %mul864, %mul871
  %mul874 = fmul double %add872, -2.000000e+00
  %mul879 = fmul double %sub804, %mul874
  %223 = insertelement <2 x double> undef, double %sub804, i32 0
  %224 = insertelement <2 x double> %223, double %sub810, i32 1
  %225 = insertelement <2 x double> undef, double %mul879, i32 0
  %226 = insertelement <2 x double> %225, double %mul879, i32 1
  %227 = fmul <2 x double> %224, %226
  %228 = fadd <2 x double> %207, %227
  %229 = load double* %x886, align 8, !tbaa !72
  %add887 = fadd double %229, %mul879
  store double %add887, double* %x886, align 8, !tbaa !72
  %x888 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext799, i32 0
  %mul891 = fmul double %sub810, %mul874
  %230 = insertelement <2 x double> undef, double %sub810, i32 0
  %231 = insertelement <2 x double> %230, double %sub816, i32 1
  %232 = insertelement <2 x double> undef, double %mul891, i32 0
  %233 = insertelement <2 x double> %232, double %mul891, i32 1
  %234 = fmul <2 x double> %231, %233
  %235 = fadd <2 x double> %208, %234
  %236 = load double* %y896, align 8, !tbaa !73
  %add897 = fadd double %236, %mul891
  store double %add897, double* %y896, align 8, !tbaa !73
  %237 = bitcast double* %x888 to <2 x double>*
  %238 = load <2 x double>* %237, align 8, !tbaa !17
  %239 = insertelement <2 x double> %225, double %mul891, i32 1
  %240 = fsub <2 x double> %238, %239
  %241 = bitcast double* %x888 to <2 x double>*
  store <2 x double> %240, <2 x double>* %241, align 8, !tbaa !17
  %mul901 = fmul double %sub816, %mul874
  %242 = insertelement <2 x double> undef, double %sub816, i32 0
  %243 = insertelement <2 x double> %242, double %sub816, i32 1
  %244 = insertelement <2 x double> %225, double %mul901, i32 1
  %245 = fmul <2 x double> %243, %244
  %246 = fadd <2 x double> %209, %245
  %247 = load double* %z904, align 8, !tbaa !74
  %add905 = fadd double %247, %mul901
  store double %add905, double* %z904, align 8, !tbaa !74
  %z906 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext799, i32 2
  %248 = load double* %z906, align 8, !tbaa !74
  %sub907 = fsub double %248, %mul901
  store double %sub907, double* %z906, align 8, !tbaa !74
  %indvars.iv.next725 = add nuw nsw i64 %indvars.iv724, 1
  %lftr.wideiv726 = trunc i64 %indvars.iv.next725 to i32
  %exitcond727 = icmp eq i32 %lftr.wideiv726, %conv791
  br i1 %exitcond727, label %for.inc911, label %for.body794

for.inc911:                                       ; preds = %for.body794, %for.end786, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end786 ], [ %pairCount.2, %for.body794 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0654, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end786 ], [ %pairlistindex.1, %for.body794 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1655, %for.end786 ], [ %i.1655, %for.body794 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0668, %if.then221 ], [ %exclChecksum.0668, %cond.end349 ], [ %conv569, %for.end786 ], [ %conv569, %for.body794 ]
  %249 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %204, %for.end786 ], [ %228, %for.body794 ]
  %250 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %205, %for.end786 ], [ %235, %for.body794 ]
  %251 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %206, %for.end786 ], [ %246, %for.body794 ]
  %inc912 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc912, %12
  br i1 %cmp183, label %for.body184, label %for.end913

for.end913:                                       ; preds = %for.inc911, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc911 ]
  %252 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %249, %for.inc911 ]
  %253 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %250, %for.inc911 ]
  %254 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %251, %for.inc911 ]
  %255 = extractelement <2 x double> %254, i32 1
  %arraydecay914 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp915 = icmp eq i32* %cond531533742748, %arraydecay914
  br i1 %cmp915, label %if.end920, label %delete.notnull918

delete.notnull918:                                ; preds = %for.end913
  %256 = bitcast i32* %cond531533742748 to i8*
  call void @_ZdaPv(i8* %256) #7
  br label %if.end920

if.end920:                                        ; preds = %delete.notnull918, %for.end913
  %arraydecay921 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp922 = icmp eq i32* %cond19535740749, %arraydecay921
  br i1 %cmp922, label %if.end927, label %delete.notnull925

delete.notnull925:                                ; preds = %if.end920
  %257 = bitcast i32* %cond19535740749 to i8*
  call void @_ZdaPv(i8* %257) #7
  br label %if.end927

if.end927:                                        ; preds = %delete.notnull925, %if.end920
  %arraydecay928 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp929 = icmp eq i32* %cond30744747, %arraydecay928
  br i1 %cmp929, label %if.end934, label %delete.notnull932

delete.notnull932:                                ; preds = %if.end927
  %258 = bitcast i32* %cond30744747 to i8*
  call void @_ZdaPv(i8* %258) #7
  br label %if.end934

if.end934:                                        ; preds = %delete.notnull932, %if.end927
  %arraydecay935 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp936 = icmp eq i32* %cond129539541547553, %arraydecay935
  br i1 %cmp936, label %if.end941, label %delete.notnull939

delete.notnull939:                                ; preds = %if.end934
  %259 = bitcast i32* %cond129539541547553 to i8*
  call void @_ZdaPv(i8* %259) #7
  br label %if.end941

if.end941:                                        ; preds = %delete.notnull939, %if.end934
  %arraydecay942 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp943 = icmp eq i32* %cond140543545555, %arraydecay942
  br i1 %cmp943, label %if.end948, label %delete.notnull946

delete.notnull946:                                ; preds = %if.end941
  %260 = bitcast i32* %cond140543545555 to i8*
  call void @_ZdaPv(i8* %260) #7
  br label %if.end948

if.end948:                                        ; preds = %delete.notnull946, %if.end941
  %arraydecay949 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp950 = icmp eq i32* %cond151549551, %arraydecay949
  br i1 %cmp950, label %if.end955, label %delete.notnull953

delete.notnull953:                                ; preds = %if.end948
  %261 = bitcast i32* %cond151549551 to i8*
  call void @_ZdaPv(i8* %261) #7
  br label %if.end955

if.end955:                                        ; preds = %delete.notnull953, %if.end948
  %arraydecay956 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp957 = icmp eq i32* %cond162557, %arraydecay956
  br i1 %cmp957, label %if.end962, label %delete.notnull960

delete.notnull960:                                ; preds = %if.end955
  %262 = bitcast i32* %cond162557 to i8*
  call void @_ZdaPv(i8* %262) #7
  br label %if.end962

if.end962:                                        ; preds = %delete.notnull960, %if.end955
  %arraydecay963 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp964 = icmp eq i32* %cond173, %arraydecay963
  br i1 %cmp964, label %if.end969, label %delete.notnull967

delete.notnull967:                                ; preds = %if.end962
  %263 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %263) #7
  br label %if.end969

if.end969:                                        ; preds = %delete.notnull967, %if.end962
  %conv970 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx971 = getelementptr inbounds double* %1, i64 22
  %264 = load double* %arrayidx971, align 8, !tbaa !17
  %add972 = fadd double %conv970, %264
  store double %add972, double* %arrayidx971, align 8, !tbaa !17
  %arrayidx973 = getelementptr inbounds double* %1, i64 12
  %265 = bitcast double* %arrayidx973 to <2 x double>*
  %266 = load <2 x double>* %265, align 8, !tbaa !17
  %267 = fadd <2 x double> %252, %266
  %268 = bitcast double* %arrayidx973 to <2 x double>*
  store <2 x double> %267, <2 x double>* %268, align 8, !tbaa !17
  %arrayidx977 = getelementptr inbounds double* %1, i64 14
  %269 = bitcast double* %arrayidx977 to <2 x double>*
  %270 = load <2 x double>* %269, align 8, !tbaa !17
  %271 = shufflevector <2 x double> %254, <2 x double> %252, <2 x i32> <i32 0, i32 3>
  %272 = fadd <2 x double> %271, %270
  %273 = bitcast double* %arrayidx977 to <2 x double>*
  store <2 x double> %272, <2 x double>* %273, align 8, !tbaa !17
  %arrayidx981 = getelementptr inbounds double* %1, i64 16
  %274 = bitcast double* %arrayidx981 to <2 x double>*
  %275 = load <2 x double>* %274, align 8, !tbaa !17
  %276 = fadd <2 x double> %253, %275
  %277 = bitcast double* %arrayidx981 to <2 x double>*
  store <2 x double> %276, <2 x double>* %277, align 8, !tbaa !17
  %arrayidx985 = getelementptr inbounds double* %1, i64 18
  %278 = bitcast double* %arrayidx985 to <2 x double>*
  %279 = load <2 x double>* %278, align 8, !tbaa !17
  %280 = shufflevector <2 x double> %254, <2 x double> %253, <2 x i32> <i32 0, i32 3>
  %281 = fadd <2 x double> %280, %279
  %282 = bitcast double* %arrayidx985 to <2 x double>*
  store <2 x double> %281, <2 x double>* %282, align 8, !tbaa !17
  %arrayidx989 = getelementptr inbounds double* %1, i64 20
  %283 = load double* %arrayidx989, align 8, !tbaa !17
  %add990 = fadd double %255, %283
  store double %add990, double* %arrayidx989, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end969, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil31calc_pair_energy_slow_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31723 = icmp sgt i32 %13, 0
  br i1 %cmp31723, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30779 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond556558777 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19560775 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv769 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next770, %for.inc ]
  %g.0724 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv769, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0724, 1
  %idxprom41 = sext i32 %g.0724 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond556558777, i64 %idxprom41
  %30 = trunc i64 %indvars.iv769 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0724, %for.body ]
  %indvars.iv.next770 = add nuw nsw i64 %indvars.iv769, 1
  %lftr.wideiv771 = trunc i64 %indvars.iv.next770 to i32
  %exitcond772 = icmp eq i32 %lftr.wideiv771, %13
  br i1 %exitcond772, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond556558777, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond556558777, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa784 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19560774783 = phi i32* [ %cond19560775, %for.end ], [ %cond19560775, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond556558776782 = phi i32* [ %cond556558777, %for.end ], [ %cond556558777, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30778781 = phi i32* [ %cond30779, %for.end ], [ %cond30779, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end118, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56717 = icmp sgt i32 %g.0.lcssa784, 0
  br i1 %cmp56717, label %for.body57, label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.inc71, %for.cond55.preheader
  %fixg.0.lcssa = phi i32 [ 0, %for.cond55.preheader ], [ %fixg.1, %for.inc71 ]
  %all_fixed.0.lcssa = phi i32 [ 1, %for.cond55.preheader ], [ %all_fixed.1, %for.inc71 ]
  %tobool75711 = icmp ne i32 %all_fixed.0.lcssa, 0
  %cmp76712 = icmp sgt i32 %12, 0
  %or.cond548713 = and i1 %tobool75711, %cmp76712
  br i1 %or.cond548713, label %for.body77, label %for.end88

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv765 = phi i64 [ %indvars.iv.next766, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0719 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0718 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond556558776782, i64 %indvars.iv765
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0719, 1
  %idxprom68 = sext i32 %fixg.0719 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19560774783, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0718, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0719, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next766 = add nuw nsw i64 %indvars.iv765, 1
  %lftr.wideiv767 = trunc i64 %indvars.iv.next766 to i32
  %exitcond768 = icmp eq i32 %lftr.wideiv767, %g.0.lcssa784
  br i1 %exitcond768, label %for.cond74.preheader, label %for.body57

for.body77:                                       ; preds = %for.body77, %for.cond74.preheader
  %indvars.iv763 = phi i64 [ %indvars.iv.next764, %for.body77 ], [ 0, %for.cond74.preheader ]
  %all_fixed.2714 = phi i32 [ %.all_fixed.2, %for.body77 ], [ %all_fixed.0.lcssa, %for.cond74.preheader ]
  %atomFixed = getelementptr inbounds %struct.CompAtom* %14, i64 %indvars.iv763, i32 2
  %35 = bitcast [4 x i8]* %atomFixed to i32*
  %bf.load80 = load i32* %35, align 4
  %bf.clear82 = and i32 %bf.load80, 67108864
  %tobool83 = icmp eq i32 %bf.clear82, 0
  %.all_fixed.2 = select i1 %tobool83, i32 0, i32 %all_fixed.2714
  %indvars.iv.next764 = add nuw nsw i64 %indvars.iv763, 1
  %tobool75 = icmp ne i32 %.all_fixed.2, 0
  %36 = trunc i64 %indvars.iv.next764 to i32
  %cmp76 = icmp slt i32 %36, %12
  %or.cond548 = and i1 %tobool75, %cmp76
  br i1 %or.cond548, label %for.body77, label %for.end88

for.end88:                                        ; preds = %for.body77, %for.cond74.preheader
  %tobool75.lcssa = phi i1 [ %tobool75711, %for.cond74.preheader ], [ %tobool75, %for.body77 ]
  br i1 %tobool75.lcssa, label %if.then90, label %if.end110

if.then90:                                        ; preds = %for.end88
  %arraydecay91 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp92 = icmp eq i32* %cond556558776782, %arraydecay91
  br i1 %cmp92, label %if.end94, label %delete.notnull

delete.notnull:                                   ; preds = %if.then90
  %37 = bitcast i32* %cond556558776782 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %if.end94

if.end94:                                         ; preds = %delete.notnull, %if.then90
  %arraydecay95 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp96 = icmp eq i32* %cond19560774783, %arraydecay95
  br i1 %cmp96, label %if.end101, label %delete.notnull99

delete.notnull99:                                 ; preds = %if.end94
  %38 = bitcast i32* %cond19560774783 to i8*
  call void @_ZdaPv(i8* %38) #7
  br label %if.end101

if.end101:                                        ; preds = %delete.notnull99, %if.end94
  %arraydecay102 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp103 = icmp eq i32* %cond30778781, %arraydecay102
  br i1 %cmp103, label %cleanup.cont, label %delete.notnull106

delete.notnull106:                                ; preds = %if.end101
  %39 = bitcast i32* %cond30778781 to i8*
  call void @_ZdaPv(i8* %39) #7
  br label %cleanup.cont

if.end110:                                        ; preds = %for.end88
  %tobool111 = icmp eq i32 %fixg.0.lcssa, 0
  br i1 %tobool111, label %if.end118, label %if.then112

if.then112:                                       ; preds = %if.end110
  %sub113 = add nsw i32 %fixg.0.lcssa, -1
  %idxprom114 = sext i32 %sub113 to i64
  %arrayidx115 = getelementptr inbounds i32* %cond19560774783, i64 %idxprom114
  %40 = load i32* %arrayidx115, align 4, !tbaa !11
  %idxprom116 = sext i32 %fixg.0.lcssa to i64
  %arrayidx117 = getelementptr inbounds i32* %cond19560774783, i64 %idxprom116
  store i32 %40, i32* %arrayidx117, align 4, !tbaa !11
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end110, %if.end52
  %fixg.2563 = phi i32 [ 0, %if.end110 ], [ %fixg.0.lcssa, %if.then112 ], [ 0, %if.end52 ]
  %41 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  %44 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %44) #6
  %45 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %45) #6
  br i1 %cmp, label %cond.true164, label %cond.false166

cond.true164:                                     ; preds = %if.end118
  %arraydecay121 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay132 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay143 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay154 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay165 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end172

cond.false166:                                    ; preds = %if.end118
  %add123 = add nsw i32 %13, 5
  %46 = sext i32 %add123 to i64
  %47 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 4)
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 -1, i64 %49
  %call124 = call noalias i8* @_Znam(i64 %50) #8
  %51 = bitcast i8* %call124 to i32*
  %call135 = call noalias i8* @_Znam(i64 %50) #8
  %52 = bitcast i8* %call135 to i32*
  %call146 = call noalias i8* @_Znam(i64 %50) #8
  %53 = bitcast i8* %call146 to i32*
  %call157 = call noalias i8* @_Znam(i64 %50) #8
  %54 = bitcast i8* %call157 to i32*
  %call168 = call noalias i8* @_Znam(i64 %50) #8
  %55 = bitcast i8* %call168 to i32*
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true164
  %cond162582 = phi i32* [ %arraydecay154, %cond.true164 ], [ %54, %cond.false166 ]
  %cond140568570580 = phi i32* [ %arraydecay132, %cond.true164 ], [ %52, %cond.false166 ]
  %cond129564566572578 = phi i32* [ %arraydecay121, %cond.true164 ], [ %51, %cond.false166 ]
  %cond151574576 = phi i32* [ %arraydecay143, %cond.true164 ], [ %53, %cond.false166 ]
  %cond173 = phi i32* [ %arraydecay165, %cond.true164 ], [ %55, %cond.false166 ]
  %arrayidx174 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %56 = load %class.Vector** %arrayidx174, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %57 = load %class.Vector** %arrayidx176, align 8, !tbaa !1
  %mul177 = mul nsw i32 %13, %12
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %58 = load i32* %minPart, align 4, !tbaa !50
  %mul178 = mul nsw i32 %58, %mul177
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %59 = load i32* %numParts, align 4, !tbaa !51
  %div = sdiv i32 %mul178, %59
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %60 = load i32* %maxPart, align 4, !tbaa !52
  %mul179 = mul nsw i32 %60, %mul177
  %div181 = sdiv i32 %mul179, %59
  %cmp183683 = icmp sgt i32 %12, 0
  br i1 %cmp183683, label %for.body184.lr.ph, label %for.end936

for.body184.lr.ph:                                ; preds = %cond.end172
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast520 = ptrtoint i32* %cond140568570580 to i64
  %sub.ptr.rhs.cast557 = ptrtoint i32* %cond162582 to i64
  %sub.ptr.rhs.cast564 = ptrtoint i32* %cond173 to i64
  %sub.ptr.rhs.cast571 = ptrtoint i32* %cond151574576 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30778781 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i32* %cond129564566572578 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.inc934, %for.body184.lr.ph
  %exclChecksum.0701 = phi i32 [ 0, %for.body184.lr.ph ], [ %exclChecksum.8, %for.inc934 ]
  %fullElectVirial_zz.0687 = phi double [ 0.000000e+00, %for.body184.lr.ph ], [ %fullElectVirial_zz.4, %for.inc934 ]
  %i.1686 = phi i32 [ 0, %for.body184.lr.ph ], [ %inc935, %for.inc934 ]
  %pairlistindex.0685 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairlistindex.2, %for.inc934 ]
  %pairCount.0684 = phi i32 [ 0, %for.body184.lr.ph ], [ %pairCount.3, %for.inc934 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %248, %for.inc934 ]
  %62 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %249, %for.inc934 ]
  %63 = phi <2 x double> [ zeroinitializer, %for.body184.lr.ph ], [ %250, %for.inc934 ]
  %idxprom185 = sext i32 %i.1686 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 2
  %64 = bitcast [4 x i8]* %id to i32*
  %bf.load187 = load i32* %64, align 4
  %bf.clear188 = and i32 %bf.load187, 4194303
  %idxprom.i584 = zext i32 %bf.clear188 to i64
  %65 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i584, i32 0
  %66 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i584, i32 1
  %67 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %65, i64 %idxprom.i584, i32 2
  %68 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %66 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 0
  %69 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 1
  %70 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 0, i32 2
  %71 = load double* %z, align 8, !tbaa !62
  %arrayidx193 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185
  %72 = and i32 %bf.load187, 62914560
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %if.end354, label %if.then205

if.then205:                                       ; preds = %for.body184
  %bf.lshr208 = lshr i32 %bf.load187, 22
  %bf.clear209 = and i32 %bf.lshr208, 7
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end225, label %if.then211

if.then211:                                       ; preds = %if.then205
  %mul216 = mul nsw i32 %bf.clear209, %13
  %add217 = add nsw i32 %mul216, %pairCount.0684
  %cmp218 = icmp sge i32 %pairCount.0684, %div
  %cmp220 = icmp slt i32 %pairCount.0684, %div181
  %or.cond550 = and i1 %cmp218, %cmp220
  br i1 %or.cond550, label %if.end225, label %if.then221

if.then221:                                       ; preds = %if.then211
  %sub222 = add i32 %i.1686, -1
  %add223 = add i32 %sub222, %bf.clear209
  br label %for.inc934

if.end225:                                        ; preds = %if.then211, %if.then205
  %pairCount.1 = phi i32 [ %pairCount.0684, %if.then205 ], [ %add217, %if.then211 ]
  %74 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool226 = icmp eq i32 %74, 0
  br i1 %tobool226, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end225
  %bf.clear230 = and i32 %bf.load187, 134217728
  %tobool231 = icmp ne i32 %bf.clear230, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end225
  %75 = phi i1 [ false, %if.end225 ], [ %tobool231, %land.rhs ]
  %cond238 = select i1 %75, i32* %cond19560774783, i32* %cond556558776782
  %cond243 = select i1 %75, i32 %fixg.2563, i32 %g.0.lcssa784
  %cmp244 = icmp sgt i32 %cond243, 0
  br i1 %cmp244, label %if.then245, label %if.end324

if.then245:                                       ; preds = %land.end
  %76 = load i32* %cond238, align 4, !tbaa !11
  %idxprom248 = sext i32 %76 to i64
  %x251 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 0
  %77 = load double* %x251, align 8, !tbaa !59
  %y255 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 1
  %78 = load double* %y255, align 8, !tbaa !61
  %z259 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom248, i32 0, i32 2
  %79 = load double* %z259, align 8, !tbaa !62
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then285, %if.then245
  %p_j_z.0.ph = phi double [ %79, %if.then245 ], [ %85, %if.then285 ]
  %p_j_y.0.ph = phi double [ %78, %if.then245 ], [ %84, %if.then285 ]
  %p_j_x.0.ph = phi double [ %77, %if.then245 ], [ %83, %if.then285 ]
  %j2.0.ph = phi i32 [ %76, %if.then245 ], [ %82, %if.then285 ]
  %gli.0.ph = phi i32* [ %cond30778781, %if.then245 ], [ %incdec.ptr, %if.then285 ]
  %g.3.ph = phi i32 [ 0, %if.then245 ], [ %inc261, %if.then285 ]
  %80 = sext i32 %g.3.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.body, %while.cond.outer
  %indvars.iv = phi i64 [ %80, %while.cond.outer ], [ %indvars.iv.next, %while.body ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond.outer ], [ %85, %while.body ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond.outer ], [ %84, %while.body ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond.outer ], [ %83, %while.body ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond.outer ], [ %82, %while.body ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond.outer ], [ %inc261, %while.body ]
  %81 = trunc i64 %indvars.iv to i32
  %cmp260 = icmp slt i32 %81, %cond243
  br i1 %cmp260, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc261 = add nsw i32 %g.3, 1
  %arrayidx263 = getelementptr inbounds i32* %cond238, i64 %indvars.iv.next
  %82 = load i32* %arrayidx263, align 4, !tbaa !11
  %sub264 = fsub double %69, %p_j_x.0
  %mul265 = fmul double %sub264, %sub264
  %idxprom266 = sext i32 %82 to i64
  %x269 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 0
  %83 = load double* %x269, align 8, !tbaa !59
  %sub270 = fsub double %70, %p_j_y.0
  %mul271 = fmul double %sub270, %sub270
  %add272 = fadd double %mul271, %mul265
  %y276 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 1
  %84 = load double* %y276, align 8, !tbaa !61
  %sub277 = fsub double %71, %p_j_z.0
  %mul278 = fmul double %sub277, %sub277
  %add279 = fadd double %mul278, %add272
  %z283 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom266, i32 0, i32 2
  %85 = load double* %z283, align 8, !tbaa !62
  %cmp284 = fcmp ugt double %add279, %3
  br i1 %cmp284, label %while.cond, label %if.then285

if.then285:                                       ; preds = %while.body
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div545 = lshr exact i64 %sub.ptr.sub, 2
  %conv287 = trunc i64 %sub.ptr.div545 to i32
  %cmp289590 = icmp sgt i32 %conv287, 0
  br i1 %cmp289590, label %for.body290.lr.ph, label %if.end324

for.body290.lr.ph:                                ; preds = %while.end
  %86 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %87 = lshr i64 %86, 2
  %88 = trunc i64 %87 to i32
  br label %for.body290

for.body290:                                      ; preds = %cond.end310, %for.body290.lr.ph
  %indvars.iv731 = phi i64 [ 0, %for.body290.lr.ph ], [ %indvars.iv.next732, %cond.end310 ]
  %pli.0592 = phi i32* [ %cond129564566572578, %for.body290.lr.ph ], [ %add.ptr320, %cond.end310 ]
  %arrayidx293 = getelementptr inbounds i32* %cond30778781, i64 %indvars.iv731
  %89 = load i32* %arrayidx293, align 4, !tbaa !11
  %idxprom295 = sext i32 %89 to i64
  %nonbondedGroupIsAtom297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom295, i32 2
  %90 = bitcast [4 x i8]* %nonbondedGroupIsAtom297 to i32*
  %bf.load298 = load i32* %90, align 4
  %bf.clear300 = and i32 %bf.load298, 33554432
  %tobool301 = icmp eq i32 %bf.clear300, 0
  br i1 %tobool301, label %cond.false303, label %cond.end310

cond.false303:                                    ; preds = %for.body290
  %bf.lshr308 = lshr i32 %bf.load298, 22
  %bf.clear309 = and i32 %bf.lshr308, 7
  %phitmp546547 = zext i32 %bf.clear309 to i64
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false303, %for.body290
  %cond311 = phi i64 [ %phitmp546547, %cond.false303 ], [ 1, %for.body290 ]
  store i32 %89, i32* %pli.0592, align 4, !tbaa !11
  %add313 = add nsw i32 %89, 1
  %arrayidx314 = getelementptr inbounds i32* %pli.0592, i64 1
  store i32 %add313, i32* %arrayidx314, align 4, !tbaa !11
  %add315 = add nsw i32 %89, 2
  %arrayidx316 = getelementptr inbounds i32* %pli.0592, i64 2
  store i32 %add315, i32* %arrayidx316, align 4, !tbaa !11
  %add317 = add nsw i32 %89, 3
  %arrayidx318 = getelementptr inbounds i32* %pli.0592, i64 3
  store i32 %add317, i32* %arrayidx318, align 4, !tbaa !11
  %add.ptr320 = getelementptr inbounds i32* %pli.0592, i64 %cond311
  %indvars.iv.next732 = add nuw nsw i64 %indvars.iv731, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next732 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond, label %if.end324, label %for.body290

if.end324:                                        ; preds = %cond.end310, %while.end, %land.end
  %pli.1 = phi i32* [ %cond129564566572578, %land.end ], [ %cond129564566572578, %while.end ], [ %add.ptr320, %cond.end310 ]
  %sub.ptr.lhs.cast325 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %sub.ptr.div328542 = lshr exact i64 %sub.ptr.sub327, 2
  %conv329 = trunc i64 %sub.ptr.div328542 to i32
  %tobool330 = icmp eq i32 %conv329, 0
  br i1 %tobool330, label %if.else, label %if.then331

if.then331:                                       ; preds = %if.end324
  %sub332 = shl i64 %sub.ptr.sub327, 30
  %sext543 = add i64 %sub332, -4294967296
  %idxprom333 = ashr exact i64 %sext543, 32
  %arrayidx334 = getelementptr inbounds i32* %cond129564566572578, i64 %idxprom333
  %91 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom335 = ashr exact i64 %sub332, 32
  %arrayidx336 = getelementptr inbounds i32* %cond129564566572578, i64 %idxprom335
  store i32 %91, i32* %arrayidx336, align 4, !tbaa !11
  br label %if.end354

if.else:                                          ; preds = %if.end324
  %bf.load339 = load i32* %64, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end349

cond.false344:                                    ; preds = %if.else
  %bf.lshr347 = lshr i32 %bf.load339, 22
  %bf.clear348 = and i32 %bf.lshr347, 7
  %phitmp = add i32 %bf.clear348, -1
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false344, %if.else
  %cond350 = phi i32 [ %phitmp, %cond.false344 ], [ 0, %if.else ]
  %add352 = add nsw i32 %cond350, %i.1686
  br label %for.inc934

if.end354:                                        ; preds = %if.then331, %for.body184
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then331 ], [ %pairCount.0684, %for.body184 ]
  %pairlistindex.1 = phi i32 [ %conv329, %if.then331 ], [ %pairlistindex.0685, %for.body184 ]
  %92 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool355 = icmp eq i32 %92, 0
  br i1 %tobool355, label %land.end362.thread, label %land.end362

land.end362.thread:                               ; preds = %if.end354
  %charge785 = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %93 = load float* %charge785, align 4, !tbaa !63
  %conv364786 = fpext float %93 to double
  %mul365787 = fmul double %conv364786, 3.320636e+02
  %mul366788 = fmul double %8, %mul365787
  %mul367789 = fmul double %4, %mul366788
  br label %if.else439

land.end362:                                      ; preds = %if.end354
  %bf.load358 = load i32* %64, align 4
  %bf.clear360 = and i32 %bf.load358, 67108864
  %tobool361 = icmp eq i32 %bf.clear360, 0
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom185, i32 1
  %94 = load float* %charge, align 4, !tbaa !63
  %conv364 = fpext float %94 to double
  %mul365 = fmul double %conv364, 3.320636e+02
  %mul366 = fmul double %8, %mul365
  %mul367 = fmul double %4, %mul366
  br i1 %tobool361, label %if.else439, label %for.cond377.preheader

for.cond377.preheader:                            ; preds = %land.end362
  %cmp378617 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %cmp378617, label %for.body379, label %if.end518

for.body379:                                      ; preds = %for.inc436, %for.cond377.preheader
  %indvars.iv742 = phi i64 [ %indvars.iv.next743, %for.inc436 ], [ 0, %for.cond377.preheader ]
  %exclChecksum.1621 = phi i32 [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.0701, %for.cond377.preheader ]
  %pli374.0620 = phi i32* [ %pli374.1, %for.inc436 ], [ %cond140568570580, %for.cond377.preheader ]
  %plin.0619 = phi i32* [ %plin.1, %for.inc436 ], [ %cond151574576, %for.cond377.preheader ]
  %arrayidx381 = getelementptr inbounds i32* %cond129564566572578, i64 %indvars.iv742
  %95 = load i32* %arrayidx381, align 4, !tbaa !11
  %idxprom383 = sext i32 %95 to i64
  %x386 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 0
  %96 = load double* %x386, align 8, !tbaa !59
  %sub388 = fsub double %69, %96
  %mul389 = fmul double %sub388, %sub388
  %y394 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 1
  %97 = load double* %y394, align 8, !tbaa !61
  %sub396 = fsub double %70, %97
  %mul397 = fmul double %sub396, %sub396
  %add398 = fadd double %mul389, %mul397
  %z403 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 0, i32 2
  %98 = load double* %z403, align 8, !tbaa !62
  %sub404 = fsub double %71, %98
  %mul405 = fmul double %sub404, %sub404
  %add406 = fadd double %add398, %mul405
  %atomFixed409 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom383, i32 2
  %99 = bitcast [4 x i8]* %atomFixed409 to i32*
  %bf.load410 = load i32* %99, align 4
  %bf.clear412 = and i32 %bf.load410, 67108864
  %tobool413 = icmp ne i32 %bf.clear412, 0
  %cmp415 = fcmp ugt double %add406, %2
  %or.cond551 = or i1 %tobool413, %cmp415
  br i1 %or.cond551, label %for.inc436, label %land.lhs.true416

land.lhs.true416:                                 ; preds = %for.body379
  %cmp417 = fcmp ugt double %add406, %10
  br i1 %cmp417, label %if.then421, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %land.lhs.true416
  %inc419 = add nsw i32 %exclChecksum.1621, 1
  %tobool420 = icmp eq i32 %inc419, 0
  br i1 %tobool420, label %if.then421, label %for.inc436

if.then421:                                       ; preds = %land.lhs.true418, %land.lhs.true416
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true418 ], [ %exclChecksum.1621, %land.lhs.true416 ]
  %bf.clear426 = and i32 %bf.load410, 4194303
  %cmp427 = icmp slt i32 %bf.clear426, %66
  %cmp429 = icmp sgt i32 %bf.clear426, %67
  %or.cond552 = or i1 %cmp427, %cmp429
  br i1 %or.cond552, label %if.else432, label %if.then430

if.then430:                                       ; preds = %if.then421
  %incdec.ptr431 = getelementptr inbounds i32* %pli374.0620, i64 1
  store i32 %95, i32* %pli374.0620, align 4, !tbaa !11
  br label %for.inc436

if.else432:                                       ; preds = %if.then421
  %incdec.ptr433 = getelementptr inbounds i32* %plin.0619, i64 1
  store i32 %95, i32* %plin.0619, align 4, !tbaa !11
  br label %for.inc436

for.inc436:                                       ; preds = %if.else432, %if.then430, %land.lhs.true418, %for.body379
  %plin.1 = phi i32* [ %plin.0619, %for.body379 ], [ %plin.0619, %land.lhs.true418 ], [ %plin.0619, %if.then430 ], [ %incdec.ptr433, %if.else432 ]
  %pli374.1 = phi i32* [ %pli374.0620, %for.body379 ], [ %pli374.0620, %land.lhs.true418 ], [ %incdec.ptr431, %if.then430 ], [ %pli374.0620, %if.else432 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1621, %for.body379 ], [ %inc419, %land.lhs.true418 ], [ %exclChecksum.2, %if.then430 ], [ %exclChecksum.2, %if.else432 ]
  %indvars.iv.next743 = add nuw nsw i64 %indvars.iv742, 1
  %lftr.wideiv744 = trunc i64 %indvars.iv.next743 to i32
  %exitcond745 = icmp eq i32 %lftr.wideiv744, %pairlistindex.1
  br i1 %exitcond745, label %if.end518, label %for.body379

if.else439:                                       ; preds = %land.end362, %land.end362.thread
  %mul367791 = phi double [ %mul367789, %land.end362.thread ], [ %mul367, %land.end362 ]
  %cmp441 = icmp sgt i32 %pairlistindex.1, 0
  br i1 %cmp441, label %if.then442, label %if.end518

if.then442:                                       ; preds = %if.else439
  %100 = load i32* %cond129564566572578, align 4, !tbaa !11
  %idxprom447 = sext i32 %100 to i64
  %x450 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 0
  %101 = load double* %x450, align 8, !tbaa !59
  %y455 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 1
  %102 = load double* %y455, align 8, !tbaa !61
  %z460 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447, i32 0, i32 2
  %103 = load double* %z460, align 8, !tbaa !62
  br label %while.cond467.outer

while.cond467.outer:                              ; preds = %if.else507, %if.then442
  %idxprom447.pn.ph = phi i64 [ %idxprom447, %if.then442 ], [ %idxprom476, %if.else507 ]
  %p_j_z456.0.ph = phi double [ %103, %if.then442 ], [ %109, %if.else507 ]
  %p_j_y451.0.ph = phi double [ %102, %if.then442 ], [ %108, %if.else507 ]
  %p_j_x446.0.ph = phi double [ %101, %if.then442 ], [ %107, %if.else507 ]
  %j2443.0.ph = phi i32 [ %100, %if.then442 ], [ %106, %if.else507 ]
  %k440.0.ph = phi i32 [ 0, %if.then442 ], [ %inc470, %if.else507 ]
  %plin.2.ph = phi i32* [ %cond151574576, %if.then442 ], [ %incdec.ptr508, %if.else507 ]
  %pli374.2.ph = phi i32* [ %cond140568570580, %if.then442 ], [ %pli374.2.ph600, %if.else507 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0701, %if.then442 ], [ %exclChecksum.5, %if.else507 ]
  br label %while.cond467.outer593

while.cond467.outer593:                           ; preds = %if.then505, %while.cond467.outer
  %idxprom447.pn.ph594 = phi i64 [ %idxprom476, %if.then505 ], [ %idxprom447.pn.ph, %while.cond467.outer ]
  %p_j_z456.0.ph595 = phi double [ %109, %if.then505 ], [ %p_j_z456.0.ph, %while.cond467.outer ]
  %p_j_y451.0.ph596 = phi double [ %108, %if.then505 ], [ %p_j_y451.0.ph, %while.cond467.outer ]
  %p_j_x446.0.ph597 = phi double [ %107, %if.then505 ], [ %p_j_x446.0.ph, %while.cond467.outer ]
  %j2443.0.ph598 = phi i32 [ %106, %if.then505 ], [ %j2443.0.ph, %while.cond467.outer ]
  %k440.0.ph599 = phi i32 [ %inc470, %if.then505 ], [ %k440.0.ph, %while.cond467.outer ]
  %pli374.2.ph600 = phi i32* [ %incdec.ptr506, %if.then505 ], [ %pli374.2.ph, %while.cond467.outer ]
  %exclChecksum.4.ph601 = phi i32 [ %exclChecksum.5, %if.then505 ], [ %exclChecksum.4.ph, %while.cond467.outer ]
  br label %while.cond467.outer602

while.cond467.outer602:                           ; preds = %land.lhs.true498, %while.cond467.outer593
  %idxprom447.pn.ph603 = phi i64 [ %idxprom476, %land.lhs.true498 ], [ %idxprom447.pn.ph594, %while.cond467.outer593 ]
  %p_j_z456.0.ph604 = phi double [ %109, %land.lhs.true498 ], [ %p_j_z456.0.ph595, %while.cond467.outer593 ]
  %p_j_y451.0.ph605 = phi double [ %108, %land.lhs.true498 ], [ %p_j_y451.0.ph596, %while.cond467.outer593 ]
  %p_j_x446.0.ph606 = phi double [ %107, %land.lhs.true498 ], [ %p_j_x446.0.ph597, %while.cond467.outer593 ]
  %j2443.0.ph607 = phi i32 [ %106, %land.lhs.true498 ], [ %j2443.0.ph598, %while.cond467.outer593 ]
  %k440.0.ph608 = phi i32 [ %inc470, %land.lhs.true498 ], [ %k440.0.ph599, %while.cond467.outer593 ]
  %exclChecksum.4.ph609 = phi i32 [ %inc499, %land.lhs.true498 ], [ %exclChecksum.4.ph601, %while.cond467.outer593 ]
  %104 = sext i32 %k440.0.ph608 to i64
  br label %while.cond467

while.cond467:                                    ; preds = %while.body469, %while.cond467.outer602
  %indvars.iv738 = phi i64 [ %104, %while.cond467.outer602 ], [ %indvars.iv.next739, %while.body469 ]
  %idxprom447.pn = phi i64 [ %idxprom447.pn.ph603, %while.cond467.outer602 ], [ %idxprom476, %while.body469 ]
  %p_j_z456.0 = phi double [ %p_j_z456.0.ph604, %while.cond467.outer602 ], [ %109, %while.body469 ]
  %p_j_y451.0 = phi double [ %p_j_y451.0.ph605, %while.cond467.outer602 ], [ %108, %while.body469 ]
  %p_j_x446.0 = phi double [ %p_j_x446.0.ph606, %while.cond467.outer602 ], [ %107, %while.body469 ]
  %j2443.0 = phi i32 [ %j2443.0.ph607, %while.cond467.outer602 ], [ %106, %while.body469 ]
  %k440.0 = phi i32 [ %k440.0.ph608, %while.cond467.outer602 ], [ %inc470, %while.body469 ]
  %105 = trunc i64 %indvars.iv738 to i32
  %cmp468 = icmp slt i32 %105, %pairlistindex.1
  br i1 %cmp468, label %while.body469, label %if.end518

while.body469:                                    ; preds = %while.cond467
  %atom2461.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom447.pn, i32 2
  %atom2461.0.in.in = bitcast [4 x i8]* %atom2461.0.in.in.in to i32*
  %atom2461.0.in = load i32* %atom2461.0.in.in, align 4
  %atom2461.0 = and i32 %atom2461.0.in, 4194303
  %indvars.iv.next739 = add nsw i64 %indvars.iv738, 1
  %inc470 = add nsw i32 %k440.0, 1
  %arrayidx472 = getelementptr inbounds i32* %cond129564566572578, i64 %indvars.iv.next739
  %106 = load i32* %arrayidx472, align 4, !tbaa !11
  %sub474 = fsub double %69, %p_j_x446.0
  %mul475 = fmul double %sub474, %sub474
  %idxprom476 = sext i32 %106 to i64
  %x479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 0
  %107 = load double* %x479, align 8, !tbaa !59
  %sub481 = fsub double %70, %p_j_y451.0
  %mul482 = fmul double %sub481, %sub481
  %add483 = fadd double %mul482, %mul475
  %y487 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 1
  %108 = load double* %y487, align 8, !tbaa !61
  %sub488 = fsub double %71, %p_j_z456.0
  %mul489 = fmul double %sub488, %sub488
  %add490 = fadd double %mul489, %add483
  %z494 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom476, i32 0, i32 2
  %109 = load double* %z494, align 8, !tbaa !62
  %cmp495 = fcmp ugt double %add490, %2
  br i1 %cmp495, label %while.cond467, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %while.body469
  %cmp497 = fcmp ugt double %add490, %10
  br i1 %cmp497, label %if.then501, label %land.lhs.true498

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %inc499 = add nsw i32 %exclChecksum.4.ph609, 1
  %tobool500 = icmp eq i32 %inc499, 0
  br i1 %tobool500, label %if.then501, label %while.cond467.outer602

if.then501:                                       ; preds = %land.lhs.true498, %land.lhs.true496
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true498 ], [ %exclChecksum.4.ph609, %land.lhs.true496 ]
  %cmp502 = icmp slt i32 %atom2461.0, %66
  %cmp504 = icmp sgt i32 %atom2461.0, %67
  %or.cond553 = or i1 %cmp502, %cmp504
  br i1 %or.cond553, label %if.else507, label %if.then505

if.then505:                                       ; preds = %if.then501
  %incdec.ptr506 = getelementptr inbounds i32* %pli374.2.ph600, i64 1
  store i32 %j2443.0, i32* %pli374.2.ph600, align 4, !tbaa !11
  br label %while.cond467.outer593

if.else507:                                       ; preds = %if.then501
  %incdec.ptr508 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2443.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond467.outer

if.end518:                                        ; preds = %while.cond467, %if.else439, %for.inc436, %for.cond377.preheader
  %mul367790 = phi double [ %mul367791, %if.else439 ], [ %mul367, %for.cond377.preheader ], [ %mul367, %for.inc436 ], [ %mul367791, %while.cond467 ]
  %plin.4 = phi i32* [ %cond151574576, %if.else439 ], [ %cond151574576, %for.cond377.preheader ], [ %plin.1, %for.inc436 ], [ %plin.2.ph, %while.cond467 ]
  %pli374.4 = phi i32* [ %cond140568570580, %if.else439 ], [ %cond140568570580, %for.cond377.preheader ], [ %pli374.1, %for.inc436 ], [ %pli374.2.ph600, %while.cond467 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0701, %if.else439 ], [ %exclChecksum.0701, %for.cond377.preheader ], [ %exclChecksum.3, %for.inc436 ], [ %exclChecksum.4.ph609, %while.cond467 ]
  %sub.ptr.lhs.cast519 = ptrtoint i32* %pli374.4 to i64
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %sub.ptr.div522514 = lshr exact i64 %sub.ptr.sub521, 2
  %conv523 = trunc i64 %sub.ptr.div522514 to i32
  %tobool524 = icmp eq i32 %conv523, 0
  br i1 %tobool524, label %for.end555, label %for.cond533.preheader

for.cond533.preheader:                            ; preds = %if.end518
  %sub526 = shl i64 %sub.ptr.sub521, 30
  %sext540 = add i64 %sub526, -4294967296
  %idxprom527 = ashr exact i64 %sext540, 32
  %arrayidx528 = getelementptr inbounds i32* %cond140568570580, i64 %idxprom527
  %110 = load i32* %arrayidx528, align 4, !tbaa !11
  %idxprom529 = ashr exact i64 %sub526, 32
  %arrayidx530 = getelementptr inbounds i32* %cond140568570580, i64 %idxprom529
  store i32 %110, i32* %arrayidx530, align 4, !tbaa !11
  %cmp534625 = icmp sgt i32 %conv523, 0
  br i1 %cmp534625, label %for.body535.lr.ph, label %for.end555

for.body535.lr.ph:                                ; preds = %for.cond533.preheader
  %111 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %112 = lshr i64 %111, 2
  %113 = trunc i64 %112 to i32
  br label %for.body535

for.body535:                                      ; preds = %for.inc553, %for.body535.lr.ph
  %indvars.iv746 = phi i64 [ 0, %for.body535.lr.ph ], [ %indvars.iv.next747, %for.inc553 ]
  %plin.5629 = phi i32* [ %plin.4, %for.body535.lr.ph ], [ %plin.6, %for.inc553 ]
  %plix.0628 = phi i32* [ %cond162582, %for.body535.lr.ph ], [ %plix.1, %for.inc553 ]
  %plim.0627 = phi i32* [ %cond173, %for.body535.lr.ph ], [ %plim.1, %for.inc553 ]
  %arrayidx538 = getelementptr inbounds i32* %cond140568570580, i64 %indvars.iv746
  %114 = load i32* %arrayidx538, align 4, !tbaa !11
  %idxprom540 = sext i32 %114 to i64
  %id542 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom540, i32 2
  %115 = bitcast [4 x i8]* %id542 to i32*
  %bf.load543 = load i32* %115, align 4
  %bf.clear544 = and i32 %bf.load543, 4194303
  %idxprom545539 = zext i32 %bf.clear544 to i64
  %add.ptr.sum = sub i64 %idxprom545539, %idx.ext
  %arrayidx546 = getelementptr inbounds i8* %68, i64 %add.ptr.sum
  %116 = load i8* %arrayidx546, align 1, !tbaa !68
  %conv547 = sext i8 %116 to i32
  switch i32 %conv547, label %for.inc553 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb549
    i32 2, label %sw.bb551
  ]

sw.bb:                                            ; preds = %for.body535
  %incdec.ptr548 = getelementptr inbounds i32* %plin.5629, i64 1
  store i32 %114, i32* %plin.5629, align 4, !tbaa !11
  br label %for.inc553

sw.bb549:                                         ; preds = %for.body535
  %incdec.ptr550 = getelementptr inbounds i32* %plix.0628, i64 1
  store i32 %114, i32* %plix.0628, align 4, !tbaa !11
  br label %for.inc553

sw.bb551:                                         ; preds = %for.body535
  %incdec.ptr552 = getelementptr inbounds i32* %plim.0627, i64 1
  store i32 %114, i32* %plim.0627, align 4, !tbaa !11
  br label %for.inc553

for.inc553:                                       ; preds = %sw.bb551, %sw.bb549, %sw.bb, %for.body535
  %plim.1 = phi i32* [ %plim.0627, %for.body535 ], [ %incdec.ptr552, %sw.bb551 ], [ %plim.0627, %sw.bb549 ], [ %plim.0627, %sw.bb ]
  %plix.1 = phi i32* [ %plix.0628, %for.body535 ], [ %plix.0628, %sw.bb551 ], [ %incdec.ptr550, %sw.bb549 ], [ %plix.0628, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5629, %for.body535 ], [ %plin.5629, %sw.bb551 ], [ %plin.5629, %sw.bb549 ], [ %incdec.ptr548, %sw.bb ]
  %indvars.iv.next747 = add nuw nsw i64 %indvars.iv746, 1
  %lftr.wideiv748 = trunc i64 %indvars.iv.next747 to i32
  %exitcond749 = icmp eq i32 %lftr.wideiv748, %113
  br i1 %exitcond749, label %for.end555, label %for.body535

for.end555:                                       ; preds = %for.inc553, %for.cond533.preheader, %if.end518
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond533.preheader ], [ %plin.4, %if.end518 ], [ %plin.6, %for.inc553 ]
  %plix.0.lcssa = phi i32* [ %cond162582, %for.cond533.preheader ], [ %cond162582, %if.end518 ], [ %plix.1, %for.inc553 ]
  %plim.0.lcssa = phi i32* [ %cond173, %for.cond533.preheader ], [ %cond173, %if.end518 ], [ %plim.1, %for.inc553 ]
  %sub.ptr.lhs.cast556 = ptrtoint i32* %plix.0.lcssa to i64
  %sub.ptr.sub558 = sub i64 %sub.ptr.lhs.cast556, %sub.ptr.rhs.cast557
  %sub.ptr.div559 = ashr exact i64 %sub.ptr.sub558, 2
  %conv560515 = zext i32 %exclChecksum.7 to i64
  %sub.ptr.lhs.cast563 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub565 = sub i64 %sub.ptr.lhs.cast563, %sub.ptr.rhs.cast564
  %sub.ptr.div566 = ashr exact i64 %sub.ptr.sub565, 2
  %add561 = add i64 %sub.ptr.div566, %conv560515
  %add568 = add i64 %add561, %sub.ptr.div559
  %conv569 = trunc i64 %add568 to i32
  %sub.ptr.lhs.cast570 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.sub572 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %sub.ptr.div573517 = lshr exact i64 %sub.ptr.sub572, 2
  %conv574 = trunc i64 %sub.ptr.div573517 to i32
  %cmp576633 = icmp sgt i32 %conv574, 0
  br i1 %cmp576633, label %for.body577.lr.ph, label %for.end666

for.body577.lr.ph:                                ; preds = %for.end555
  %x644 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y653 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z660 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  %117 = sub i64 %sub.ptr.lhs.cast570, %sub.ptr.rhs.cast571
  %118 = lshr i64 %117, 2
  %119 = trunc i64 %118 to i32
  br label %for.body577

for.body577:                                      ; preds = %for.body577, %for.body577.lr.ph
  %indvars.iv750 = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next751, %for.body577 ]
  %fullElectVirial_zz.1635 = phi double [ %fullElectVirial_zz.0687, %for.body577.lr.ph ], [ %add659, %for.body577 ]
  %120 = phi <2 x double> [ %61, %for.body577.lr.ph ], [ %139, %for.body577 ]
  %121 = phi <2 x double> [ %62, %for.body577.lr.ph ], [ %149, %for.body577 ]
  %122 = phi <2 x double> [ %63, %for.body577.lr.ph ], [ %142, %for.body577 ]
  %arrayidx580 = getelementptr inbounds i32* %cond151574576, i64 %indvars.iv750
  %123 = load i32* %arrayidx580, align 4, !tbaa !11
  %idx.ext581 = sext i32 %123 to i64
  %x584 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 0
  %124 = load double* %x584, align 8, !tbaa !59
  %sub585 = fsub double %69, %124
  %mul587 = fmul double %sub585, %sub585
  %y589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 1
  %125 = load double* %y589, align 8, !tbaa !61
  %sub590 = fsub double %70, %125
  %mul591 = fmul double %sub590, %sub590
  %add592 = fadd double %mul587, %mul591
  %z594 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 0, i32 2
  %126 = load double* %z594, align 8, !tbaa !62
  %sub595 = fsub double %71, %126
  %mul596 = fmul double %sub595, %sub595
  %add597 = fadd double %add592, %mul596
  %conv598 = fptrunc double %add597 to float
  %127 = bitcast float %conv598 to i32
  %shr = ashr i32 %127, 17
  %add600 = add nsw i32 %shr, %mul
  %mul601 = shl nsw i32 %add600, 4
  %idx.ext602 = sext i32 %mul601 to i64
  %add.ptr604.sum535 = or i64 %idx.ext602, 12
  %add.ptr605 = getelementptr inbounds double* %6, i64 %add.ptr604.sum535
  %128 = load double* %add.ptr605, align 8, !tbaa !17
  %and = and i32 %127, -131072
  %charge608 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext581, i32 1
  %129 = load float* %charge608, align 4, !tbaa !63
  %conv609 = fpext float %129 to double
  %mul610 = fmul double %mul367790, %conv609
  %130 = bitcast i32 %and to float
  %conv612 = fpext float %130 to double
  %sub613 = fsub double %add597, %conv612
  %add.ptr605.sum536 = or i64 %idx.ext602, 13
  %arrayidx614 = getelementptr inbounds double* %6, i64 %add.ptr605.sum536
  %131 = load double* %arrayidx614, align 8, !tbaa !17
  %add.ptr605.sum537 = or i64 %idx.ext602, 14
  %arrayidx615 = getelementptr inbounds double* %6, i64 %add.ptr605.sum537
  %132 = load double* %arrayidx615, align 8, !tbaa !17
  %add.ptr605.sum538 = or i64 %idx.ext602, 15
  %arrayidx616 = getelementptr inbounds double* %6, i64 %add.ptr605.sum538
  %133 = load double* %arrayidx616, align 8, !tbaa !17
  %mul617 = fmul double %mul610, %133
  %mul618 = fmul double %132, %mul610
  %mul619 = fmul double %131, %mul610
  %mul620 = fmul double %128, %mul610
  %mul621 = fmul double %mul617, %sub613
  %add622 = fadd double %mul618, %mul621
  %mul623 = fmul double %sub613, %add622
  %add624 = fadd double %mul619, %mul623
  %mul625 = fmul double %sub613, %add624
  %add626 = fadd double %mul620, %mul625
  %mul628 = fmul double %sub613, 3.000000e+00
  %mul629 = fmul double %mul617, %mul628
  %mul630 = fmul double %mul618, 2.000000e+00
  %add631 = fadd double %mul630, %mul629
  %mul632 = fmul double %sub613, %add631
  %add633 = fadd double %mul619, %mul632
  %mul634 = fmul double %add633, -2.000000e+00
  %mul637 = fmul double %sub585, %mul634
  %134 = insertelement <2 x double> undef, double %sub585, i32 0
  %135 = insertelement <2 x double> %134, double %sub590, i32 1
  %136 = insertelement <2 x double> undef, double %mul637, i32 0
  %137 = insertelement <2 x double> %136, double %mul637, i32 1
  %138 = fmul <2 x double> %135, %137
  %139 = fadd <2 x double> %120, %138
  %mul642 = fmul double %sub595, %mul637
  %140 = insertelement <2 x double> undef, double %add626, i32 0
  %141 = insertelement <2 x double> %140, double %mul642, i32 1
  %142 = fadd <2 x double> %122, %141
  %143 = load double* %x644, align 8, !tbaa !72
  %add645 = fadd double %143, %mul637
  store double %add645, double* %x644, align 8, !tbaa !72
  %x646 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 0
  %mul648 = fmul double %sub590, %mul634
  %144 = insertelement <2 x double> undef, double %sub590, i32 0
  %145 = insertelement <2 x double> %144, double %sub595, i32 1
  %146 = insertelement <2 x double> undef, double %mul648, i32 0
  %147 = insertelement <2 x double> %146, double %mul648, i32 1
  %148 = fmul <2 x double> %145, %147
  %149 = fadd <2 x double> %121, %148
  %150 = load double* %y653, align 8, !tbaa !73
  %add654 = fadd double %150, %mul648
  store double %add654, double* %y653, align 8, !tbaa !73
  %151 = bitcast double* %x646 to <2 x double>*
  %152 = load <2 x double>* %151, align 8, !tbaa !17
  %153 = insertelement <2 x double> %136, double %mul648, i32 1
  %154 = fsub <2 x double> %152, %153
  %155 = bitcast double* %x646 to <2 x double>*
  store <2 x double> %154, <2 x double>* %155, align 8, !tbaa !17
  %mul657 = fmul double %sub595, %mul634
  %mul658 = fmul double %sub595, %mul657
  %add659 = fadd double %fullElectVirial_zz.1635, %mul658
  %156 = load double* %z660, align 8, !tbaa !74
  %add661 = fadd double %156, %mul657
  store double %add661, double* %z660, align 8, !tbaa !74
  %z662 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext581, i32 2
  %157 = load double* %z662, align 8, !tbaa !74
  %sub663 = fsub double %157, %mul657
  store double %sub663, double* %z662, align 8, !tbaa !74
  %indvars.iv.next751 = add nuw nsw i64 %indvars.iv750, 1
  %lftr.wideiv752 = trunc i64 %indvars.iv.next751 to i32
  %exitcond753 = icmp eq i32 %lftr.wideiv752, %119
  br i1 %exitcond753, label %for.end666, label %for.body577

for.end666:                                       ; preds = %for.body577, %for.end555
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0687, %for.end555 ], [ %add659, %for.body577 ]
  %158 = phi <2 x double> [ %61, %for.end555 ], [ %139, %for.body577 ]
  %159 = phi <2 x double> [ %62, %for.end555 ], [ %149, %for.body577 ]
  %160 = phi <2 x double> [ %63, %for.end555 ], [ %142, %for.body577 ]
  %conv671 = trunc i64 %sub.ptr.div566 to i32
  %cmp673649 = icmp sgt i32 %conv671, 0
  br i1 %cmp673649, label %for.body674.lr.ph, label %for.end801

for.body674.lr.ph:                                ; preds = %for.end666
  %x777 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y787 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z795 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body674

for.body674:                                      ; preds = %for.body674, %for.body674.lr.ph
  %indvars.iv754 = phi i64 [ 0, %for.body674.lr.ph ], [ %indvars.iv.next755, %for.body674 ]
  %fullElectVirial_zz.2651 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body674.lr.ph ], [ %add794, %for.body674 ]
  %161 = phi <2 x double> [ %158, %for.body674.lr.ph ], [ %184, %for.body674 ]
  %162 = phi <2 x double> [ %159, %for.body674.lr.ph ], [ %194, %for.body674 ]
  %163 = phi <2 x double> [ %160, %for.body674.lr.ph ], [ %187, %for.body674 ]
  %arrayidx677 = getelementptr inbounds i32* %cond173, i64 %indvars.iv754
  %164 = load i32* %arrayidx677, align 4, !tbaa !11
  %idx.ext679 = sext i32 %164 to i64
  %x683 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext679, i32 0, i32 0
  %165 = load double* %x683, align 8, !tbaa !59
  %sub684 = fsub double %69, %165
  %mul686 = fmul double %sub684, %sub684
  %y689 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext679, i32 0, i32 1
  %166 = load double* %y689, align 8, !tbaa !61
  %sub690 = fsub double %70, %166
  %mul691 = fmul double %sub690, %sub690
  %add692 = fadd double %mul686, %mul691
  %z695 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext679, i32 0, i32 2
  %167 = load double* %z695, align 8, !tbaa !62
  %sub696 = fsub double %71, %167
  %mul697 = fmul double %sub696, %sub696
  %add698 = fadd double %add692, %mul697
  %conv700 = fptrunc double %add698 to float
  %168 = bitcast float %conv700 to i32
  %shr704 = ashr i32 %168, 17
  %add705 = add nsw i32 %shr704, %mul
  %mul707 = shl nsw i32 %add705, 4
  %idx.ext708 = sext i32 %mul707 to i64
  %add.ptr710.sum527 = or i64 %idx.ext708, 12
  %add.ptr711 = getelementptr inbounds double* %6, i64 %add.ptr710.sum527
  %169 = load double* %add.ptr711, align 8, !tbaa !17
  %and715 = and i32 %168, -131072
  %charge717 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext679, i32 1
  %170 = load float* %charge717, align 4, !tbaa !63
  %conv718 = fpext float %170 to double
  %mul719 = fmul double %mul367790, %conv718
  %171 = bitcast i32 %and715 to float
  %conv722 = fpext float %171 to double
  %sub723 = fsub double %add698, %conv722
  %add.ptr711.sum528 = or i64 %idx.ext708, 13
  %arrayidx725 = getelementptr inbounds double* %6, i64 %add.ptr711.sum528
  %172 = load double* %arrayidx725, align 8, !tbaa !17
  %add.ptr711.sum529 = or i64 %idx.ext708, 14
  %arrayidx727 = getelementptr inbounds double* %6, i64 %add.ptr711.sum529
  %173 = load double* %arrayidx727, align 8, !tbaa !17
  %add.ptr711.sum530 = or i64 %idx.ext708, 15
  %arrayidx729 = getelementptr inbounds double* %6, i64 %add.ptr711.sum530
  %174 = load double* %arrayidx729, align 8, !tbaa !17
  %mul730 = shl nsw i32 %add705, 2
  %idx.ext731 = sext i32 %mul730 to i64
  %add.ptr732 = getelementptr inbounds double* %7, i64 %idx.ext731
  %175 = load double* %add.ptr732, align 8, !tbaa !17
  %mul734 = fmul double %sub, %175
  %sub735 = fsub double %169, %mul734
  %add.ptr732.sum531 = or i64 %idx.ext731, 1
  %arrayidx736 = getelementptr inbounds double* %7, i64 %add.ptr732.sum531
  %176 = load double* %arrayidx736, align 8, !tbaa !17
  %mul737 = fmul double %sub, %176
  %sub738 = fsub double %172, %mul737
  %add.ptr732.sum532 = or i64 %idx.ext731, 2
  %arrayidx739 = getelementptr inbounds double* %7, i64 %add.ptr732.sum532
  %177 = load double* %arrayidx739, align 8, !tbaa !17
  %mul740 = fmul double %sub, %177
  %sub741 = fsub double %173, %mul740
  %add.ptr732.sum533 = or i64 %idx.ext731, 3
  %arrayidx742 = getelementptr inbounds double* %7, i64 %add.ptr732.sum533
  %178 = load double* %arrayidx742, align 8, !tbaa !17
  %mul743 = fmul double %sub, %178
  %sub744 = fsub double %174, %mul743
  %mul745 = fmul double %mul719, %sub744
  %mul746 = fmul double %mul719, %sub741
  %mul747 = fmul double %mul719, %sub738
  %mul748 = fmul double %mul719, %sub735
  %mul750 = fmul double %sub723, %mul745
  %add751 = fadd double %mul746, %mul750
  %mul752 = fmul double %sub723, %add751
  %add753 = fadd double %mul747, %mul752
  %mul754 = fmul double %sub723, %add753
  %add755 = fadd double %mul748, %mul754
  %mul758 = fmul double %sub723, 3.000000e+00
  %mul759 = fmul double %mul758, %mul745
  %mul760 = fmul double %mul746, 2.000000e+00
  %add761 = fadd double %mul760, %mul759
  %mul762 = fmul double %sub723, %add761
  %add763 = fadd double %mul747, %mul762
  %mul765 = fmul double %add763, -2.000000e+00
  %mul770 = fmul double %sub684, %mul765
  %179 = insertelement <2 x double> undef, double %sub684, i32 0
  %180 = insertelement <2 x double> %179, double %sub690, i32 1
  %181 = insertelement <2 x double> undef, double %mul770, i32 0
  %182 = insertelement <2 x double> %181, double %mul770, i32 1
  %183 = fmul <2 x double> %180, %182
  %184 = fadd <2 x double> %161, %183
  %mul775 = fmul double %sub696, %mul770
  %185 = insertelement <2 x double> undef, double %add755, i32 0
  %186 = insertelement <2 x double> %185, double %mul775, i32 1
  %187 = fadd <2 x double> %163, %186
  %188 = load double* %x777, align 8, !tbaa !72
  %add778 = fadd double %188, %mul770
  store double %add778, double* %x777, align 8, !tbaa !72
  %x779 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext679, i32 0
  %mul782 = fmul double %sub690, %mul765
  %189 = insertelement <2 x double> undef, double %sub690, i32 0
  %190 = insertelement <2 x double> %189, double %sub696, i32 1
  %191 = insertelement <2 x double> undef, double %mul782, i32 0
  %192 = insertelement <2 x double> %191, double %mul782, i32 1
  %193 = fmul <2 x double> %190, %192
  %194 = fadd <2 x double> %162, %193
  %195 = load double* %y787, align 8, !tbaa !73
  %add788 = fadd double %195, %mul782
  store double %add788, double* %y787, align 8, !tbaa !73
  %196 = bitcast double* %x779 to <2 x double>*
  %197 = load <2 x double>* %196, align 8, !tbaa !17
  %198 = insertelement <2 x double> %181, double %mul782, i32 1
  %199 = fsub <2 x double> %197, %198
  %200 = bitcast double* %x779 to <2 x double>*
  store <2 x double> %199, <2 x double>* %200, align 8, !tbaa !17
  %mul792 = fmul double %sub696, %mul765
  %mul793 = fmul double %sub696, %mul792
  %add794 = fadd double %fullElectVirial_zz.2651, %mul793
  %201 = load double* %z795, align 8, !tbaa !74
  %add796 = fadd double %201, %mul792
  store double %add796, double* %z795, align 8, !tbaa !74
  %z797 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext679, i32 2
  %202 = load double* %z797, align 8, !tbaa !74
  %sub798 = fsub double %202, %mul792
  store double %sub798, double* %z797, align 8, !tbaa !74
  %indvars.iv.next755 = add nuw nsw i64 %indvars.iv754, 1
  %lftr.wideiv756 = trunc i64 %indvars.iv.next755 to i32
  %exitcond757 = icmp eq i32 %lftr.wideiv756, %conv671
  br i1 %exitcond757, label %for.end801, label %for.body674

for.end801:                                       ; preds = %for.body674, %for.end666
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end666 ], [ %add794, %for.body674 ]
  %203 = phi <2 x double> [ %158, %for.end666 ], [ %184, %for.body674 ]
  %204 = phi <2 x double> [ %159, %for.end666 ], [ %194, %for.body674 ]
  %205 = phi <2 x double> [ %160, %for.end666 ], [ %187, %for.body674 ]
  %conv806 = trunc i64 %sub.ptr.div559 to i32
  %cmp808665 = icmp sgt i32 %conv806, 0
  br i1 %cmp808665, label %for.body809.lr.ph, label %for.inc934

for.body809.lr.ph:                                ; preds = %for.end801
  %x909 = getelementptr inbounds %class.Vector* %arrayidx193, i64 0, i32 0
  %y919 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 1
  %z927 = getelementptr inbounds %class.Vector* %56, i64 %idxprom185, i32 2
  br label %for.body809

for.body809:                                      ; preds = %for.body809, %for.body809.lr.ph
  %indvars.iv758 = phi i64 [ 0, %for.body809.lr.ph ], [ %indvars.iv.next759, %for.body809 ]
  %fullElectVirial_zz.3667 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body809.lr.ph ], [ %add926, %for.body809 ]
  %206 = phi <2 x double> [ %203, %for.body809.lr.ph ], [ %229, %for.body809 ]
  %207 = phi <2 x double> [ %204, %for.body809.lr.ph ], [ %239, %for.body809 ]
  %208 = phi <2 x double> [ %205, %for.body809.lr.ph ], [ %232, %for.body809 ]
  %arrayidx812 = getelementptr inbounds i32* %cond162582, i64 %indvars.iv758
  %209 = load i32* %arrayidx812, align 4, !tbaa !11
  %idx.ext814 = sext i32 %209 to i64
  %x818 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext814, i32 0, i32 0
  %210 = load double* %x818, align 8, !tbaa !59
  %sub819 = fsub double %69, %210
  %mul821 = fmul double %sub819, %sub819
  %y824 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext814, i32 0, i32 1
  %211 = load double* %y824, align 8, !tbaa !61
  %sub825 = fsub double %70, %211
  %mul826 = fmul double %sub825, %sub825
  %add827 = fadd double %mul821, %mul826
  %z830 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext814, i32 0, i32 2
  %212 = load double* %z830, align 8, !tbaa !62
  %sub831 = fsub double %71, %212
  %mul832 = fmul double %sub831, %sub831
  %add833 = fadd double %add827, %mul832
  %conv835 = fptrunc double %add833 to float
  %213 = bitcast float %conv835 to i32
  %shr839 = ashr i32 %213, 17
  %add840 = add nsw i32 %shr839, %mul
  %mul842 = shl nsw i32 %add840, 4
  %idx.ext843 = sext i32 %mul842 to i64
  %add.ptr845.sum519 = or i64 %idx.ext843, 12
  %add.ptr846 = getelementptr inbounds double* %6, i64 %add.ptr845.sum519
  %214 = load double* %add.ptr846, align 8, !tbaa !17
  %and850 = and i32 %213, -131072
  %charge852 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext814, i32 1
  %215 = load float* %charge852, align 4, !tbaa !63
  %conv853 = fpext float %215 to double
  %mul854 = fmul double %mul367790, %conv853
  %216 = bitcast i32 %and850 to float
  %conv857 = fpext float %216 to double
  %sub858 = fsub double %add833, %conv857
  %add.ptr846.sum520 = or i64 %idx.ext843, 13
  %arrayidx860 = getelementptr inbounds double* %6, i64 %add.ptr846.sum520
  %217 = load double* %arrayidx860, align 8, !tbaa !17
  %add.ptr846.sum521 = or i64 %idx.ext843, 14
  %arrayidx862 = getelementptr inbounds double* %6, i64 %add.ptr846.sum521
  %218 = load double* %arrayidx862, align 8, !tbaa !17
  %add.ptr846.sum522 = or i64 %idx.ext843, 15
  %arrayidx864 = getelementptr inbounds double* %6, i64 %add.ptr846.sum522
  %219 = load double* %arrayidx864, align 8, !tbaa !17
  %mul866 = shl nsw i32 %add840, 2
  %idx.ext867 = sext i32 %mul866 to i64
  %add.ptr868 = getelementptr inbounds double* %7, i64 %idx.ext867
  %220 = load double* %add.ptr868, align 8, !tbaa !17
  %sub870 = fsub double %214, %220
  %add.ptr868.sum523 = or i64 %idx.ext867, 1
  %arrayidx871 = getelementptr inbounds double* %7, i64 %add.ptr868.sum523
  %221 = load double* %arrayidx871, align 8, !tbaa !17
  %sub872 = fsub double %217, %221
  %add.ptr868.sum524 = or i64 %idx.ext867, 2
  %arrayidx873 = getelementptr inbounds double* %7, i64 %add.ptr868.sum524
  %222 = load double* %arrayidx873, align 8, !tbaa !17
  %sub874 = fsub double %218, %222
  %add.ptr868.sum525 = or i64 %idx.ext867, 3
  %arrayidx875 = getelementptr inbounds double* %7, i64 %add.ptr868.sum525
  %223 = load double* %arrayidx875, align 8, !tbaa !17
  %sub876 = fsub double %219, %223
  %mul877 = fmul double %mul854, %sub876
  %mul878 = fmul double %mul854, %sub874
  %mul879 = fmul double %mul854, %sub872
  %mul880 = fmul double %mul854, %sub870
  %mul882 = fmul double %sub858, %mul877
  %add883 = fadd double %mul878, %mul882
  %mul884 = fmul double %sub858, %add883
  %add885 = fadd double %mul879, %mul884
  %mul886 = fmul double %sub858, %add885
  %add887 = fadd double %mul880, %mul886
  %mul890 = fmul double %sub858, 3.000000e+00
  %mul891 = fmul double %mul890, %mul877
  %mul892 = fmul double %mul878, 2.000000e+00
  %add893 = fadd double %mul892, %mul891
  %mul894 = fmul double %sub858, %add893
  %add895 = fadd double %mul879, %mul894
  %mul897 = fmul double %add895, -2.000000e+00
  %mul902 = fmul double %sub819, %mul897
  %224 = insertelement <2 x double> undef, double %sub819, i32 0
  %225 = insertelement <2 x double> %224, double %sub825, i32 1
  %226 = insertelement <2 x double> undef, double %mul902, i32 0
  %227 = insertelement <2 x double> %226, double %mul902, i32 1
  %228 = fmul <2 x double> %225, %227
  %229 = fadd <2 x double> %206, %228
  %mul907 = fmul double %sub831, %mul902
  %230 = insertelement <2 x double> undef, double %add887, i32 0
  %231 = insertelement <2 x double> %230, double %mul907, i32 1
  %232 = fadd <2 x double> %208, %231
  %233 = load double* %x909, align 8, !tbaa !72
  %add910 = fadd double %233, %mul902
  store double %add910, double* %x909, align 8, !tbaa !72
  %x911 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext814, i32 0
  %mul914 = fmul double %sub825, %mul897
  %234 = insertelement <2 x double> undef, double %sub825, i32 0
  %235 = insertelement <2 x double> %234, double %sub831, i32 1
  %236 = insertelement <2 x double> undef, double %mul914, i32 0
  %237 = insertelement <2 x double> %236, double %mul914, i32 1
  %238 = fmul <2 x double> %235, %237
  %239 = fadd <2 x double> %207, %238
  %240 = load double* %y919, align 8, !tbaa !73
  %add920 = fadd double %240, %mul914
  store double %add920, double* %y919, align 8, !tbaa !73
  %241 = bitcast double* %x911 to <2 x double>*
  %242 = load <2 x double>* %241, align 8, !tbaa !17
  %243 = insertelement <2 x double> %226, double %mul914, i32 1
  %244 = fsub <2 x double> %242, %243
  %245 = bitcast double* %x911 to <2 x double>*
  store <2 x double> %244, <2 x double>* %245, align 8, !tbaa !17
  %mul924 = fmul double %sub831, %mul897
  %mul925 = fmul double %sub831, %mul924
  %add926 = fadd double %fullElectVirial_zz.3667, %mul925
  %246 = load double* %z927, align 8, !tbaa !74
  %add928 = fadd double %246, %mul924
  store double %add928, double* %z927, align 8, !tbaa !74
  %z929 = getelementptr inbounds %class.Vector* %57, i64 %idx.ext814, i32 2
  %247 = load double* %z929, align 8, !tbaa !74
  %sub930 = fsub double %247, %mul924
  store double %sub930, double* %z929, align 8, !tbaa !74
  %indvars.iv.next759 = add nuw nsw i64 %indvars.iv758, 1
  %lftr.wideiv760 = trunc i64 %indvars.iv.next759 to i32
  %exitcond761 = icmp eq i32 %lftr.wideiv760, %conv806
  br i1 %exitcond761, label %for.inc934, label %for.body809

for.inc934:                                       ; preds = %for.body809, %for.end801, %cond.end349, %if.then221
  %pairCount.3 = phi i32 [ %add217, %if.then221 ], [ %pairCount.1, %cond.end349 ], [ %pairCount.2, %for.end801 ], [ %pairCount.2, %for.body809 ]
  %pairlistindex.2 = phi i32 [ %pairlistindex.0685, %if.then221 ], [ 0, %cond.end349 ], [ %pairlistindex.1, %for.end801 ], [ %pairlistindex.1, %for.body809 ]
  %i.2 = phi i32 [ %add223, %if.then221 ], [ %add352, %cond.end349 ], [ %i.1686, %for.end801 ], [ %i.1686, %for.body809 ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0687, %if.then221 ], [ %fullElectVirial_zz.0687, %cond.end349 ], [ %fullElectVirial_zz.2.lcssa, %for.end801 ], [ %add926, %for.body809 ]
  %exclChecksum.8 = phi i32 [ %exclChecksum.0701, %if.then221 ], [ %exclChecksum.0701, %cond.end349 ], [ %conv569, %for.end801 ], [ %conv569, %for.body809 ]
  %248 = phi <2 x double> [ %61, %if.then221 ], [ %61, %cond.end349 ], [ %203, %for.end801 ], [ %229, %for.body809 ]
  %249 = phi <2 x double> [ %62, %if.then221 ], [ %62, %cond.end349 ], [ %204, %for.end801 ], [ %239, %for.body809 ]
  %250 = phi <2 x double> [ %63, %if.then221 ], [ %63, %cond.end349 ], [ %205, %for.end801 ], [ %232, %for.body809 ]
  %inc935 = add nsw i32 %i.2, 1
  %cmp183 = icmp slt i32 %inc935, %12
  br i1 %cmp183, label %for.body184, label %for.end936

for.end936:                                       ; preds = %for.inc934, %cond.end172
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end172 ], [ %exclChecksum.8, %for.inc934 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end172 ], [ %fullElectVirial_zz.4, %for.inc934 ]
  %251 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %248, %for.inc934 ]
  %252 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %249, %for.inc934 ]
  %253 = phi <2 x double> [ zeroinitializer, %cond.end172 ], [ %250, %for.inc934 ]
  %254 = extractelement <2 x double> %253, i32 0
  %arraydecay937 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp938 = icmp eq i32* %cond556558776782, %arraydecay937
  br i1 %cmp938, label %if.end943, label %delete.notnull941

delete.notnull941:                                ; preds = %for.end936
  %255 = bitcast i32* %cond556558776782 to i8*
  call void @_ZdaPv(i8* %255) #7
  br label %if.end943

if.end943:                                        ; preds = %delete.notnull941, %for.end936
  %arraydecay944 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp945 = icmp eq i32* %cond19560774783, %arraydecay944
  br i1 %cmp945, label %if.end950, label %delete.notnull948

delete.notnull948:                                ; preds = %if.end943
  %256 = bitcast i32* %cond19560774783 to i8*
  call void @_ZdaPv(i8* %256) #7
  br label %if.end950

if.end950:                                        ; preds = %delete.notnull948, %if.end943
  %arraydecay951 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp952 = icmp eq i32* %cond30778781, %arraydecay951
  br i1 %cmp952, label %if.end957, label %delete.notnull955

delete.notnull955:                                ; preds = %if.end950
  %257 = bitcast i32* %cond30778781 to i8*
  call void @_ZdaPv(i8* %257) #7
  br label %if.end957

if.end957:                                        ; preds = %delete.notnull955, %if.end950
  %arraydecay958 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp959 = icmp eq i32* %cond129564566572578, %arraydecay958
  br i1 %cmp959, label %if.end964, label %delete.notnull962

delete.notnull962:                                ; preds = %if.end957
  %258 = bitcast i32* %cond129564566572578 to i8*
  call void @_ZdaPv(i8* %258) #7
  br label %if.end964

if.end964:                                        ; preds = %delete.notnull962, %if.end957
  %arraydecay965 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp966 = icmp eq i32* %cond140568570580, %arraydecay965
  br i1 %cmp966, label %if.end971, label %delete.notnull969

delete.notnull969:                                ; preds = %if.end964
  %259 = bitcast i32* %cond140568570580 to i8*
  call void @_ZdaPv(i8* %259) #7
  br label %if.end971

if.end971:                                        ; preds = %delete.notnull969, %if.end964
  %arraydecay972 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp973 = icmp eq i32* %cond151574576, %arraydecay972
  br i1 %cmp973, label %if.end978, label %delete.notnull976

delete.notnull976:                                ; preds = %if.end971
  %260 = bitcast i32* %cond151574576 to i8*
  call void @_ZdaPv(i8* %260) #7
  br label %if.end978

if.end978:                                        ; preds = %delete.notnull976, %if.end971
  %arraydecay979 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp980 = icmp eq i32* %cond162582, %arraydecay979
  br i1 %cmp980, label %if.end985, label %delete.notnull983

delete.notnull983:                                ; preds = %if.end978
  %261 = bitcast i32* %cond162582 to i8*
  call void @_ZdaPv(i8* %261) #7
  br label %if.end985

if.end985:                                        ; preds = %delete.notnull983, %if.end978
  %arraydecay986 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp987 = icmp eq i32* %cond173, %arraydecay986
  br i1 %cmp987, label %if.end992, label %delete.notnull990

delete.notnull990:                                ; preds = %if.end985
  %262 = bitcast i32* %cond173 to i8*
  call void @_ZdaPv(i8* %262) #7
  br label %if.end992

if.end992:                                        ; preds = %delete.notnull990, %if.end985
  %conv993 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx994 = getelementptr inbounds double* %1, i64 22
  %263 = load double* %arrayidx994, align 8, !tbaa !17
  %add995 = fadd double %conv993, %263
  store double %add995, double* %arrayidx994, align 8, !tbaa !17
  %arrayidx996 = getelementptr inbounds double* %1, i64 1
  %264 = load double* %arrayidx996, align 8, !tbaa !17
  %add997 = fadd double %254, %264
  store double %add997, double* %arrayidx996, align 8, !tbaa !17
  %arrayidx998 = getelementptr inbounds double* %1, i64 12
  %265 = bitcast double* %arrayidx998 to <2 x double>*
  %266 = load <2 x double>* %265, align 8, !tbaa !17
  %267 = fadd <2 x double> %251, %266
  %268 = bitcast double* %arrayidx998 to <2 x double>*
  store <2 x double> %267, <2 x double>* %268, align 8, !tbaa !17
  %arrayidx1002 = getelementptr inbounds double* %1, i64 14
  %269 = bitcast double* %arrayidx1002 to <2 x double>*
  %270 = load <2 x double>* %269, align 8, !tbaa !17
  %271 = shufflevector <2 x double> %253, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %272 = shufflevector <2 x double> %271, <2 x double> %251, <2 x i32> <i32 0, i32 3>
  %273 = fadd <2 x double> %272, %270
  %274 = bitcast double* %arrayidx1002 to <2 x double>*
  store <2 x double> %273, <2 x double>* %274, align 8, !tbaa !17
  %arrayidx1006 = getelementptr inbounds double* %1, i64 16
  %275 = bitcast double* %arrayidx1006 to <2 x double>*
  %276 = load <2 x double>* %275, align 8, !tbaa !17
  %277 = fadd <2 x double> %252, %276
  %278 = bitcast double* %arrayidx1006 to <2 x double>*
  store <2 x double> %277, <2 x double>* %278, align 8, !tbaa !17
  %arrayidx1010 = getelementptr inbounds double* %1, i64 18
  %279 = bitcast double* %arrayidx1010 to <2 x double>*
  %280 = load <2 x double>* %279, align 8, !tbaa !17
  %281 = shufflevector <2 x double> %271, <2 x double> %252, <2 x i32> <i32 0, i32 3>
  %282 = fadd <2 x double> %281, %280
  %283 = bitcast double* %arrayidx1010 to <2 x double>*
  store <2 x double> %282, <2 x double>* %283, align 8, !tbaa !17
  %arrayidx1014 = getelementptr inbounds double* %1, i64 20
  %284 = load double* %arrayidx1014, align 8, !tbaa !17
  %add1015 = fadd double %fullElectVirial_zz.0.lcssa, %284
  store double %add1015, double* %arrayidx1014, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %45) #6
  call void @llvm.lifetime.end(i64 4020, i8* %44) #6
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end992, %delete.notnull106, %if.end101, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil24calc_self_slow_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31739 = icmp sgt i32 %13, 0
  br i1 %cmp31739, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30813 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond565567811 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19569809 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv802 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next803, %for.inc ]
  %g.0740 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv802, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0740, 1
  %idxprom41 = sext i32 %g.0740 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond565567811, i64 %idxprom41
  %30 = trunc i64 %indvars.iv802 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0740, %for.body ]
  %indvars.iv.next803 = add nuw nsw i64 %indvars.iv802, 1
  %lftr.wideiv804 = trunc i64 %indvars.iv.next803 to i32
  %exitcond805 = icmp eq i32 %lftr.wideiv804, %13
  br i1 %exitcond805, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond565567811, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond565567811, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa818 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19569808817 = phi i32* [ %cond19569809, %for.end ], [ %cond19569809, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond565567810816 = phi i32* [ %cond565567811, %for.end ], [ %cond565567811, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30812815 = phi i32* [ %cond30813, %for.end ], [ %cond30813, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56733 = icmp sgt i32 %g.0.lcssa818, 0
  br i1 %cmp56733, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv798 = phi i64 [ %indvars.iv.next799, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0735 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0734 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond565567810816, i64 %indvars.iv798
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0735, 1
  %idxprom68 = sext i32 %fixg.0735 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19569808817, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0734, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0735, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next799 = add nuw nsw i64 %indvars.iv798, 1
  %lftr.wideiv800 = trunc i64 %indvars.iv.next799 to i32
  %exitcond801 = icmp eq i32 %lftr.wideiv800, %g.0.lcssa818
  br i1 %exitcond801, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond565567810816, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond565567810816 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19569808817, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19569808817 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30812815, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30812815 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19569808817, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19569808817, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2572 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147591 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125577579589 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114573575581587 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136583585 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171711 = icmp sgt i32 %sub162, 0
  br i1 %cmp171711, label %for.body172.lr.ph, label %for.end960

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125577579589 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147591 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30812815 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114573575581587 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc958, %for.body172.lr.ph
  %exclChecksum.0725 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc958 ]
  %i.0718 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc959, %for.inc958 ]
  %j_hgroup.0717 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc958 ]
  %g_lower.0716 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc958 ]
  %fixg_lower.0715 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc958 ]
  %pairlistindex.0714 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc958 ]
  %pairlistoffset.0713 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc958 ]
  %pairCount.0712 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc958 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %267, %for.inc958 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %268, %for.inc958 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %269, %for.inc958 ]
  %idxprom173 = sext i32 %i.0718 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i593 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i593, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i593, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i593, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0718
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0712
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0712, %div165
  %cmp214 = icmp slt i32 %pairCount.0712, %div168
  %or.cond559 = and i1 %cmp212, %cmp214
  br i1 %or.cond559, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0718
  br label %for.inc958

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0712, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0718
  %cmp237595 = icmp slt i32 %g_lower.0716, %g.0.lcssa818
  br i1 %cmp237595, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0716 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa818
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1596 = phi i32 [ %g_lower.0716, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond565567810816, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1596, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0716, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1596, %land.rhs238 ]
  %cmp245597 = icmp slt i32 %fixg_lower.0715, %fixg.2572
  br i1 %cmp245597, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0715 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next748 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2572
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv747 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next748, %while.cond244 ]
  %fixg_lower.1598 = phi i32 [ %fixg_lower.0715, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19569808817, i64 %indvars.iv747
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next748 = add nsw i64 %indvars.iv747, 1
  %inc252 = add nsw i32 %fixg_lower.1598, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0715, %land.end ], [ %fixg_lower.0715, %while.cond244.loopexit ], [ %fixg_lower.1598, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0716, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0717, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1600 = add nsw i32 %i.0718, 1
  %cmp257601 = icmp slt i32 %j.1600, %j_hgroup.1
  br i1 %cmp257601, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0718
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0718
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1600
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1600, %86
  %broadcast.splatinsert853 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat854 = shufflevector <4 x i32> %broadcast.splatinsert853, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction855 = add <4 x i32> %broadcast.splat854, <i32 0, i32 1, i32 2, i32 3>
  %induction856 = add <4 x i32> %broadcast.splat854, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114573575581587, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction855, <4 x i32>* %88, align 4
  %.sum859 = or i64 %index, 4
  %89 = getelementptr i32* %cond114573575581587, i64 %.sum859
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction856, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !111

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val851 = phi i32 [ %j.1600, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv749 = phi i64 [ %indvars.iv.next750, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1603 = phi i32 [ %j.1, %for.body258 ], [ %resume.val851, %middle.block ]
  %indvars.iv.next750 = add nuw nsw i64 %indvars.iv749, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114573575581587, i64 %indvars.iv749
  store i32 %j.1603, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1603, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next750 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !112

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114573575581587, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19569808817, i32* %cond565567810816
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2572, i32 %g.0.lcssa818
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30812815, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv755 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next756, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv755 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next756 = add nsw i64 %indvars.iv755, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next756
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div556 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div556 to i32
  %cmp330609 = icmp sgt i32 %conv328, 0
  br i1 %cmp330609, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv757 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next758, %cond.end351 ]
  %pli.0611 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30812815, i64 %indvars.iv757
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp557 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp557, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0611, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0611, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0611, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0611, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0611, i64 %cond352
  %indvars.iv.next758 = add nuw nsw i64 %indvars.iv757, 1
  %lftr.wideiv759 = trunc i64 %indvars.iv.next758 to i32
  %exitcond760 = icmp eq i32 %lftr.wideiv759, %104
  br i1 %exitcond760, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369553 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369553 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext554 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext554, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114573575581587, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114573575581587, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0713, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0712, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0714, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0715, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0716, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0717, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  br i1 %tobool381, label %land.end387.thread, label %land.end387

land.end387.thread:                               ; preds = %if.end380
  %charge820 = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %109 = load float* %charge820, align 4, !tbaa !63
  %conv389821 = fpext float %109 to double
  %mul390822 = fmul double %conv389821, 3.320636e+02
  %mul391823 = fmul double %8, %mul390822
  %mul392824 = fmul double %4, %mul391823
  br label %if.else463

land.end387:                                      ; preds = %if.end380
  %bf.load383 = load i32* %62, align 4
  %bf.clear385 = and i32 %bf.load383, 67108864
  %tobool386 = icmp eq i32 %bf.clear385, 0
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %110 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %110 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  br i1 %tobool386, label %if.else463, label %for.cond402.preheader

for.cond402.preheader:                            ; preds = %land.end387
  %cmp403637 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %cmp403637, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %111 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv770 = phi i64 [ %111, %for.body404.lr.ph ], [ %indvars.iv.next771, %for.inc460 ]
  %exclChecksum.1641 = phi i32 [ %exclChecksum.0725, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0640 = phi i32* [ %cond125577579589, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0639 = phi i32* [ %cond136583585, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114573575581587, i64 %indvars.iv770
  %112 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %112 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %113 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %67, %113
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %114 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %68, %114
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %115 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %69, %115
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %116 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %116, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond560 = or i1 %tobool438, %cmp439
  br i1 %or.cond560, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1641, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1641, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %64
  %cmp453 = icmp sgt i32 %bf.clear450, %65
  %or.cond561 = or i1 %cmp451, %cmp453
  br i1 %or.cond561, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0640, i64 1
  store i32 %112, i32* %pli399.0640, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0639, i64 1
  store i32 %112, i32* %plin.0639, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0639, %for.body404 ], [ %plin.0639, %land.lhs.true442 ], [ %plin.0639, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0640, %for.body404 ], [ %pli399.0640, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0640, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1641, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next771 = add nsw i64 %indvars.iv770, 1
  %lftr.wideiv772 = trunc i64 %indvars.iv.next771 to i32
  %exitcond773 = icmp eq i32 %lftr.wideiv772, %pairlistindex.2
  br i1 %exitcond773, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387, %land.end387.thread
  %mul392826 = phi double [ %mul392824, %land.end387.thread ], [ %mul392, %land.end387 ]
  %cmp465 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %cmp465, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114573575581587, i64 %idxprom468
  %117 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %117 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %118 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %119 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %120 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %120, %if.then466 ], [ %126, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %119, %if.then466 ], [ %125, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %118, %if.then466 ], [ %124, %if.else531 ]
  %j2467.0.ph = phi i32 [ %117, %if.then466 ], [ %123, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136583585, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125577579589, %if.then466 ], [ %pli399.2.ph620, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0725, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer613

while.cond491.outer613:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph614 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph615 = phi double [ %126, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph616 = phi double [ %125, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph617 = phi double [ %124, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph618 = phi i32 [ %123, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph619 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph620 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph621 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer622

while.cond491.outer622:                           ; preds = %land.lhs.true522, %while.cond491.outer613
  %idxprom471.pn.ph623 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph614, %while.cond491.outer613 ]
  %p_j_z480.0.ph624 = phi double [ %126, %land.lhs.true522 ], [ %p_j_z480.0.ph615, %while.cond491.outer613 ]
  %p_j_y475.0.ph625 = phi double [ %125, %land.lhs.true522 ], [ %p_j_y475.0.ph616, %while.cond491.outer613 ]
  %p_j_x470.0.ph626 = phi double [ %124, %land.lhs.true522 ], [ %p_j_x470.0.ph617, %while.cond491.outer613 ]
  %j2467.0.ph627 = phi i32 [ %123, %land.lhs.true522 ], [ %j2467.0.ph618, %while.cond491.outer613 ]
  %k464.0.ph628 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph619, %while.cond491.outer613 ]
  %exclChecksum.4.ph629 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph621, %while.cond491.outer613 ]
  %121 = sext i32 %k464.0.ph628 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer622
  %indvars.iv766 = phi i64 [ %121, %while.cond491.outer622 ], [ %indvars.iv.next767, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph623, %while.cond491.outer622 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph624, %while.cond491.outer622 ], [ %126, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph625, %while.cond491.outer622 ], [ %125, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph626, %while.cond491.outer622 ], [ %124, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph627, %while.cond491.outer622 ], [ %123, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph628, %while.cond491.outer622 ], [ %inc494, %while.body493 ]
  %122 = trunc i64 %indvars.iv766 to i32
  %cmp492 = icmp slt i32 %122, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next767 = add nsw i64 %indvars.iv766, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114573575581587, i64 %indvars.iv.next767
  %123 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %67, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %123 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %124 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %68, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %125 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %69, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %126 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph629, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer622

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph629, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %64
  %cmp528 = icmp sgt i32 %atom2485.0, %65
  %or.cond562 = or i1 %cmp526, %cmp528
  br i1 %or.cond562, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph620, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph620, align 4, !tbaa !11
  br label %while.cond491.outer613

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %mul392825 = phi double [ %mul392826, %if.else463 ], [ %mul392, %for.cond402.preheader ], [ %mul392, %for.inc460 ], [ %mul392826, %while.cond491 ]
  %plin.4 = phi i32* [ %cond136583585, %if.else463 ], [ %cond136583585, %for.cond402.preheader ], [ %plin.1, %for.inc460 ], [ %plin.2.ph, %while.cond491 ]
  %pli399.4 = phi i32* [ %cond125577579589, %if.else463 ], [ %cond125577579589, %for.cond402.preheader ], [ %pli399.1, %for.inc460 ], [ %pli399.2.ph620, %while.cond491 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0725, %if.else463 ], [ %exclChecksum.0725, %for.cond402.preheader ], [ %exclChecksum.3, %for.inc460 ], [ %exclChecksum.4.ph629, %while.cond491 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546525 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546525 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext551 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext551, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125577579589, i64 %idxprom551
  %127 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125577579589, i64 %idxprom553
  store i32 %127, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558645 = icmp ult i32* %cond136583585, %plin.4
  br i1 %cmp558645, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8648 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0647 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147591, %for.cond557.preheader ]
  %pln.0646 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136583585, %for.cond557.preheader ]
  %128 = load i32* %pln.0646, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %128, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0647, i64 1
  store i32 %128, i32* %plix.0647, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8648, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0646, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8648, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147591, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0647, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136583585, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0646, %land.lhs.true559 ]
  %cmp567652 = icmp sgt i32 %conv547, 0
  br i1 %cmp567652, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv780 = phi i64 [ %indvars.iv.next781, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9655 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1654 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0653 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125577579589, i64 %indvars.iv780
  %129 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %129, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1654, i64 1
  store i32 %129, i32* %plix.1654, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9655, -1
  %indvars.iv.next781 = add nuw nsw i64 %indvars.iv780, 1
  %inc578 = add nsw i32 %k556.0653, 1
  %130 = trunc i64 %indvars.iv.next781 to i32
  %cmp567 = icmp slt i32 %130, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9655, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1654, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0653, %land.lhs.true568 ]
  %cmp581659 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581659, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %131 = sext i32 %k556.0.lcssa to i64
  %132 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %133 = lshr i64 %132, 2
  %134 = trunc i64 %133 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv782 = phi i64 [ %131, %for.body582.lr.ph ], [ %indvars.iv.next783, %for.inc600 ]
  %plin.5663 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2662 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0661 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125577579589, i64 %indvars.iv782
  %135 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %135 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %136 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %136, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592550 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592550, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %137 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %137 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5663, i64 1
  store i32 %135, i32* %plin.5663, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2662, i64 1
  store i32 %135, i32* %plix.2662, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0661, i64 1
  store i32 %135, i32* %plim.0661, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0661, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0661, %sw.bb596 ], [ %plim.0661, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2662, %for.body582 ], [ %plix.2662, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2662, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5663, %for.body582 ], [ %plin.5663, %sw.bb598 ], [ %plin.5663, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next783 = add nsw i64 %indvars.iv782, 1
  %lftr.wideiv784 = trunc i64 %indvars.iv.next783 to i32
  %exitcond785 = icmp eq i32 %lftr.wideiv784, %134
  br i1 %exitcond785, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606 = ashr exact i64 %sub.ptr.sub605, 2
  %conv607526 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607526
  %add615 = add i64 %add608, %sub.ptr.div606
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620528 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620528 to i32
  %cmp623667 = icmp sgt i32 %conv621, 0
  br i1 %cmp623667, label %for.body624.lr.ph, label %for.end706

for.body624.lr.ph:                                ; preds = %for.end602
  %x684 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y693 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z700 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624, %for.body624.lr.ph
  %indvars.iv786 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next787, %for.body624 ]
  %138 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %156, %for.body624 ]
  %139 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %163, %for.body624 ]
  %140 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %174, %for.body624 ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv786
  %141 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %141 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %142 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %67, %142
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %143 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %68, %143
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %144 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %69, %144
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %145 = bitcast float %conv645 to i32
  %shr = ashr i32 %145, 17
  %add647 = add nsw i32 %shr, %mul
  %mul648 = shl nsw i32 %add647, 4
  %idx.ext649 = sext i32 %mul648 to i64
  %and = and i32 %145, -131072
  %charge655 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %146 = load float* %charge655, align 4, !tbaa !63
  %conv656 = fpext float %146 to double
  %mul657 = fmul double %mul392825, %conv656
  %147 = bitcast i32 %and to float
  %conv659 = fpext float %147 to double
  %sub660 = fsub double %add644, %conv659
  %add.ptr652.sum547 = or i64 %idx.ext649, 13
  %arrayidx661 = getelementptr inbounds double* %6, i64 %add.ptr652.sum547
  %148 = load double* %arrayidx661, align 8, !tbaa !17
  %add.ptr652.sum548 = or i64 %idx.ext649, 14
  %arrayidx662 = getelementptr inbounds double* %6, i64 %add.ptr652.sum548
  %149 = load double* %arrayidx662, align 8, !tbaa !17
  %add.ptr652.sum549 = or i64 %idx.ext649, 15
  %arrayidx663 = getelementptr inbounds double* %6, i64 %add.ptr652.sum549
  %150 = load double* %arrayidx663, align 8, !tbaa !17
  %mul664 = fmul double %mul657, %150
  %mul665 = fmul double %149, %mul657
  %mul666 = fmul double %148, %mul657
  %mul668 = fmul double %sub660, 3.000000e+00
  %mul669 = fmul double %mul664, %mul668
  %mul670 = fmul double %mul665, 2.000000e+00
  %add671 = fadd double %mul670, %mul669
  %mul672 = fmul double %sub660, %add671
  %add673 = fadd double %mul666, %mul672
  %mul674 = fmul double %add673, -2.000000e+00
  %mul677 = fmul double %sub632, %mul674
  %151 = insertelement <2 x double> undef, double %sub632, i32 0
  %152 = insertelement <2 x double> %151, double %sub637, i32 1
  %153 = insertelement <2 x double> undef, double %mul677, i32 0
  %154 = insertelement <2 x double> %153, double %mul677, i32 1
  %155 = fmul <2 x double> %152, %154
  %156 = fadd <2 x double> %138, %155
  %157 = load double* %x684, align 8, !tbaa !72
  %add685 = fadd double %157, %mul677
  store double %add685, double* %x684, align 8, !tbaa !72
  %x686 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul688 = fmul double %sub637, %mul674
  %158 = insertelement <2 x double> undef, double %sub637, i32 0
  %159 = insertelement <2 x double> %158, double %sub642, i32 1
  %160 = insertelement <2 x double> undef, double %mul688, i32 0
  %161 = insertelement <2 x double> %160, double %mul688, i32 1
  %162 = fmul <2 x double> %159, %161
  %163 = fadd <2 x double> %139, %162
  %164 = load double* %y693, align 8, !tbaa !73
  %add694 = fadd double %164, %mul688
  store double %add694, double* %y693, align 8, !tbaa !73
  %165 = bitcast double* %x686 to <2 x double>*
  %166 = load <2 x double>* %165, align 8, !tbaa !17
  %167 = insertelement <2 x double> %153, double %mul688, i32 1
  %168 = fsub <2 x double> %166, %167
  %169 = bitcast double* %x686 to <2 x double>*
  store <2 x double> %168, <2 x double>* %169, align 8, !tbaa !17
  %mul697 = fmul double %sub642, %mul674
  %170 = insertelement <2 x double> undef, double %sub642, i32 0
  %171 = insertelement <2 x double> %170, double %sub642, i32 1
  %172 = insertelement <2 x double> %153, double %mul697, i32 1
  %173 = fmul <2 x double> %171, %172
  %174 = fadd <2 x double> %140, %173
  %175 = load double* %z700, align 8, !tbaa !74
  %add701 = fadd double %175, %mul697
  store double %add701, double* %z700, align 8, !tbaa !74
  %z702 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %176 = load double* %z702, align 8, !tbaa !74
  %sub703 = fsub double %176, %mul697
  store double %sub703, double* %z702, align 8, !tbaa !74
  %indvars.iv.next787 = add nuw nsw i64 %indvars.iv786, 1
  %lftr.wideiv788 = trunc i64 %indvars.iv.next787 to i32
  %exitcond789 = icmp eq i32 %lftr.wideiv788, %conv621
  br i1 %exitcond789, label %for.end706, label %for.body624

for.end706:                                       ; preds = %for.body624, %for.end602
  %177 = phi <2 x double> [ %59, %for.end602 ], [ %156, %for.body624 ]
  %178 = phi <2 x double> [ %60, %for.end602 ], [ %163, %for.body624 ]
  %179 = phi <2 x double> [ %61, %for.end602 ], [ %174, %for.body624 ]
  %conv711 = trunc i64 %sub.ptr.div613 to i32
  %cmp713681 = icmp sgt i32 %conv711, 0
  br i1 %cmp713681, label %for.body714.lr.ph, label %for.end833

for.body714.lr.ph:                                ; preds = %for.end706
  %x809 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y819 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z827 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body714

for.body714:                                      ; preds = %for.body714, %for.body714.lr.ph
  %indvars.iv790 = phi i64 [ 0, %for.body714.lr.ph ], [ %indvars.iv.next791, %for.body714 ]
  %180 = phi <2 x double> [ %177, %for.body714.lr.ph ], [ %201, %for.body714 ]
  %181 = phi <2 x double> [ %178, %for.body714.lr.ph ], [ %208, %for.body714 ]
  %182 = phi <2 x double> [ %179, %for.body714.lr.ph ], [ %219, %for.body714 ]
  %arrayidx717 = getelementptr inbounds i32* %cond158, i64 %indvars.iv790
  %183 = load i32* %arrayidx717, align 4, !tbaa !11
  %idx.ext719 = sext i32 %183 to i64
  %x723 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext719, i32 0, i32 0
  %184 = load double* %x723, align 8, !tbaa !59
  %sub724 = fsub double %67, %184
  %mul726 = fmul double %sub724, %sub724
  %y729 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext719, i32 0, i32 1
  %185 = load double* %y729, align 8, !tbaa !61
  %sub730 = fsub double %68, %185
  %mul731 = fmul double %sub730, %sub730
  %add732 = fadd double %mul726, %mul731
  %z735 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext719, i32 0, i32 2
  %186 = load double* %z735, align 8, !tbaa !62
  %sub736 = fsub double %69, %186
  %mul737 = fmul double %sub736, %sub736
  %add738 = fadd double %add732, %mul737
  %conv740 = fptrunc double %add738 to float
  %187 = bitcast float %conv740 to i32
  %shr744 = ashr i32 %187, 17
  %add745 = add nsw i32 %shr744, %mul
  %mul747 = shl nsw i32 %add745, 4
  %idx.ext748 = sext i32 %mul747 to i64
  %and755 = and i32 %187, -131072
  %charge757 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext719, i32 1
  %188 = load float* %charge757, align 4, !tbaa !63
  %conv758 = fpext float %188 to double
  %mul759 = fmul double %mul392825, %conv758
  %189 = bitcast i32 %and755 to float
  %conv762 = fpext float %189 to double
  %sub763 = fsub double %add738, %conv762
  %add.ptr751.sum539 = or i64 %idx.ext748, 13
  %arrayidx765 = getelementptr inbounds double* %6, i64 %add.ptr751.sum539
  %190 = load double* %arrayidx765, align 8, !tbaa !17
  %add.ptr751.sum540 = or i64 %idx.ext748, 14
  %arrayidx767 = getelementptr inbounds double* %6, i64 %add.ptr751.sum540
  %191 = load double* %arrayidx767, align 8, !tbaa !17
  %add.ptr751.sum541 = or i64 %idx.ext748, 15
  %arrayidx769 = getelementptr inbounds double* %6, i64 %add.ptr751.sum541
  %192 = load double* %arrayidx769, align 8, !tbaa !17
  %mul770 = shl nsw i32 %add745, 2
  %idx.ext771 = sext i32 %mul770 to i64
  %add.ptr772.sum542 = or i64 %idx.ext771, 1
  %arrayidx776 = getelementptr inbounds double* %7, i64 %add.ptr772.sum542
  %193 = load double* %arrayidx776, align 8, !tbaa !17
  %mul777 = fmul double %sub, %193
  %sub778 = fsub double %190, %mul777
  %add.ptr772.sum543 = or i64 %idx.ext771, 2
  %arrayidx779 = getelementptr inbounds double* %7, i64 %add.ptr772.sum543
  %194 = load double* %arrayidx779, align 8, !tbaa !17
  %mul780 = fmul double %sub, %194
  %sub781 = fsub double %191, %mul780
  %add.ptr772.sum544 = or i64 %idx.ext771, 3
  %arrayidx782 = getelementptr inbounds double* %7, i64 %add.ptr772.sum544
  %195 = load double* %arrayidx782, align 8, !tbaa !17
  %mul783 = fmul double %sub, %195
  %sub784 = fsub double %192, %mul783
  %mul785 = fmul double %mul759, %sub784
  %mul786 = fmul double %mul759, %sub781
  %mul787 = fmul double %mul759, %sub778
  %mul790 = fmul double %sub763, 3.000000e+00
  %mul791 = fmul double %mul790, %mul785
  %mul792 = fmul double %mul786, 2.000000e+00
  %add793 = fadd double %mul792, %mul791
  %mul794 = fmul double %sub763, %add793
  %add795 = fadd double %mul787, %mul794
  %mul797 = fmul double %add795, -2.000000e+00
  %mul802 = fmul double %sub724, %mul797
  %196 = insertelement <2 x double> undef, double %sub724, i32 0
  %197 = insertelement <2 x double> %196, double %sub730, i32 1
  %198 = insertelement <2 x double> undef, double %mul802, i32 0
  %199 = insertelement <2 x double> %198, double %mul802, i32 1
  %200 = fmul <2 x double> %197, %199
  %201 = fadd <2 x double> %180, %200
  %202 = load double* %x809, align 8, !tbaa !72
  %add810 = fadd double %202, %mul802
  store double %add810, double* %x809, align 8, !tbaa !72
  %x811 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext719, i32 0
  %mul814 = fmul double %sub730, %mul797
  %203 = insertelement <2 x double> undef, double %sub730, i32 0
  %204 = insertelement <2 x double> %203, double %sub736, i32 1
  %205 = insertelement <2 x double> undef, double %mul814, i32 0
  %206 = insertelement <2 x double> %205, double %mul814, i32 1
  %207 = fmul <2 x double> %204, %206
  %208 = fadd <2 x double> %181, %207
  %209 = load double* %y819, align 8, !tbaa !73
  %add820 = fadd double %209, %mul814
  store double %add820, double* %y819, align 8, !tbaa !73
  %210 = bitcast double* %x811 to <2 x double>*
  %211 = load <2 x double>* %210, align 8, !tbaa !17
  %212 = insertelement <2 x double> %198, double %mul814, i32 1
  %213 = fsub <2 x double> %211, %212
  %214 = bitcast double* %x811 to <2 x double>*
  store <2 x double> %213, <2 x double>* %214, align 8, !tbaa !17
  %mul824 = fmul double %sub736, %mul797
  %215 = insertelement <2 x double> undef, double %sub736, i32 0
  %216 = insertelement <2 x double> %215, double %sub736, i32 1
  %217 = insertelement <2 x double> %198, double %mul824, i32 1
  %218 = fmul <2 x double> %216, %217
  %219 = fadd <2 x double> %182, %218
  %220 = load double* %z827, align 8, !tbaa !74
  %add828 = fadd double %220, %mul824
  store double %add828, double* %z827, align 8, !tbaa !74
  %z829 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext719, i32 2
  %221 = load double* %z829, align 8, !tbaa !74
  %sub830 = fsub double %221, %mul824
  store double %sub830, double* %z829, align 8, !tbaa !74
  %indvars.iv.next791 = add nuw nsw i64 %indvars.iv790, 1
  %lftr.wideiv792 = trunc i64 %indvars.iv.next791 to i32
  %exitcond793 = icmp eq i32 %lftr.wideiv792, %conv711
  br i1 %exitcond793, label %for.end833, label %for.body714

for.end833:                                       ; preds = %for.body714, %for.end706
  %222 = phi <2 x double> [ %177, %for.end706 ], [ %201, %for.body714 ]
  %223 = phi <2 x double> [ %178, %for.end706 ], [ %208, %for.body714 ]
  %224 = phi <2 x double> [ %179, %for.end706 ], [ %219, %for.body714 ]
  %conv838 = trunc i64 %sub.ptr.div606 to i32
  %cmp840695 = icmp sgt i32 %conv838, 0
  br i1 %cmp840695, label %for.body841.lr.ph, label %for.inc958

for.body841.lr.ph:                                ; preds = %for.end833
  %x933 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y943 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z951 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body841

for.body841:                                      ; preds = %for.body841, %for.body841.lr.ph
  %indvars.iv794 = phi i64 [ 0, %for.body841.lr.ph ], [ %indvars.iv.next795, %for.body841 ]
  %225 = phi <2 x double> [ %222, %for.body841.lr.ph ], [ %246, %for.body841 ]
  %226 = phi <2 x double> [ %223, %for.body841.lr.ph ], [ %253, %for.body841 ]
  %227 = phi <2 x double> [ %224, %for.body841.lr.ph ], [ %264, %for.body841 ]
  %arrayidx844 = getelementptr inbounds i32* %cond147591, i64 %indvars.iv794
  %228 = load i32* %arrayidx844, align 4, !tbaa !11
  %idx.ext846 = sext i32 %228 to i64
  %x850 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext846, i32 0, i32 0
  %229 = load double* %x850, align 8, !tbaa !59
  %sub851 = fsub double %67, %229
  %mul853 = fmul double %sub851, %sub851
  %y856 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext846, i32 0, i32 1
  %230 = load double* %y856, align 8, !tbaa !61
  %sub857 = fsub double %68, %230
  %mul858 = fmul double %sub857, %sub857
  %add859 = fadd double %mul853, %mul858
  %z862 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext846, i32 0, i32 2
  %231 = load double* %z862, align 8, !tbaa !62
  %sub863 = fsub double %69, %231
  %mul864 = fmul double %sub863, %sub863
  %add865 = fadd double %add859, %mul864
  %conv867 = fptrunc double %add865 to float
  %232 = bitcast float %conv867 to i32
  %shr871 = ashr i32 %232, 17
  %add872 = add nsw i32 %shr871, %mul
  %mul874 = shl nsw i32 %add872, 4
  %idx.ext875 = sext i32 %mul874 to i64
  %and882 = and i32 %232, -131072
  %charge884 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext846, i32 1
  %233 = load float* %charge884, align 4, !tbaa !63
  %conv885 = fpext float %233 to double
  %mul886 = fmul double %mul392825, %conv885
  %234 = bitcast i32 %and882 to float
  %conv889 = fpext float %234 to double
  %sub890 = fsub double %add865, %conv889
  %add.ptr878.sum531 = or i64 %idx.ext875, 13
  %arrayidx892 = getelementptr inbounds double* %6, i64 %add.ptr878.sum531
  %235 = load double* %arrayidx892, align 8, !tbaa !17
  %add.ptr878.sum532 = or i64 %idx.ext875, 14
  %arrayidx894 = getelementptr inbounds double* %6, i64 %add.ptr878.sum532
  %236 = load double* %arrayidx894, align 8, !tbaa !17
  %add.ptr878.sum533 = or i64 %idx.ext875, 15
  %arrayidx896 = getelementptr inbounds double* %6, i64 %add.ptr878.sum533
  %237 = load double* %arrayidx896, align 8, !tbaa !17
  %mul898 = shl nsw i32 %add872, 2
  %idx.ext899 = sext i32 %mul898 to i64
  %add.ptr900.sum534 = or i64 %idx.ext899, 1
  %arrayidx903 = getelementptr inbounds double* %7, i64 %add.ptr900.sum534
  %238 = load double* %arrayidx903, align 8, !tbaa !17
  %sub904 = fsub double %235, %238
  %add.ptr900.sum535 = or i64 %idx.ext899, 2
  %arrayidx905 = getelementptr inbounds double* %7, i64 %add.ptr900.sum535
  %239 = load double* %arrayidx905, align 8, !tbaa !17
  %sub906 = fsub double %236, %239
  %add.ptr900.sum536 = or i64 %idx.ext899, 3
  %arrayidx907 = getelementptr inbounds double* %7, i64 %add.ptr900.sum536
  %240 = load double* %arrayidx907, align 8, !tbaa !17
  %sub908 = fsub double %237, %240
  %mul909 = fmul double %mul886, %sub908
  %mul910 = fmul double %mul886, %sub906
  %mul911 = fmul double %mul886, %sub904
  %mul914 = fmul double %sub890, 3.000000e+00
  %mul915 = fmul double %mul909, %mul914
  %mul916 = fmul double %mul910, 2.000000e+00
  %add917 = fadd double %mul916, %mul915
  %mul918 = fmul double %sub890, %add917
  %add919 = fadd double %mul911, %mul918
  %mul921 = fmul double %add919, -2.000000e+00
  %mul926 = fmul double %sub851, %mul921
  %241 = insertelement <2 x double> undef, double %sub851, i32 0
  %242 = insertelement <2 x double> %241, double %sub857, i32 1
  %243 = insertelement <2 x double> undef, double %mul926, i32 0
  %244 = insertelement <2 x double> %243, double %mul926, i32 1
  %245 = fmul <2 x double> %242, %244
  %246 = fadd <2 x double> %225, %245
  %247 = load double* %x933, align 8, !tbaa !72
  %add934 = fadd double %247, %mul926
  store double %add934, double* %x933, align 8, !tbaa !72
  %x935 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext846, i32 0
  %mul938 = fmul double %sub857, %mul921
  %248 = insertelement <2 x double> undef, double %sub857, i32 0
  %249 = insertelement <2 x double> %248, double %sub863, i32 1
  %250 = insertelement <2 x double> undef, double %mul938, i32 0
  %251 = insertelement <2 x double> %250, double %mul938, i32 1
  %252 = fmul <2 x double> %249, %251
  %253 = fadd <2 x double> %226, %252
  %254 = load double* %y943, align 8, !tbaa !73
  %add944 = fadd double %254, %mul938
  store double %add944, double* %y943, align 8, !tbaa !73
  %255 = bitcast double* %x935 to <2 x double>*
  %256 = load <2 x double>* %255, align 8, !tbaa !17
  %257 = insertelement <2 x double> %243, double %mul938, i32 1
  %258 = fsub <2 x double> %256, %257
  %259 = bitcast double* %x935 to <2 x double>*
  store <2 x double> %258, <2 x double>* %259, align 8, !tbaa !17
  %mul948 = fmul double %sub863, %mul921
  %260 = insertelement <2 x double> undef, double %sub863, i32 0
  %261 = insertelement <2 x double> %260, double %sub863, i32 1
  %262 = insertelement <2 x double> %243, double %mul948, i32 1
  %263 = fmul <2 x double> %261, %262
  %264 = fadd <2 x double> %227, %263
  %265 = load double* %z951, align 8, !tbaa !74
  %add952 = fadd double %265, %mul948
  store double %add952, double* %z951, align 8, !tbaa !74
  %z953 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext846, i32 2
  %266 = load double* %z953, align 8, !tbaa !74
  %sub954 = fsub double %266, %mul948
  store double %sub954, double* %z953, align 8, !tbaa !74
  %indvars.iv.next795 = add nuw nsw i64 %indvars.iv794, 1
  %lftr.wideiv796 = trunc i64 %indvars.iv.next795 to i32
  %exitcond797 = icmp eq i32 %lftr.wideiv796, %conv838
  br i1 %exitcond797, label %for.inc958, label %for.body841

for.inc958:                                       ; preds = %for.body841, %for.end833, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end833 ], [ %pairCount.2, %for.body841 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0713, %if.then215 ], [ %pairlistoffset.1, %for.end833 ], [ %pairlistoffset.1, %for.body841 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0714, %if.then215 ], [ %pairlistindex.2, %for.end833 ], [ %pairlistindex.2, %for.body841 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0715, %if.then215 ], [ %fixg_lower.3, %for.end833 ], [ %fixg_lower.3, %for.body841 ]
  %g_lower.4 = phi i32 [ %g_lower.0716, %if.then215 ], [ %g_lower.3, %for.end833 ], [ %g_lower.3, %for.body841 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0717, %if.then215 ], [ %j_hgroup.2, %for.end833 ], [ %j_hgroup.2, %for.body841 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0718, %for.end833 ], [ %i.0718, %for.body841 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0725, %if.then215 ], [ %conv616, %for.end833 ], [ %conv616, %for.body841 ]
  %267 = phi <2 x double> [ %59, %if.then215 ], [ %222, %for.end833 ], [ %246, %for.body841 ]
  %268 = phi <2 x double> [ %60, %if.then215 ], [ %223, %for.end833 ], [ %253, %for.body841 ]
  %269 = phi <2 x double> [ %61, %if.then215 ], [ %224, %for.end833 ], [ %264, %for.body841 ]
  %inc959 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc959
  br i1 %cmp171, label %for.body172, label %for.end960

for.end960:                                       ; preds = %for.inc958, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc958 ]
  %270 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %267, %for.inc958 ]
  %271 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %268, %for.inc958 ]
  %272 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %269, %for.inc958 ]
  %273 = extractelement <2 x double> %272, i32 1
  %arraydecay961 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp962 = icmp eq i32* %cond565567810816, %arraydecay961
  br i1 %cmp962, label %if.end967, label %delete.notnull965

delete.notnull965:                                ; preds = %for.end960
  %274 = bitcast i32* %cond565567810816 to i8*
  call void @_ZdaPv(i8* %274) #7
  br label %if.end967

if.end967:                                        ; preds = %delete.notnull965, %for.end960
  %arraydecay968 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp969 = icmp eq i32* %cond19569808817, %arraydecay968
  br i1 %cmp969, label %if.end974, label %delete.notnull972

delete.notnull972:                                ; preds = %if.end967
  %275 = bitcast i32* %cond19569808817 to i8*
  call void @_ZdaPv(i8* %275) #7
  br label %if.end974

if.end974:                                        ; preds = %delete.notnull972, %if.end967
  %arraydecay975 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp976 = icmp eq i32* %cond30812815, %arraydecay975
  br i1 %cmp976, label %if.end981, label %delete.notnull979

delete.notnull979:                                ; preds = %if.end974
  %276 = bitcast i32* %cond30812815 to i8*
  call void @_ZdaPv(i8* %276) #7
  br label %if.end981

if.end981:                                        ; preds = %delete.notnull979, %if.end974
  %arraydecay982 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp983 = icmp eq i32* %cond114573575581587, %arraydecay982
  br i1 %cmp983, label %if.end988, label %delete.notnull986

delete.notnull986:                                ; preds = %if.end981
  %277 = bitcast i32* %cond114573575581587 to i8*
  call void @_ZdaPv(i8* %277) #7
  br label %if.end988

if.end988:                                        ; preds = %delete.notnull986, %if.end981
  %arraydecay989 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp990 = icmp eq i32* %cond125577579589, %arraydecay989
  br i1 %cmp990, label %if.end995, label %delete.notnull993

delete.notnull993:                                ; preds = %if.end988
  %278 = bitcast i32* %cond125577579589 to i8*
  call void @_ZdaPv(i8* %278) #7
  br label %if.end995

if.end995:                                        ; preds = %delete.notnull993, %if.end988
  %arraydecay996 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp997 = icmp eq i32* %cond136583585, %arraydecay996
  br i1 %cmp997, label %if.end1002, label %delete.notnull1000

delete.notnull1000:                               ; preds = %if.end995
  %279 = bitcast i32* %cond136583585 to i8*
  call void @_ZdaPv(i8* %279) #7
  br label %if.end1002

if.end1002:                                       ; preds = %delete.notnull1000, %if.end995
  %arraydecay1003 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1004 = icmp eq i32* %cond147591, %arraydecay1003
  br i1 %cmp1004, label %if.end1009, label %delete.notnull1007

delete.notnull1007:                               ; preds = %if.end1002
  %280 = bitcast i32* %cond147591 to i8*
  call void @_ZdaPv(i8* %280) #7
  br label %if.end1009

if.end1009:                                       ; preds = %delete.notnull1007, %if.end1002
  %arraydecay1010 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1011 = icmp eq i32* %cond158, %arraydecay1010
  br i1 %cmp1011, label %if.end1016, label %delete.notnull1014

delete.notnull1014:                               ; preds = %if.end1009
  %281 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %281) #7
  br label %if.end1016

if.end1016:                                       ; preds = %delete.notnull1014, %if.end1009
  %conv1017 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1018 = getelementptr inbounds double* %1, i64 22
  %282 = load double* %arrayidx1018, align 8, !tbaa !17
  %add1019 = fadd double %conv1017, %282
  store double %add1019, double* %arrayidx1018, align 8, !tbaa !17
  %arrayidx1020 = getelementptr inbounds double* %1, i64 12
  %283 = bitcast double* %arrayidx1020 to <2 x double>*
  %284 = load <2 x double>* %283, align 8, !tbaa !17
  %285 = fadd <2 x double> %270, %284
  %286 = bitcast double* %arrayidx1020 to <2 x double>*
  store <2 x double> %285, <2 x double>* %286, align 8, !tbaa !17
  %arrayidx1024 = getelementptr inbounds double* %1, i64 14
  %287 = bitcast double* %arrayidx1024 to <2 x double>*
  %288 = load <2 x double>* %287, align 8, !tbaa !17
  %289 = shufflevector <2 x double> %272, <2 x double> %270, <2 x i32> <i32 0, i32 3>
  %290 = fadd <2 x double> %289, %288
  %291 = bitcast double* %arrayidx1024 to <2 x double>*
  store <2 x double> %290, <2 x double>* %291, align 8, !tbaa !17
  %arrayidx1028 = getelementptr inbounds double* %1, i64 16
  %292 = bitcast double* %arrayidx1028 to <2 x double>*
  %293 = load <2 x double>* %292, align 8, !tbaa !17
  %294 = fadd <2 x double> %271, %293
  %295 = bitcast double* %arrayidx1028 to <2 x double>*
  store <2 x double> %294, <2 x double>* %295, align 8, !tbaa !17
  %arrayidx1032 = getelementptr inbounds double* %1, i64 18
  %296 = bitcast double* %arrayidx1032 to <2 x double>*
  %297 = load <2 x double>* %296, align 8, !tbaa !17
  %298 = shufflevector <2 x double> %272, <2 x double> %271, <2 x i32> <i32 0, i32 3>
  %299 = fadd <2 x double> %298, %297
  %300 = bitcast double* %arrayidx1032 to <2 x double>*
  store <2 x double> %299, <2 x double>* %300, align 8, !tbaa !17
  %arrayidx1036 = getelementptr inbounds double* %1, i64 20
  %301 = load double* %arrayidx1036, align 8, !tbaa !17
  %add1037 = fadd double %273, %301
  store double %add1037, double* %arrayidx1036, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1016, %delete.notnull91, %if.end86, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN20ComputeNonbondedUtil31calc_self_energy_slow_fullelectEP9nonbonded(%struct.nonbonded* nocapture readonly %params) #0 align 2 {
entry:
  %grouplist_std = alloca [1005 x i32], align 16
  %fixglist_std = alloca [1005 x i32], align 16
  %goodglist_std = alloca [1005 x i32], align 16
  %pairlist_std = alloca [1005 x i32], align 16
  %pairlist2_std = alloca [1005 x i32], align 16
  %pairlistn_std = alloca [1005 x i32], align 16
  %pairlistx_std = alloca [1005 x i32], align 16
  %pairlistm_std = alloca [1005 x i32], align 16
  %0 = load i32* @_ZN20ComputeNonbondedUtil8commOnlyE, align 4, !tbaa !11
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %reduction1 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 4
  %1 = load double** %reduction1, align 8, !tbaa !48
  %2 = load double* @_ZN20ComputeNonbondedUtil7cutoff2E, align 8, !tbaa !17
  %3 = load double* @_ZN20ComputeNonbondedUtil12groupcutoff2E, align 8, !tbaa !17
  %4 = load double* @_ZN20ComputeNonbondedUtil12dielectric_1E, align 8, !tbaa !17
  %5 = load %class.Molecule** @_ZN20ComputeNonbondedUtil3molE, align 8, !tbaa !1
  %6 = load double** @_ZN20ComputeNonbondedUtil11table_shortE, align 8, !tbaa !1
  %7 = load double** @_ZN20ComputeNonbondedUtil10slow_tableE, align 8, !tbaa !1
  %8 = load double* @_ZN20ComputeNonbondedUtil7scalingE, align 8, !tbaa !17
  %9 = load double* @_ZN20ComputeNonbondedUtil7scale14E, align 8, !tbaa !17
  %sub = fsub double 1.000000e+00, %9
  %10 = load double* @_ZN20ComputeNonbondedUtil8r2_deltaE, align 8, !tbaa !17
  %11 = load i32* @_ZN20ComputeNonbondedUtil12r2_delta_expE, align 4, !tbaa !11
  %sub2 = shl i32 %11, 6
  %mul = add i32 %sub2, -8128
  %arrayidx = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 0
  %12 = load i32* %arrayidx, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 3, i64 1
  %13 = load i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 0
  %14 = load %struct.CompAtom** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 0, i64 1
  %15 = load %struct.CompAtom** %arrayidx7, align 8, !tbaa !1
  %16 = bitcast [1005 x i32]* %grouplist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %16) #6
  %17 = bitcast [1005 x i32]* %fixglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %17) #6
  %18 = bitcast [1005 x i32]* %goodglist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %18) #6
  %cmp = icmp slt i32 %13, 1000
  br i1 %cmp, label %cond.end29, label %cond.end29.thread

cond.end29.thread:                                ; preds = %if.end
  %add = add nsw i32 %13, 5
  %19 = sext i32 %add to i64
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %19, i64 4)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call = call noalias i8* @_Znam(i64 %23) #8
  %24 = bitcast i8* %call to i32*
  %call14 = call noalias i8* @_Znam(i64 %23) #8
  %25 = bitcast i8* %call14 to i32*
  %call25 = call noalias i8* @_Znam(i64 %23) #8
  %26 = bitcast i8* %call25 to i32*
  br label %for.body.lr.ph

cond.end29:                                       ; preds = %if.end
  %arraydecay = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %arraydecay22 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp31772 = icmp sgt i32 %13, 0
  br i1 %cmp31772, label %for.body.lr.ph, label %if.end52

for.body.lr.ph:                                   ; preds = %cond.end29, %cond.end29.thread
  %cond30846 = phi i32* [ %26, %cond.end29.thread ], [ %arraydecay22, %cond.end29 ]
  %cond590592844 = phi i32* [ %24, %cond.end29.thread ], [ %arraydecay, %cond.end29 ]
  %cond19594842 = phi i32* [ %25, %cond.end29.thread ], [ %arraydecay11, %cond.end29 ]
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv835 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next836, %for.inc ]
  %g.0773 = phi i32 [ 0, %for.body.lr.ph ], [ %g.1, %for.inc ]
  %hydrogenGroupSize = getelementptr inbounds %struct.CompAtom* %15, i64 %indvars.iv835, i32 2
  %27 = bitcast [4 x i8]* %hydrogenGroupSize to i32*
  %bf.load = load i32* %27, align 4
  %28 = and i32 %bf.load, 62914560
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %for.inc, label %if.then40

if.then40:                                        ; preds = %for.body
  %inc = add nsw i32 %g.0773, 1
  %idxprom41 = sext i32 %g.0773 to i64
  %arrayidx42 = getelementptr inbounds i32* %cond590592844, i64 %idxprom41
  %30 = trunc i64 %indvars.iv835 to i32
  store i32 %30, i32* %arrayidx42, align 4, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %for.body
  %g.1 = phi i32 [ %inc, %if.then40 ], [ %g.0773, %for.body ]
  %indvars.iv.next836 = add nuw nsw i64 %indvars.iv835, 1
  %lftr.wideiv837 = trunc i64 %indvars.iv.next836 to i32
  %exitcond838 = icmp eq i32 %lftr.wideiv837, %13
  br i1 %exitcond838, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool45 = icmp eq i32 %g.1, 0
  br i1 %tobool45, label %if.end52, label %if.then46

if.then46:                                        ; preds = %for.end
  %sub47 = add nsw i32 %g.1, -1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds i32* %cond590592844, i64 %idxprom48
  %31 = load i32* %arrayidx49, align 4, !tbaa !11
  %idxprom50 = sext i32 %g.1 to i64
  %arrayidx51 = getelementptr inbounds i32* %cond590592844, i64 %idxprom50
  store i32 %31, i32* %arrayidx51, align 4, !tbaa !11
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %for.end, %cond.end29
  %g.0.lcssa851 = phi i32 [ 0, %for.end ], [ %g.1, %if.then46 ], [ 0, %cond.end29 ]
  %cond19594841850 = phi i32* [ %cond19594842, %for.end ], [ %cond19594842, %if.then46 ], [ %arraydecay11, %cond.end29 ]
  %cond590592843849 = phi i32* [ %cond590592844, %for.end ], [ %cond590592844, %if.then46 ], [ %arraydecay, %cond.end29 ]
  %cond30845848 = phi i32* [ %cond30846, %for.end ], [ %cond30846, %if.then46 ], [ %arraydecay22, %cond.end29 ]
  %32 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool53 = icmp eq i32 %32, 0
  br i1 %tobool53, label %if.end103, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end52
  %cmp56766 = icmp sgt i32 %g.0.lcssa851, 0
  br i1 %cmp56766, label %for.body57, label %if.then75

for.body57:                                       ; preds = %for.inc71, %for.cond55.preheader
  %indvars.iv831 = phi i64 [ %indvars.iv.next832, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %fixg.0768 = phi i32 [ %fixg.1, %for.inc71 ], [ 0, %for.cond55.preheader ]
  %all_fixed.0767 = phi i32 [ %all_fixed.1, %for.inc71 ], [ 1, %for.cond55.preheader ]
  %arrayidx59 = getelementptr inbounds i32* %cond590592843849, i64 %indvars.iv831
  %33 = load i32* %arrayidx59, align 4, !tbaa !11
  %idxprom60 = sext i32 %33 to i64
  %groupFixed = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom60, i32 2
  %34 = bitcast [4 x i8]* %groupFixed to i32*
  %bf.load62 = load i32* %34, align 4
  %bf.clear64 = and i32 %bf.load62, 134217728
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.then66, label %for.inc71

if.then66:                                        ; preds = %for.body57
  %inc67 = add nsw i32 %fixg.0768, 1
  %idxprom68 = sext i32 %fixg.0768 to i64
  %arrayidx69 = getelementptr inbounds i32* %cond19594841850, i64 %idxprom68
  store i32 %33, i32* %arrayidx69, align 4, !tbaa !11
  br label %for.inc71

for.inc71:                                        ; preds = %if.then66, %for.body57
  %all_fixed.1 = phi i32 [ %all_fixed.0767, %for.body57 ], [ 0, %if.then66 ]
  %fixg.1 = phi i32 [ %fixg.0768, %for.body57 ], [ %inc67, %if.then66 ]
  %indvars.iv.next832 = add nuw nsw i64 %indvars.iv831, 1
  %lftr.wideiv833 = trunc i64 %indvars.iv.next832 to i32
  %exitcond834 = icmp eq i32 %lftr.wideiv833, %g.0.lcssa851
  br i1 %exitcond834, label %for.end73, label %for.body57

for.end73:                                        ; preds = %for.inc71
  %tobool74 = icmp eq i32 %all_fixed.1, 0
  br i1 %tobool74, label %if.end95, label %if.then75

if.then75:                                        ; preds = %for.end73, %for.cond55.preheader
  %arraydecay76 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp77 = icmp eq i32* %cond590592843849, %arraydecay76
  br i1 %cmp77, label %if.end79, label %delete.notnull

delete.notnull:                                   ; preds = %if.then75
  %35 = bitcast i32* %cond590592843849 to i8*
  call void @_ZdaPv(i8* %35) #7
  br label %if.end79

if.end79:                                         ; preds = %delete.notnull, %if.then75
  %arraydecay80 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp81 = icmp eq i32* %cond19594841850, %arraydecay80
  br i1 %cmp81, label %if.end86, label %delete.notnull84

delete.notnull84:                                 ; preds = %if.end79
  %36 = bitcast i32* %cond19594841850 to i8*
  call void @_ZdaPv(i8* %36) #7
  br label %if.end86

if.end86:                                         ; preds = %delete.notnull84, %if.end79
  %arraydecay87 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp88 = icmp eq i32* %cond30845848, %arraydecay87
  br i1 %cmp88, label %cleanup.cont, label %delete.notnull91

delete.notnull91:                                 ; preds = %if.end86
  %37 = bitcast i32* %cond30845848 to i8*
  call void @_ZdaPv(i8* %37) #7
  br label %cleanup.cont

if.end95:                                         ; preds = %for.end73
  %tobool96 = icmp eq i32 %fixg.1, 0
  br i1 %tobool96, label %if.end103, label %if.then97

if.then97:                                        ; preds = %if.end95
  %sub98 = add nsw i32 %fixg.1, -1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds i32* %cond19594841850, i64 %idxprom99
  %38 = load i32* %arrayidx100, align 4, !tbaa !11
  %idxprom101 = sext i32 %fixg.1 to i64
  %arrayidx102 = getelementptr inbounds i32* %cond19594841850, i64 %idxprom101
  store i32 %38, i32* %arrayidx102, align 4, !tbaa !11
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.end95, %if.end52
  %fixg.2597 = phi i32 [ 0, %if.end95 ], [ %fixg.1, %if.then97 ], [ 0, %if.end52 ]
  %39 = bitcast [1005 x i32]* %pairlist_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %39) #6
  %40 = bitcast [1005 x i32]* %pairlist2_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %40) #6
  %41 = bitcast [1005 x i32]* %pairlistn_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %41) #6
  %42 = bitcast [1005 x i32]* %pairlistx_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %42) #6
  %43 = bitcast [1005 x i32]* %pairlistm_std to i8*
  call void @llvm.lifetime.start(i64 4020, i8* %43) #6
  br i1 %cmp, label %cond.true149, label %cond.false151

cond.true149:                                     ; preds = %if.end103
  %arraydecay106 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %arraydecay117 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %arraydecay128 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %arraydecay139 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  br label %cond.end157

cond.false151:                                    ; preds = %if.end103
  %add108 = add nsw i32 %13, 5
  %44 = sext i32 %add108 to i64
  %45 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %44, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %call109 = call noalias i8* @_Znam(i64 %48) #8
  %49 = bitcast i8* %call109 to i32*
  %call120 = call noalias i8* @_Znam(i64 %48) #8
  %50 = bitcast i8* %call120 to i32*
  %call131 = call noalias i8* @_Znam(i64 %48) #8
  %51 = bitcast i8* %call131 to i32*
  %call142 = call noalias i8* @_Znam(i64 %48) #8
  %52 = bitcast i8* %call142 to i32*
  %call153 = call noalias i8* @_Znam(i64 %48) #8
  %53 = bitcast i8* %call153 to i32*
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond147616 = phi i32* [ %arraydecay139, %cond.true149 ], [ %52, %cond.false151 ]
  %cond125602604614 = phi i32* [ %arraydecay117, %cond.true149 ], [ %50, %cond.false151 ]
  %cond114598600606612 = phi i32* [ %arraydecay106, %cond.true149 ], [ %49, %cond.false151 ]
  %cond136608610 = phi i32* [ %arraydecay128, %cond.true149 ], [ %51, %cond.false151 ]
  %cond158 = phi i32* [ %arraydecay150, %cond.true149 ], [ %53, %cond.false151 ]
  %arrayidx159 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 0
  %54 = load %class.Vector** %arrayidx159, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 2, i64 1
  %55 = load %class.Vector** %arrayidx161, align 8, !tbaa !1
  %sub162 = add nsw i32 %12, -1
  %mul163 = mul nsw i32 %sub162, %13
  %div = sdiv i32 %mul163, 2
  %minPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 8
  %56 = load i32* %minPart, align 4, !tbaa !50
  %mul164 = mul nsw i32 %56, %div
  %numParts = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 10
  %57 = load i32* %numParts, align 4, !tbaa !51
  %div165 = sdiv i32 %mul164, %57
  %maxPart = getelementptr inbounds %struct.nonbonded* %params, i64 0, i32 9
  %58 = load i32* %maxPart, align 4, !tbaa !52
  %mul166 = mul nsw i32 %58, %div
  %div168 = sdiv i32 %mul166, %57
  %cmp171742 = icmp sgt i32 %sub162, 0
  br i1 %cmp171742, label %for.body172.lr.ph, label %for.end983

for.body172.lr.ph:                                ; preds = %cond.end157
  %all_exclusions.i = getelementptr inbounds %class.Molecule* %5, i64 0, i32 1
  %sub.ptr.rhs.cast544 = ptrtoint i32* %cond125602604614 to i64
  %sub.ptr.rhs.cast604 = ptrtoint i32* %cond147616 to i64
  %sub.ptr.rhs.cast611 = ptrtoint i32* %cond158 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %cond30845848 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i32* %cond114598600606612 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc981, %for.body172.lr.ph
  %exclChecksum.0757 = phi i32 [ 0, %for.body172.lr.ph ], [ %exclChecksum.10, %for.inc981 ]
  %fullElectVirial_zz.0750 = phi double [ 0.000000e+00, %for.body172.lr.ph ], [ %fullElectVirial_zz.4, %for.inc981 ]
  %i.0749 = phi i32 [ 0, %for.body172.lr.ph ], [ %inc982, %for.inc981 ]
  %j_hgroup.0748 = phi i32 [ 0, %for.body172.lr.ph ], [ %j_hgroup.3, %for.inc981 ]
  %g_lower.0747 = phi i32 [ 0, %for.body172.lr.ph ], [ %g_lower.4, %for.inc981 ]
  %fixg_lower.0746 = phi i32 [ 0, %for.body172.lr.ph ], [ %fixg_lower.4, %for.inc981 ]
  %pairlistindex.0745 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistindex.3, %for.inc981 ]
  %pairlistoffset.0744 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairlistoffset.2, %for.inc981 ]
  %pairCount.0743 = phi i32 [ 0, %for.body172.lr.ph ], [ %pairCount.3, %for.inc981 ]
  %59 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %266, %for.inc981 ]
  %60 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %267, %for.inc981 ]
  %61 = phi <2 x double> [ zeroinitializer, %for.body172.lr.ph ], [ %268, %for.inc981 ]
  %idxprom173 = sext i32 %i.0749 to i64
  %id = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 2
  %62 = bitcast [4 x i8]* %id to i32*
  %bf.load175 = load i32* %62, align 4
  %bf.clear176 = and i32 %bf.load175, 4194303
  %idxprom.i618 = zext i32 %bf.clear176 to i64
  %63 = load %class.ExclusionCheck** %all_exclusions.i, align 8, !tbaa !53
  %min = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i618, i32 0
  %64 = load i32* %min, align 4, !tbaa !55
  %max = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i618, i32 1
  %65 = load i32* %max, align 4, !tbaa !57
  %flags = getelementptr inbounds %class.ExclusionCheck* %63, i64 %idxprom.i618, i32 2
  %66 = load i8** %flags, align 8, !tbaa !58
  %idx.ext = sext i32 %64 to i64
  %x = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 0
  %67 = load double* %x, align 8, !tbaa !59
  %y = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 1
  %68 = load double* %y, align 8, !tbaa !61
  %z = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 0, i32 2
  %69 = load double* %z, align 8, !tbaa !62
  %arrayidx181 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173
  %70 = and i32 %bf.load175, 62914560
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %if.else, label %if.then193

if.then193:                                       ; preds = %for.body172
  %bf.lshr196 = lshr i32 %bf.load175, 22
  %bf.clear197 = and i32 %bf.lshr196, 7
  %tobool198 = icmp eq i32 %bf.clear197, 0
  br i1 %tobool198, label %if.end219, label %if.then199

if.then199:                                       ; preds = %if.then193
  %sub205 = sub nsw i32 %sub162, %i.0749
  %mul206 = mul nsw i32 %bf.clear197, %sub205
  %add207 = add nsw i32 %mul206, %pairCount.0743
  %sub208 = add nsw i32 %bf.clear197, -1
  %mul209 = mul nsw i32 %sub208, %bf.clear197
  %div210.neg = sdiv i32 %mul209, -2
  %sub211 = add i32 %add207, %div210.neg
  %cmp212 = icmp sge i32 %pairCount.0743, %div165
  %cmp214 = icmp slt i32 %pairCount.0743, %div168
  %or.cond584 = and i1 %cmp212, %cmp214
  br i1 %or.cond584, label %if.end219, label %if.then215

if.then215:                                       ; preds = %if.then199
  %add217 = add nsw i32 %sub208, %i.0749
  br label %for.inc981

if.end219:                                        ; preds = %if.then199, %if.then193
  %pairCount.1 = phi i32 [ %pairCount.0743, %if.then193 ], [ %sub211, %if.then199 ]
  %72 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool220 = icmp eq i32 %72, 0
  br i1 %tobool220, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end219
  %bf.clear224 = and i32 %bf.load175, 134217728
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end219
  %73 = phi i1 [ false, %if.end219 ], [ %tobool225, %land.rhs ]
  br i1 %tobool198, label %if.end254, label %if.then231

if.then231:                                       ; preds = %land.end
  %add236 = add nsw i32 %bf.clear197, %i.0749
  %cmp237620 = icmp slt i32 %g_lower.0747, %g.0.lcssa851
  br i1 %cmp237620, label %land.rhs238.lr.ph, label %while.cond244.loopexit

land.rhs238.lr.ph:                                ; preds = %if.then231
  %74 = sext i32 %g_lower.0747 to i64
  br label %land.rhs238

while.cond:                                       ; preds = %land.rhs238
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp237 = icmp slt i32 %75, %g.0.lcssa851
  br i1 %cmp237, label %land.rhs238, label %while.cond244.loopexit

land.rhs238:                                      ; preds = %while.cond, %land.rhs238.lr.ph
  %indvars.iv = phi i64 [ %74, %land.rhs238.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %g_lower.1621 = phi i32 [ %g_lower.0747, %land.rhs238.lr.ph ], [ %inc243, %while.cond ]
  %arrayidx240 = getelementptr inbounds i32* %cond590592843849, i64 %indvars.iv
  %76 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp slt i32 %76, %add236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %inc243 = add nsw i32 %g_lower.1621, 1
  br i1 %cmp241, label %while.cond, label %while.cond244.loopexit

while.cond244.loopexit:                           ; preds = %land.rhs238, %while.cond, %if.then231
  %g_lower.1.lcssa = phi i32 [ %g_lower.0747, %if.then231 ], [ %inc243, %while.cond ], [ %g_lower.1621, %land.rhs238 ]
  %cmp245622 = icmp slt i32 %fixg_lower.0746, %fixg.2597
  br i1 %cmp245622, label %land.rhs246.lr.ph, label %if.end254

land.rhs246.lr.ph:                                ; preds = %while.cond244.loopexit
  %77 = sext i32 %fixg_lower.0746 to i64
  br label %land.rhs246

while.cond244:                                    ; preds = %land.rhs246
  %78 = trunc i64 %indvars.iv.next781 to i32
  %cmp245 = icmp slt i32 %78, %fixg.2597
  br i1 %cmp245, label %land.rhs246, label %if.end254

land.rhs246:                                      ; preds = %while.cond244, %land.rhs246.lr.ph
  %indvars.iv780 = phi i64 [ %77, %land.rhs246.lr.ph ], [ %indvars.iv.next781, %while.cond244 ]
  %fixg_lower.1623 = phi i32 [ %fixg_lower.0746, %land.rhs246.lr.ph ], [ %inc252, %while.cond244 ]
  %arrayidx248 = getelementptr inbounds i32* %cond19594841850, i64 %indvars.iv780
  %79 = load i32* %arrayidx248, align 4, !tbaa !11
  %cmp249 = icmp slt i32 %79, %add236
  %indvars.iv.next781 = add nsw i64 %indvars.iv780, 1
  %inc252 = add nsw i32 %fixg_lower.1623, 1
  br i1 %cmp249, label %while.cond244, label %if.end254

if.end254:                                        ; preds = %land.rhs246, %while.cond244, %while.cond244.loopexit, %land.end
  %fixg_lower.2 = phi i32 [ %fixg_lower.0746, %land.end ], [ %fixg_lower.0746, %while.cond244.loopexit ], [ %fixg_lower.1623, %land.rhs246 ], [ %inc252, %while.cond244 ]
  %g_lower.2 = phi i32 [ %g_lower.0747, %land.end ], [ %g_lower.1.lcssa, %while.cond244.loopexit ], [ %g_lower.1.lcssa, %while.cond244 ], [ %g_lower.1.lcssa, %land.rhs246 ]
  %j_hgroup.1 = phi i32 [ %j_hgroup.0748, %land.end ], [ %add236, %while.cond244.loopexit ], [ %add236, %while.cond244 ], [ %add236, %land.rhs246 ]
  %j.1625 = add nsw i32 %i.0749, 1
  %cmp257626 = icmp slt i32 %j.1625, %j_hgroup.1
  br i1 %cmp257626, label %for.body258.lr.ph, label %for.end264

for.body258.lr.ph:                                ; preds = %if.end254
  %80 = add i32 %j_hgroup.1, -1
  %81 = sub i32 %80, %i.0749
  %82 = add i32 %j_hgroup.1, -2
  %83 = sub i32 %82, %i.0749
  %84 = zext i32 %83 to i64
  %85 = add i64 %84, 1
  %end.idx = add i64 %84, 1
  %n.vec = and i64 %85, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end = add i32 %cast.crd, %j.1625
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body258.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body258.lr.ph ]
  %86 = trunc i64 %index to i32
  %offset.idx = add i32 %j.1625, %86
  %broadcast.splatinsert886 = insertelement <4 x i32> undef, i32 %offset.idx, i32 0
  %broadcast.splat887 = shufflevector <4 x i32> %broadcast.splatinsert886, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction888 = add <4 x i32> %broadcast.splat887, <i32 0, i32 1, i32 2, i32 3>
  %induction889 = add <4 x i32> %broadcast.splat887, <i32 4, i32 5, i32 6, i32 7>
  %87 = getelementptr inbounds i32* %cond114598600606612, i64 %index
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %induction888, <4 x i32>* %88, align 4
  %.sum892 = or i64 %index, 4
  %89 = getelementptr i32* %cond114598600606612, i64 %.sum892
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %induction889, <4 x i32>* %90, align 4
  %index.next = add i64 %index, 8
  %91 = icmp eq i64 %index.next, %n.vec
  br i1 %91, label %middle.block, label %vector.body, !llvm.loop !113

middle.block:                                     ; preds = %vector.body, %for.body258.lr.ph
  %resume.val = phi i64 [ 0, %for.body258.lr.ph ], [ %n.vec, %vector.body ]
  %resume.val884 = phi i32 [ %j.1625, %for.body258.lr.ph ], [ %ind.end, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.cond256.for.end264_crit_edge, label %for.body258

for.body258:                                      ; preds = %for.body258, %middle.block
  %indvars.iv782 = phi i64 [ %indvars.iv.next783, %for.body258 ], [ %resume.val, %middle.block ]
  %j.1628 = phi i32 [ %j.1, %for.body258 ], [ %resume.val884, %middle.block ]
  %indvars.iv.next783 = add nuw nsw i64 %indvars.iv782, 1
  %arrayidx261 = getelementptr inbounds i32* %cond114598600606612, i64 %indvars.iv782
  store i32 %j.1628, i32* %arrayidx261, align 4, !tbaa !11
  %j.1 = add nsw i32 %j.1628, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next783 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %81
  br i1 %exitcond, label %for.cond256.for.end264_crit_edge, label %for.body258, !llvm.loop !114

for.cond256.for.end264_crit_edge:                 ; preds = %for.body258, %middle.block
  %phitmp = sext i32 %81 to i64
  br label %for.end264

for.end264:                                       ; preds = %for.cond256.for.end264_crit_edge, %if.end254
  %pairlistindex.1.lcssa = phi i64 [ %phitmp, %for.cond256.for.end264_crit_edge ], [ 0, %if.end254 ]
  %add.ptr266 = getelementptr inbounds i32* %cond114598600606612, i64 %pairlistindex.1.lcssa
  %cond271 = select i1 %73, i32* %cond19594841850, i32* %cond590592843849
  %cond276 = select i1 %73, i32 %fixg_lower.2, i32 %g_lower.2
  %cond281 = select i1 %73, i32 %fixg.2597, i32 %g.0.lcssa851
  %cmp282 = icmp slt i32 %cond276, %cond281
  br i1 %cmp282, label %if.then283, label %if.end365

if.then283:                                       ; preds = %for.end264
  %idxprom284 = sext i32 %cond276 to i64
  %arrayidx285 = getelementptr inbounds i32* %cond271, i64 %idxprom284
  %92 = load i32* %arrayidx285, align 4, !tbaa !11
  %idxprom286 = sext i32 %92 to i64
  %x289 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 0
  %93 = load double* %x289, align 8, !tbaa !59
  %y293 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 1
  %94 = load double* %y293, align 8, !tbaa !61
  %z297 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom286, i32 0, i32 2
  %95 = load double* %z297, align 8, !tbaa !62
  br label %while.cond298.outer

while.cond298.outer:                              ; preds = %if.then325, %if.then283
  %p_j_z.0.ph = phi double [ %95, %if.then283 ], [ %101, %if.then325 ]
  %p_j_y.0.ph = phi double [ %94, %if.then283 ], [ %100, %if.then325 ]
  %p_j_x.0.ph = phi double [ %93, %if.then283 ], [ %99, %if.then325 ]
  %j2.0.ph = phi i32 [ %92, %if.then283 ], [ %98, %if.then325 ]
  %gli.0.ph = phi i32* [ %cond30845848, %if.then283 ], [ %incdec.ptr, %if.then325 ]
  %g.3.ph = phi i32 [ %cond276, %if.then283 ], [ %inc301, %if.then325 ]
  %96 = sext i32 %g.3.ph to i64
  br label %while.cond298

while.cond298:                                    ; preds = %while.body300, %while.cond298.outer
  %indvars.iv788 = phi i64 [ %96, %while.cond298.outer ], [ %indvars.iv.next789, %while.body300 ]
  %p_j_z.0 = phi double [ %p_j_z.0.ph, %while.cond298.outer ], [ %101, %while.body300 ]
  %p_j_y.0 = phi double [ %p_j_y.0.ph, %while.cond298.outer ], [ %100, %while.body300 ]
  %p_j_x.0 = phi double [ %p_j_x.0.ph, %while.cond298.outer ], [ %99, %while.body300 ]
  %j2.0 = phi i32 [ %j2.0.ph, %while.cond298.outer ], [ %98, %while.body300 ]
  %g.3 = phi i32 [ %g.3.ph, %while.cond298.outer ], [ %inc301, %while.body300 ]
  %97 = trunc i64 %indvars.iv788 to i32
  %cmp299 = icmp slt i32 %97, %cond281
  br i1 %cmp299, label %while.body300, label %while.end327

while.body300:                                    ; preds = %while.cond298
  %indvars.iv.next789 = add nsw i64 %indvars.iv788, 1
  %inc301 = add nsw i32 %g.3, 1
  %arrayidx303 = getelementptr inbounds i32* %cond271, i64 %indvars.iv.next789
  %98 = load i32* %arrayidx303, align 4, !tbaa !11
  %sub304 = fsub double %67, %p_j_x.0
  %mul305 = fmul double %sub304, %sub304
  %idxprom306 = sext i32 %98 to i64
  %x309 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 0
  %99 = load double* %x309, align 8, !tbaa !59
  %sub310 = fsub double %68, %p_j_y.0
  %mul311 = fmul double %sub310, %sub310
  %add312 = fadd double %mul311, %mul305
  %y316 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 1
  %100 = load double* %y316, align 8, !tbaa !61
  %sub317 = fsub double %69, %p_j_z.0
  %mul318 = fmul double %sub317, %sub317
  %add319 = fadd double %mul318, %add312
  %z323 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom306, i32 0, i32 2
  %101 = load double* %z323, align 8, !tbaa !62
  %cmp324 = fcmp ugt double %add319, %3
  br i1 %cmp324, label %while.cond298, label %if.then325

if.then325:                                       ; preds = %while.body300
  store i32 %j2.0, i32* %gli.0.ph, align 4, !tbaa !11
  %incdec.ptr = getelementptr inbounds i32* %gli.0.ph, i64 1
  br label %while.cond298.outer

while.end327:                                     ; preds = %while.cond298
  %sub.ptr.lhs.cast = ptrtoint i32* %gli.0.ph to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div581 = lshr exact i64 %sub.ptr.sub, 2
  %conv328 = trunc i64 %sub.ptr.div581 to i32
  %cmp330634 = icmp sgt i32 %conv328, 0
  br i1 %cmp330634, label %for.body331.lr.ph, label %if.end365

for.body331.lr.ph:                                ; preds = %while.end327
  %102 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %103 = lshr i64 %102, 2
  %104 = trunc i64 %103 to i32
  br label %for.body331

for.body331:                                      ; preds = %cond.end351, %for.body331.lr.ph
  %indvars.iv790 = phi i64 [ 0, %for.body331.lr.ph ], [ %indvars.iv.next791, %cond.end351 ]
  %pli.0636 = phi i32* [ %add.ptr266, %for.body331.lr.ph ], [ %add.ptr361, %cond.end351 ]
  %arrayidx334 = getelementptr inbounds i32* %cond30845848, i64 %indvars.iv790
  %105 = load i32* %arrayidx334, align 4, !tbaa !11
  %idxprom336 = sext i32 %105 to i64
  %nonbondedGroupIsAtom338 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom336, i32 2
  %106 = bitcast [4 x i8]* %nonbondedGroupIsAtom338 to i32*
  %bf.load339 = load i32* %106, align 4
  %bf.clear341 = and i32 %bf.load339, 33554432
  %tobool342 = icmp eq i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.false344, label %cond.end351

cond.false344:                                    ; preds = %for.body331
  %bf.lshr349 = lshr i32 %bf.load339, 22
  %bf.clear350 = and i32 %bf.lshr349, 7
  %phitmp582 = zext i32 %bf.clear350 to i64
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false344, %for.body331
  %cond352 = phi i64 [ %phitmp582, %cond.false344 ], [ 1, %for.body331 ]
  store i32 %105, i32* %pli.0636, align 4, !tbaa !11
  %add354 = add nsw i32 %105, 1
  %arrayidx355 = getelementptr inbounds i32* %pli.0636, i64 1
  store i32 %add354, i32* %arrayidx355, align 4, !tbaa !11
  %add356 = add nsw i32 %105, 2
  %arrayidx357 = getelementptr inbounds i32* %pli.0636, i64 2
  store i32 %add356, i32* %arrayidx357, align 4, !tbaa !11
  %add358 = add nsw i32 %105, 3
  %arrayidx359 = getelementptr inbounds i32* %pli.0636, i64 3
  store i32 %add358, i32* %arrayidx359, align 4, !tbaa !11
  %add.ptr361 = getelementptr inbounds i32* %pli.0636, i64 %cond352
  %indvars.iv.next791 = add nuw nsw i64 %indvars.iv790, 1
  %lftr.wideiv792 = trunc i64 %indvars.iv.next791 to i32
  %exitcond793 = icmp eq i32 %lftr.wideiv792, %104
  br i1 %exitcond793, label %if.end365, label %for.body331

if.end365:                                        ; preds = %cond.end351, %while.end327, %for.end264
  %pli.1 = phi i32* [ %add.ptr266, %for.end264 ], [ %add.ptr266, %while.end327 ], [ %add.ptr361, %cond.end351 ]
  %sub.ptr.lhs.cast366 = ptrtoint i32* %pli.1 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %sub.ptr.div369578 = lshr exact i64 %sub.ptr.sub368, 2
  %conv370 = trunc i64 %sub.ptr.div369578 to i32
  %tobool371 = icmp eq i32 %conv370, 0
  br i1 %tobool371, label %if.end380, label %if.then372

if.then372:                                       ; preds = %if.end365
  %sub373 = shl i64 %sub.ptr.sub368, 30
  %sext579 = add i64 %sub373, -4294967296
  %idxprom374 = ashr exact i64 %sext579, 32
  %arrayidx375 = getelementptr inbounds i32* %cond114598600606612, i64 %idxprom374
  %107 = load i32* %arrayidx375, align 4, !tbaa !11
  %idxprom376 = ashr exact i64 %sub373, 32
  %arrayidx377 = getelementptr inbounds i32* %cond114598600606612, i64 %idxprom376
  store i32 %107, i32* %arrayidx377, align 4, !tbaa !11
  br label %if.end380

if.else:                                          ; preds = %for.body172
  %inc379 = add nsw i32 %pairlistoffset.0744, 1
  br label %if.end380

if.end380:                                        ; preds = %if.else, %if.then372, %if.end365
  %pairCount.2 = phi i32 [ %pairCount.1, %if.then372 ], [ %pairCount.1, %if.end365 ], [ %pairCount.0743, %if.else ]
  %pairlistoffset.1 = phi i32 [ 0, %if.then372 ], [ 0, %if.end365 ], [ %inc379, %if.else ]
  %pairlistindex.2 = phi i32 [ %conv370, %if.then372 ], [ 0, %if.end365 ], [ %pairlistindex.0745, %if.else ]
  %fixg_lower.3 = phi i32 [ %fixg_lower.2, %if.then372 ], [ %fixg_lower.2, %if.end365 ], [ %fixg_lower.0746, %if.else ]
  %g_lower.3 = phi i32 [ %g_lower.2, %if.then372 ], [ %g_lower.2, %if.end365 ], [ %g_lower.0747, %if.else ]
  %j_hgroup.2 = phi i32 [ %j_hgroup.1, %if.then372 ], [ %j_hgroup.1, %if.end365 ], [ %j_hgroup.0748, %if.else ]
  %108 = load i32* @_ZN20ComputeNonbondedUtil12fixedAtomsOnE, align 4, !tbaa !11
  %tobool381 = icmp eq i32 %108, 0
  br i1 %tobool381, label %land.end387.thread, label %land.end387

land.end387.thread:                               ; preds = %if.end380
  %charge853 = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %109 = load float* %charge853, align 4, !tbaa !63
  %conv389854 = fpext float %109 to double
  %mul390855 = fmul double %conv389854, 3.320636e+02
  %mul391856 = fmul double %8, %mul390855
  %mul392857 = fmul double %4, %mul391856
  br label %if.else463

land.end387:                                      ; preds = %if.end380
  %bf.load383 = load i32* %62, align 4
  %bf.clear385 = and i32 %bf.load383, 67108864
  %tobool386 = icmp eq i32 %bf.clear385, 0
  %charge = getelementptr inbounds %struct.CompAtom* %14, i64 %idxprom173, i32 1
  %110 = load float* %charge, align 4, !tbaa !63
  %conv389 = fpext float %110 to double
  %mul390 = fmul double %conv389, 3.320636e+02
  %mul391 = fmul double %8, %mul390
  %mul392 = fmul double %4, %mul391
  br i1 %tobool386, label %if.else463, label %for.cond402.preheader

for.cond402.preheader:                            ; preds = %land.end387
  %cmp403662 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %cmp403662, label %for.body404.lr.ph, label %if.end542

for.body404.lr.ph:                                ; preds = %for.cond402.preheader
  %111 = sext i32 %pairlistoffset.1 to i64
  br label %for.body404

for.body404:                                      ; preds = %for.inc460, %for.body404.lr.ph
  %indvars.iv803 = phi i64 [ %111, %for.body404.lr.ph ], [ %indvars.iv.next804, %for.inc460 ]
  %exclChecksum.1666 = phi i32 [ %exclChecksum.0757, %for.body404.lr.ph ], [ %exclChecksum.3, %for.inc460 ]
  %pli399.0665 = phi i32* [ %cond125602604614, %for.body404.lr.ph ], [ %pli399.1, %for.inc460 ]
  %plin.0664 = phi i32* [ %cond136608610, %for.body404.lr.ph ], [ %plin.1, %for.inc460 ]
  %arrayidx406 = getelementptr inbounds i32* %cond114598600606612, i64 %indvars.iv803
  %112 = load i32* %arrayidx406, align 4, !tbaa !11
  %idxprom408 = sext i32 %112 to i64
  %x411 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 0
  %113 = load double* %x411, align 8, !tbaa !59
  %sub413 = fsub double %67, %113
  %mul414 = fmul double %sub413, %sub413
  %y419 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 1
  %114 = load double* %y419, align 8, !tbaa !61
  %sub421 = fsub double %68, %114
  %mul422 = fmul double %sub421, %sub421
  %add423 = fadd double %mul414, %mul422
  %z428 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 0, i32 2
  %115 = load double* %z428, align 8, !tbaa !62
  %sub429 = fsub double %69, %115
  %mul430 = fmul double %sub429, %sub429
  %add431 = fadd double %add423, %mul430
  %atomFixed434 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom408, i32 2
  %116 = bitcast [4 x i8]* %atomFixed434 to i32*
  %bf.load435 = load i32* %116, align 4
  %bf.clear437 = and i32 %bf.load435, 67108864
  %tobool438 = icmp ne i32 %bf.clear437, 0
  %cmp439 = fcmp ugt double %add431, %2
  %or.cond585 = or i1 %tobool438, %cmp439
  br i1 %or.cond585, label %for.inc460, label %land.lhs.true440

land.lhs.true440:                                 ; preds = %for.body404
  %cmp441 = fcmp ugt double %add431, %10
  br i1 %cmp441, label %if.then445, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %land.lhs.true440
  %inc443 = add nsw i32 %exclChecksum.1666, 1
  %tobool444 = icmp eq i32 %inc443, 0
  br i1 %tobool444, label %if.then445, label %for.inc460

if.then445:                                       ; preds = %land.lhs.true442, %land.lhs.true440
  %exclChecksum.2 = phi i32 [ 0, %land.lhs.true442 ], [ %exclChecksum.1666, %land.lhs.true440 ]
  %bf.clear450 = and i32 %bf.load435, 4194303
  %cmp451 = icmp slt i32 %bf.clear450, %64
  %cmp453 = icmp sgt i32 %bf.clear450, %65
  %or.cond586 = or i1 %cmp451, %cmp453
  br i1 %or.cond586, label %if.else456, label %if.then454

if.then454:                                       ; preds = %if.then445
  %incdec.ptr455 = getelementptr inbounds i32* %pli399.0665, i64 1
  store i32 %112, i32* %pli399.0665, align 4, !tbaa !11
  br label %for.inc460

if.else456:                                       ; preds = %if.then445
  %incdec.ptr457 = getelementptr inbounds i32* %plin.0664, i64 1
  store i32 %112, i32* %plin.0664, align 4, !tbaa !11
  br label %for.inc460

for.inc460:                                       ; preds = %if.else456, %if.then454, %land.lhs.true442, %for.body404
  %plin.1 = phi i32* [ %plin.0664, %for.body404 ], [ %plin.0664, %land.lhs.true442 ], [ %plin.0664, %if.then454 ], [ %incdec.ptr457, %if.else456 ]
  %pli399.1 = phi i32* [ %pli399.0665, %for.body404 ], [ %pli399.0665, %land.lhs.true442 ], [ %incdec.ptr455, %if.then454 ], [ %pli399.0665, %if.else456 ]
  %exclChecksum.3 = phi i32 [ %exclChecksum.1666, %for.body404 ], [ %inc443, %land.lhs.true442 ], [ %exclChecksum.2, %if.then454 ], [ %exclChecksum.2, %if.else456 ]
  %indvars.iv.next804 = add nsw i64 %indvars.iv803, 1
  %lftr.wideiv805 = trunc i64 %indvars.iv.next804 to i32
  %exitcond806 = icmp eq i32 %lftr.wideiv805, %pairlistindex.2
  br i1 %exitcond806, label %if.end542, label %for.body404

if.else463:                                       ; preds = %land.end387, %land.end387.thread
  %mul392859 = phi double [ %mul392857, %land.end387.thread ], [ %mul392, %land.end387 ]
  %cmp465 = icmp slt i32 %pairlistoffset.1, %pairlistindex.2
  br i1 %cmp465, label %if.then466, label %if.end542

if.then466:                                       ; preds = %if.else463
  %idxprom468 = sext i32 %pairlistoffset.1 to i64
  %arrayidx469 = getelementptr inbounds i32* %cond114598600606612, i64 %idxprom468
  %117 = load i32* %arrayidx469, align 4, !tbaa !11
  %idxprom471 = sext i32 %117 to i64
  %x474 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 0
  %118 = load double* %x474, align 8, !tbaa !59
  %y479 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 1
  %119 = load double* %y479, align 8, !tbaa !61
  %z484 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471, i32 0, i32 2
  %120 = load double* %z484, align 8, !tbaa !62
  br label %while.cond491.outer

while.cond491.outer:                              ; preds = %if.else531, %if.then466
  %idxprom471.pn.ph = phi i64 [ %idxprom471, %if.then466 ], [ %idxprom500, %if.else531 ]
  %p_j_z480.0.ph = phi double [ %120, %if.then466 ], [ %126, %if.else531 ]
  %p_j_y475.0.ph = phi double [ %119, %if.then466 ], [ %125, %if.else531 ]
  %p_j_x470.0.ph = phi double [ %118, %if.then466 ], [ %124, %if.else531 ]
  %j2467.0.ph = phi i32 [ %117, %if.then466 ], [ %123, %if.else531 ]
  %k464.0.ph = phi i32 [ %pairlistoffset.1, %if.then466 ], [ %inc494, %if.else531 ]
  %plin.2.ph = phi i32* [ %cond136608610, %if.then466 ], [ %incdec.ptr532, %if.else531 ]
  %pli399.2.ph = phi i32* [ %cond125602604614, %if.then466 ], [ %pli399.2.ph645, %if.else531 ]
  %exclChecksum.4.ph = phi i32 [ %exclChecksum.0757, %if.then466 ], [ %exclChecksum.5, %if.else531 ]
  br label %while.cond491.outer638

while.cond491.outer638:                           ; preds = %if.then529, %while.cond491.outer
  %idxprom471.pn.ph639 = phi i64 [ %idxprom500, %if.then529 ], [ %idxprom471.pn.ph, %while.cond491.outer ]
  %p_j_z480.0.ph640 = phi double [ %126, %if.then529 ], [ %p_j_z480.0.ph, %while.cond491.outer ]
  %p_j_y475.0.ph641 = phi double [ %125, %if.then529 ], [ %p_j_y475.0.ph, %while.cond491.outer ]
  %p_j_x470.0.ph642 = phi double [ %124, %if.then529 ], [ %p_j_x470.0.ph, %while.cond491.outer ]
  %j2467.0.ph643 = phi i32 [ %123, %if.then529 ], [ %j2467.0.ph, %while.cond491.outer ]
  %k464.0.ph644 = phi i32 [ %inc494, %if.then529 ], [ %k464.0.ph, %while.cond491.outer ]
  %pli399.2.ph645 = phi i32* [ %incdec.ptr530, %if.then529 ], [ %pli399.2.ph, %while.cond491.outer ]
  %exclChecksum.4.ph646 = phi i32 [ %exclChecksum.5, %if.then529 ], [ %exclChecksum.4.ph, %while.cond491.outer ]
  br label %while.cond491.outer647

while.cond491.outer647:                           ; preds = %land.lhs.true522, %while.cond491.outer638
  %idxprom471.pn.ph648 = phi i64 [ %idxprom500, %land.lhs.true522 ], [ %idxprom471.pn.ph639, %while.cond491.outer638 ]
  %p_j_z480.0.ph649 = phi double [ %126, %land.lhs.true522 ], [ %p_j_z480.0.ph640, %while.cond491.outer638 ]
  %p_j_y475.0.ph650 = phi double [ %125, %land.lhs.true522 ], [ %p_j_y475.0.ph641, %while.cond491.outer638 ]
  %p_j_x470.0.ph651 = phi double [ %124, %land.lhs.true522 ], [ %p_j_x470.0.ph642, %while.cond491.outer638 ]
  %j2467.0.ph652 = phi i32 [ %123, %land.lhs.true522 ], [ %j2467.0.ph643, %while.cond491.outer638 ]
  %k464.0.ph653 = phi i32 [ %inc494, %land.lhs.true522 ], [ %k464.0.ph644, %while.cond491.outer638 ]
  %exclChecksum.4.ph654 = phi i32 [ %inc523, %land.lhs.true522 ], [ %exclChecksum.4.ph646, %while.cond491.outer638 ]
  %121 = sext i32 %k464.0.ph653 to i64
  br label %while.cond491

while.cond491:                                    ; preds = %while.body493, %while.cond491.outer647
  %indvars.iv799 = phi i64 [ %121, %while.cond491.outer647 ], [ %indvars.iv.next800, %while.body493 ]
  %idxprom471.pn = phi i64 [ %idxprom471.pn.ph648, %while.cond491.outer647 ], [ %idxprom500, %while.body493 ]
  %p_j_z480.0 = phi double [ %p_j_z480.0.ph649, %while.cond491.outer647 ], [ %126, %while.body493 ]
  %p_j_y475.0 = phi double [ %p_j_y475.0.ph650, %while.cond491.outer647 ], [ %125, %while.body493 ]
  %p_j_x470.0 = phi double [ %p_j_x470.0.ph651, %while.cond491.outer647 ], [ %124, %while.body493 ]
  %j2467.0 = phi i32 [ %j2467.0.ph652, %while.cond491.outer647 ], [ %123, %while.body493 ]
  %k464.0 = phi i32 [ %k464.0.ph653, %while.cond491.outer647 ], [ %inc494, %while.body493 ]
  %122 = trunc i64 %indvars.iv799 to i32
  %cmp492 = icmp slt i32 %122, %pairlistindex.2
  br i1 %cmp492, label %while.body493, label %if.end542

while.body493:                                    ; preds = %while.cond491
  %atom2485.0.in.in.in = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom471.pn, i32 2
  %atom2485.0.in.in = bitcast [4 x i8]* %atom2485.0.in.in.in to i32*
  %atom2485.0.in = load i32* %atom2485.0.in.in, align 4
  %atom2485.0 = and i32 %atom2485.0.in, 4194303
  %indvars.iv.next800 = add nsw i64 %indvars.iv799, 1
  %inc494 = add nsw i32 %k464.0, 1
  %arrayidx496 = getelementptr inbounds i32* %cond114598600606612, i64 %indvars.iv.next800
  %123 = load i32* %arrayidx496, align 4, !tbaa !11
  %sub498 = fsub double %67, %p_j_x470.0
  %mul499 = fmul double %sub498, %sub498
  %idxprom500 = sext i32 %123 to i64
  %x503 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 0
  %124 = load double* %x503, align 8, !tbaa !59
  %sub505 = fsub double %68, %p_j_y475.0
  %mul506 = fmul double %sub505, %sub505
  %add507 = fadd double %mul506, %mul499
  %y511 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 1
  %125 = load double* %y511, align 8, !tbaa !61
  %sub512 = fsub double %69, %p_j_z480.0
  %mul513 = fmul double %sub512, %sub512
  %add514 = fadd double %mul513, %add507
  %z518 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom500, i32 0, i32 2
  %126 = load double* %z518, align 8, !tbaa !62
  %cmp519 = fcmp ugt double %add514, %2
  br i1 %cmp519, label %while.cond491, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %while.body493
  %cmp521 = fcmp ugt double %add514, %10
  br i1 %cmp521, label %if.then525, label %land.lhs.true522

land.lhs.true522:                                 ; preds = %land.lhs.true520
  %inc523 = add nsw i32 %exclChecksum.4.ph654, 1
  %tobool524 = icmp eq i32 %inc523, 0
  br i1 %tobool524, label %if.then525, label %while.cond491.outer647

if.then525:                                       ; preds = %land.lhs.true522, %land.lhs.true520
  %exclChecksum.5 = phi i32 [ 0, %land.lhs.true522 ], [ %exclChecksum.4.ph654, %land.lhs.true520 ]
  %cmp526 = icmp slt i32 %atom2485.0, %64
  %cmp528 = icmp sgt i32 %atom2485.0, %65
  %or.cond587 = or i1 %cmp526, %cmp528
  br i1 %or.cond587, label %if.else531, label %if.then529

if.then529:                                       ; preds = %if.then525
  %incdec.ptr530 = getelementptr inbounds i32* %pli399.2.ph645, i64 1
  store i32 %j2467.0, i32* %pli399.2.ph645, align 4, !tbaa !11
  br label %while.cond491.outer638

if.else531:                                       ; preds = %if.then525
  %incdec.ptr532 = getelementptr inbounds i32* %plin.2.ph, i64 1
  store i32 %j2467.0, i32* %plin.2.ph, align 4, !tbaa !11
  br label %while.cond491.outer

if.end542:                                        ; preds = %while.cond491, %if.else463, %for.inc460, %for.cond402.preheader
  %mul392858 = phi double [ %mul392859, %if.else463 ], [ %mul392, %for.cond402.preheader ], [ %mul392, %for.inc460 ], [ %mul392859, %while.cond491 ]
  %plin.4 = phi i32* [ %cond136608610, %if.else463 ], [ %cond136608610, %for.cond402.preheader ], [ %plin.1, %for.inc460 ], [ %plin.2.ph, %while.cond491 ]
  %pli399.4 = phi i32* [ %cond125602604614, %if.else463 ], [ %cond125602604614, %for.cond402.preheader ], [ %pli399.1, %for.inc460 ], [ %pli399.2.ph645, %while.cond491 ]
  %exclChecksum.7 = phi i32 [ %exclChecksum.0757, %if.else463 ], [ %exclChecksum.0757, %for.cond402.preheader ], [ %exclChecksum.3, %for.inc460 ], [ %exclChecksum.4.ph654, %while.cond491 ]
  %sub.ptr.lhs.cast543 = ptrtoint i32* %pli399.4 to i64
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %sub.ptr.div546550 = lshr exact i64 %sub.ptr.sub545, 2
  %conv547 = trunc i64 %sub.ptr.div546550 to i32
  %tobool548 = icmp eq i32 %conv547, 0
  br i1 %tobool548, label %for.cond557.preheader, label %if.then549

if.then549:                                       ; preds = %if.end542
  %sub550 = shl i64 %sub.ptr.sub545, 30
  %sext576 = add i64 %sub550, -4294967296
  %idxprom551 = ashr exact i64 %sext576, 32
  %arrayidx552 = getelementptr inbounds i32* %cond125602604614, i64 %idxprom551
  %127 = load i32* %arrayidx552, align 4, !tbaa !11
  %idxprom553 = ashr exact i64 %sub550, 32
  %arrayidx554 = getelementptr inbounds i32* %cond125602604614, i64 %idxprom553
  store i32 %127, i32* %arrayidx554, align 4, !tbaa !11
  br label %for.cond557.preheader

for.cond557.preheader:                            ; preds = %if.then549, %if.end542
  %cmp558670 = icmp ult i32* %cond136608610, %plin.4
  br i1 %cmp558670, label %land.lhs.true559, label %for.cond566.loopexit

land.lhs.true559:                                 ; preds = %for.body561, %for.cond557.preheader
  %exclChecksum.8673 = phi i32 [ %dec, %for.body561 ], [ %exclChecksum.7, %for.cond557.preheader ]
  %plix.0672 = phi i32* [ %incdec.ptr562, %for.body561 ], [ %cond147616, %for.cond557.preheader ]
  %pln.0671 = phi i32* [ %incdec.ptr564, %for.body561 ], [ %cond136608610, %for.cond557.preheader ]
  %128 = load i32* %pln.0671, align 4, !tbaa !11
  %cmp560 = icmp slt i32 %128, %j_hgroup.2
  br i1 %cmp560, label %for.body561, label %for.cond566.loopexit

for.body561:                                      ; preds = %land.lhs.true559
  %incdec.ptr562 = getelementptr inbounds i32* %plix.0672, i64 1
  store i32 %128, i32* %plix.0672, align 4, !tbaa !11
  %dec = add nsw i32 %exclChecksum.8673, -1
  %incdec.ptr564 = getelementptr inbounds i32* %pln.0671, i64 1
  %cmp558 = icmp ult i32* %incdec.ptr564, %plin.4
  br i1 %cmp558, label %land.lhs.true559, label %for.cond566.loopexit

for.cond566.loopexit:                             ; preds = %for.body561, %land.lhs.true559, %for.cond557.preheader
  %exclChecksum.8.lcssa = phi i32 [ %exclChecksum.7, %for.cond557.preheader ], [ %dec, %for.body561 ], [ %exclChecksum.8673, %land.lhs.true559 ]
  %plix.0.lcssa = phi i32* [ %cond147616, %for.cond557.preheader ], [ %incdec.ptr562, %for.body561 ], [ %plix.0672, %land.lhs.true559 ]
  %pln.0.lcssa = phi i32* [ %cond136608610, %for.cond557.preheader ], [ %incdec.ptr564, %for.body561 ], [ %pln.0671, %land.lhs.true559 ]
  %cmp567677 = icmp sgt i32 %conv547, 0
  br i1 %cmp567677, label %land.lhs.true568, label %for.cond580.loopexit

land.lhs.true568:                                 ; preds = %for.body572, %for.cond566.loopexit
  %indvars.iv813 = phi i64 [ %indvars.iv.next814, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %exclChecksum.9680 = phi i32 [ %dec576, %for.body572 ], [ %exclChecksum.8.lcssa, %for.cond566.loopexit ]
  %plix.1679 = phi i32* [ %incdec.ptr575, %for.body572 ], [ %plix.0.lcssa, %for.cond566.loopexit ]
  %k556.0678 = phi i32 [ %inc578, %for.body572 ], [ 0, %for.cond566.loopexit ]
  %arrayidx570 = getelementptr inbounds i32* %cond125602604614, i64 %indvars.iv813
  %129 = load i32* %arrayidx570, align 4, !tbaa !11
  %cmp571 = icmp slt i32 %129, %j_hgroup.2
  br i1 %cmp571, label %for.body572, label %for.cond580.loopexit

for.body572:                                      ; preds = %land.lhs.true568
  %incdec.ptr575 = getelementptr inbounds i32* %plix.1679, i64 1
  store i32 %129, i32* %plix.1679, align 4, !tbaa !11
  %dec576 = add nsw i32 %exclChecksum.9680, -1
  %indvars.iv.next814 = add nuw nsw i64 %indvars.iv813, 1
  %inc578 = add nsw i32 %k556.0678, 1
  %130 = trunc i64 %indvars.iv.next814 to i32
  %cmp567 = icmp slt i32 %130, %conv547
  br i1 %cmp567, label %land.lhs.true568, label %for.cond580.loopexit

for.cond580.loopexit:                             ; preds = %for.body572, %land.lhs.true568, %for.cond566.loopexit
  %exclChecksum.9.lcssa = phi i32 [ %exclChecksum.8.lcssa, %for.cond566.loopexit ], [ %dec576, %for.body572 ], [ %exclChecksum.9680, %land.lhs.true568 ]
  %plix.1.lcssa = phi i32* [ %plix.0.lcssa, %for.cond566.loopexit ], [ %incdec.ptr575, %for.body572 ], [ %plix.1679, %land.lhs.true568 ]
  %k556.0.lcssa = phi i32 [ 0, %for.cond566.loopexit ], [ %inc578, %for.body572 ], [ %k556.0678, %land.lhs.true568 ]
  %cmp581684 = icmp slt i32 %k556.0.lcssa, %conv547
  br i1 %cmp581684, label %for.body582.lr.ph, label %for.end602

for.body582.lr.ph:                                ; preds = %for.cond580.loopexit
  %131 = sext i32 %k556.0.lcssa to i64
  %132 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544
  %133 = lshr i64 %132, 2
  %134 = trunc i64 %133 to i32
  br label %for.body582

for.body582:                                      ; preds = %for.inc600, %for.body582.lr.ph
  %indvars.iv815 = phi i64 [ %131, %for.body582.lr.ph ], [ %indvars.iv.next816, %for.inc600 ]
  %plin.5688 = phi i32* [ %plin.4, %for.body582.lr.ph ], [ %plin.6, %for.inc600 ]
  %plix.2687 = phi i32* [ %plix.1.lcssa, %for.body582.lr.ph ], [ %plix.3, %for.inc600 ]
  %plim.0686 = phi i32* [ %cond158, %for.body582.lr.ph ], [ %plim.1, %for.inc600 ]
  %arrayidx585 = getelementptr inbounds i32* %cond125602604614, i64 %indvars.iv815
  %135 = load i32* %arrayidx585, align 4, !tbaa !11
  %idxprom587 = sext i32 %135 to i64
  %id589 = getelementptr inbounds %struct.CompAtom* %15, i64 %idxprom587, i32 2
  %136 = bitcast [4 x i8]* %id589 to i32*
  %bf.load590 = load i32* %136, align 4
  %bf.clear591 = and i32 %bf.load590, 4194303
  %idxprom592575 = zext i32 %bf.clear591 to i64
  %add.ptr.sum = sub i64 %idxprom592575, %idx.ext
  %arrayidx593 = getelementptr inbounds i8* %66, i64 %add.ptr.sum
  %137 = load i8* %arrayidx593, align 1, !tbaa !68
  %conv594 = sext i8 %137 to i32
  switch i32 %conv594, label %for.inc600 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb596
    i32 2, label %sw.bb598
  ]

sw.bb:                                            ; preds = %for.body582
  %incdec.ptr595 = getelementptr inbounds i32* %plin.5688, i64 1
  store i32 %135, i32* %plin.5688, align 4, !tbaa !11
  br label %for.inc600

sw.bb596:                                         ; preds = %for.body582
  %incdec.ptr597 = getelementptr inbounds i32* %plix.2687, i64 1
  store i32 %135, i32* %plix.2687, align 4, !tbaa !11
  br label %for.inc600

sw.bb598:                                         ; preds = %for.body582
  %incdec.ptr599 = getelementptr inbounds i32* %plim.0686, i64 1
  store i32 %135, i32* %plim.0686, align 4, !tbaa !11
  br label %for.inc600

for.inc600:                                       ; preds = %sw.bb598, %sw.bb596, %sw.bb, %for.body582
  %plim.1 = phi i32* [ %plim.0686, %for.body582 ], [ %incdec.ptr599, %sw.bb598 ], [ %plim.0686, %sw.bb596 ], [ %plim.0686, %sw.bb ]
  %plix.3 = phi i32* [ %plix.2687, %for.body582 ], [ %plix.2687, %sw.bb598 ], [ %incdec.ptr597, %sw.bb596 ], [ %plix.2687, %sw.bb ]
  %plin.6 = phi i32* [ %plin.5688, %for.body582 ], [ %plin.5688, %sw.bb598 ], [ %plin.5688, %sw.bb596 ], [ %incdec.ptr595, %sw.bb ]
  %indvars.iv.next816 = add nsw i64 %indvars.iv815, 1
  %lftr.wideiv817 = trunc i64 %indvars.iv.next816 to i32
  %exitcond818 = icmp eq i32 %lftr.wideiv817, %134
  br i1 %exitcond818, label %for.end602, label %for.body582

for.end602:                                       ; preds = %for.inc600, %for.cond580.loopexit
  %plin.5.lcssa = phi i32* [ %plin.4, %for.cond580.loopexit ], [ %plin.6, %for.inc600 ]
  %plix.2.lcssa = phi i32* [ %plix.1.lcssa, %for.cond580.loopexit ], [ %plix.3, %for.inc600 ]
  %plim.0.lcssa = phi i32* [ %cond158, %for.cond580.loopexit ], [ %plim.1, %for.inc600 ]
  %sub.ptr.lhs.cast603 = ptrtoint i32* %plix.2.lcssa to i64
  %sub.ptr.sub605 = sub i64 %sub.ptr.lhs.cast603, %sub.ptr.rhs.cast604
  %sub.ptr.div606 = ashr exact i64 %sub.ptr.sub605, 2
  %conv607551 = zext i32 %exclChecksum.9.lcssa to i64
  %sub.ptr.lhs.cast610 = ptrtoint i32* %plim.0.lcssa to i64
  %sub.ptr.sub612 = sub i64 %sub.ptr.lhs.cast610, %sub.ptr.rhs.cast611
  %sub.ptr.div613 = ashr exact i64 %sub.ptr.sub612, 2
  %add608 = add i64 %sub.ptr.div613, %conv607551
  %add615 = add i64 %add608, %sub.ptr.div606
  %conv616 = trunc i64 %add615 to i32
  %sub.ptr.lhs.cast617 = ptrtoint i32* %plin.5.lcssa to i64
  %sub.ptr.rhs.cast618 = ptrtoint i32* %pln.0.lcssa to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %sub.ptr.div620553 = lshr exact i64 %sub.ptr.sub619, 2
  %conv621 = trunc i64 %sub.ptr.div620553 to i32
  %cmp623692 = icmp sgt i32 %conv621, 0
  br i1 %cmp623692, label %for.body624.lr.ph, label %for.end713

for.body624.lr.ph:                                ; preds = %for.end602
  %x691 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y700 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z707 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body624

for.body624:                                      ; preds = %for.body624, %for.body624.lr.ph
  %indvars.iv819 = phi i64 [ 0, %for.body624.lr.ph ], [ %indvars.iv.next820, %for.body624 ]
  %fullElectVirial_zz.1694 = phi double [ %fullElectVirial_zz.0750, %for.body624.lr.ph ], [ %add706, %for.body624 ]
  %138 = phi <2 x double> [ %59, %for.body624.lr.ph ], [ %157, %for.body624 ]
  %139 = phi <2 x double> [ %60, %for.body624.lr.ph ], [ %167, %for.body624 ]
  %140 = phi <2 x double> [ %61, %for.body624.lr.ph ], [ %160, %for.body624 ]
  %arrayidx627 = getelementptr inbounds i32* %pln.0.lcssa, i64 %indvars.iv819
  %141 = load i32* %arrayidx627, align 4, !tbaa !11
  %idx.ext628 = sext i32 %141 to i64
  %x631 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 0
  %142 = load double* %x631, align 8, !tbaa !59
  %sub632 = fsub double %67, %142
  %mul634 = fmul double %sub632, %sub632
  %y636 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 1
  %143 = load double* %y636, align 8, !tbaa !61
  %sub637 = fsub double %68, %143
  %mul638 = fmul double %sub637, %sub637
  %add639 = fadd double %mul634, %mul638
  %z641 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 0, i32 2
  %144 = load double* %z641, align 8, !tbaa !62
  %sub642 = fsub double %69, %144
  %mul643 = fmul double %sub642, %sub642
  %add644 = fadd double %add639, %mul643
  %conv645 = fptrunc double %add644 to float
  %145 = bitcast float %conv645 to i32
  %shr = ashr i32 %145, 17
  %add647 = add nsw i32 %shr, %mul
  %mul648 = shl nsw i32 %add647, 4
  %idx.ext649 = sext i32 %mul648 to i64
  %add.ptr651.sum571 = or i64 %idx.ext649, 12
  %add.ptr652 = getelementptr inbounds double* %6, i64 %add.ptr651.sum571
  %146 = load double* %add.ptr652, align 8, !tbaa !17
  %and = and i32 %145, -131072
  %charge655 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext628, i32 1
  %147 = load float* %charge655, align 4, !tbaa !63
  %conv656 = fpext float %147 to double
  %mul657 = fmul double %mul392858, %conv656
  %148 = bitcast i32 %and to float
  %conv659 = fpext float %148 to double
  %sub660 = fsub double %add644, %conv659
  %add.ptr652.sum572 = or i64 %idx.ext649, 13
  %arrayidx661 = getelementptr inbounds double* %6, i64 %add.ptr652.sum572
  %149 = load double* %arrayidx661, align 8, !tbaa !17
  %add.ptr652.sum573 = or i64 %idx.ext649, 14
  %arrayidx662 = getelementptr inbounds double* %6, i64 %add.ptr652.sum573
  %150 = load double* %arrayidx662, align 8, !tbaa !17
  %add.ptr652.sum574 = or i64 %idx.ext649, 15
  %arrayidx663 = getelementptr inbounds double* %6, i64 %add.ptr652.sum574
  %151 = load double* %arrayidx663, align 8, !tbaa !17
  %mul664 = fmul double %mul657, %151
  %mul665 = fmul double %150, %mul657
  %mul666 = fmul double %149, %mul657
  %mul667 = fmul double %146, %mul657
  %mul668 = fmul double %mul664, %sub660
  %add669 = fadd double %mul665, %mul668
  %mul670 = fmul double %sub660, %add669
  %add671 = fadd double %mul666, %mul670
  %mul672 = fmul double %sub660, %add671
  %add673 = fadd double %mul667, %mul672
  %mul675 = fmul double %sub660, 3.000000e+00
  %mul676 = fmul double %mul664, %mul675
  %mul677 = fmul double %mul665, 2.000000e+00
  %add678 = fadd double %mul677, %mul676
  %mul679 = fmul double %sub660, %add678
  %add680 = fadd double %mul666, %mul679
  %mul681 = fmul double %add680, -2.000000e+00
  %mul684 = fmul double %sub632, %mul681
  %152 = insertelement <2 x double> undef, double %sub632, i32 0
  %153 = insertelement <2 x double> %152, double %sub637, i32 1
  %154 = insertelement <2 x double> undef, double %mul684, i32 0
  %155 = insertelement <2 x double> %154, double %mul684, i32 1
  %156 = fmul <2 x double> %153, %155
  %157 = fadd <2 x double> %138, %156
  %mul689 = fmul double %sub642, %mul684
  %158 = insertelement <2 x double> undef, double %add673, i32 0
  %159 = insertelement <2 x double> %158, double %mul689, i32 1
  %160 = fadd <2 x double> %140, %159
  %161 = load double* %x691, align 8, !tbaa !72
  %add692 = fadd double %161, %mul684
  store double %add692, double* %x691, align 8, !tbaa !72
  %x693 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 0
  %mul695 = fmul double %sub637, %mul681
  %162 = insertelement <2 x double> undef, double %sub637, i32 0
  %163 = insertelement <2 x double> %162, double %sub642, i32 1
  %164 = insertelement <2 x double> undef, double %mul695, i32 0
  %165 = insertelement <2 x double> %164, double %mul695, i32 1
  %166 = fmul <2 x double> %163, %165
  %167 = fadd <2 x double> %139, %166
  %168 = load double* %y700, align 8, !tbaa !73
  %add701 = fadd double %168, %mul695
  store double %add701, double* %y700, align 8, !tbaa !73
  %169 = bitcast double* %x693 to <2 x double>*
  %170 = load <2 x double>* %169, align 8, !tbaa !17
  %171 = insertelement <2 x double> %154, double %mul695, i32 1
  %172 = fsub <2 x double> %170, %171
  %173 = bitcast double* %x693 to <2 x double>*
  store <2 x double> %172, <2 x double>* %173, align 8, !tbaa !17
  %mul704 = fmul double %sub642, %mul681
  %mul705 = fmul double %sub642, %mul704
  %add706 = fadd double %fullElectVirial_zz.1694, %mul705
  %174 = load double* %z707, align 8, !tbaa !74
  %add708 = fadd double %174, %mul704
  store double %add708, double* %z707, align 8, !tbaa !74
  %z709 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext628, i32 2
  %175 = load double* %z709, align 8, !tbaa !74
  %sub710 = fsub double %175, %mul704
  store double %sub710, double* %z709, align 8, !tbaa !74
  %indvars.iv.next820 = add nuw nsw i64 %indvars.iv819, 1
  %lftr.wideiv821 = trunc i64 %indvars.iv.next820 to i32
  %exitcond822 = icmp eq i32 %lftr.wideiv821, %conv621
  br i1 %exitcond822, label %for.end713, label %for.body624

for.end713:                                       ; preds = %for.body624, %for.end602
  %fullElectVirial_zz.1.lcssa = phi double [ %fullElectVirial_zz.0750, %for.end602 ], [ %add706, %for.body624 ]
  %176 = phi <2 x double> [ %59, %for.end602 ], [ %157, %for.body624 ]
  %177 = phi <2 x double> [ %60, %for.end602 ], [ %167, %for.body624 ]
  %178 = phi <2 x double> [ %61, %for.end602 ], [ %160, %for.body624 ]
  %conv718 = trunc i64 %sub.ptr.div613 to i32
  %cmp720708 = icmp sgt i32 %conv718, 0
  br i1 %cmp720708, label %for.body721.lr.ph, label %for.end848

for.body721.lr.ph:                                ; preds = %for.end713
  %x824 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y834 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z842 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body721

for.body721:                                      ; preds = %for.body721, %for.body721.lr.ph
  %indvars.iv823 = phi i64 [ 0, %for.body721.lr.ph ], [ %indvars.iv.next824, %for.body721 ]
  %fullElectVirial_zz.2710 = phi double [ %fullElectVirial_zz.1.lcssa, %for.body721.lr.ph ], [ %add841, %for.body721 ]
  %179 = phi <2 x double> [ %176, %for.body721.lr.ph ], [ %202, %for.body721 ]
  %180 = phi <2 x double> [ %177, %for.body721.lr.ph ], [ %212, %for.body721 ]
  %181 = phi <2 x double> [ %178, %for.body721.lr.ph ], [ %205, %for.body721 ]
  %arrayidx724 = getelementptr inbounds i32* %cond158, i64 %indvars.iv823
  %182 = load i32* %arrayidx724, align 4, !tbaa !11
  %idx.ext726 = sext i32 %182 to i64
  %x730 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext726, i32 0, i32 0
  %183 = load double* %x730, align 8, !tbaa !59
  %sub731 = fsub double %67, %183
  %mul733 = fmul double %sub731, %sub731
  %y736 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext726, i32 0, i32 1
  %184 = load double* %y736, align 8, !tbaa !61
  %sub737 = fsub double %68, %184
  %mul738 = fmul double %sub737, %sub737
  %add739 = fadd double %mul733, %mul738
  %z742 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext726, i32 0, i32 2
  %185 = load double* %z742, align 8, !tbaa !62
  %sub743 = fsub double %69, %185
  %mul744 = fmul double %sub743, %sub743
  %add745 = fadd double %add739, %mul744
  %conv747 = fptrunc double %add745 to float
  %186 = bitcast float %conv747 to i32
  %shr751 = ashr i32 %186, 17
  %add752 = add nsw i32 %shr751, %mul
  %mul754 = shl nsw i32 %add752, 4
  %idx.ext755 = sext i32 %mul754 to i64
  %add.ptr757.sum563 = or i64 %idx.ext755, 12
  %add.ptr758 = getelementptr inbounds double* %6, i64 %add.ptr757.sum563
  %187 = load double* %add.ptr758, align 8, !tbaa !17
  %and762 = and i32 %186, -131072
  %charge764 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext726, i32 1
  %188 = load float* %charge764, align 4, !tbaa !63
  %conv765 = fpext float %188 to double
  %mul766 = fmul double %mul392858, %conv765
  %189 = bitcast i32 %and762 to float
  %conv769 = fpext float %189 to double
  %sub770 = fsub double %add745, %conv769
  %add.ptr758.sum564 = or i64 %idx.ext755, 13
  %arrayidx772 = getelementptr inbounds double* %6, i64 %add.ptr758.sum564
  %190 = load double* %arrayidx772, align 8, !tbaa !17
  %add.ptr758.sum565 = or i64 %idx.ext755, 14
  %arrayidx774 = getelementptr inbounds double* %6, i64 %add.ptr758.sum565
  %191 = load double* %arrayidx774, align 8, !tbaa !17
  %add.ptr758.sum566 = or i64 %idx.ext755, 15
  %arrayidx776 = getelementptr inbounds double* %6, i64 %add.ptr758.sum566
  %192 = load double* %arrayidx776, align 8, !tbaa !17
  %mul777 = shl nsw i32 %add752, 2
  %idx.ext778 = sext i32 %mul777 to i64
  %add.ptr779 = getelementptr inbounds double* %7, i64 %idx.ext778
  %193 = load double* %add.ptr779, align 8, !tbaa !17
  %mul781 = fmul double %sub, %193
  %sub782 = fsub double %187, %mul781
  %add.ptr779.sum567 = or i64 %idx.ext778, 1
  %arrayidx783 = getelementptr inbounds double* %7, i64 %add.ptr779.sum567
  %194 = load double* %arrayidx783, align 8, !tbaa !17
  %mul784 = fmul double %sub, %194
  %sub785 = fsub double %190, %mul784
  %add.ptr779.sum568 = or i64 %idx.ext778, 2
  %arrayidx786 = getelementptr inbounds double* %7, i64 %add.ptr779.sum568
  %195 = load double* %arrayidx786, align 8, !tbaa !17
  %mul787 = fmul double %sub, %195
  %sub788 = fsub double %191, %mul787
  %add.ptr779.sum569 = or i64 %idx.ext778, 3
  %arrayidx789 = getelementptr inbounds double* %7, i64 %add.ptr779.sum569
  %196 = load double* %arrayidx789, align 8, !tbaa !17
  %mul790 = fmul double %sub, %196
  %sub791 = fsub double %192, %mul790
  %mul792 = fmul double %mul766, %sub791
  %mul793 = fmul double %mul766, %sub788
  %mul794 = fmul double %mul766, %sub785
  %mul795 = fmul double %mul766, %sub782
  %mul797 = fmul double %sub770, %mul792
  %add798 = fadd double %mul793, %mul797
  %mul799 = fmul double %sub770, %add798
  %add800 = fadd double %mul794, %mul799
  %mul801 = fmul double %sub770, %add800
  %add802 = fadd double %mul795, %mul801
  %mul805 = fmul double %sub770, 3.000000e+00
  %mul806 = fmul double %mul805, %mul792
  %mul807 = fmul double %mul793, 2.000000e+00
  %add808 = fadd double %mul807, %mul806
  %mul809 = fmul double %sub770, %add808
  %add810 = fadd double %mul794, %mul809
  %mul812 = fmul double %add810, -2.000000e+00
  %mul817 = fmul double %sub731, %mul812
  %197 = insertelement <2 x double> undef, double %sub731, i32 0
  %198 = insertelement <2 x double> %197, double %sub737, i32 1
  %199 = insertelement <2 x double> undef, double %mul817, i32 0
  %200 = insertelement <2 x double> %199, double %mul817, i32 1
  %201 = fmul <2 x double> %198, %200
  %202 = fadd <2 x double> %179, %201
  %mul822 = fmul double %sub743, %mul817
  %203 = insertelement <2 x double> undef, double %add802, i32 0
  %204 = insertelement <2 x double> %203, double %mul822, i32 1
  %205 = fadd <2 x double> %181, %204
  %206 = load double* %x824, align 8, !tbaa !72
  %add825 = fadd double %206, %mul817
  store double %add825, double* %x824, align 8, !tbaa !72
  %x826 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext726, i32 0
  %mul829 = fmul double %sub737, %mul812
  %207 = insertelement <2 x double> undef, double %sub737, i32 0
  %208 = insertelement <2 x double> %207, double %sub743, i32 1
  %209 = insertelement <2 x double> undef, double %mul829, i32 0
  %210 = insertelement <2 x double> %209, double %mul829, i32 1
  %211 = fmul <2 x double> %208, %210
  %212 = fadd <2 x double> %180, %211
  %213 = load double* %y834, align 8, !tbaa !73
  %add835 = fadd double %213, %mul829
  store double %add835, double* %y834, align 8, !tbaa !73
  %214 = bitcast double* %x826 to <2 x double>*
  %215 = load <2 x double>* %214, align 8, !tbaa !17
  %216 = insertelement <2 x double> %199, double %mul829, i32 1
  %217 = fsub <2 x double> %215, %216
  %218 = bitcast double* %x826 to <2 x double>*
  store <2 x double> %217, <2 x double>* %218, align 8, !tbaa !17
  %mul839 = fmul double %sub743, %mul812
  %mul840 = fmul double %sub743, %mul839
  %add841 = fadd double %fullElectVirial_zz.2710, %mul840
  %219 = load double* %z842, align 8, !tbaa !74
  %add843 = fadd double %219, %mul839
  store double %add843, double* %z842, align 8, !tbaa !74
  %z844 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext726, i32 2
  %220 = load double* %z844, align 8, !tbaa !74
  %sub845 = fsub double %220, %mul839
  store double %sub845, double* %z844, align 8, !tbaa !74
  %indvars.iv.next824 = add nuw nsw i64 %indvars.iv823, 1
  %lftr.wideiv825 = trunc i64 %indvars.iv.next824 to i32
  %exitcond826 = icmp eq i32 %lftr.wideiv825, %conv718
  br i1 %exitcond826, label %for.end848, label %for.body721

for.end848:                                       ; preds = %for.body721, %for.end713
  %fullElectVirial_zz.2.lcssa = phi double [ %fullElectVirial_zz.1.lcssa, %for.end713 ], [ %add841, %for.body721 ]
  %221 = phi <2 x double> [ %176, %for.end713 ], [ %202, %for.body721 ]
  %222 = phi <2 x double> [ %177, %for.end713 ], [ %212, %for.body721 ]
  %223 = phi <2 x double> [ %178, %for.end713 ], [ %205, %for.body721 ]
  %conv853 = trunc i64 %sub.ptr.div606 to i32
  %cmp855724 = icmp sgt i32 %conv853, 0
  br i1 %cmp855724, label %for.body856.lr.ph, label %for.inc981

for.body856.lr.ph:                                ; preds = %for.end848
  %x956 = getelementptr inbounds %class.Vector* %arrayidx181, i64 0, i32 0
  %y966 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 1
  %z974 = getelementptr inbounds %class.Vector* %54, i64 %idxprom173, i32 2
  br label %for.body856

for.body856:                                      ; preds = %for.body856, %for.body856.lr.ph
  %indvars.iv827 = phi i64 [ 0, %for.body856.lr.ph ], [ %indvars.iv.next828, %for.body856 ]
  %fullElectVirial_zz.3726 = phi double [ %fullElectVirial_zz.2.lcssa, %for.body856.lr.ph ], [ %add973, %for.body856 ]
  %224 = phi <2 x double> [ %221, %for.body856.lr.ph ], [ %247, %for.body856 ]
  %225 = phi <2 x double> [ %222, %for.body856.lr.ph ], [ %257, %for.body856 ]
  %226 = phi <2 x double> [ %223, %for.body856.lr.ph ], [ %250, %for.body856 ]
  %arrayidx859 = getelementptr inbounds i32* %cond147616, i64 %indvars.iv827
  %227 = load i32* %arrayidx859, align 4, !tbaa !11
  %idx.ext861 = sext i32 %227 to i64
  %x865 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext861, i32 0, i32 0
  %228 = load double* %x865, align 8, !tbaa !59
  %sub866 = fsub double %67, %228
  %mul868 = fmul double %sub866, %sub866
  %y871 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext861, i32 0, i32 1
  %229 = load double* %y871, align 8, !tbaa !61
  %sub872 = fsub double %68, %229
  %mul873 = fmul double %sub872, %sub872
  %add874 = fadd double %mul868, %mul873
  %z877 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext861, i32 0, i32 2
  %230 = load double* %z877, align 8, !tbaa !62
  %sub878 = fsub double %69, %230
  %mul879 = fmul double %sub878, %sub878
  %add880 = fadd double %add874, %mul879
  %conv882 = fptrunc double %add880 to float
  %231 = bitcast float %conv882 to i32
  %shr886 = ashr i32 %231, 17
  %add887 = add nsw i32 %shr886, %mul
  %mul889 = shl nsw i32 %add887, 4
  %idx.ext890 = sext i32 %mul889 to i64
  %add.ptr892.sum555 = or i64 %idx.ext890, 12
  %add.ptr893 = getelementptr inbounds double* %6, i64 %add.ptr892.sum555
  %232 = load double* %add.ptr893, align 8, !tbaa !17
  %and897 = and i32 %231, -131072
  %charge899 = getelementptr inbounds %struct.CompAtom* %15, i64 %idx.ext861, i32 1
  %233 = load float* %charge899, align 4, !tbaa !63
  %conv900 = fpext float %233 to double
  %mul901 = fmul double %mul392858, %conv900
  %234 = bitcast i32 %and897 to float
  %conv904 = fpext float %234 to double
  %sub905 = fsub double %add880, %conv904
  %add.ptr893.sum556 = or i64 %idx.ext890, 13
  %arrayidx907 = getelementptr inbounds double* %6, i64 %add.ptr893.sum556
  %235 = load double* %arrayidx907, align 8, !tbaa !17
  %add.ptr893.sum557 = or i64 %idx.ext890, 14
  %arrayidx909 = getelementptr inbounds double* %6, i64 %add.ptr893.sum557
  %236 = load double* %arrayidx909, align 8, !tbaa !17
  %add.ptr893.sum558 = or i64 %idx.ext890, 15
  %arrayidx911 = getelementptr inbounds double* %6, i64 %add.ptr893.sum558
  %237 = load double* %arrayidx911, align 8, !tbaa !17
  %mul913 = shl nsw i32 %add887, 2
  %idx.ext914 = sext i32 %mul913 to i64
  %add.ptr915 = getelementptr inbounds double* %7, i64 %idx.ext914
  %238 = load double* %add.ptr915, align 8, !tbaa !17
  %sub917 = fsub double %232, %238
  %add.ptr915.sum559 = or i64 %idx.ext914, 1
  %arrayidx918 = getelementptr inbounds double* %7, i64 %add.ptr915.sum559
  %239 = load double* %arrayidx918, align 8, !tbaa !17
  %sub919 = fsub double %235, %239
  %add.ptr915.sum560 = or i64 %idx.ext914, 2
  %arrayidx920 = getelementptr inbounds double* %7, i64 %add.ptr915.sum560
  %240 = load double* %arrayidx920, align 8, !tbaa !17
  %sub921 = fsub double %236, %240
  %add.ptr915.sum561 = or i64 %idx.ext914, 3
  %arrayidx922 = getelementptr inbounds double* %7, i64 %add.ptr915.sum561
  %241 = load double* %arrayidx922, align 8, !tbaa !17
  %sub923 = fsub double %237, %241
  %mul924 = fmul double %mul901, %sub923
  %mul925 = fmul double %mul901, %sub921
  %mul926 = fmul double %mul901, %sub919
  %mul927 = fmul double %mul901, %sub917
  %mul929 = fmul double %sub905, %mul924
  %add930 = fadd double %mul925, %mul929
  %mul931 = fmul double %sub905, %add930
  %add932 = fadd double %mul926, %mul931
  %mul933 = fmul double %sub905, %add932
  %add934 = fadd double %mul927, %mul933
  %mul937 = fmul double %sub905, 3.000000e+00
  %mul938 = fmul double %mul937, %mul924
  %mul939 = fmul double %mul925, 2.000000e+00
  %add940 = fadd double %mul939, %mul938
  %mul941 = fmul double %sub905, %add940
  %add942 = fadd double %mul926, %mul941
  %mul944 = fmul double %add942, -2.000000e+00
  %mul949 = fmul double %sub866, %mul944
  %242 = insertelement <2 x double> undef, double %sub866, i32 0
  %243 = insertelement <2 x double> %242, double %sub872, i32 1
  %244 = insertelement <2 x double> undef, double %mul949, i32 0
  %245 = insertelement <2 x double> %244, double %mul949, i32 1
  %246 = fmul <2 x double> %243, %245
  %247 = fadd <2 x double> %224, %246
  %mul954 = fmul double %sub878, %mul949
  %248 = insertelement <2 x double> undef, double %add934, i32 0
  %249 = insertelement <2 x double> %248, double %mul954, i32 1
  %250 = fadd <2 x double> %226, %249
  %251 = load double* %x956, align 8, !tbaa !72
  %add957 = fadd double %251, %mul949
  store double %add957, double* %x956, align 8, !tbaa !72
  %x958 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext861, i32 0
  %mul961 = fmul double %sub872, %mul944
  %252 = insertelement <2 x double> undef, double %sub872, i32 0
  %253 = insertelement <2 x double> %252, double %sub878, i32 1
  %254 = insertelement <2 x double> undef, double %mul961, i32 0
  %255 = insertelement <2 x double> %254, double %mul961, i32 1
  %256 = fmul <2 x double> %253, %255
  %257 = fadd <2 x double> %225, %256
  %258 = load double* %y966, align 8, !tbaa !73
  %add967 = fadd double %258, %mul961
  store double %add967, double* %y966, align 8, !tbaa !73
  %259 = bitcast double* %x958 to <2 x double>*
  %260 = load <2 x double>* %259, align 8, !tbaa !17
  %261 = insertelement <2 x double> %244, double %mul961, i32 1
  %262 = fsub <2 x double> %260, %261
  %263 = bitcast double* %x958 to <2 x double>*
  store <2 x double> %262, <2 x double>* %263, align 8, !tbaa !17
  %mul971 = fmul double %sub878, %mul944
  %mul972 = fmul double %sub878, %mul971
  %add973 = fadd double %fullElectVirial_zz.3726, %mul972
  %264 = load double* %z974, align 8, !tbaa !74
  %add975 = fadd double %264, %mul971
  store double %add975, double* %z974, align 8, !tbaa !74
  %z976 = getelementptr inbounds %class.Vector* %55, i64 %idx.ext861, i32 2
  %265 = load double* %z976, align 8, !tbaa !74
  %sub977 = fsub double %265, %mul971
  store double %sub977, double* %z976, align 8, !tbaa !74
  %indvars.iv.next828 = add nuw nsw i64 %indvars.iv827, 1
  %lftr.wideiv829 = trunc i64 %indvars.iv.next828 to i32
  %exitcond830 = icmp eq i32 %lftr.wideiv829, %conv853
  br i1 %exitcond830, label %for.inc981, label %for.body856

for.inc981:                                       ; preds = %for.body856, %for.end848, %if.then215
  %pairCount.3 = phi i32 [ %sub211, %if.then215 ], [ %pairCount.2, %for.end848 ], [ %pairCount.2, %for.body856 ]
  %pairlistoffset.2 = phi i32 [ %pairlistoffset.0744, %if.then215 ], [ %pairlistoffset.1, %for.end848 ], [ %pairlistoffset.1, %for.body856 ]
  %pairlistindex.3 = phi i32 [ %pairlistindex.0745, %if.then215 ], [ %pairlistindex.2, %for.end848 ], [ %pairlistindex.2, %for.body856 ]
  %fixg_lower.4 = phi i32 [ %fixg_lower.0746, %if.then215 ], [ %fixg_lower.3, %for.end848 ], [ %fixg_lower.3, %for.body856 ]
  %g_lower.4 = phi i32 [ %g_lower.0747, %if.then215 ], [ %g_lower.3, %for.end848 ], [ %g_lower.3, %for.body856 ]
  %j_hgroup.3 = phi i32 [ %j_hgroup.0748, %if.then215 ], [ %j_hgroup.2, %for.end848 ], [ %j_hgroup.2, %for.body856 ]
  %i.1 = phi i32 [ %add217, %if.then215 ], [ %i.0749, %for.end848 ], [ %i.0749, %for.body856 ]
  %fullElectVirial_zz.4 = phi double [ %fullElectVirial_zz.0750, %if.then215 ], [ %fullElectVirial_zz.2.lcssa, %for.end848 ], [ %add973, %for.body856 ]
  %exclChecksum.10 = phi i32 [ %exclChecksum.0757, %if.then215 ], [ %conv616, %for.end848 ], [ %conv616, %for.body856 ]
  %266 = phi <2 x double> [ %59, %if.then215 ], [ %221, %for.end848 ], [ %247, %for.body856 ]
  %267 = phi <2 x double> [ %60, %if.then215 ], [ %222, %for.end848 ], [ %257, %for.body856 ]
  %268 = phi <2 x double> [ %61, %if.then215 ], [ %223, %for.end848 ], [ %250, %for.body856 ]
  %inc982 = add nsw i32 %i.1, 1
  %cmp171 = icmp sgt i32 %sub162, %inc982
  br i1 %cmp171, label %for.body172, label %for.end983

for.end983:                                       ; preds = %for.inc981, %cond.end157
  %exclChecksum.0.lcssa = phi i32 [ 0, %cond.end157 ], [ %exclChecksum.10, %for.inc981 ]
  %fullElectVirial_zz.0.lcssa = phi double [ 0.000000e+00, %cond.end157 ], [ %fullElectVirial_zz.4, %for.inc981 ]
  %269 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %266, %for.inc981 ]
  %270 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %267, %for.inc981 ]
  %271 = phi <2 x double> [ zeroinitializer, %cond.end157 ], [ %268, %for.inc981 ]
  %272 = extractelement <2 x double> %271, i32 0
  %arraydecay984 = getelementptr inbounds [1005 x i32]* %grouplist_std, i64 0, i64 0
  %cmp985 = icmp eq i32* %cond590592843849, %arraydecay984
  br i1 %cmp985, label %if.end990, label %delete.notnull988

delete.notnull988:                                ; preds = %for.end983
  %273 = bitcast i32* %cond590592843849 to i8*
  call void @_ZdaPv(i8* %273) #7
  br label %if.end990

if.end990:                                        ; preds = %delete.notnull988, %for.end983
  %arraydecay991 = getelementptr inbounds [1005 x i32]* %fixglist_std, i64 0, i64 0
  %cmp992 = icmp eq i32* %cond19594841850, %arraydecay991
  br i1 %cmp992, label %if.end997, label %delete.notnull995

delete.notnull995:                                ; preds = %if.end990
  %274 = bitcast i32* %cond19594841850 to i8*
  call void @_ZdaPv(i8* %274) #7
  br label %if.end997

if.end997:                                        ; preds = %delete.notnull995, %if.end990
  %arraydecay998 = getelementptr inbounds [1005 x i32]* %goodglist_std, i64 0, i64 0
  %cmp999 = icmp eq i32* %cond30845848, %arraydecay998
  br i1 %cmp999, label %if.end1004, label %delete.notnull1002

delete.notnull1002:                               ; preds = %if.end997
  %275 = bitcast i32* %cond30845848 to i8*
  call void @_ZdaPv(i8* %275) #7
  br label %if.end1004

if.end1004:                                       ; preds = %delete.notnull1002, %if.end997
  %arraydecay1005 = getelementptr inbounds [1005 x i32]* %pairlist_std, i64 0, i64 0
  %cmp1006 = icmp eq i32* %cond114598600606612, %arraydecay1005
  br i1 %cmp1006, label %if.end1011, label %delete.notnull1009

delete.notnull1009:                               ; preds = %if.end1004
  %276 = bitcast i32* %cond114598600606612 to i8*
  call void @_ZdaPv(i8* %276) #7
  br label %if.end1011

if.end1011:                                       ; preds = %delete.notnull1009, %if.end1004
  %arraydecay1012 = getelementptr inbounds [1005 x i32]* %pairlist2_std, i64 0, i64 0
  %cmp1013 = icmp eq i32* %cond125602604614, %arraydecay1012
  br i1 %cmp1013, label %if.end1018, label %delete.notnull1016

delete.notnull1016:                               ; preds = %if.end1011
  %277 = bitcast i32* %cond125602604614 to i8*
  call void @_ZdaPv(i8* %277) #7
  br label %if.end1018

if.end1018:                                       ; preds = %delete.notnull1016, %if.end1011
  %arraydecay1019 = getelementptr inbounds [1005 x i32]* %pairlistn_std, i64 0, i64 0
  %cmp1020 = icmp eq i32* %cond136608610, %arraydecay1019
  br i1 %cmp1020, label %if.end1025, label %delete.notnull1023

delete.notnull1023:                               ; preds = %if.end1018
  %278 = bitcast i32* %cond136608610 to i8*
  call void @_ZdaPv(i8* %278) #7
  br label %if.end1025

if.end1025:                                       ; preds = %delete.notnull1023, %if.end1018
  %arraydecay1026 = getelementptr inbounds [1005 x i32]* %pairlistx_std, i64 0, i64 0
  %cmp1027 = icmp eq i32* %cond147616, %arraydecay1026
  br i1 %cmp1027, label %if.end1032, label %delete.notnull1030

delete.notnull1030:                               ; preds = %if.end1025
  %279 = bitcast i32* %cond147616 to i8*
  call void @_ZdaPv(i8* %279) #7
  br label %if.end1032

if.end1032:                                       ; preds = %delete.notnull1030, %if.end1025
  %arraydecay1033 = getelementptr inbounds [1005 x i32]* %pairlistm_std, i64 0, i64 0
  %cmp1034 = icmp eq i32* %cond158, %arraydecay1033
  br i1 %cmp1034, label %if.end1039, label %delete.notnull1037

delete.notnull1037:                               ; preds = %if.end1032
  %280 = bitcast i32* %cond158 to i8*
  call void @_ZdaPv(i8* %280) #7
  br label %if.end1039

if.end1039:                                       ; preds = %delete.notnull1037, %if.end1032
  %conv1040 = sitofp i32 %exclChecksum.0.lcssa to double
  %arrayidx1041 = getelementptr inbounds double* %1, i64 22
  %281 = load double* %arrayidx1041, align 8, !tbaa !17
  %add1042 = fadd double %conv1040, %281
  store double %add1042, double* %arrayidx1041, align 8, !tbaa !17
  %arrayidx1043 = getelementptr inbounds double* %1, i64 1
  %282 = load double* %arrayidx1043, align 8, !tbaa !17
  %add1044 = fadd double %272, %282
  store double %add1044, double* %arrayidx1043, align 8, !tbaa !17
  %arrayidx1045 = getelementptr inbounds double* %1, i64 12
  %283 = bitcast double* %arrayidx1045 to <2 x double>*
  %284 = load <2 x double>* %283, align 8, !tbaa !17
  %285 = fadd <2 x double> %269, %284
  %286 = bitcast double* %arrayidx1045 to <2 x double>*
  store <2 x double> %285, <2 x double>* %286, align 8, !tbaa !17
  %arrayidx1049 = getelementptr inbounds double* %1, i64 14
  %287 = bitcast double* %arrayidx1049 to <2 x double>*
  %288 = load <2 x double>* %287, align 8, !tbaa !17
  %289 = shufflevector <2 x double> %271, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %290 = shufflevector <2 x double> %289, <2 x double> %269, <2 x i32> <i32 0, i32 3>
  %291 = fadd <2 x double> %290, %288
  %292 = bitcast double* %arrayidx1049 to <2 x double>*
  store <2 x double> %291, <2 x double>* %292, align 8, !tbaa !17
  %arrayidx1053 = getelementptr inbounds double* %1, i64 16
  %293 = bitcast double* %arrayidx1053 to <2 x double>*
  %294 = load <2 x double>* %293, align 8, !tbaa !17
  %295 = fadd <2 x double> %270, %294
  %296 = bitcast double* %arrayidx1053 to <2 x double>*
  store <2 x double> %295, <2 x double>* %296, align 8, !tbaa !17
  %arrayidx1057 = getelementptr inbounds double* %1, i64 18
  %297 = bitcast double* %arrayidx1057 to <2 x double>*
  %298 = load <2 x double>* %297, align 8, !tbaa !17
  %299 = shufflevector <2 x double> %289, <2 x double> %270, <2 x i32> <i32 0, i32 3>
  %300 = fadd <2 x double> %299, %298
  %301 = bitcast double* %arrayidx1057 to <2 x double>*
  store <2 x double> %300, <2 x double>* %301, align 8, !tbaa !17
  %arrayidx1061 = getelementptr inbounds double* %1, i64 20
  %302 = load double* %arrayidx1061, align 8, !tbaa !17
  %add1062 = fadd double %fullElectVirial_zz.0.lcssa, %302
  store double %add1062, double* %arrayidx1061, align 8, !tbaa !17
  call void @llvm.lifetime.end(i64 4020, i8* %43) #6
  call void @llvm.lifetime.end(i64 4020, i8* %42) #6
  call void @llvm.lifetime.end(i64 4020, i8* %41) #6
  call void @llvm.lifetime.end(i64 4020, i8* %40) #6
  call void @llvm.lifetime.end(i64 4020, i8* %39) #6
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end1039, %delete.notnull91, %if.end86, %entry
  ret void
}

declare void @_Z8NAMD_diePKc(i8*) #4

; Function Attrs: nounwind
declare double @sqrt(double) #5

; Function Attrs: nounwind
declare double @erfc(double) #5

; Function Attrs: nounwind
declare double @exp(double) #5

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #6

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #6

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #6

attributes #0 = { uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { builtin }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !9, i64 316}
!6 = metadata !{metadata !"_ZTS13SimParameters", metadata !7, i64 0, metadata !7, i64 24, metadata !7, i64 48, metadata !7, i64 72, metadata !9, i64 96, metadata !9, i64 100, metadata !8, i64 104, metadata !9, i64 112, metadata !8, i64 120, metadata !8, i64 128, metadata !8, i64 136, metadata !9, i64 144, metadata !8, i64 152, metadata !8, i64 160, metadata !9, i64 168, metadata !8, i64 176, metadata !8, i64 184, metadata !9, i64 192, metadata !9, i64 196, metadata !9, i64 200, metadata !9, i64 204, metadata !9, i64 208, metadata !9, i64 212, metadata !8, i64 216, metadata !8, i64 224, metadata !9, i64 232, metadata !9, i64 236, metadata !9, i64 240, metadata !9, i64 244, metadata !9, i64 248, metadata !9, i64 252, metadata !9, i64 256, metadata !9, i64 260, metadata !9, i64 264, metadata !9, i64 268, metadata !9, i64 272, metadata !8, i64 280, metadata !8, i64 288, metadata !9, i64 296, metadata !8, i64 304, metadata !9, i64 312, metadata !9, i64 316, metadata !10, i64 320}
!7 = metadata !{metadata !"_ZTS6Vector", metadata !8, i64 0, metadata !8, i64 8, metadata !8, i64 16}
!8 = metadata !{metadata !"double", metadata !3, i64 0}
!9 = metadata !{metadata !"int", metadata !3, i64 0}
!10 = metadata !{metadata !"_ZTS7Lattice", metadata !7, i64 0, metadata !7, i64 24, metadata !7, i64 48, metadata !7, i64 72, metadata !7, i64 96, metadata !7, i64 120, metadata !7, i64 144, metadata !9, i64 168, metadata !9, i64 172, metadata !9, i64 176}
!11 = metadata !{metadata !9, metadata !9, i64 0}
!12 = metadata !{metadata !6, metadata !9, i64 256}
!13 = metadata !{metadata !6, metadata !9, i64 260}
!14 = metadata !{metadata !6, metadata !8, i64 136}
!15 = metadata !{metadata !16, metadata !16, i64 0}
!16 = metadata !{metadata !"float", metadata !3, i64 0}
!17 = metadata !{metadata !8, metadata !8, i64 0}
!18 = metadata !{metadata !6, metadata !9, i64 168}
!19 = metadata !{metadata !6, metadata !9, i64 232}
!20 = metadata !{metadata !6, metadata !9, i64 240}
!21 = metadata !{metadata !6, metadata !9, i64 252}
!22 = metadata !{metadata !6, metadata !9, i64 204}
!23 = metadata !{metadata !6, metadata !9, i64 208}
!24 = metadata !{metadata !6, metadata !8, i64 224}
!25 = metadata !{metadata !6, metadata !8, i64 216}
!26 = metadata !{metadata !6, metadata !8, i64 176}
!27 = metadata !{metadata !6, metadata !8, i64 184}
!28 = metadata !{metadata !6, metadata !9, i64 236}
!29 = metadata !{metadata !29, metadata !30, metadata !31}
!30 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!31 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!32 = metadata !{metadata !32, metadata !30, metadata !31}
!33 = metadata !{metadata !33, metadata !30, metadata !31}
!34 = metadata !{metadata !34, metadata !30, metadata !31}
!35 = metadata !{metadata !6, metadata !8, i64 104}
!36 = metadata !{metadata !6, metadata !8, i64 128}
!37 = metadata !{metadata !6, metadata !9, i64 112}
!38 = metadata !{metadata !6, metadata !8, i64 120}
!39 = metadata !{metadata !6, metadata !9, i64 144}
!40 = metadata !{metadata !6, metadata !8, i64 152}
!41 = metadata !{metadata !6, metadata !9, i64 272}
!42 = metadata !{metadata !6, metadata !8, i64 288}
!43 = metadata !{metadata !6, metadata !9, i64 268}
!44 = metadata !{metadata !6, metadata !9, i64 264}
!45 = metadata !{metadata !6, metadata !9, i64 296}
!46 = metadata !{metadata !46, metadata !30, metadata !31}
!47 = metadata !{metadata !47, metadata !30, metadata !31}
!48 = metadata !{metadata !49, metadata !2, i64 56}
!49 = metadata !{metadata !"_ZTS9nonbonded", metadata !3, i64 0, metadata !3, i64 16, metadata !3, i64 32, metadata !3, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !7, i64 72, metadata !9, i64 96, metadata !9, i64 100, metadata !9, i64 104, metadata !9, i64 108}
!50 = metadata !{metadata !49, metadata !9, i64 100}
!51 = metadata !{metadata !49, metadata !9, i64 108}
!52 = metadata !{metadata !49, metadata !9, i64 104}
!53 = metadata !{metadata !54, metadata !2, i64 8}
!54 = metadata !{metadata !"_ZTS8Molecule", metadata !2, i64 0, metadata !2, i64 8, metadata !9, i64 16, metadata !9, i64 20, metadata !2, i64 24}
!55 = metadata !{metadata !56, metadata !9, i64 0}
!56 = metadata !{metadata !"_ZTS14ExclusionCheck", metadata !9, i64 0, metadata !9, i64 4, metadata !2, i64 8}
!57 = metadata !{metadata !56, metadata !9, i64 4}
!58 = metadata !{metadata !56, metadata !2, i64 8}
!59 = metadata !{metadata !60, metadata !8, i64 0}
!60 = metadata !{metadata !"_ZTS8CompAtom", metadata !7, i64 0, metadata !16, i64 24, metadata !9, i64 28, metadata !9, i64 30, metadata !9, i64 31, metadata !9, i64 31, metadata !9, i64 31, metadata !9, i64 31}
!61 = metadata !{metadata !60, metadata !8, i64 8}
!62 = metadata !{metadata !60, metadata !8, i64 16}
!63 = metadata !{metadata !60, metadata !16, i64 24}
!64 = metadata !{metadata !54, metadata !2, i64 24}
!65 = metadata !{metadata !66, metadata !2, i64 8}
!66 = metadata !{metadata !"_ZTS7LJTable", metadata !2, i64 0, metadata !2, i64 8, metadata !9, i64 16}
!67 = metadata !{metadata !66, metadata !9, i64 16}
!68 = metadata !{metadata !3, metadata !3, i64 0}
!69 = metadata !{metadata !70, metadata !8, i64 0}
!70 = metadata !{metadata !"_ZTSN7LJTable10TableEntryE", metadata !8, i64 0, metadata !8, i64 8}
!71 = metadata !{metadata !70, metadata !8, i64 8}
!72 = metadata !{metadata !7, metadata !8, i64 0}
!73 = metadata !{metadata !7, metadata !8, i64 8}
!74 = metadata !{metadata !7, metadata !8, i64 16}
!75 = metadata !{metadata !75, metadata !30, metadata !31}
!76 = metadata !{metadata !76, metadata !30, metadata !31}
!77 = metadata !{metadata !77, metadata !30, metadata !31}
!78 = metadata !{metadata !78, metadata !30, metadata !31}
!79 = metadata !{metadata !79, metadata !30, metadata !31}
!80 = metadata !{metadata !80, metadata !30, metadata !31}
!81 = metadata !{metadata !81, metadata !30, metadata !31}
!82 = metadata !{metadata !82, metadata !30, metadata !31}
!83 = metadata !{metadata !83, metadata !30, metadata !31}
!84 = metadata !{metadata !84, metadata !30, metadata !31}
!85 = metadata !{metadata !85, metadata !30, metadata !31}
!86 = metadata !{metadata !86, metadata !30, metadata !31}
!87 = metadata !{metadata !87, metadata !30, metadata !31}
!88 = metadata !{metadata !88, metadata !30, metadata !31}
!89 = metadata !{metadata !89, metadata !30, metadata !31}
!90 = metadata !{metadata !90, metadata !30, metadata !31}
!91 = metadata !{metadata !91, metadata !30, metadata !31}
!92 = metadata !{metadata !92, metadata !30, metadata !31}
!93 = metadata !{metadata !93, metadata !30, metadata !31}
!94 = metadata !{metadata !94, metadata !30, metadata !31}
!95 = metadata !{metadata !95, metadata !30, metadata !31}
!96 = metadata !{metadata !96, metadata !30, metadata !31}
!97 = metadata !{metadata !97, metadata !30, metadata !31}
!98 = metadata !{metadata !98, metadata !30, metadata !31}
!99 = metadata !{metadata !99, metadata !30, metadata !31}
!100 = metadata !{metadata !100, metadata !30, metadata !31}
!101 = metadata !{metadata !101, metadata !30, metadata !31}
!102 = metadata !{metadata !102, metadata !30, metadata !31}
!103 = metadata !{metadata !103, metadata !30, metadata !31}
!104 = metadata !{metadata !104, metadata !30, metadata !31}
!105 = metadata !{metadata !105, metadata !30, metadata !31}
!106 = metadata !{metadata !106, metadata !30, metadata !31}
!107 = metadata !{metadata !107, metadata !30, metadata !31}
!108 = metadata !{metadata !108, metadata !30, metadata !31}
!109 = metadata !{metadata !109, metadata !30, metadata !31}
!110 = metadata !{metadata !110, metadata !30, metadata !31}
!111 = metadata !{metadata !111, metadata !30, metadata !31}
!112 = metadata !{metadata !112, metadata !30, metadata !31}
!113 = metadata !{metadata !113, metadata !30, metadata !31}
!114 = metadata !{metadata !114, metadata !30, metadata !31}
